{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13401795",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795",
    "key": "ARROW-14023",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=okadakk",
            "name": "okadakk",
            "key": "okadakk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Keisuke Okada",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334104",
                "id": "12334104",
                "name": "Ruby"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=okadakk",
            "name": "okadakk",
            "key": "okadakk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Keisuke Okada",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=okadakk",
            "name": "okadakk",
            "key": "okadakk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Keisuke Okada",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14023/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-921561884\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T07:22:58.052+0000",
                    "updated": "2021-09-17T07:22:58.052+0000",
                    "started": "2021-09-17T07:22:58.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652139",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r710835738\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -261,12 +261,35 @@ def slice(*args)\n         expected_n_args = nil\n         case args.size\n         when 1\n-          if args[0].is_a?(Integer)\n+          case args[0]\n+          when Integer\n             index = args[0]\n             index += n_rows if index < 0\n             return nil if index < 0\n             return nil if index >= n_rows\n             return Record.new(self, index)\n+          when Hash\n+            hash = args[0]\n+            if hash.size != 1\n+              message = \"wrong number of hash size (given #{hash.size}, expected 1)\"\n+              raise ArgumentError, message\n+            end\n+\n+            key = hash.keys[0]\n+            value = hash.values[0]\n+            case value\n+            when Integer, String, TrueClass, FalseClass\n+              slicers << (Slicer.new(self).send(key) == value)\n+            when Range\n+              if value.end == nil\n+                slicers << (Slicer.new(self).send(key) >= value.first)\n+              else\n+                slicers << (Slicer.new(self).send(key) <= value.last)\n+              end\n+            else\n+              message = \"hash value must be Integer, String, TrueClass, FalseClass, Range\"\n+              raise ArgumentError, message  \n+            end\n\nReview comment:\n       How about using `Hash#each`?\r\n   \r\n   ```suggestion\r\n               condition_pairs = args[0]\r\n               slicer = Slicer.new(self)\r\n               conditions = []\r\n               condition_pairs.each do |key, value|\r\n                 case value\r\n                 when Range\r\n                   # TODO: Optimize \"begin <= key <= end\" case by missing \"between\" kernel\r\n                   # https://issues.apache.org/jira/browse/ARROW-9843\r\n                   unless value.begin.nil?\r\n                     conditions = (slicer[key] >= value.begin)\r\n                   end\r\n                   unless value.end.nil?\r\n                     if value.exclude_end?\r\n                       conditions << (slicer[key] < value.end)\r\n                     else\r\n                       conditions << (slicer[key] <= value.end)\r\n                     end\r\n                   end\r\n                 else\r\n                   conditions = (slicer[key] == value)\r\n                 end\r\n               end\r\n               slicers << conditions.inject(:&)\r\n   ```\r\n   \n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,34 @@ def setup\n       TABLE\n     end\n \n+    test(\"Key Filter: equal number\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"Key Filter Range: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"Key Filter Range: exclude end\") do\n\nReview comment:\n       ```suggestion\r\n       test(\"{key: Range}: include end\") do\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,34 @@ def setup\n       TABLE\n     end\n \n+    test(\"Key Filter: equal number\") do\n\nReview comment:\n       ```suggestion\r\n       test(\"{key: value}\") do\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,34 @@ def setup\n       TABLE\n     end\n \n+    test(\"Key Filter: equal number\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"Key Filter Range: include end\") do\n\nReview comment:\n       ```suggestion\r\n       test(\"{key: Range}: endless\") do\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T07:58:10.240+0000",
                    "updated": "2021-09-17T07:58:10.240+0000",
                    "started": "2021-09-17T07:58:10.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652155",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r710845576\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -261,12 +261,35 @@ def slice(*args)\n         expected_n_args = nil\n         case args.size\n         when 1\n-          if args[0].is_a?(Integer)\n+          case args[0]\n+          when Integer\n             index = args[0]\n             index += n_rows if index < 0\n             return nil if index < 0\n             return nil if index >= n_rows\n             return Record.new(self, index)\n+          when Hash\n+            hash = args[0]\n+            if hash.size != 1\n+              message = \"wrong number of hash size (given #{hash.size}, expected 1)\"\n+              raise ArgumentError, message\n+            end\n+\n+            key = hash.keys[0]\n+            value = hash.values[0]\n+            case value\n+            when Integer, String, TrueClass, FalseClass\n+              slicers << (Slicer.new(self).send(key) == value)\n+            when Range\n+              if value.end == nil\n+                slicers << (Slicer.new(self).send(key) >= value.first)\n+              else\n+                slicers << (Slicer.new(self).send(key) <= value.last)\n+              end\n+            else\n+              message = \"hash value must be Integer, String, TrueClass, FalseClass, Range\"\n+              raise ArgumentError, message  \n+            end\n\nReview comment:\n       Thanks for good suggestion!!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T08:09:27.147+0000",
                    "updated": "2021-09-17T08:09:27.147+0000",
                    "started": "2021-09-17T08:09:27.147+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652174",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r710847572\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -261,12 +261,35 @@ def slice(*args)\n         expected_n_args = nil\n         case args.size\n         when 1\n-          if args[0].is_a?(Integer)\n+          case args[0]\n+          when Integer\n             index = args[0]\n             index += n_rows if index < 0\n             return nil if index < 0\n             return nil if index >= n_rows\n             return Record.new(self, index)\n+          when Hash\n+            hash = args[0]\n+            if hash.size != 1\n+              message = \"wrong number of hash size (given #{hash.size}, expected 1)\"\n+              raise ArgumentError, message\n+            end\n+\n+            key = hash.keys[0]\n+            value = hash.values[0]\n+            case value\n+            when Integer, String, TrueClass, FalseClass\n+              slicers << (Slicer.new(self).send(key) == value)\n+            when Range\n+              if value.end == nil\n+                slicers << (Slicer.new(self).send(key) >= value.first)\n+              else\n+                slicers << (Slicer.new(self).send(key) <= value.last)\n+              end\n+            else\n+              message = \"hash value must be Integer, String, TrueClass, FalseClass, Range\"\n+              raise ArgumentError, message  \n+            end\n\nReview comment:\n       memo\r\n   \r\n   Arrow::Slicer::Condition has [&] function.\r\n   This function allow to use multi condition.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T08:12:16.829+0000",
                    "updated": "2021-09-17T08:12:16.829+0000",
                    "started": "2021-09-17T08:12:16.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652179",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r710873328\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -261,12 +261,35 @@ def slice(*args)\n         expected_n_args = nil\n         case args.size\n         when 1\n-          if args[0].is_a?(Integer)\n+          case args[0]\n+          when Integer\n             index = args[0]\n             index += n_rows if index < 0\n             return nil if index < 0\n             return nil if index >= n_rows\n             return Record.new(self, index)\n+          when Hash\n+            hash = args[0]\n+            if hash.size != 1\n+              message = \"wrong number of hash size (given #{hash.size}, expected 1)\"\n+              raise ArgumentError, message\n+            end\n+\n+            key = hash.keys[0]\n+            value = hash.values[0]\n+            case value\n+            when Integer, String, TrueClass, FalseClass\n+              slicers << (Slicer.new(self).send(key) == value)\n+            when Range\n+              if value.end == nil\n+                slicers << (Slicer.new(self).send(key) >= value.first)\n+              else\n+                slicers << (Slicer.new(self).send(key) <= value.last)\n+              end\n+            else\n+              message = \"hash value must be Integer, String, TrueClass, FalseClass, Range\"\n+              raise ArgumentError, message  \n+            end\n\nReview comment:\n       memo \r\n   \r\n   If Range Object is endless, \r\n   Range.last occur error (cannot get the last element of endless range), \r\n   but Range.end return nil.\r\n   \r\n   \n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -261,12 +261,35 @@ def slice(*args)\n         expected_n_args = nil\n         case args.size\n         when 1\n-          if args[0].is_a?(Integer)\n+          case args[0]\n+          when Integer\n             index = args[0]\n             index += n_rows if index < 0\n             return nil if index < 0\n             return nil if index >= n_rows\n             return Record.new(self, index)\n+          when Hash\n+            hash = args[0]\n+            if hash.size != 1\n+              message = \"wrong number of hash size (given #{hash.size}, expected 1)\"\n+              raise ArgumentError, message\n+            end\n+\n+            key = hash.keys[0]\n+            value = hash.values[0]\n+            case value\n+            when Integer, String, TrueClass, FalseClass\n+              slicers << (Slicer.new(self).send(key) == value)\n+            when Range\n+              if value.end == nil\n+                slicers << (Slicer.new(self).send(key) >= value.first)\n+              else\n+                slicers << (Slicer.new(self).send(key) <= value.last)\n+              end\n+            else\n+              message = \"hash value must be Integer, String, TrueClass, FalseClass, Range\"\n+              raise ArgumentError, message  \n+            end\n\nReview comment:\n       memo \r\n   \r\n   If Range Object is endless, \r\n   Range.last occur error (cannot get the last element of endless range), \r\n   But Range.end return nil.\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T08:48:38.047+0000",
                    "updated": "2021-09-17T08:48:38.047+0000",
                    "started": "2021-09-17T08:48:38.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652203",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-921656286\n\n\n   @kou\r\n   Thanks for the review!\r\n   I revised that according to your advice.\r\n   Please have a review for updates.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T09:37:23.863+0000",
                    "updated": "2021-09-17T09:37:23.863+0000",
                    "started": "2021-09-17T09:37:23.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652234",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711353082\n\n\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: endless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1..16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+4\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: exclude end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1...16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range, key: TrueClass}: multiple key/value pairs\") do\n\nReview comment:\n       We can simplify this because we can show this is multiple key/value pairs case by `{key1: ..., key2: ...}`:\r\n   \r\n   ```suggestion\r\n       test(\"{key1: Range, key2: true}\") do\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n\nReview comment:\n       Or we can use a table that only has `name`:\r\n   \r\n   ```ruby\r\n   table = Arrow::Table.new(name: Arrow::StringArray.new([\"a\", \"b\", \"c\"]))\r\n   assert_equal(..., table.slice(name: \"b\").to_s)\r\n   ...\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n\nReview comment:\n       We can simplify this because `true` is the only one instance of `TrueClass`:\r\n   \r\n   ```suggestion\r\n       test(\"{key: true}\") do\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n\nReview comment:\n       ```suggestion\r\n         table_with_name = @table.merge(name: name_array)\r\n   ```\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n\nReview comment:\n       Could you also add begeinless and excluded end range case? (`...8`)\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n\nReview comment:\n       ditto.\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: endless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1..16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+4\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: exclude end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1...16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range, key: TrueClass}: multiple key/value pairs\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 0..8, visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t(null)\t (null)\n+3\t(null)\t (null)\n+      TABLE\n\nReview comment:\n       This expected result looks wrong...\r\n   It should be:\r\n   \r\n   ```text\r\n   \t count\tvisible\r\n   0\t     2\tfalse  \r\n   ```\r\n   (We should remove null records from `==` result.)\r\n   \r\n   But this isn't a problem in this pull request. We can fix it in another pull request.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-17T21:15:54.715+0000",
                    "updated": "2021-09-17T21:15:54.715+0000",
                    "started": "2021-09-17T21:15:54.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652471",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711429284\n\n\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: endless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1..16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+4\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: exclude end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1...16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range, key: TrueClass}: multiple key/value pairs\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 0..8, visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t(null)\t (null)\n+3\t(null)\t (null)\n+      TABLE\n\nReview comment:\n       OK! I'll try to fix it later!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T02:49:10.889+0000",
                    "updated": "2021-09-18T02:49:10.889+0000",
                    "started": "2021-09-18T02:49:10.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652523",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-922166951\n\n\n   @kou\r\n   Thanks!\r\n   I add missing test case and modify test name.\r\n   Please have a review!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T02:53:27.629+0000",
                    "updated": "2021-09-18T02:53:27.629+0000",
                    "started": "2021-09-18T02:53:27.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652524",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk removed a comment on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-922166951\n\n\n   @kou\r\n   Thanks!\r\n   I add missing test case and modify test name.\r\n   Please have a review!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T02:53:51.043+0000",
                    "updated": "2021-09-18T02:53:51.043+0000",
                    "started": "2021-09-18T02:53:51.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652525",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-922172354\n\n\n   Implementation looks good.\r\n   (We can consider a edge case (`{}` case) in follow-up task.) \r\n   \r\n   Could you add documentation for new `slice(conditions)` API?\r\n   Then we can merge this.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T03:37:54.988+0000",
                    "updated": "2021-09-18T03:37:54.988+0000",
                    "started": "2021-09-18T03:37:54.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652528",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711463962\n\n\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: endless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1..16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+4\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: exclude end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1...16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range, key: TrueClass}: multiple key/value pairs\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 0..8, visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t(null)\t (null)\n+3\t(null)\t (null)\n+      TABLE\n\nReview comment:\n       memo: \r\n   \r\n   if we modify to change filter_options :drop, we can remove null records.\r\n   \r\n   https://github.com/okadakk/arrow/blob/master/ruby/red-arrow/lib/arrow/table.rb#L287\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T04:15:46.013+0000",
                    "updated": "2021-09-18T04:15:46.013+0000",
                    "started": "2021-09-18T04:15:46.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652531",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711550664\n\n\n\n##########\nFile path: ruby/red-arrow/test/test-table.rb\n##########\n@@ -147,6 +147,96 @@ def setup\n       TABLE\n     end\n \n+    test(\"{key: Number}\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: String}\") do\n+      name_array = Arrow::StringArray.new([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"])\n+      table_with_name = @table.merge(:name => name_array)\n+      assert_equal(<<-TABLE, table_with_name.slice(name: 'e').to_s)\n+\tcount\tvisible\tname\n+0\t   16\ttrue   \te   \n+      TABLE\n+    end\n+\n+    test(\"{key: TrueClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: true).to_s)\n+\t count\tvisible\n+0\t     1\ttrue   \n+1\t(null)\t (null)\n+2\t     8\ttrue   \n+3\t    16\ttrue   \n+4\t(null)\t (null)\n+5\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: FalseClass}\") do\n+      assert_equal(<<-TABLE, @table.slice(visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t    32\tfalse  \n+3\t(null)\t (null)\n+4\t(null)\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: beginless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: ..8).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: endless\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 16..).to_s)\n+\tcount\tvisible\n+0\t   16\ttrue   \n+1\t   32\tfalse  \n+2\t   64\t (null)\n+3\t  128\t (null)\n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: include end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1..16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+4\t   16\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range}: exclude end\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 1...16).to_s)\n+\tcount\tvisible\n+0\t    1\ttrue   \n+1\t    2\tfalse  \n+2\t    4\t (null)\n+3\t    8\ttrue   \n+      TABLE\n+    end\n+\n+    test(\"{key: Range, key: TrueClass}: multiple key/value pairs\") do\n+      assert_equal(<<-TABLE, @table.slice(count: 0..8, visible: false).to_s)\n+\t count\tvisible\n+0\t     2\tfalse  \n+1\t(null)\t (null)\n+2\t(null)\t (null)\n+3\t(null)\t (null)\n+      TABLE\n\nReview comment:\n       python code pass null_selection_behavior options.\r\n   \r\n   https://github.com/apache/arrow/blob/master/python/pyarrow/compute.py#L487-L502\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T08:20:23.522+0000",
                    "updated": "2021-09-18T08:20:23.522+0000",
                    "started": "2021-09-18T08:20:23.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652572",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#issuecomment-922239696\n\n\n   @kou\r\n   Thanks!\r\n   I added documentation!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-18T08:22:57.159+0000",
                    "updated": "2021-09-18T08:22:57.159+0000",
                    "started": "2021-09-18T08:22:57.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652573",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711658146\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -287,6 +318,8 @@ def slice(*args)\n       filter_options.null_selection_behavior = :emit_null\n       sliced_tables = []\n       slicers.each do |slicer|\n+        filter_options.null_selection_behavior = :drop if slicer == Arrow::Slicer::GreaterEqualCondition\n+\n\nReview comment:\n       Could you revert this for now?\r\n   This breaks existing tests.\r\n   \r\n   How about working on this in another pull request?\r\n   \r\n   BTW, `slicer == Arrow::Slicer::GreaterEqualCondition` is never true because `slicer` is a condition object not condition class.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T00:07:38.588+0000",
                    "updated": "2021-09-19T00:07:38.588+0000",
                    "started": "2021-09-19T00:07:38.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652661",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167#discussion_r711717555\n\n\n\n##########\nFile path: ruby/red-arrow/lib/arrow/table.rb\n##########\n@@ -287,6 +318,8 @@ def slice(*args)\n       filter_options.null_selection_behavior = :emit_null\n       sliced_tables = []\n       slicers.each do |slicer|\n+        filter_options.null_selection_behavior = :drop if slicer == Arrow::Slicer::GreaterEqualCondition\n+\n\nReview comment:\n       Oh, I forget to delete debug code...\r\n   I removed this code!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T09:54:24.042+0000",
                    "updated": "2021-09-19T09:54:24.042+0000",
                    "started": "2021-09-19T09:54:24.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652681",
                    "issueId": "13401795"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/worklog/652744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #11167:\nURL: https://github.com/apache/arrow/pull/11167\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-19T20:46:19.455+0000",
                    "updated": "2021-09-19T20:46:19.455+0000",
                    "started": "2021-09-19T20:46:19.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652744",
                    "issueId": "13401795"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@269d6ae8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@411cf192[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9000bc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2f36eb14[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23341e68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58d45ac0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51032c2e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@49f50351[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ab18359[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@30c9d295[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78e3eafe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@196d8138[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Sep 19 20:46:07 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-19T20:46:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14023/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-17T07:21:10.000+0000",
        "updated": "2021-09-19T20:46:20.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Ruby] Arrow::Table#slice accepts Hash",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401795/comment/17417396",
                    "id": "17417396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 11167\n[https://github.com/apache/arrow/pull/11167]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-09-19T20:46:07.237+0000",
                    "updated": "2021-09-19T20:46:07.237+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v12g:",
        "customfield_12314139": null
    }
}