{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13415864",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864",
    "key": "ARROW-15010",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12629206",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12629206",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13409877",
                    "key": "ARROW-14575",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409877",
                    "fields": {
                        "summary": "[R] Allow functions with {{pkg::}} prefixes",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12629204",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12629204",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13419067",
                    "key": "ARROW-15193",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13419067",
                    "fields": {
                        "summary": "[R][Documentation] Update R binding documentation",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
            "name": "paleolimbot",
            "key": "paleolimbot",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
            },
            "displayName": "Dewey Dunnington",
            "active": true,
            "timeZone": "America/Halifax"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15010/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot opened a new pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904\n\n\n   This is PR implementing that admittedly does a few things. I'd be happy to split up with a suggestion on the desired steps if that makes it easier to review. This PR:\r\n   \r\n   - Defines `register_translation()` and `register_translation_agg()` instead of direct assignment into `nse_funcs` and `agg_funcs`. This enables attaching a package name when the function is being registered (e.g., `register_translation(\"stringr::str_dup\", function(x, ...) ...)`) and makes it possible in the future to allow other packages to define translations and/or for us to change how we evaluate translated expressions without changing many function assignments.\r\n   - Moves the registration of translations to package load time rather than package build time. This enables splitting up translations into multiple files, adds the usual CMD check that normal functions undergo (e.g., for use of missing variables), and opens up the possibility of defining different translations for different versions of packages (or omitting translations if a package isn't installed).\r\n   - Splits up the definition of translations into dplyr-funcs-type.R, dplyr-funcs-conditional.R, dplyr-funcs-string.R, dplyr-funcs-datetime.R, and dplyr-funcs-math.R. This matches where the translations are tested (the test files were named test-dplyr-funcs-string.R, etc.). Some translations were moved to dplyr-summarise.R because the translations were being tested in test-dplyr-summarise.R. This makes it easier for parallel PRs defining translations and makes it easier for new contributors to figure out where tests should go.\r\n   - Consolidates internal documentation on how to write translations into one .Rd file rather than scattered around as comments in dplyr-functions.R as they were before.\r\n   \r\n   This PR does not:\r\n   \r\n   - Change any test filenames or remove any tests.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T15:10:17.144+0000",
                    "updated": "2021-12-08T15:10:17.144+0000",
                    "started": "2021-12-08T15:10:17.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692662",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-988899209\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T15:10:40.104+0000",
                    "updated": "2021-12-08T15:10:40.104+0000",
                    "started": "2021-12-08T15:10:40.104+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692663",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r765279384\n\n\n\n##########\nFile path: r/R/dplyr-funcs-string.R\n##########\n@@ -0,0 +1,492 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# String function helpers\n+\n+#' Get `stringr` pattern options\n+#'\n+#' This function assigns definitions for the `stringr` pattern modifier\n+#' functions (`fixed()`, `regex()`, etc.) inside itself, and uses them to\n+#' evaluate the quoted expression `pattern`, returning a list that is used\n+#' to control pattern matching behavior in internal `arrow` functions.\n+#'\n+#' @param pattern Unevaluated expression containing a call to a `stringr`\n+#' pattern modifier function\n+#'\n+#' @return List containing elements `pattern`, `fixed`, and `ignore_case`\n+#' @keywords internal\n+get_stringr_pattern_options <- function(pattern) {\n+  fixed <- function(pattern, ignore_case = FALSE, ...) {\n+    check_dots(...)\n+    list(pattern = pattern, fixed = TRUE, ignore_case = ignore_case)\n+  }\n+  regex <- function(pattern, ignore_case = FALSE, ...) {\n+    check_dots(...)\n+    list(pattern = pattern, fixed = FALSE, ignore_case = ignore_case)\n+  }\n+  coll <- function(...) {\n+    arrow_not_supported(\"Pattern modifier `coll()`\")\n+  }\n+  boundary <- function(...) {\n+    arrow_not_supported(\"Pattern modifier `boundary()`\")\n+  }\n+  check_dots <- function(...) {\n+    dots <- list(...)\n+    if (length(dots)) {\n+      warning(\n+        \"Ignoring pattern modifier \",\n+        ngettext(length(dots), \"argument \", \"arguments \"),\n+        \"not supported in Arrow: \",\n+        oxford_paste(names(dots)),\n+        call. = FALSE\n+      )\n+    }\n+  }\n+  ensure_opts <- function(opts) {\n+    if (is.character(opts)) {\n+      opts <- list(pattern = opts, fixed = FALSE, ignore_case = FALSE)\n+    }\n+    opts\n+  }\n+  ensure_opts(eval(pattern))\n+}\n+\n+#' Does this string contain regex metacharacters?\n+#'\n+#' @param string String to be tested\n+#' @keywords internal\n+#' @return Logical: does `string` contain regex metacharacters?\n+contains_regex <- function(string) {\n+  grepl(\"[.\\\\|()[{^$*+?]\", string)\n+}\n+\n+# format `pattern` as needed for case insensitivity and literal matching by RE2\n+format_string_pattern <- function(pattern, ignore.case, fixed) {\n+  # Arrow lacks native support for case-insensitive literal string matching and\n+  # replacement, so we use the regular expression engine (RE2) to do this.\n+  # https://github.com/google/re2/wiki/Syntax\n+  if (ignore.case) {\n+    if (fixed) {\n+      # Everything between \"\\Q\" and \"\\E\" is treated as literal text.\n+      # If the search text contains any literal \"\\E\" strings, make them\n+      # lowercase so they won't signal the end of the literal text:\n+      pattern <- gsub(\"\\\\E\", \"\\\\e\", pattern, fixed = TRUE)\n+      pattern <- paste0(\"\\\\Q\", pattern, \"\\\\E\")\n+    }\n+    # Prepend \"(?i)\" for case-insensitive matching\n+    pattern <- paste0(\"(?i)\", pattern)\n+  }\n+  pattern\n+}\n+\n+# format `replacement` as needed for literal replacement by RE2\n+format_string_replacement <- function(replacement, ignore.case, fixed) {\n+  # Arrow lacks native support for case-insensitive literal string\n+  # replacement, so we use the regular expression engine (RE2) to do this.\n+  # https://github.com/google/re2/wiki/Syntax\n+  if (ignore.case && fixed) {\n+    # Escape single backslashes in the regex replacement text so they are\n+    # interpreted as literal backslashes:\n+    replacement <- gsub(\"\\\\\", \"\\\\\\\\\", replacement, fixed = TRUE)\n+  }\n+  replacement\n+}\n+\n+# Currently, Arrow does not supports a locale option for string case conversion\n+# functions, contrast to stringr's API, so the 'locale' argument is only valid\n+# for stringr's default value (\"en\"). The following are string functions that\n+# take a 'locale' option as its second argument:\n+#   str_to_lower\n+#   str_to_upper\n+#   str_to_title\n+#\n+# Arrow locale will be supported with ARROW-14126\n+stop_if_locale_provided <- function(locale) {\n+  if (!identical(locale, \"en\")) {\n+    stop(\"Providing a value for 'locale' other than the default ('en') is not supported in Arrow. \",\n+         \"To change locale, use 'Sys.setlocale()'\",\n+         call. = FALSE\n+    )\n+  }\n+}\n+\n+register_string_translations <- function() {\n\nReview comment:\n       We might want to turn off cyclocomp checking entirely, or find a way to simplify this chunk\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n\nReview comment:\n       this `namespace` is not currently used, right? I'm fine keeping it, but maybe we should also add tests for registering with a namespace to confirm it all still works like it did in the paste (basically ignores / doesn't work to match anything before the `::`) \n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n+\n+  previous_fun <- if (name %in% names(registry)) registry[[name]] else NULL\n+\n+  if (is.null(fun) && !is.null(previous_fun)) {\n+    rm(list = name, envir = registry, inherits = FALSE)\n+  } else {\n+    registry[[name]] <- fun\n+  }\n+\n+  invisible(previous_fun)\n+}\n+\n+register_translation_agg <- function(fun_name, agg_fun, registry = translation_registry_agg()) {\n+  register_translation(fun_name, agg_fun, registry = registry)\n+}\n+\n+translation_registry <- function() {\n+  nse_funcs\n+}\n+\n+translation_registry_agg <- function() {\n+  agg_funcs\n+}\n+\n+# Supports functions and tests that call previously-defined translations.\n+call_translation <- function(fun_name, ...) {\n+  nse_funcs[[fun_name]](...)\n+}\n+\n+call_translation_agg <- function(fun_name, ...) {\n+  agg_funcs[[fun_name]](...)\n+}\n+\n+# Called in .onLoad()\n+create_translation_cache <- function() {\n+  arrow_funcs <- list()\n+\n+  # Register all available Arrow Compute functions, namespaced as arrow_fun.\n+  if (arrow_available()) {\n+    all_arrow_funs <- list_compute_functions()\n+    arrow_funcs <- set_names(\n+      lapply(all_arrow_funs, function(fun) {\n+        force(fun)\n+        function(...) build_expr(fun, ...)\n+      }),\n+      paste0(\"arrow_\", all_arrow_funs)\n+    )\n+  }\n+\n+  # Register translations into nse_funcs and agg_funcs\n+  register_array_function_map_translations()\n+  register_aggregate_translations()\n+  register_conditional_translations()\n+  register_datetime_translations()\n+  register_math_translations()\n+  register_string_translations()\n+  register_type_translations()\n+\n+  # We only create the cache for nse_funcs and not agg_funcs\n+  .cache$functions <- c(as.list(nse_funcs), arrow_funcs)\n+}\n+\n+# environments in the arrow namespace used in the above functions\n+nse_funcs <- new.env(parent = emptyenv())\n+agg_funcs <- new.env(parent = emptyenv())\n+.cache <- new.env(parent = emptyenv())\n\nReview comment:\n       The old .cache used `hash = TRUE` any reason we're moving away from that?\r\n   \r\n   Also do we need / want to specify the parent here? https://issues.apache.org/jira/browse/ARROW-14071 is well out of scope for this PR and I'm not trying to bring it in, but I would imagine that doing it would involve keeping these environments on the search path to global (which IIRC `emptyenv()` is out of, but maybe I'm misremembering that?)  \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T22:13:55.761+0000",
                    "updated": "2021-12-08T22:13:55.761+0000",
                    "started": "2021-12-08T22:13:55.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692904",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r765329678\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n+\n+  previous_fun <- if (name %in% names(registry)) registry[[name]] else NULL\n+\n+  if (is.null(fun) && !is.null(previous_fun)) {\n+    rm(list = name, envir = registry, inherits = FALSE)\n+  } else {\n+    registry[[name]] <- fun\n+  }\n+\n+  invisible(previous_fun)\n+}\n+\n+register_translation_agg <- function(fun_name, agg_fun, registry = translation_registry_agg()) {\n+  register_translation(fun_name, agg_fun, registry = registry)\n+}\n+\n+translation_registry <- function() {\n+  nse_funcs\n+}\n+\n+translation_registry_agg <- function() {\n+  agg_funcs\n+}\n+\n+# Supports functions and tests that call previously-defined translations.\n+call_translation <- function(fun_name, ...) {\n+  nse_funcs[[fun_name]](...)\n+}\n+\n+call_translation_agg <- function(fun_name, ...) {\n+  agg_funcs[[fun_name]](...)\n+}\n+\n+# Called in .onLoad()\n+create_translation_cache <- function() {\n+  arrow_funcs <- list()\n+\n+  # Register all available Arrow Compute functions, namespaced as arrow_fun.\n+  if (arrow_available()) {\n+    all_arrow_funs <- list_compute_functions()\n+    arrow_funcs <- set_names(\n+      lapply(all_arrow_funs, function(fun) {\n+        force(fun)\n+        function(...) build_expr(fun, ...)\n+      }),\n+      paste0(\"arrow_\", all_arrow_funs)\n+    )\n+  }\n+\n+  # Register translations into nse_funcs and agg_funcs\n+  register_array_function_map_translations()\n+  register_aggregate_translations()\n+  register_conditional_translations()\n+  register_datetime_translations()\n+  register_math_translations()\n+  register_string_translations()\n+  register_type_translations()\n+\n+  # We only create the cache for nse_funcs and not agg_funcs\n+  .cache$functions <- c(as.list(nse_funcs), arrow_funcs)\n+}\n+\n+# environments in the arrow namespace used in the above functions\n+nse_funcs <- new.env(parent = emptyenv())\n+agg_funcs <- new.env(parent = emptyenv())\n+.cache <- new.env(parent = emptyenv())\n\nReview comment:\n       I removed `hash = TRUE` because it's the default value. I think manually specifying the default argument adds a bit of indirection but I don't particularly mind that it's there. I suspect it doesn't matter much anyway, since a lookup only happens once per `dplyr::verb()` call and there's only two items in `.cache`.\r\n   \r\n   I think we just want a lookup table for `nse_funcs` and `agg_funcs`...all of the functions that are members hold on to their own `environment()` and the default `parent` would just be the arrow namespace if you ever needed it. I added this arg to explicitly avoid accidentally looking up an object in the arrow namespace that would mask a user's object in the calling environment (although I think both `nse_funcs` and `agg_funcs` get turned into `list()`s before they get turned into data masks, so their environment is obliterated with the current strategy).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T23:48:13.221+0000",
                    "updated": "2021-12-08T23:48:13.221+0000",
                    "started": "2021-12-08T23:48:13.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692920",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r765330660\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n\nReview comment:\n       I added this one:\r\n   \r\n   https://github.com/apache/arrow/blob/76b4301371a18abaad91f189807f59218b75b90e/r/tests/testthat/test-dplyr-funcs.R#L29-L30\r\n   \r\n   but maybe there's more there that isn't tested?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T23:50:37.042+0000",
                    "updated": "2021-12-08T23:50:37.042+0000",
                    "started": "2021-12-08T23:50:37.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692921",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/692925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r765334261\n\n\n\n##########\nFile path: r/R/dplyr-funcs-string.R\n##########\n@@ -0,0 +1,492 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# String function helpers\n+\n+#' Get `stringr` pattern options\n+#'\n+#' This function assigns definitions for the `stringr` pattern modifier\n+#' functions (`fixed()`, `regex()`, etc.) inside itself, and uses them to\n+#' evaluate the quoted expression `pattern`, returning a list that is used\n+#' to control pattern matching behavior in internal `arrow` functions.\n+#'\n+#' @param pattern Unevaluated expression containing a call to a `stringr`\n+#' pattern modifier function\n+#'\n+#' @return List containing elements `pattern`, `fixed`, and `ignore_case`\n+#' @keywords internal\n+get_stringr_pattern_options <- function(pattern) {\n+  fixed <- function(pattern, ignore_case = FALSE, ...) {\n+    check_dots(...)\n+    list(pattern = pattern, fixed = TRUE, ignore_case = ignore_case)\n+  }\n+  regex <- function(pattern, ignore_case = FALSE, ...) {\n+    check_dots(...)\n+    list(pattern = pattern, fixed = FALSE, ignore_case = ignore_case)\n+  }\n+  coll <- function(...) {\n+    arrow_not_supported(\"Pattern modifier `coll()`\")\n+  }\n+  boundary <- function(...) {\n+    arrow_not_supported(\"Pattern modifier `boundary()`\")\n+  }\n+  check_dots <- function(...) {\n+    dots <- list(...)\n+    if (length(dots)) {\n+      warning(\n+        \"Ignoring pattern modifier \",\n+        ngettext(length(dots), \"argument \", \"arguments \"),\n+        \"not supported in Arrow: \",\n+        oxford_paste(names(dots)),\n+        call. = FALSE\n+      )\n+    }\n+  }\n+  ensure_opts <- function(opts) {\n+    if (is.character(opts)) {\n+      opts <- list(pattern = opts, fixed = FALSE, ignore_case = FALSE)\n+    }\n+    opts\n+  }\n+  ensure_opts(eval(pattern))\n+}\n+\n+#' Does this string contain regex metacharacters?\n+#'\n+#' @param string String to be tested\n+#' @keywords internal\n+#' @return Logical: does `string` contain regex metacharacters?\n+contains_regex <- function(string) {\n+  grepl(\"[.\\\\|()[{^$*+?]\", string)\n+}\n+\n+# format `pattern` as needed for case insensitivity and literal matching by RE2\n+format_string_pattern <- function(pattern, ignore.case, fixed) {\n+  # Arrow lacks native support for case-insensitive literal string matching and\n+  # replacement, so we use the regular expression engine (RE2) to do this.\n+  # https://github.com/google/re2/wiki/Syntax\n+  if (ignore.case) {\n+    if (fixed) {\n+      # Everything between \"\\Q\" and \"\\E\" is treated as literal text.\n+      # If the search text contains any literal \"\\E\" strings, make them\n+      # lowercase so they won't signal the end of the literal text:\n+      pattern <- gsub(\"\\\\E\", \"\\\\e\", pattern, fixed = TRUE)\n+      pattern <- paste0(\"\\\\Q\", pattern, \"\\\\E\")\n+    }\n+    # Prepend \"(?i)\" for case-insensitive matching\n+    pattern <- paste0(\"(?i)\", pattern)\n+  }\n+  pattern\n+}\n+\n+# format `replacement` as needed for literal replacement by RE2\n+format_string_replacement <- function(replacement, ignore.case, fixed) {\n+  # Arrow lacks native support for case-insensitive literal string\n+  # replacement, so we use the regular expression engine (RE2) to do this.\n+  # https://github.com/google/re2/wiki/Syntax\n+  if (ignore.case && fixed) {\n+    # Escape single backslashes in the regex replacement text so they are\n+    # interpreted as literal backslashes:\n+    replacement <- gsub(\"\\\\\", \"\\\\\\\\\", replacement, fixed = TRUE)\n+  }\n+  replacement\n+}\n+\n+# Currently, Arrow does not supports a locale option for string case conversion\n+# functions, contrast to stringr's API, so the 'locale' argument is only valid\n+# for stringr's default value (\"en\"). The following are string functions that\n+# take a 'locale' option as its second argument:\n+#   str_to_lower\n+#   str_to_upper\n+#   str_to_title\n+#\n+# Arrow locale will be supported with ARROW-14126\n+stop_if_locale_provided <- function(locale) {\n+  if (!identical(locale, \"en\")) {\n+    stop(\"Providing a value for 'locale' other than the default ('en') is not supported in Arrow. \",\n+         \"To change locale, use 'Sys.setlocale()'\",\n+         call. = FALSE\n+    )\n+  }\n+}\n+\n+register_string_translations <- function() {\n\nReview comment:\n       I split this up into a few chunks...we'll see if the linter likes it! I think it's worth a few tries to make sure that error doesn't pop up for somebody else making a perfectly useful change to this block.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T23:59:59.030+0000",
                    "updated": "2021-12-08T23:59:59.030+0000",
                    "started": "2021-12-08T23:59:59.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692925",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/695119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r767826663\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n\nReview comment:\n       Ah, I missed that one \u2014 that's good for me!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T14:49:53.779+0000",
                    "updated": "2021-12-13T14:49:53.779+0000",
                    "started": "2021-12-13T14:49:53.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695119",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/695124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r767829455\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute translations\n+#'\n+#' The `register_translation()` and `register_translation_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing translations:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the translations use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered function or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_translation <- function(fun_name, fun, registry = translation_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n+\n+  previous_fun <- if (name %in% names(registry)) registry[[name]] else NULL\n+\n+  if (is.null(fun) && !is.null(previous_fun)) {\n+    rm(list = name, envir = registry, inherits = FALSE)\n+  } else {\n+    registry[[name]] <- fun\n+  }\n+\n+  invisible(previous_fun)\n+}\n+\n+register_translation_agg <- function(fun_name, agg_fun, registry = translation_registry_agg()) {\n+  register_translation(fun_name, agg_fun, registry = registry)\n+}\n+\n+translation_registry <- function() {\n+  nse_funcs\n+}\n+\n+translation_registry_agg <- function() {\n+  agg_funcs\n+}\n+\n+# Supports functions and tests that call previously-defined translations.\n+call_translation <- function(fun_name, ...) {\n+  nse_funcs[[fun_name]](...)\n+}\n+\n+call_translation_agg <- function(fun_name, ...) {\n+  agg_funcs[[fun_name]](...)\n+}\n+\n+# Called in .onLoad()\n+create_translation_cache <- function() {\n+  arrow_funcs <- list()\n+\n+  # Register all available Arrow Compute functions, namespaced as arrow_fun.\n+  if (arrow_available()) {\n+    all_arrow_funs <- list_compute_functions()\n+    arrow_funcs <- set_names(\n+      lapply(all_arrow_funs, function(fun) {\n+        force(fun)\n+        function(...) build_expr(fun, ...)\n+      }),\n+      paste0(\"arrow_\", all_arrow_funs)\n+    )\n+  }\n+\n+  # Register translations into nse_funcs and agg_funcs\n+  register_array_function_map_translations()\n+  register_aggregate_translations()\n+  register_conditional_translations()\n+  register_datetime_translations()\n+  register_math_translations()\n+  register_string_translations()\n+  register_type_translations()\n+\n+  # We only create the cache for nse_funcs and not agg_funcs\n+  .cache$functions <- c(as.list(nse_funcs), arrow_funcs)\n+}\n+\n+# environments in the arrow namespace used in the above functions\n+nse_funcs <- new.env(parent = emptyenv())\n+agg_funcs <- new.env(parent = emptyenv())\n+.cache <- new.env(parent = emptyenv())\n\nReview comment:\n       > I removed hash = TRUE because it's the default value. I think manually specifying the default argument adds a bit of indirection but I don't particularly mind that it's there. I suspect it doesn't matter much anyway, since a lookup only happens once per dplyr::verb() call and there's only two items in .cache.\r\n   \r\n   Ah yeah, you're absolutely right about not specifying defaults, I'm good with leaving it out.\r\n   \r\n   > I think we just want a lookup table for nse_funcs and agg_funcs...all of the functions that are members hold on to their own environment() and the default parent would just be the arrow namespace if you ever needed it. I added this arg to explicitly avoid accidentally looking up an object in the arrow namespace that would mask a user's object in the calling environment (although I think both nse_funcs and agg_funcs get turned into list()s before they get turned into data masks, so their environment is obliterated with the current strategy).\r\n   \r\n   That makes sense. \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T14:52:50.954+0000",
                    "updated": "2021-12-13T14:52:50.954+0000",
                    "started": "2021-12-13T14:52:50.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695124",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/695145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-992594005\n\n\n   An initial comment I have is the use of the term \"translations\" as it's a complete change in terminology from \"bindings\" that we used before.  I'm not opposed to this - I think that this term might be more intuitive for newcomers to the package - but it'll require quite a lot of changes to various bits of documentation if we choose to do this.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T15:29:42.870+0000",
                    "updated": "2021-12-13T15:29:42.870+0000",
                    "started": "2021-12-13T15:29:42.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695145",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/695153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic edited a comment on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-992594005\n\n\n   An initial comment I have is the use of the term \"translations\" as it's a complete change in terminology from \"bindings\" that we used before.  I'm not opposed to this - I think that this term might be more intuitive for newcomers to the package - but it'll require quite a lot of changes to various bits of documentation if we choose to do this.\r\n   \r\n   Other than that though, this looks great.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T15:44:01.084+0000",
                    "updated": "2021-12-13T15:44:01.084+0000",
                    "started": "2021-12-13T15:44:01.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695153",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/695280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-992770777\n\n\n   That's a good point! I hadn't considered why I used the word \"translations\" until now, and I think it's because it's the word that dbplyr uses for this (as in, `dbplyr::sql_translation(dbplyr::simulate_dbi())`). Although, it's use of \"translation\" is applied at the level of an SQL backend, not at the level of the function, so using it here is perhaps confusing.\r\n   \r\n   I think 'binding' is a better term (and the original term), so I'll put in a fix to use it. Thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T18:53:40.790+0000",
                    "updated": "2021-12-13T18:53:40.790+0000",
                    "started": "2021-12-13T18:53:40.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695280",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/697351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-995991878\n\n\n   I'll read through the PR, but first some high-level questions.\r\n   \r\n   > This PR:\r\n   > \r\n   > * Defines `register_translation()` and `register_translation_agg()` instead of direct assignment into `nse_funcs` and `agg_funcs`. This enables attaching a package name when the function is being registered (e.g., `register_translation(\"stringr::str_dup\", function(x, ...) ...)`) and makes it possible in the future to allow other packages to define translations and/or for us to change how we evaluate translated expressions without changing many function assignments.\r\n   \r\n   Why is attaching a package name useful?\r\n   \r\n   I see the value of providing an extension point to users/other package developers.\r\n   \r\n   I don't understand what you mean by allowing \"us to change how we evaluate translated expressions without changing many function assignments\".\r\n   \r\n   > * Moves the registration of translations to package load time rather than package build time. This enables splitting up translations into multiple files, adds the usual CMD check that normal functions undergo (e.g., for use of missing variables), and opens up the possibility of defining different translations for different versions of packages (or omitting translations if a package isn't installed).\r\n   \r\n   Why is it a good idea to move this to package load time? Some might see that as a negative if it is significant in run time. It also doesn't seem like it is necessary to move the assignment to load time, is it? You could have the registry function but still assign at build time.\r\n   \r\n   We can split up translations into multiple files without this change.\r\n   \r\n   Why is \"the possibility of defining different translations for different versions of packages\" valuable?\r\n   \r\n   Why is \"omitting translations if a package isn't installed\" valuable?\r\n   \r\n   > * Splits up the definition of translations into dplyr-funcs-type.R, dplyr-funcs-conditional.R, dplyr-funcs-string.R, dplyr-funcs-datetime.R, and dplyr-funcs-math.R. This matches where the translations are tested (the test files were named test-dplyr-funcs-string.R, etc.). Some translations were moved to dplyr-summarise.R because the translations were being tested in test-dplyr-summarise.R. This makes it easier for parallel PRs defining translations and makes it easier for new contributors to figure out where tests should go.\r\n   > * Consolidates internal documentation on how to write translations into one .Rd file rather than scattered around as comments in dplyr-functions.R as they were before.\r\n   > * Removes direct references to `nse_funcs` and `agg_funcs` except where used to implement evaluation\r\n   > \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-16T16:45:53.361+0000",
                    "updated": "2021-12-16T16:45:53.361+0000",
                    "started": "2021-12-16T16:45:53.361+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697351",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/697413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-996062755\n\n\n   > Why is attaching a package name useful?\r\n   \r\n   I think two things...it means we can evaluate `stringr::str_detect()` without changing much of our code (just implement a binding for `::`), and it makes it easier for us or for a user to query which packages are supported and functions are implemented (so they can avoid the \"not implemented, pulling data into R\" message).\r\n   \r\n   > I see the value of providing an extension point to users/other package developers.\r\n   >\r\n   > I don't understand what you mean by allowing \"us to change how we evaluate translated expressions without changing many function assignments\".\r\n   \r\n   I think I was thinking here of doing something like changing the name or type of `nse_funcs` that would generate a fairly large diff. Not mission critical, just more separation between defining a binding and evaluating an expression.\r\n   \r\n   > Why is it a good idea to move this to package load time? Some might see that as a negative if it is significant in run time. It also doesn't seem like it is necessary to move the assignment to load time, is it? You could have the registry function but still assign at build time.\r\n   \r\n   I haven't been able to notice any change in load time, which I think is just environment assignment time for 50 or so SEXPs that are already in memory. I got the idea from the current Arrow code, which registers bindings for the compute functions at package load. Another option is to not load them at all until the first call to a dplyr function.\r\n   \r\n   > We can split up translations into multiple files without this change.\r\n   \r\n   Happy to rewrite this PR as that, too, as I think it's the biggest improvement. I like not having to think about collate order and I don't mind the extra two spaces of indent, but happy to do something else if that's not the best way forward.\r\n   \r\n   > Why is \"the possibility of defining different translations for different versions of packages\" valuable?\r\n   \r\n   The bindings try very hard to replicate the exact functionality of the R function they're wrapping...one way to allow a path forward for that when functions change signature is multiple translations (although probably easier to do that at function evaluation time).\r\n   \r\n   > Why is \"omitting translations if a package isn't installed\" valuable?\r\n   \r\n   ...probably not at all (in fact, probably negatively valuable). Maybe one way to resolve a name conflict?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-16T18:16:45.594+0000",
                    "updated": "2021-12-16T18:16:45.594+0000",
                    "started": "2021-12-16T18:16:45.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697413",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/697511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-996205361\n\n\n   > > Why is attaching a package name useful?\r\n   > \r\n   > I think two things...it means we can evaluate stringr::str_detect() without changing much of our code (just implement a binding for ::), and it makes it easier for us or for a user to query which packages are supported and functions are implemented (so they can avoid the \"not implemented, pulling data into R\" message).\r\n   \r\n   Yeah, an additional benefit is that it makes it slightly more explicit what we intend when we bind to a specific function. I don't know of any overlaps that we have right now (e.g. where dplyr has one function with the name `foo` and lubridate also has a function name `foo`), but looking back and trying to piece together the intention would involve at least a `git blame` (and maybe a Jira search too). Though in fairness, moving all the functions for each package to their own file pretty effectively does this as well.\r\n   \r\n   I do think we will want namespacing with `::` to be resolved sooner rather than later (to be totally honest, I'm quite surprised we haven't seen more Jiras about it! I've reviewed _a lot_ of code in other places and have seen a number of styles that include either always using `::`, or using it liberally to avoid confusion/mistakes. But then again, maybe folks are using `stringr::str_detect()` getting the error message and thinking it's not implemented and thinking that means it's not implemented at all so pulling data into R.)\r\n   \r\n   > > Why is \"omitting translations if a package isn't installed\" valuable?\r\n   > ...probably not at all (in fact, probably negatively valuable). Maybe one way to resolve a name conflict?\r\n   \r\n   Yeah, part of me things this might be neat (you get the namespace you have installed!) it sounds nice and clean (it follows R's namespacing, nothign new to learn!), but I think ultimately / functionally it's negatively valuable like you say.\r\n   \r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-16T21:25:09.025+0000",
                    "updated": "2021-12-16T21:25:09.025+0000",
                    "started": "2021-12-16T21:25:09.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697511",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/697513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane edited a comment on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-996205361\n\n\n   > > Why is attaching a package name useful?\r\n   > \r\n   > I think two things...it means we can evaluate stringr::str_detect() without changing much of our code (just implement a binding for ::), and it makes it easier for us or for a user to query which packages are supported and functions are implemented (so they can avoid the \"not implemented, pulling data into R\" message).\r\n   \r\n   Yeah, an additional benefit is that it makes it slightly more explicit what we intend when we bind to a specific function. I don't know of any overlaps that we have right now (e.g. where dplyr has one function with the name `foo` and lubridate also has a function name `foo`), but looking back and trying to piece together the intention would involve at least a `git blame` (and maybe a Jira search too). Though in fairness, moving all the functions for each package to their own file pretty effectively does this as well.\r\n   \r\n   I do think we will want namespacing with `::` to be resolved sooner rather than later (to be totally honest, I'm quite surprised we haven't seen more Jiras about it! I've reviewed _a lot_ of code in other places and have seen a number of styles that include either always using `::`, or using it liberally to avoid confusion/mistakes. But then again, maybe folks are using `stringr::str_detect()` getting the error message and thinking it's not implemented and thinking that means it's not implemented at all so pulling data into R.)\r\n   \r\n   > > Why is \"omitting translations if a package isn't installed\" valuable?\r\n   > \r\n   > ...probably not at all (in fact, probably negatively valuable). Maybe one way to resolve a name conflict?\r\n   \r\n   Yeah, part of me things this might be neat (you get the namespace you have installed!) it sounds nice and clean (it follows R's namespacing, nothign new to learn!), but I think ultimately / functionally it's negatively valuable like you say.\r\n   \r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-16T21:25:33.839+0000",
                    "updated": "2021-12-16T21:25:33.839+0000",
                    "started": "2021-12-16T21:25:33.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697513",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/699638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r773427291\n\n\n\n##########\nFile path: r/R/dplyr-funcs-conditional.R\n##########\n@@ -0,0 +1,106 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+register_conditional_bindings <- function() {\n\nReview comment:\n       I think it would be slightly preferable to rename these in the form `register_bindings_X` instead of `register_X_bindings`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-21T20:34:20.432+0000",
                    "updated": "2021-12-21T20:34:20.432+0000",
                    "started": "2021-12-21T20:34:20.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699638",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/699640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r773428736\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute bindings\n+#'\n+#' The `register_binding()` and `register_binding_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing bindings:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the bindings use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n+#'   assigned.\n+#'\n+#' @return The previously registered binding or `NULL` if no previously\n+#'   registered function existed.\n+#' @keywords internal\n+#'\n+register_binding <- function(fun_name, fun, registry = binding_registry()) {\n+  name <- gsub(\"^.*?::\", \"\", fun_name)\n+  namespace <- gsub(\"::.*$\", \"\", fun_name)\n+\n+  previous_fun <- if (name %in% names(registry)) registry[[name]] else NULL\n+\n+  if (is.null(fun) && !is.null(previous_fun)) {\n+    rm(list = name, envir = registry, inherits = FALSE)\n+  } else {\n+    registry[[name]] <- fun\n+  }\n+\n+  invisible(previous_fun)\n+}\n+\n+register_binding_agg <- function(fun_name, agg_fun, registry = binding_registry_agg()) {\n+  register_binding(fun_name, agg_fun, registry = registry)\n+}\n+\n+binding_registry <- function() {\n+  nse_funcs\n+}\n+\n+binding_registry_agg <- function() {\n+  agg_funcs\n+}\n\nReview comment:\n       This seems like an unnecessary bit of indirection\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-21T20:37:07.363+0000",
                    "updated": "2021-12-21T20:37:07.363+0000",
                    "started": "2021-12-21T20:37:07.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699640",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/699657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#issuecomment-999098980\n\n\n   @paleolimbot if it's not too much trouble, could you measure the package load time before and after the changes in this PR and share those measurements in a comment here? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-21T21:15:33.041+0000",
                    "updated": "2021-12-21T21:15:33.041+0000",
                    "started": "2021-12-21T21:15:33.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699657",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/699666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r773453270\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute bindings\n+#'\n+#' The `register_binding()` and `register_binding_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing bindings:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the bindings use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n+#'   `\"package::function\"`. The package name is currently not used but\n+#'   may be used in the future to allow these types of function calls.\n+#' @param fun A function or `NULL` to un-register a previous function.\n+#'   This function must accept `Expression` objects as arguments and return\n+#'   `Expression` objects instead of regular R objects.\n+#' @param agg_fun An aggregate function or `NULL` to un-register a previous\n+#'   aggregate function. This function must accept `Expression` objects as\n+#'   arguments and return a `list()` with components:\n+#'   - `fun`: string function name\n+#'   - `data`: `Expression` (these are all currently a single field)\n+#'   - `options`: list of function options, as passed to call_function\n+#' @param registry An `environment()` in which the functions should be\n\nReview comment:\n       When referring to the environment object type I think you should drop the monospace and parens.\r\n   ```suggestion\r\n   #' @param registry An environment in which the functions should be\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-21T21:26:20.036+0000",
                    "updated": "2021-12-21T21:26:20.036+0000",
                    "started": "2021-12-21T21:26:20.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699666",
                    "issueId": "13415864"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/worklog/699667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #11904:\nURL: https://github.com/apache/arrow/pull/11904#discussion_r773454510\n\n\n\n##########\nFile path: r/R/dplyr-funcs.R\n##########\n@@ -0,0 +1,128 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+\n+#' Register compute bindings\n+#'\n+#' The `register_binding()` and `register_binding_agg()` functions\n+#' are used to populate a list of functions that operate on (and return)\n+#' Expressions. These are the basis for the `.data` mask inside dplyr methods.\n+#'\n+#' @section Writing bindings:\n+#' When to use `build_expr()` vs. `Expression$create()`?\n+#'\n+#' Use `build_expr()` if you need to\n+#' - map R function names to Arrow C++ functions\n+#' - wrap R inputs (vectors) as Array/Scalar\n+#'\n+#' `Expression$create()` is lower level. Most of the bindings use it\n+#' because they manage the preparation of the user-provided inputs\n+#' and don't need or don't want to the automatic conversion of R objects\n+#' to [Scalar].\n+#'\n+#' @param fun_name A function name in the form `\"function\"` or\n\nReview comment:\n       ```suggestion\r\n   #' @param fun_name A string containing a function name in the form `\"function\"` or\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-21T21:28:55.987+0000",
                    "updated": "2021-12-21T21:28:55.987+0000",
                    "started": "2021-12-21T21:28:55.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "699667",
                    "issueId": "13415864"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@17ca39bf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39477bc2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ca6aa4d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ebd4970[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24d520fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@55e8e582[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ca5c9b0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@8b7fb9d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@568c881[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@173ee95b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55944a45[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@62c83879[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jan 04 14:46:51 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-04T14:46:51.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15010/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-12-07T16:29:39.000+0000",
        "updated": "2022-01-04T14:47:00.000+0000",
        "timeoriginalestimate": null,
        "description": "This came up in the comments of ARROW-14575, but would be helpful even without doing anything with the namespace: instead of {{nse_funcs <- ...}}, create a registry + function to register each function and then use that registry in place of {{nse_funcs}}. \r\n\r\nThis will: \r\n\r\n* Give us a bit more freedom for defining bindings in separate files (though which nse_funcs+collate we could do the same). E.g. have one file per package\r\n* Possibly give a place to add some documentation (though see ARROW-15011)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Create a function registry for our NSE funcs",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/comment/17454764",
                    "id": "17454764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "body": "I think the main thing is to break up the definition of translations into a few files because the current file is getting quite long and contains some translation logic and some actual translations. This also helps with managing multiple function translation PRs (and the testing is separated anyway).\r\n\r\nShort reprex of what I was thinking:\r\n\r\n{code:R}\r\nnse_funcs <- new.env(parent = emptyenv())\r\nagg_funcs <- new.env(parent = emptyenv())\r\n\r\ntranslation_registry <- function() {\r\n  nse_funcs\r\n}\r\n\r\ntranslation_registry_agg <- function() {\r\n  agg_funcs\r\n}\r\n\r\nregister_translation <- function(fun_name, fun, registry = translation_registry()) {\r\n  name <- gsub(\"^.*?::\", \"\", fun_name)\r\n  namespace <- gsub(\"::.*$\", \"\", fun_name)\r\n  \r\n  attr(fun, \"arrow_namespace\") <- namespace\r\n  nse_funcs[[name]] <- fun\r\n  invisible(fun)\r\n}\r\n\r\nregister_translation_agg <- function(fun_name, fun, registry = translation_registry_agg()) {\r\n  register_translation(fun_name, fun, registry = registry)\r\n}\r\n\r\n# ...then one of these per package\r\nregister_lubridate_translations <- function() {\r\n  register_translation(\"lubridate::year\", function(x) {\r\n    # ...\r\n  })\r\n}\r\n\r\n# ...then define them at package load\r\n.onLoad <- function(...) {\r\n  register_lubridate_translations()\r\n}\r\n{code}\r\n\r\nThis has some nice features:\r\n\r\n- You can define related functions, aggregate functions, and (soon!) window functions next to each other\r\n- No need to worry about collate order (you're the onLoad thing already, caching all the functions into {{.cache$funcs}})\r\n- You can export {{register_translation()}} and make translating to Arrow expressions another package's problem (e.g., geoarrow translations for {{st_literally_everything()}})\r\n- There's a place for namespacing if or when that gets supported \r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "created": "2021-12-07T17:19:58.246+0000",
                    "updated": "2021-12-07T17:19:58.246+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415864/comment/17468662",
                    "id": "17468662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 11904\n[https://github.com/apache/arrow/pull/11904]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-01-04T14:46:51.291+0000",
                    "updated": "2022-01-04T14:46:51.291+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xfo0:",
        "customfield_12314139": null
    }
}