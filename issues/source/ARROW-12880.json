{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13380426",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426",
    "key": "ARROW-12880",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anthonylouis",
            "name": "anthonylouis",
            "key": "anthonylouis",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=anthonylouis&avatarId=46146",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=anthonylouis&avatarId=46146",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=anthonylouis&avatarId=46146",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=anthonylouis&avatarId=46146"
            },
            "displayName": "Anthony Louis Gotlib Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anthonylouis",
            "name": "anthonylouis",
            "key": "anthonylouis",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=anthonylouis&avatarId=46146",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=anthonylouis&avatarId=46146",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=anthonylouis&avatarId=46146",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=anthonylouis&avatarId=46146"
            },
            "displayName": "Anthony Louis Gotlib Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anthonylouis",
            "name": "anthonylouis",
            "key": "anthonylouis",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=anthonylouis&avatarId=46146",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=anthonylouis&avatarId=46146",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=anthonylouis&avatarId=46146",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=anthonylouis&avatarId=46146"
            },
            "displayName": "Anthony Louis Gotlib Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12880/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/602071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb opened a new pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402\n\n\n   Adds the implementation for the **castTIME(int32)** and **castTIME(utf8)** functions and add tests for the **castTIMESTAMP(int64)** function.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-26T02:26:26.082+0000",
                    "updated": "2021-05-26T02:26:26.082+0000",
                    "started": "2021-05-26T02:26:26.082+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602071",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/602072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-848407639\n\n\n   https://issues.apache.org/jira/browse/ARROW-12880\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-26T02:26:53.711+0000",
                    "updated": "2021-05-26T02:26:53.711+0000",
                    "started": "2021-05-26T02:26:53.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602072",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/614014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jvictorhuguenin commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r657079865\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -775,6 +851,17 @@ gdv_time32 castTIME_timestamp(gdv_timestamp timestamp_in_millis) {\n   return static_cast<int32_t>(millis_since_midnight);\n }\n \n+// Gets an arbitrary number and return the number of milliseconds since midnight\n+int32_t castTIME_int32(int32_t int_val) {\n\nReview comment:\n       ```suggestion\r\n   gdv_time32 castTIME_int32(int32_t int_val) {\r\n   ```\n\n##########\nFile path: cpp/src/gandiva/precompiled/types.h\n##########\n@@ -262,7 +262,9 @@ gdv_timestamp castTIMESTAMP_utf8(int64_t execution_context, const char* input,\n gdv_timestamp castTIMESTAMP_date64(gdv_date64);\n gdv_timestamp castTIMESTAMP_int64(gdv_int64);\n gdv_date64 castDATE_timestamp(gdv_timestamp);\n+int32_t castTIME_utf8(int64_t context, const char* input, int32_t length);\n\nReview comment:\n       ```suggestion\r\n   gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length);\r\n   ```\n\n##########\nFile path: cpp/src/gandiva/precompiled/types.h\n##########\n@@ -262,7 +262,9 @@ gdv_timestamp castTIMESTAMP_utf8(int64_t execution_context, const char* input,\n gdv_timestamp castTIMESTAMP_date64(gdv_date64);\n gdv_timestamp castTIMESTAMP_int64(gdv_int64);\n gdv_date64 castDATE_timestamp(gdv_timestamp);\n+int32_t castTIME_utf8(int64_t context, const char* input, int32_t length);\n gdv_time32 castTIME_timestamp(gdv_timestamp timestamp_in_millis);\n+int32_t castTIME_int32(int32_t int_val);\n\nReview comment:\n       ```suggestion\r\n   gdv_time32 castTIME_int32(int32_t int_val);\r\n   ```\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+int32_t castTIME_utf8(int64_t context, const char* input, int32_t length) {\n\nReview comment:\n       ```suggestion\r\n   gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T13:18:42.378+0000",
                    "updated": "2021-06-23T13:18:42.378+0000",
                    "started": "2021-06-23T13:18:42.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "614014",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/688335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-983110896\n\n\n   @rkavanap could you review this PR for me, please?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-30T23:09:57.387+0000",
                    "updated": "2021-11-30T23:09:57.387+0000",
                    "started": "2021-11-30T23:09:57.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688335",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/694420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r767160244\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n+          break;\n+      }\n+    }\n+\n+    index++;\n+  }\n+\n+  // Check if the hours and minutes were defined and store the last value\n+  if (time_field_idx < TimeFields::kDisplacementHours) {\n+    time_fields[time_field_idx - TimeFields::kHours] = value;\n+  }\n+\n+  // adjust the milliseconds\n+  if (sub_seconds_len > 0) {\n+    if (sub_seconds_len > 3) {\n+      const char* msg = \"Invalid millis for time value \";\n+      set_error_for_date(length, input, msg, context);\n+      return 0;\n+    }\n+\n+    while (sub_seconds_len < 3) {\n+      time_fields[TimeFields::kSubSeconds - TimeFields::kHours] *= 10;\n+      sub_seconds_len++;\n+    }\n+  }\n+\n+  int32_t input_hours = time_fields[0];\n\nReview comment:\n       should this be kHours instead of 0, just to be consistent\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n\nReview comment:\n       don't we have to be accurate?,, e.g what if someone specifies hours.minutes.seconds  instead of hours:minutes:seconds..shouldn't we treat this as an error?\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n\nReview comment:\n       Isn't 4 a hardcoded number..rest of places you are using constants such as kDisplacementHours etc..\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n\nReview comment:\n       shouldn't any other character result in an error, otherwise if I specify '11HHSB2', it may look legal, no?\n\n##########\nFile path: cpp/src/gandiva/precompiled/time_test.cc\n##########\n@@ -132,6 +132,44 @@ TEST(TestTime, TestCastTimestamp) {\n   context.Reset();\n }\n \n+TEST(TestTime, TestCastTimeUtf8) {\n+  ExecutionContext context;\n+  auto context_ptr = reinterpret_cast<int64_t>(&context);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30\", 7), 35130000);\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.920\", 11), 35130920);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.1\", 9),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.10\", 10),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.100\", 11),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  // error cases\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"24:00:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 24:00:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:60:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:60:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:100\", 9), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:00:100\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.0001\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.0001\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.1000\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.1000\");\n\nReview comment:\n       some error cases such as '00.00.00.765' or '0Ab12:35' \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-11T14:38:37.464+0000",
                    "updated": "2021-12-11T14:38:37.464+0000",
                    "started": "2021-12-11T14:38:37.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "694420",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/694510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r767160244\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n+          break;\n+      }\n+    }\n+\n+    index++;\n+  }\n+\n+  // Check if the hours and minutes were defined and store the last value\n+  if (time_field_idx < TimeFields::kDisplacementHours) {\n+    time_fields[time_field_idx - TimeFields::kHours] = value;\n+  }\n+\n+  // adjust the milliseconds\n+  if (sub_seconds_len > 0) {\n+    if (sub_seconds_len > 3) {\n+      const char* msg = \"Invalid millis for time value \";\n+      set_error_for_date(length, input, msg, context);\n+      return 0;\n+    }\n+\n+    while (sub_seconds_len < 3) {\n+      time_fields[TimeFields::kSubSeconds - TimeFields::kHours] *= 10;\n+      sub_seconds_len++;\n+    }\n+  }\n+\n+  int32_t input_hours = time_fields[0];\n\nReview comment:\n       should this be kHours instead of 0, just to be consistent\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n\nReview comment:\n       don't we have to be accurate?,, e.g what if someone specifies hours.minutes.seconds  instead of hours:minutes:seconds..shouldn't we treat this as an error?\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n\nReview comment:\n       Isn't 4 a hardcoded number..rest of places you are using constants such as kDisplacementHours etc..\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n\nReview comment:\n       shouldn't any other character result in an error, otherwise if I specify '11HHSB2', it may look legal, no?\n\n##########\nFile path: cpp/src/gandiva/precompiled/time_test.cc\n##########\n@@ -132,6 +132,44 @@ TEST(TestTime, TestCastTimestamp) {\n   context.Reset();\n }\n \n+TEST(TestTime, TestCastTimeUtf8) {\n+  ExecutionContext context;\n+  auto context_ptr = reinterpret_cast<int64_t>(&context);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30\", 7), 35130000);\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.920\", 11), 35130920);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.1\", 9),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.10\", 10),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.100\", 11),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  // error cases\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"24:00:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 24:00:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:60:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:60:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:100\", 9), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:00:100\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.0001\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.0001\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.1000\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.1000\");\n\nReview comment:\n       some error cases such as '00.00.00.765' or '0Ab12:35' \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-12T05:54:35.080+0000",
                    "updated": "2021-12-12T05:54:35.080+0000",
                    "started": "2021-12-12T05:54:35.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "694510",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/700535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r774520919\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n\nReview comment:\n       Applied\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T11:55:33.746+0000",
                    "updated": "2021-12-23T11:55:33.746+0000",
                    "started": "2021-12-23T11:55:33.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700535",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/700541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r774523087\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n\nReview comment:\n       You are right. I added a check for it and a test.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T11:59:57.698+0000",
                    "updated": "2021-12-23T11:59:57.698+0000",
                    "started": "2021-12-23T11:59:57.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700541",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/700544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r774526153\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n+        case ':':\n+          time_field_idx++;\n+          break;\n+        default:\n+          break;\n+      }\n+    }\n+\n+    index++;\n+  }\n+\n+  // Check if the hours and minutes were defined and store the last value\n+  if (time_field_idx < TimeFields::kDisplacementHours) {\n+    time_fields[time_field_idx - TimeFields::kHours] = value;\n+  }\n+\n+  // adjust the milliseconds\n+  if (sub_seconds_len > 0) {\n+    if (sub_seconds_len > 3) {\n+      const char* msg = \"Invalid millis for time value \";\n+      set_error_for_date(length, input, msg, context);\n+      return 0;\n+    }\n+\n+    while (sub_seconds_len < 3) {\n+      time_fields[TimeFields::kSubSeconds - TimeFields::kHours] *= 10;\n+      sub_seconds_len++;\n+    }\n+  }\n+\n+  int32_t input_hours = time_fields[0];\n\nReview comment:\n       Applied\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T12:05:41.377+0000",
                    "updated": "2021-12-23T12:05:41.377+0000",
                    "started": "2021-12-23T12:05:41.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700544",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/700550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r774530554\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time_test.cc\n##########\n@@ -132,6 +132,44 @@ TEST(TestTime, TestCastTimestamp) {\n   context.Reset();\n }\n \n+TEST(TestTime, TestCastTimeUtf8) {\n+  ExecutionContext context;\n+  auto context_ptr = reinterpret_cast<int64_t>(&context);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30\", 7), 35130000);\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.920\", 11), 35130920);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.1\", 9),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.10\", 10),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"9:45:30.100\", 11),\n+            castTIME_utf8(context_ptr, \"9:45:30\", 7) + 100);\n+\n+  // error cases\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"24:00:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 24:00:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:60:00\", 8), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:60:00\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:100\", 9), 0);\n+  EXPECT_EQ(context.get_error(), \"Not a valid time value 00:00:100\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.0001\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.0001\");\n+  context.Reset();\n+\n+  EXPECT_EQ(castTIME_utf8(context_ptr, \"00:00:00.1000\", 13), 0);\n+  EXPECT_EQ(context.get_error(), \"Invalid millis for time value 00:00:00.1000\");\n\nReview comment:\n       I add error for invalid character\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T12:13:56.320+0000",
                    "updated": "2021-12-23T12:13:56.320+0000",
                    "started": "2021-12-23T12:13:56.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700550",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/700553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#discussion_r774531908\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/time.cc\n##########\n@@ -764,6 +764,82 @@ gdv_date64 castDATE_timestamp(gdv_timestamp timestamp_in_millis) {\n   return tp.ClearTimeOfDay().MillisSinceEpoch();\n }\n \n+/*\n+ * Input consists of mandatory and optional fields.\n+ * Mandatory fields are hours, minutes.\n+ * The seconds and subseconds are optional.\n+ * Format is hours:minutes[:seconds.millis]\n+ */\n+gdv_time32 castTIME_utf8(int64_t context, const char* input, int32_t length) {\n+  using gandiva::TimeFields;\n+  using std::chrono::hours;\n+  using std::chrono::milliseconds;\n+  using std::chrono::minutes;\n+  using std::chrono::seconds;\n+\n+  int32_t time_fields[4] = {0, 0, 0, 0};\n+  int32_t sub_seconds_len = 0;\n+  int32_t time_field_idx = TimeFields::kHours, index = 0, value = 0;\n+  while (time_field_idx < TimeFields::kDisplacementHours && index < length) {\n+    if (isdigit(input[index])) {\n+      value = (value * 10) + (input[index] - '0');\n+\n+      if (time_field_idx == TimeFields::kSubSeconds) {\n+        sub_seconds_len++;\n+      }\n+    } else {\n+      time_fields[time_field_idx - TimeFields::kHours] = value;\n+      value = 0;\n+\n+      switch (input[index]) {\n+        case '.':\n\nReview comment:\n       I used the already implemented **castTimestamp** function as a base and it accepts '.' characters as separators: see here: https://github.com/apache/arrow/blob/419ef49cbc5ec639bb2aefc269f127732b0ef64e/cpp/src/gandiva/precompiled/time.cc#L631\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T12:16:29.590+0000",
                    "updated": "2021-12-23T12:16:29.590+0000",
                    "started": "2021-12-23T12:16:29.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700553",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/713501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra closed pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T05:50:42.658+0000",
                    "updated": "2022-01-24T05:50:42.658+0000",
                    "started": "2022-01-24T05:50:42.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713501",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/713505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-1019747942\n\n\n   Benchmark runs are scheduled for baseline = 54460d96ba1d613e472d8d9a96c072147e736b4d and contender = 8e34b64f60120bdee5991148f765cd4452f0e0d7. 8e34b64f60120bdee5991148f765cd4452f0e0d7 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b6d8753fe17d4b43ad3e125df633e63a...295fe69240dd4a2aaa31897a18bb267c/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ad291615ee5340eb8c2d35e66a7f5cf8...4dfa98524cd84f898c5f15fa248a4565/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/0e1c912907e541bfbec0fced54f601bd...b89d7218b21848aab559add84da36052/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T06:01:31.089+0000",
                    "updated": "2022-01-24T06:01:31.089+0000",
                    "started": "2022-01-24T06:01:31.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713505",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/713511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-1019747942\n\n\n   Benchmark runs are scheduled for baseline = 54460d96ba1d613e472d8d9a96c072147e736b4d and contender = 8e34b64f60120bdee5991148f765cd4452f0e0d7. 8e34b64f60120bdee5991148f765cd4452f0e0d7 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b6d8753fe17d4b43ad3e125df633e63a...295fe69240dd4a2aaa31897a18bb267c/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ad291615ee5340eb8c2d35e66a7f5cf8...4dfa98524cd84f898c5f15fa248a4565/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/0e1c912907e541bfbec0fced54f601bd...b89d7218b21848aab559add84da36052/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T06:21:19.718+0000",
                    "updated": "2022-01-24T06:21:19.718+0000",
                    "started": "2022-01-24T06:21:19.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713511",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/713549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-1019747942\n\n\n   Benchmark runs are scheduled for baseline = 54460d96ba1d613e472d8d9a96c072147e736b4d and contender = 8e34b64f60120bdee5991148f765cd4452f0e0d7. 8e34b64f60120bdee5991148f765cd4452f0e0d7 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b6d8753fe17d4b43ad3e125df633e63a...295fe69240dd4a2aaa31897a18bb267c/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ad291615ee5340eb8c2d35e66a7f5cf8...4dfa98524cd84f898c5f15fa248a4565/)\n   [Finished :arrow_down:0.09% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/0e1c912907e541bfbec0fced54f601bd...b89d7218b21848aab559add84da36052/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T07:51:26.807+0000",
                    "updated": "2022-01-24T07:51:26.807+0000",
                    "started": "2022-01-24T07:51:26.807+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713549",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/713954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-1019747942\n\n\n   Benchmark runs are scheduled for baseline = 54460d96ba1d613e472d8d9a96c072147e736b4d and contender = 8e34b64f60120bdee5991148f765cd4452f0e0d7. 8e34b64f60120bdee5991148f765cd4452f0e0d7 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b6d8753fe17d4b43ad3e125df633e63a...295fe69240dd4a2aaa31897a18bb267c/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ad291615ee5340eb8c2d35e66a7f5cf8...4dfa98524cd84f898c5f15fa248a4565/)\n   [Finished :arrow_down:0.09% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/0e1c912907e541bfbec0fced54f601bd...b89d7218b21848aab559add84da36052/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T18:51:52.570+0000",
                    "updated": "2022-01-24T18:51:52.570+0000",
                    "started": "2022-01-24T18:51:52.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713954",
                    "issueId": "13380426"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/worklog/714950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10402:\nURL: https://github.com/apache/arrow/pull/10402#issuecomment-1019747942\n\n\n   Benchmark runs are scheduled for baseline = 54460d96ba1d613e472d8d9a96c072147e736b4d and contender = 8e34b64f60120bdee5991148f765cd4452f0e0d7. 8e34b64f60120bdee5991148f765cd4452f0e0d7 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b6d8753fe17d4b43ad3e125df633e63a...295fe69240dd4a2aaa31897a18bb267c/)\n   [Failed :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/ad291615ee5340eb8c2d35e66a7f5cf8...4dfa98524cd84f898c5f15fa248a4565/)\n   [Finished :arrow_down:0.09% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/0e1c912907e541bfbec0fced54f601bd...b89d7218b21848aab559add84da36052/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T17:00:57.281+0000",
                    "updated": "2022-01-25T17:00:57.281+0000",
                    "started": "2022-01-25T17:00:57.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714950",
                    "issueId": "13380426"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f19adc6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@361894e8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b06deaf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@694ba6f3[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67fe833a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@77a3a778[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5afdec85[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6eb5a517[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d411ca8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1733ec1f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@221fa3b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@614127f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jan 24 05:50:41 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-24T05:50:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12880/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-05-26T00:00:30.000+0000",
        "updated": "2022-01-25T17:00:58.000+0000",
        "timeoriginalestimate": null,
        "description": "The task is to add the\u00a0*castTIME(int32), castTIMESTAMP(**int64)*\u00a0and\u00a0*castTIME(utf8)*\u00a0functions.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Add castTIME(int32), castTIMESTAMP(int64) and castTIME(utf8) functions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380426/comment/17480824",
                    "id": "17480824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 10402\n[https://github.com/apache/arrow/pull/10402]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2022-01-24T05:50:41.311+0000",
                    "updated": "2022-01-24T05:50:41.311+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0rddk:",
        "customfield_12314139": null
    }
}