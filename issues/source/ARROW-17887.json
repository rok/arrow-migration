{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13483778",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778",
    "key": "ARROW-17887",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=djnavarro",
            "name": "djnavarro",
            "key": "JIRAUSER283377",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER283377&avatarId=49058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER283377&avatarId=49058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER283377&avatarId=49058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER283377&avatarId=49058"
            },
            "displayName": "Danielle Navarro",
            "active": true,
            "timeZone": "Australia/Sydney"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=djnavarro",
            "name": "djnavarro",
            "key": "JIRAUSER283377",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER283377&avatarId=49058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER283377&avatarId=49058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER283377&avatarId=49058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER283377&avatarId=49058"
            },
            "displayName": "Danielle Navarro",
            "active": true,
            "timeZone": "Australia/Sydney"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=djnavarro",
            "name": "djnavarro",
            "key": "JIRAUSER283377",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER283377&avatarId=49058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER283377&avatarId=49058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER283377&avatarId=49058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER283377&avatarId=49058"
            },
            "displayName": "Danielle Navarro",
            "active": true,
            "timeZone": "Australia/Sydney"
        },
        "aggregateprogress": {
            "progress": 39000,
            "total": 39000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 39000,
            "total": 39000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17887/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 65,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro opened a new pull request, #14514:\nURL: https://github.com/apache/arrow/pull/14514\n\n   This pull request proposes a number of changes to the pkgdown site for the R package:\r\n   \r\n   - Reduces the content on the README page to the essential points\r\n   - Rewrites the \"get started\" page to focus on common tasks and novice users\r\n   - Moves discussion of the Arrow data object hierarchy to a new \"data objects\" vignette\r\n   - Moves discussion of Arrow data types and conversions to a new \"data types\" vignette\r\n   - Moves discussion of schemas and storage of R attributes to a new \"metadata\" vignette\r\n   - Moves discussion of package naming conventions to a new \"package conventions\" vignette\r\n   - Moves discussion of read/write capabilities to a new \"reading and writing data\" vignette\r\n   - Moves discussion of the dplyr back end to a new \"data wrangling\" vignette\r\n   - Edits the \"multi-file data sets\" vignette to improve readability and to minimize risk of novice users unintentionally downloading the 70GB NYC taxi data by copy/paste errors\r\n   - Minor edits to the \"python\" vignette to improve readability\r\n   - Minor edits to the \"cloud storage\" vignette to improve readability\r\n   - Minor edits to the \"flight\" vignette to improve readability\r\n   - Inserts a new \"data object layout\" vignette (in the developer vignettes) to bridge between the R documentation and the Arrow specification page\r\n   \r\n   In addition there are some structural changes:\r\n   \r\n   - Some vignette filenames have been edited and links updated\r\n   - The pkgdown template now uses bootstrap 5\r\n   - The developer vignettes are now in the main vignettes folder\r\n   - The articles menu organizes the vignettes into meaningful categories\r\n   - The former \"project docs\" menu has been replaced with a sidebar on the main page\r\n   \r\n   Possible issues as yet unaddressed: \r\n   \r\n   - I have not yet checked whether the bootstrap 5 template breaks the script inserting the documentation versions switcher\r\n   - Changes to developer vignettes are extremely minimal in comparison to other vignettes. I'm uncertain whether to make further changes there or to defer that to a later PR\r\n   - The \"articles\" menu currently hides all the developer vignettes under the \"more articles\" link: they should be made more prominent and easy to find\r\n   - Some topics may not be described as well as we'd like? \r\n   \r\n   It is still a work-in-progress but feedback is appreciated. To make it easy to preview the proposed changes, a preview copy of the built documentation is posted here: https://djnavarro.net/draft-arrow-docs/\r\n   \n\n\n",
                    "created": "2022-10-26T04:46:45.258+0000",
                    "updated": "2022-10-26T04:46:45.258+0000",
                    "started": "2022-10-26T04:46:45.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820338",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291507133\n\n   https://issues.apache.org/jira/browse/ARROW-17887\n\n\n",
                    "created": "2022-10-26T05:06:14.290+0000",
                    "updated": "2022-10-26T05:06:14.290+0000",
                    "started": "2022-10-26T05:06:14.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820343",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291507155\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-10-26T05:06:16.189+0000",
                    "updated": "2022-10-26T05:06:16.189+0000",
                    "started": "2022-10-26T05:06:16.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820344",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291647638\n\n   > I have not yet checked whether the bootstrap 5 template breaks the script inserting the documentation versions switcher\r\n   \r\n   I'd expect it will (see discussion on https://github.com/apache/arrow/pull/12531).  Happy to take a look at that as I did the original version switcher stuff (equally, happy to leave it with you, just let me know).\n\n\n",
                    "created": "2022-10-26T08:01:29.682+0000",
                    "updated": "2022-10-26T08:01:29.682+0000",
                    "started": "2022-10-26T08:01:29.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820381",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291653378\n\n   > The proposed edits to the vignettes include a lot more code that is executed at build time. This may not be desirable?\r\n   \r\n   Could [ARROW-17655](https://issues.apache.org/jira/browse/ARROW-17655) help with this?\n\n\n",
                    "created": "2022-10-26T08:06:47.602+0000",
                    "updated": "2022-10-26T08:06:47.602+0000",
                    "started": "2022-10-26T08:06:47.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820383",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1005366066\n\n\n##########\nr/vignettes/flight.Rmd:\n##########\n@@ -1,48 +1,38 @@\n ---\n-title: \"Connecting to Flight RPC Servers\"\n+title: \"Connecting to a flight server\"\n+description: >\n+  Learn how to efficiently stream Apache Arrow data objects across a \n+  network using Arrow Flight \n output: rmarkdown::html_vignette\n vignette: >\n-  %\\VignetteIndexEntry{Connecting to Flight RPC Servers}\n+  %\\VignetteIndexEntry{Connecting to a flight server}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n ---\n \n-[**Flight**](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/)\n-is a general-purpose client-server framework for high performance\n-transport of large datasets over network interfaces, built as part of the\n-[Apache Arrow](https://arrow.apache.org) project.\n+[Arrow Flight](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/) is a general-purpose client-server framework for high performance transport of large datasets over network interfaces, built as part of the Apache Arrow project. It allows for highly efficient data transfer by several means:\n \n-Flight allows for highly efficient data transfer as it:\n+* Flight removes the need for deserialization during data transfer.\n+* Flight allows for parallel data streaming.\n+* Flight employs optimizations designed to take advantage of Arrow's columnar format.\n \n-* removes the need for deserialization during data transfer\n-* allows for parallel data streaming\n-* is highly optimized to take advantage of Arrow's columnar format.\n+The `arrow` package provides methods for connecting to Flight servers to send and receive data.\n\nReview Comment:\n   In previous iterations of doc refactoring, we decided to refer to packages on the first instance with a link, and on the subsequent instances with a link to that package, instead of backticks as it makes the sentence more skimmable (and tbh were just copying [how the dplyr docs do it](https://dplyr.tidyverse.org/articles/programming.html) ;) ) There's a little bit in here about that: https://github.com/apache/arrow/blob/master/r/STYLE.md.\n\n\n\n##########\nr/vignettes/flight.Rmd:\n##########\n@@ -1,48 +1,38 @@\n ---\n-title: \"Connecting to Flight RPC Servers\"\n+title: \"Connecting to a flight server\"\n+description: >\n+  Learn how to efficiently stream Apache Arrow data objects across a \n+  network using Arrow Flight \n output: rmarkdown::html_vignette\n vignette: >\n-  %\\VignetteIndexEntry{Connecting to Flight RPC Servers}\n+  %\\VignetteIndexEntry{Connecting to a flight server}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n ---\n \n-[**Flight**](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/)\n-is a general-purpose client-server framework for high performance\n-transport of large datasets over network interfaces, built as part of the\n-[Apache Arrow](https://arrow.apache.org) project.\n+[Arrow Flight](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/) is a general-purpose client-server framework for high performance transport of large datasets over network interfaces, built as part of the Apache Arrow project. It allows for highly efficient data transfer by several means:\n \n-Flight allows for highly efficient data transfer as it:\n+* Flight removes the need for deserialization during data transfer.\n+* Flight allows for parallel data streaming.\n+* Flight employs optimizations designed to take advantage of Arrow's columnar format.\n \n-* removes the need for deserialization during data transfer\n-* allows for parallel data streaming\n-* is highly optimized to take advantage of Arrow's columnar format.\n+The `arrow` package provides methods for connecting to Flight servers to send and receive data.\n \n-The arrow package provides methods for connecting to Flight RPC servers\n-to send and receive data.\n+## Prerequisites\n \n-## Getting Started\n-\n-The `flight` functions in the package use [reticulate](https://rstudio.github.io/reticulate/) to call methods in the\n-[pyarrow](https://arrow.apache.org/docs/python/api/flight.html) Python package.\n-\n-Before using them for the first time,\n-you'll need to be sure you have reticulate and pyarrow installed:\n+At present the `arrow` package in R does not supply an independent implementation of Arrow Flight: it works by calling [Flight methods supplied by PyArrow](https://arrow.apache.org/docs/python/api/flight.html) Python, and requires both the [`reticulate`](https://rstudio.github.io/reticulate/) package and the Python PyArrow library to be installed. If you are using them for the first time you can install them like this:\n\nReview Comment:\n   Love this phrasing, this is much clearer\n\n\n\n##########\nr/vignettes/flight.Rmd:\n##########\n@@ -84,6 +73,13 @@ client %>%\n \n Because `flight_get()` returns an Arrow data structure, you can directly pipe\n its result into a [dplyr](https://dplyr.tidyverse.org/) workflow.\n-See `vignette(\"dataset\", package = \"arrow\")` for more information on working with Arrow objects via a dplyr interface.\n+See `vignette(\"data_wrangling\", package = \"arrow\")` for more information on working with Arrow objects via a `dplyr` interface.\n+\n+## Further reading\n+\n+- The specification of the [Flight remote procedure call protocol](https://arrow.apache.org/docs/format/Flight.html) is listed on the Arrow project homepage\n+- The Arrow C++ documentation contains a list of [best practices](https://arrow.apache.org/docs/cpp/flight.html#best-practices) for Arrow Flight.\n+- A detailed worked example of an Arrow Flight server in Python is provided in the [Apache Arrow Python Cookbook](https://arrow.apache.org/cookbook/py/flight.html).\n\nReview Comment:\n   Good call, great addition\n\n\n\n##########\nr/vignettes/flight.Rmd:\n##########\n@@ -1,48 +1,38 @@\n ---\n-title: \"Connecting to Flight RPC Servers\"\n+title: \"Connecting to a flight server\"\n\nReview Comment:\n   Should \"flight\" here be capitalised?\n\n\n\n",
                    "created": "2022-10-26T08:21:59.945+0000",
                    "updated": "2022-10-26T08:21:59.945+0000",
                    "started": "2022-10-26T08:21:59.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820389",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291677557\n\n   As this is a humongous PR, I'm adding checkboxes here so I can work out what I have or have not looked at.\r\n   \r\n   - [ ]     Reduces the content on the README page to the essential points\r\n   - [ ]     Rewrites the \"get started\" page to focus on common tasks and novice users\r\n   - [ ]     Moves discussion of the Arrow data object hierarchy to a new \"data objects\" vignette\r\n   - [ ]     Moves discussion of Arrow data types and conversions to a new \"data types\" vignette\r\n   - [ ]     Moves discussion of schemas and storage of R attributes to a new \"metadata\" vignette\r\n   - [ ]     Moves discussion of package naming conventions to a new \"package conventions\" vignette\r\n   - [ ]     Moves discussion of read/write capabilities to a new \"reading and writing data\" vignette\r\n   - [ ]     Moves discussion of the dplyr back end to a new \"data wrangling\" vignette\r\n   - [ ]     Edits the \"multi-file data sets\" vignette to improve readability and to minimize risk of novice users unintentionally downloading the 70GB NYC taxi data by copy/paste errors\r\n   - [ ]     Minor edits to the \"python\" vignette to improve readability\r\n   - [ ]     Minor edits to the \"cloud storage\" vignette to improve readability\r\n   - [x]     Minor edits to the \"flight\" vignette to improve readability\r\n   - [ ]     Inserts a new \"data object layout\" vignette (in the developer vignettes) to bridge between the R documentation and the Arrow specification page\r\n   \n\n\n",
                    "created": "2022-10-26T08:27:37.681+0000",
                    "updated": "2022-10-26T08:27:37.681+0000",
                    "started": "2022-10-26T08:27:37.681+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820393",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1005378186\n\n\n##########\nr/vignettes/python.Rmd:\n##########\n@@ -1,68 +1,141 @@\n ---\n-title: \"Apache Arrow in Python and R with reticulate\"\n+title: \"Integrating Arrow, Python, and R\"\n+description: > \n+  Learn how to use `arrow` and `reticulate` to efficiently transfer data \n+  between R and Python without making unnecessary copies\n output: rmarkdown::html_vignette\n vignette: >\n-  %\\VignetteIndexEntry{Apache Arrow in Python and R with reticulate}\n+  %\\VignetteIndexEntry{Integrating Arrow, Python, and R}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n ---\n \n-The arrow package provides [reticulate](https://rstudio.github.io/reticulate/) methods for passing data between\n-R and Python in the same process. This document provides a brief overview.\n+The `arrow` package provides [reticulate](https://rstudio.github.io/reticulate/) methods for passing data between R and Python within the same process. This vignette provides a brief overview.\n \n-Why you might want to use `pyarrow`?\n+Code in this vignette assumes `arrow` and `reticulate` are both loaded:\n \n-* To use some Python functionality that is not yet implemented in R, for example, the `concat_arrays` function.\n-* To transfer Python objects into R, for example, a Pandas dataframe into an R Arrow Array. \n+```r\n+library(arrow, warn.conflicts = FALSE)\n+library(reticulate, warn.conflicts = FALSE)\n+```\n+\n+## Motivation\n+\n+One reason you might want to use PyArrow in R is to take advantage of functionality that is better supported in Python than in R at the current state of development. For example, at one point in time the R `arrow` package didn't support `concat_arrays()` but PyArrow did, so this would have been a good use case at that time. At the time of current writing PyArrow has more comprehensive support for [Arrow Flight](https://arrow.apache.org/docs/format/Flight.html) than the R package ",
                    "created": "2022-10-26T08:36:58.569+0000",
                    "updated": "2022-10-26T08:36:58.569+0000",
                    "started": "2022-10-26T08:36:58.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820399",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1005378186\n\n\n##########\nr/vignettes/python.Rmd:\n##########\n@@ -1,68 +1,141 @@\n ---\n-title: \"Apache Arrow in Python and R with reticulate\"\n+title: \"Integrating Arrow, Python, and R\"\n+description: > \n+  Learn how to use `arrow` and `reticulate` to efficiently transfer data \n+  between R and Python without making unnecessary copies\n output: rmarkdown::html_vignette\n vignette: >\n-  %\\VignetteIndexEntry{Apache Arrow in Python and R with reticulate}\n+  %\\VignetteIndexEntry{Integrating Arrow, Python, and R}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n ---\n \n-The arrow package provides [reticulate](https://rstudio.github.io/reticulate/) methods for passing data between\n-R and Python in the same process. This document provides a brief overview.\n+The `arrow` package provides [reticulate](https://rstudio.github.io/reticulate/) methods for passing data between R and Python within the same process. This vignette provides a brief overview.\n \n-Why you might want to use `pyarrow`?\n+Code in this vignette assumes `arrow` and `reticulate` are both loaded:\n \n-* To use some Python functionality that is not yet implemented in R, for example, the `concat_arrays` function.\n-* To transfer Python objects into R, for example, a Pandas dataframe into an R Arrow Array. \n+```r\n+library(arrow, warn.conflicts = FALSE)\n+library(reticulate, warn.conflicts = FALSE)\n+```\n+\n+## Motivation\n+\n+One reason you might want to use PyArrow in R is to take advantage of functionality that is better supported in Python than in R at the current state of development. For example, at one point in time the R `arrow` package didn't support `concat_arrays()` but PyArrow did, so this would have been a good use case at that time. At the time of current writing PyArrow has more comprehensive support for [Arrow Flight](https://arrow.apache.org/docs/format/Flight.html) than the R package ",
                    "created": "2022-10-26T10:38:19.804+0000",
                    "updated": "2022-10-26T10:38:19.804+0000",
                    "started": "2022-10-26T10:38:19.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820434",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1005556357\n\n\n##########\nr/vignettes/cloud_storage.Rmd:\n##########\n@@ -0,0 +1,329 @@\n+---\n+title: \"Using cloud storage (S3, GCS)\"\n+description: >\n+  Learn how to work with data sets stored in an \n+  Amazon S3 bucket or on Google Cloud Storage \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Using cloud storage (S3, GCS)}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+Working with data stored in cloud storage systems like [Amazon Simple Storage Service](https://docs.aws.amazon.com/s3/) (S3) and [Google Cloud Storage](https://cloud.google.com/storage/docs) (GCS) is a very common task. Because of this, the Arrow C++ library provides a toolkit aimed to make it as simple to work with cloud storage as it is to work with the local filesystem.\n\nReview Comment:\n   TIL why S3 is called S3 :D\n\n\n\n##########\nr/vignettes/cloud_storage.Rmd:\n##########\n@@ -0,0 +1,329 @@\n+---\n+title: \"Using cloud storage (S3, GCS)\"\n+description: >\n+  Learn how to work with data sets stored in an \n+  Amazon S3 bucket or on Google Cloud Storage \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Using cloud storage (S3, GCS)}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+Working with data stored in cloud storage systems like [Amazon Simple Storage Service](https://docs.aws.amazon.com/s3/) (S3) and [Google Cloud Storage](https://cloud.google.com/storage/docs) (GCS) is a very common task. Because of this, the Arrow C++ library provides a toolkit aimed to make it as simple to work with cloud storage as it is to work with the local filesystem.\n+\n+To make this work, the Arrow C++ library contains a general-purpose interface for file systems, and the `arrow` package exposes this interface to R users. For instance, if you want to you can create a `LocalFileSystem` object that allows you to interact with the local file system in the usual ways: copying, moving, and deleting files, obtaining information about files and folders, and so on (see `help(\"FileSystem\", package = \"arrow\")` for details). In general you probably don't need this functionality because you already have tools for working with your local file system, but this interface becomes much more useful in the context of remote file systems. Currently there is a specific implementation for Amazon S3 provided by the `S3FileSystem` class, and another one for Google Cloud Storage provided by `GcsFileSystem`.\n+\n+This vignette provides an overview of working with both S3 and GCS data using the Arrow toolkit. \n+\n+## S3 and GCS support on Linux\n+\n+Before you start, make sure that your `arrow` install has support for S3 and/or GCS enabled. For most users this will be true by default, because the Windows and MacOS binary packages hosted on CRAN include S3 and GCS support. You can check whether support is enabled via helper functions:\n+\n+```r\n+arrow_with_s3()\n+arrow_with_gcs()\n+```\n+\n+If these return `TRUE` then the relevant support is enabled.\n+\n+In some cases you may find that your system does not have support enabled. The most common case for this occurs on Linux when installing `arrow` from source. In this situation S3 and GCS support is not always enabled by default, and there are additional system requirements involved. See `vignette(\"install_linux\", package = \"arrow\")` for details on how to resolve this.\n+\n+## Connecting to cloud storage\n+\n+One way of working with filesystems is to create `?FileSystem` objects. \n+`?S3FileSystem` objects can be created with the `s3_bucket()` function, which\n+automatically detects the bucket's AWS region. Similarly, `?GcsFileSystem` objects\n+can be created with the `gs_bucket()` function. The resulting\n+`FileSystem` will consider paths relative to the bucket's path (so for example\n+you don't need to prefix the bucket path when listing a directory).\n+\n+With a `FileSystem` object, you can point to specific files in it with the `$path()` method\n+and pass the result to file readers and writers (`read_parquet()`, `write_feather()`, et al.).\n+\n+Often the reason users work with cloud storage in real world analysis is to access large data sets. An example of this is discussed in `vignette(\"dataset\", package = \"arrow\")`, but new users may prefer to work with a much smaller data set while learning how the `arrow` cloud storage interface works. To that end, the examples in this vignette rely on a multi-file Parquet dataset that stores a copy of the `diamonds` data made available through the [`ggplot2`](https://ggplot2.tidyverse.org/) package, documented in `help(\"diamonds\", package = \"ggplot2\")`. The cloud storage version of this data set consists of 5 Parquet files totaling less than 1MB in size.\n+\n+The diamonds data set is hosted on both S3 and GCS, in a bucket named `voltrondata-labs-datasets`. To create an S3FileSystem object that refers to that bucket, use the following command:\n+\n+```r\n+bucket <- s3_bucket(\"voltrondata-labs-datasets\")\n+```\n+\n+To do this for the GCS version of the data, the command is as follows:\n+\n+```r\n+bucket <- gs_bucket(\"voltrondata-labs-datasets\", anonymous = TRUE)\n+```\n+\n+Note that `anonymous = TRUE` is required for GCS if credentials have not been configured. \n+\n+<!",
                    "created": "2022-10-26T11:33:39.106+0000",
                    "updated": "2022-10-26T11:33:39.106+0000",
                    "started": "2022-10-26T11:33:39.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820454",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1291896244\n\n   @djnavarro Are all of the \"moves discussion of...\" items copied verbatim?\n\n\n",
                    "created": "2022-10-26T11:34:33.087+0000",
                    "updated": "2022-10-26T11:34:33.087+0000",
                    "started": "2022-10-26T11:34:33.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820456",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1005609362\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n\nReview Comment:\n   ```suggestion\r\n   - The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\r\n   ```\n\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n\nReview Comment:\n   ```suggestion\r\n   However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian (i.e. right-to-left). To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\r\n   ```\r\n   Maybe?\r\n   \r\n   (it's not showing up on the preview but I added \"(i.e. right-to-left)\")\n\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n+\n+::: {.grid}\n+::: {.g-col-6}\n+|Byte 0 (validity bitmap) | Bytes 1-63            |\n+|-------------------------|-----------------------|\n+| `00011101`              | `0` (padding)         |\n+:::\n+:::\n+\n+## Data buffer\n+\n+The data buffer, like the validity bitmap, is padded out to a length of 64 bytes to preserve natural alignment. Here's the diagram showing the physical layout:\n+\n+::: {.grid}\n+::: {.g-col-12}\n+| Bytes 0-3 | Bytes 4-7   | Bytes 8-11 | Bytes 12-15 | Bytes 16-19 | Bytes 20-63 |\n+|-----------|-------------|------------|-------------|-------------|-------------|\n+| `1`       | unspecified | `2`        | `4`         | `8`         | unspecified |\n+:::\n+:::\n+\n+Each integer occupies 4 bytes, as per the requirements of a 32-bit signed integer. Notice that the bytes associate with the missing value are left unspecified: space is allocated for the value but those bytes are not filled. \n\nReview Comment:\n   ```suggestion\r\n   Each integer occupies 4 bytes, as per the requirements of a 32-bit signed integer. Notice that the bytes associated with the missing value are left unspecified: space is allocated for the value but those bytes are not filled. \r\n   ```\n\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n\nReview Comment:\n   ```suggestion\r\n   However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multiple of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\r\n   ```\n\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n\nReview Comment:\n   Something about \"allocated memory addresses are a multiple of the data block sizes\" isn't just quite clicking for me.  I'm definitely misinterpreting this, as my first thoughts are \"but memory addresses look like '0x7fff324d73e0' or whatever, what does that have to do with data block sizes?\"  I'm definitely doing something stupid here in how I'm interpreting the wording, but I'm not sure what extra words in that sentence would stop me from doing it.\n\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n+\n+::: {.grid}\n+::: {.g-col-6}\n+|Byte 0 (validity bitmap) | Bytes 1-63            |\n+|-------------------------|-----------------------|\n+| `00011101`              | `0` (padding)         |\n+:::\n+:::\n+\n+## Data buffer\n+\n+The data buffer, like the validity bitmap, is padded out to a length of 64 bytes to preserve natural alignment. Here's the diagram showing the physical layout:\n+\n+::: {.grid}\n+::: {.g-col-12}\n+| Bytes 0-3 | Bytes 4-7   | Bytes 8-11 | Bytes 12-15 | Bytes 16-19 | Bytes 20-63 |\n+|-----------|-------------|------------|-------------|-------------|-------------|\n+| `1`       | unspecified | `2`        | `4`         | `8`         | unspecified |\n+:::\n+:::\n+\n+Each integer occupies 4 bytes, as per the requirements of a 32-bit signed integer. Notice that the bytes associate with the missing value are left unspecified: space is allocated for the value but those bytes are not filled. \n+\n+## Offset buffer\n+\n+Some types of Arrow array include a third buffer known as the offset buffer. This is most frequently encountered in the context of string arrays, such as this one:\n+\n+```{r}\n+string_array <- Array$create(c(\"hello\", \"amazing\", \"and\", \"cruel\", \"world\")) \n+string_array\n+```\n+\n+Using the same schematic notation as before, this is the structure of the object. It has the same metadata as before but as shown below, there are now three buffers:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_string.png\")\n+```\n+\n+To understand the role of the offset buffer, it helps to note the format of the data buffer for a string array: it concatenates all strings end to end in one contiguous section of memory. For the `string_array` object, the contents of the data buffer would look like one long utf8-encoded string:\n+\n+```\n+helloamazingandcruelworld\n+```\n+\n+Because individual strings can be of variable length, the role of the offset buffer is to specify where the boundaries between the slots are. The second slot in our array is the string `\"amazing\"`. If the positions in the data array are indexed like this\n+\n+|  h |  e |  l |  l |  o |  a |  m |  a |  z |  i |  n |  g |  a |  n |  d | ... |\n+| ",
                    "created": "2022-10-26T12:40:40.231+0000",
                    "updated": "2022-10-26T12:40:40.231+0000",
                    "started": "2022-10-26T12:40:40.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820481",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1006121776\n\n\n##########\nr/vignettes/flight.Rmd:\n##########\n@@ -1,48 +1,38 @@\n ---\n-title: \"Connecting to Flight RPC Servers\"\n+title: \"Connecting to a flight server\"\n+description: >\n+  Learn how to efficiently stream Apache Arrow data objects across a \n+  network using Arrow Flight \n output: rmarkdown::html_vignette\n vignette: >\n-  %\\VignetteIndexEntry{Connecting to Flight RPC Servers}\n+  %\\VignetteIndexEntry{Connecting to a flight server}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n ---\n \n-[**Flight**](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/)\n-is a general-purpose client-server framework for high performance\n-transport of large datasets over network interfaces, built as part of the\n-[Apache Arrow](https://arrow.apache.org) project.\n+[Arrow Flight](https://arrow.apache.org/blog/2019/10/13/introducing-arrow-flight/) is a general-purpose client-server framework for high performance transport of large datasets over network interfaces, built as part of the Apache Arrow project. It allows for highly efficient data transfer by several means:\n \n-Flight allows for highly efficient data transfer as it:\n+* Flight removes the need for deserialization during data transfer.\n+* Flight allows for parallel data streaming.\n+* Flight employs optimizations designed to take advantage of Arrow's columnar format.\n \n-* removes the need for deserialization during data transfer\n-* allows for parallel data streaming\n-* is highly optimized to take advantage of Arrow's columnar format.\n+The `arrow` package provides methods for connecting to Flight servers to send and receive data.\n\nReview Comment:\n   > In previous iterations of doc refactoring, we decided to refer to packages on the first instance with a link, and on the subsequent instances with a link to that package, instead of backticks as it makes the sentence more skimmable (and tbh were just copying [how the dplyr docs do it](https://dplyr.tidyverse.org/articles/programming.html) ;) ) There's a little bit in here about that: https://github.com/apache/arrow/blob/master/r/STYLE.md.\r\n   \r\n   Ah thanks ",
                    "created": "2022-10-26T19:48:15.571+0000",
                    "updated": "2022-10-26T19:48:15.571+0000",
                    "started": "2022-10-26T19:48:15.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820683",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1292572265\n\n   > @djnavarro Are all of the \"moves discussion of...\" items copied verbatim?\r\n   \r\n   Unfortunately, no ",
                    "created": "2022-10-26T19:48:22.909+0000",
                    "updated": "2022-10-26T19:48:22.909+0000",
                    "started": "2022-10-26T19:48:22.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820684",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on code in PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#discussion_r1006134236\n\n\n##########\nr/vignettes/data_object_layout.Rmd:\n##########\n@@ -0,0 +1,183 @@\n+---\n+title: \"Internal structure of Arrow objects\"\n+description: > \n+  Learn about the internal structure of Arrow data objects. \n+output: rmarkdown::html_vignette\n+vignette: >\n+  %\\VignetteIndexEntry{Internal structure of Arrow objects}\n+  %\\VignetteEngine{knitr::rmarkdown}\n+  %\\VignetteEncoding{UTF-8}\n+---\n+\n+This vignette describes the internal structure of Arrow data objects. Users of the `arrow` R package will not generally need to understand the internal structure of Arrow data objects. We include it here to help orient those R users and Arrow developers who wish to understand the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html). This vignette provides a deeper dive into some of the topics described in `vignette(\"data_objects\", package = \"arrow\")`, and is intended mostly for developers. It is not necessary knowledge for using the `arrow` package. \n+\n+\n+```{r include=FALSE}\n+library(arrow, warn.conflicts = FALSE)\n+```\n+\n+\n+We begin by describing two key concepts:\n+\n+- Values in an array are stored in one or more **buffers**. A buffer is a sequential virtual address space (i.e., block of memory) with a given length. Given a  pointer specifying the memory address where the buffer starts, you can reach any byte in the buffer with an \"offset\" value that specifies a location relative to the start of the buffer. \n+- The **physical layout** of an array is a term used to describe how data in an array is laid out in memory, without taking into account of how that information is interpreted. As an example: a 32-bit signed integer and 32-bit floating point number have the same layout: they are both 32 bits, represented as 4 contiguous bytes in memory. The meaning is different, but the layout is the same.\n+\n+We can unpack these ideas using a simple array of integer values:\n+\n+```{r}\n+integer_array <- Array$create(c(1L, NA, 2L, 4L, 8L))\n+integer_array\n+```\n+\n+We can inspect the `integer_array$type` attribute to see that the values in the Array are stored as signed 32 bit integers. When laid out in memory by the Arrow C++ library, an integer array consists of two pieces of metadata and two buffers that store the data. The metadata specify the length of the array and a count of the number of null values, both stored as 64-bit integers. These metadata can be viewed from R using `integer_array$length()` and `integer_array$null_count` respectively. The number of buffers associated with an array depends on the exact type of data being stored. For an integer array there are two: a \"validity bitmap buffer\" and a \"data value buffer\". Schematically we could depict the array as follows:\n+\n+```{r, echo=FALSE, out.width=\"100%\"}\n+knitr::include_graphics(\"./array_layout_integer.png\")\n+```\n+\n+This image shows the array as a rectangle subdivided into two parts, one for the metadata and the other for the buffers. Underneath the rectangle we've unpacked the contents of the buffers for you, showing the contents of the two buffers in the area enclosed in a dotted line. At the very bottom of the figure, you can see the contents of specific bytes.\n+\n+## Validity bitmap buffer\n+\n+The validity bitmap is binary-valued, and contains a 1 whenever the corresponding slot in the array contains a valid, non-null value. At an abstract level we can assume this contains the following five bits: \n+\n+```\n+10111\n+```\n+\n+However this is a slight over-simplification for three reasons. First, because memory is allocated in byte-size units there are three trailing bits at the end (assumed to be zero), giving us the bitmap `10111000`. Second, while we have written this from left-to-right, this written format is typically presumed to represent [big endian format](https://en.wikipedia.org/wiki/Endianness) whereas Arrow is little-endian. To reflect this we write the bits in reversed order: `00011101`. Finally, Arrow encourages [naturally aligned data structures](https://en.wikipedia.org/wiki/Data_structure_alignment) in which allocated memory addresses are a multiple of the data block sizes. Arrow uses *64 byte alignment*, so each data structure must be a multople of 64 bytes in size. This design feature exists to allow efficient use of modern hardware, as discussed in the [Arrow specification](https://arrow.apache.org/docs/format/Columnar.html#buffer-alignment-and-padding). This is what the buffer looks like this in memory:\n\nReview Comment:\n   Yeah, let me think about it. On the one hand I feel like it would be weird to do a full digression into \"memory addresses can be rewritten from hex notation to a decimal number...\" and then talk about the reasons why we want all data blocks to start (and stop) at an address that is a multiple of 64 bytes. That seems like a long and unhelpful tangent (especially since I'm right at the edge of my own knowledge trying to understand why it actually matters!) but at the same time the Arrow spec page does go into this detail and treats it as if it's assumed knowledge. So I feel almost obligated to try to unpack it in the R docs just so that readers of this vignette will be able to read the Arrow spec and not get completely confused. \r\n   \r\n   ugh. it's a mess. this vignette is the one I'm least certain about ",
                    "created": "2022-10-26T20:02:57.144+0000",
                    "updated": "2022-10-26T20:02:57.144+0000",
                    "started": "2022-10-26T20:02:57.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820691",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1292688946\n\n   \r\n   > All that said though, you could make the argument that whilst navigating between docs for different versions of a function may be desirable, it might be less important for vignettes, and so we could just link to the articles index page in those cases.\r\n   \r\n   After thinking about it for a little I'm starting to think this might be the best approach to vignette linking across versions. The structure of the vignettes has changed quite a bit in this rewrite, and there's not really a 1:1 mapping between old and new. I was unhappy about it because I hate breaking backwards compatibility even in the docs, but it's not like we could fix the issue with a simple file rename ",
                    "created": "2022-10-26T21:46:04.399+0000",
                    "updated": "2022-10-26T21:46:04.399+0000",
                    "started": "2022-10-26T21:46:04.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820735",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1292725903\n\n   This is great, thank you for taking this on. I'll give the content a close read at some point, but a couple of quick considerations:\r\n   \r\n   * We should be careful about changing the vignette filenames since they map to URLs and URLs make up an API. For some of the lesser vignettes it's maybe not a big deal, but the number of links to `vignette(\"install\")` i.e. https://arrow.apache.org/docs/r/articles/install.html I've made out in the internet (and including twice in our own `r/configure`) make me wary of changing that one in particular.\r\n   * We also should avoid adding .pngs to the R package tarball. We're already at 4.7mb without this change (I only know that because I noticed today when doing the CRAN submission) and the CRAN limit is 5mb. I don't know what the right pkgdown way of handling these extra documents is, but we should do that. We basically are trying to populate the website and don't really care if all of these vignettes ship in the package itself.\n\n\n",
                    "created": "2022-10-26T22:20:23.657+0000",
                    "updated": "2022-10-26T22:20:23.657+0000",
                    "started": "2022-10-26T22:20:23.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820743",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1292798991\n\n   Thanks Neal! \r\n   \r\n   - Yeah I think you're right about file renaming. It's not something I'm keen on myself, but found myself being pushed in that direction because of the scale of the rewrite. In some cases the content has changed so much that I'm not sure there's any meaningful continuity to be preserved. That being said, `install.Rmd` is a really good example of one that we should leave as-is. I think `dataset.Rmd` (which hasn't changed) is another one like that\r\n   \r\n   - I wonder if we can convert the vignettes to articles (in the pkgdown sense) so they don't get bundled in the build. It probably means we have to rewrite the cross-linking markdown since `vignette(\"whatever\")` won't work anymore, but at some point I think we might have to make that change if we want to include images to help make the documentation readable to novice users?\n\n\n",
                    "created": "2022-10-27T00:13:17.063+0000",
                    "updated": "2022-10-27T00:13:17.063+0000",
                    "started": "2022-10-27T00:13:17.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820775",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "djnavarro commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1293010442\n\n   possible solution for the file renaming issue? pkgdown can generate client-side redirects like this: d022810a2b8e104ccf23b36d432bf78342d6256d. not the ideal way to do redirects, but it's an option I suppose\n\n\n",
                    "created": "2022-10-27T05:19:59.068+0000",
                    "updated": "2022-10-27T05:19:59.068+0000",
                    "started": "2022-10-27T05:19:59.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820800",
                    "issueId": "13483778"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13483778/worklog/820924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eitsupi commented on PR #14514:\nURL: https://github.com/apache/arrow/pull/14514#issuecomment-1293353764\n\n   Is it OK to use base pipes (`|>`) that only works with R4.1 or later in vignettes?\n\n\n",
                    "created": "2022-10-27T11:00:35.220+0000",
                    "updated": "2022-10-27T11:00:35.220+0000",
                    "started": "2022-10-27T11:00:35.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820924",
                    "issueId": "13483778"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 39000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@62f98467[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c68970[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fdbbadb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3a632f59[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43b91c68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c880a5a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ed76672[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6d6d9116[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66bc8a8f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a3a86d8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f2b931b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4e4f4ec9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 39000,
        "customfield_12312520": null,
        "customfield_12312521": "2022-09-29 07:26:42.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17887/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-09-29T07:26:42.000+0000",
        "updated": "2022-11-16T22:25:22.000+0000",
        "timeoriginalestimate": null,
        "description": "In its current form the pkgdown Get Started and Read Me pages are a little hard for new users to follow. I would argue that both pages are written in a way that makes sense to someone who is already familiar with core Arrow concepts, but is potentially intimidating to an R user who is curious about Arrow but has never used it. The issue is perhaps most severe on the main [README page](https://arrow.apache.org/docs/r/index.html) and the [Get Started](https://arrow.apache.org/docs/r/articles/arrow.html) page. A few examples:\r\n\r\n- The README page opens with the sentence **\"Apache Arrow is a cross-language development platform for in-memory data\".** This is a problem for multiple reasons. Firstly it's not really true anymore, because we encourage users to rely on `Dataset` for on-disk datasets. Secondly, the sentence simply *assumes* the user has a clear mental model of the difference between in-memory and on-disk data. I don't think that's true for data scientists in general. A data engineer likely has a more precise mental model here, but R users are typically focused on analytics. Unless they have extensive experience working with large data sets this isn't something we can assume. Thirdly, and maybe most importantly, it doesn't explain to the user why they should care about arrow: it doesn't say what the arrow package *does*. It's too vague.\r\n\r\n- There are (IMO) too many boldfaced sections in the README page, and it's very cluttered. It gives the page an intensity and feeling of \"denseness\" that I think we should avoid at all costs. Arrow already has a reputation for being a complicated project (because it is!) but we don't want our documentation to have that feeling. I think we ought to be aiming for something gentler and welcoming. If that means pushing more details into vignettes, that's totally okay. Readers don't need to be told all the things on the very first page: it's probably better to give a simpler description and then push the details onto additional vignettes.\r\n\r\n- The \"get started\" page has some of the same problems as the main README. The \"object hierarchy\" and \"data object\" tables only make sense once you already understand core Arrow concepts. What needs to happen in both cases is the tables need to be wrapped with some explanatory text that provide the missing context for users, and then additional details are pushed out to vignettes that explain it in more detail.\u00a0\r\n\r\n- The data types mapping section on the get started page has the same issue. A novice user doesn't necessarily even have a clear understanding of how fundamental types are represented in R, much less how they are represented in Arrow. A section that simply assumes that these types are meaningful concepts and gives a lookup table with various footnotes isn't at all helpful to that kind of user. I think it makes more sense to again split the work: on the \"get started\" page we should have something simple, and a longer discussion of these mappings should be pushed to a vignette\r\n\r\nThe concrete proposal here is to restructure the content of these two pages to be more novice-friendly: specifically, to add more \"Arrow 101\" explanatory notes to these pages, and to move more of the technical information to new vignettes (e.g., there should be a new \"data types\" vignette)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 39000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] [Doc] Improve readability of the Get Started and README pages",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z18xts:",
        "customfield_12314139": null
    }
}