{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13203203",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203",
    "key": "ARROW-3962",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=briangold",
            "name": "briangold",
            "key": "briangold",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Gold",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=c-bata",
            "name": "c-bata",
            "key": "c-bata",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=c-bata&avatarId=37448",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=c-bata&avatarId=37448",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=c-bata&avatarId=37448",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=c-bata&avatarId=37448"
            },
            "displayName": "Masashi Shibata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=c-bata",
            "name": "c-bata",
            "key": "c-bata",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=c-bata&avatarId=37448",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=c-bata&avatarId=37448",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=c-bata&avatarId=37448",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=c-bata&avatarId=37448"
            },
            "displayName": "Masashi Shibata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 37800,
            "total": 37800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 37800,
            "total": 37800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3962/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 65,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata opened a new pull request #3129: ARROW-3962(Go): Consider null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129\n \n \n   ## Summary\r\n   \r\n   Fix the bug of CSV reader doesn't consider null values.\r\n   \r\n   ## How to reproduce\r\n   \r\n   When given a following CSV file,  `(csv.Reader).Next` return `false`.\r\n   \r\n   ```\r\n   0;0;str-0\r\n   1;1;str-1\r\n   ;2;str-2\r\n   3;3;str-3\r\n   4;;str-4\r\n   5;5;str-5\r\n   6;6;\r\n   7;7;str-7\r\n   8;8;str-8\r\n   9;9;str-9\r\n   ```\r\n   \r\n   The result of [example function in csv_test.go](https://github.com/apache/arrow/blob/137a69e1fb6647dde5da9d18d9da47e7a9e694b0/go/arrow/csv/csv_test.go#L32-L90) is:\r\n   \r\n   ```\r\n   rec[0][\"i64\"]: [0]\r\n   rec[1][\"f64\"]: [0]\r\n   rec[2][\"str\"]: [\"str-0\"]\r\n   rec[0][\"i64\"]: [1]\r\n   rec[1][\"f64\"]: [0]\r\n   rec[2][\"str\"]: [\"str-1\"]\r\n   ```\r\n   \r\n   The reason why stopping is csv.Reader got error while parsing empty string as a float64 (the error message is `strconv.ParseFloat: parsing \"\": invalid syntax`).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T11:33:16.274+0000",
                    "updated": "2018-12-08T11:33:16.274+0000",
                    "started": "2018-12-08T11:33:16.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173190",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on a change in pull request #3129: ARROW-3962: [Go] Consider null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240004126\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -161,35 +157,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n \n Review comment:\n   Change table-driven-tests style for adding tests.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T12:54:50.422+0000",
                    "updated": "2018-12-08T12:54:50.422+0000",
                    "started": "2018-12-08T12:54:50.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173193",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3129: ARROW-3962: [Go] Consider null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445457240\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=h1) Report\n   > Merging [#3129](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/4d810b4a9c37e79fde6b134ac90ee0c5f7f6c9bf?src=pr&el=desc) will **decrease** coverage by `19.05%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3129/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #3129       +/-   ##\n   ===========================================\n   - Coverage   87.08%   68.02%   -19.06%     \n   ===========================================\n     Files         492       58      -434     \n     Lines       69160     3769    -65391     \n   ===========================================\n   - Hits        60229     2564    -57665     \n   + Misses       8834     1108     -7726     \n     Partials       97       97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/csv/csv.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvY3N2L2Nzdi5nbw==) | `81.77% <100%> (+0.25%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/gandiva/function\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5Lmg=) | | |\n   | [cpp/src/arrow/util/int-util-test.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2ludC11dGlsLXRlc3QuY2M=) | | |\n   | [cpp/src/arrow/python/io.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaW8uY2M=) | | |\n   | [python/pyarrow/hdfs.py](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaGRmcy5weQ==) | | |\n   | ... and [425 more](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=footer). Last update [4d810b4...fe031bb](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T12:56:14.792+0000",
                    "updated": "2018-12-08T12:56:14.792+0000",
                    "started": "2018-12-08T12:56:14.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173194",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on a change in pull request #3129: ARROW-3962: [Go] Consider null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240004334\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -161,35 +157,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\tcsv     io.Reader\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname: \"including various values which doesn't contain null values\",\n+\t\t\tcsv: bytes.NewBufferString(`## a simple set of data which contains all supported types\n \n Review comment:\n   I think this is better than using csv files in [csv/testdata](https://github.com/apache/arrow/tree/8cc92f4ab443a6bafe69dec0b0161bfcf349fb79/go/arrow/csv/testdata) directory for maintainability reasons.\r\n   \r\n   If you agree, I will remove `csv/testdata` directory and create input csv buffer at each scenarios.\r\n   If you don't agree, I'll add `csv/testdata/types_with_null.csv` and use it.\r\n   \r\n   How do you feel about this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T13:03:24.356+0000",
                    "updated": "2018-12-08T13:03:24.356+0000",
                    "started": "2018-12-08T13:03:24.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173195",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on a change in pull request #3129: ARROW-3962: [Go] Consider null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240004334\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -161,35 +157,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\tcsv     io.Reader\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname: \"including various values which doesn't contain null values\",\n+\t\t\tcsv: bytes.NewBufferString(`## a simple set of data which contains all supported types\n \n Review comment:\n   I think this is better than using csv files in [csv/testdata](https://github.com/apache/arrow/tree/8cc92f4ab443a6bafe69dec0b0161bfcf349fb79/go/arrow/csv/testdata) directory for maintainability reasons.\r\n   \r\n   If you don't agree, I'll add `csv/testdata/types_with_null.csv` and use it. How do you feel about this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T13:12:23.687+0000",
                    "updated": "2018-12-08T13:12:23.687+0000",
                    "started": "2018-12-08T13:12:23.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173196",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on a change in pull request #3129: ARROW-3962: [Go] Support null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240007737\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -161,35 +157,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\tcsv     io.Reader\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname: \"including various values which doesn't contain null values\",\n+\t\t\tcsv: bytes.NewBufferString(`## a simple set of data which contains all supported types\n \n Review comment:\n   Godoc example also uses csv files in csv/testdata directory. I refactor it at https://github.com/apache/arrow/pull/3131 .\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-08T15:22:55.532+0000",
                    "updated": "2018-12-08T15:22:55.532+0000",
                    "started": "2018-12-08T15:22:55.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173205",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3129: ARROW-3962: [Go] Support null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445457240\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=h1) Report\n   > Merging [#3129](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/612bdca20c9685911cfa5de6f87993f0544fb7aa?src=pr&el=desc) will **increase** coverage by `0.29%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3129/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3129      +/-   ##\n   ==========================================\n   + Coverage   67.73%   68.02%   +0.29%     \n   ==========================================\n     Files          58       58              \n     Lines        3766     3769       +3     \n   ==========================================\n   + Hits         2551     2564      +13     \n   + Misses       1114     1108       -6     \n   + Partials      101       97       -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/csv/csv.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvY3N2L2Nzdi5nbw==) | `81.77% <100%> (+0.25%)` | :arrow_up: |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | `36.84% <0%> (+5.26%)` | :arrow_up: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `42.85% <0%> (+14.28%)` | :arrow_up: |\n   | ... and [4 more](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=footer). Last update [612bdca...e36fbe4](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T04:04:47.528+0000",
                    "updated": "2018-12-10T04:04:47.528+0000",
                    "started": "2018-12-10T04:04:47.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173381",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on issue #3129: ARROW-3962: [Go] Support null value while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445747329\n \n \n   @sbinet Could you review this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T09:27:15.299+0000",
                    "updated": "2018-12-10T09:27:15.299+0000",
                    "started": "2018-12-10T09:27:15.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173439",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445457240\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=h1) Report\n   > Merging [#3129](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/612bdca20c9685911cfa5de6f87993f0544fb7aa?src=pr&el=desc) will **decrease** coverage by `19.38%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3129/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #3129       +/-   ##\n   ===========================================\n   - Coverage   87.16%   67.77%   -19.39%     \n   ===========================================\n     Files         494       58      -436     \n     Lines       69612     3770    -65842     \n   ===========================================\n   - Hits        60675     2555    -58120     \n   + Misses       8836     1114     -7722     \n     Partials      101      101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/csv/csv.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvY3N2L2Nzdi5nbw==) | `81.86% <100%> (+0.34%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/gandiva/function\\_registry.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2Z1bmN0aW9uX3JlZ2lzdHJ5Lmg=) | | |\n   | [cpp/src/arrow/util/int-util-test.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2ludC11dGlsLXRlc3QuY2M=) | | |\n   | [cpp/src/arrow/python/io.cc](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaW8uY2M=) | | |\n   | [python/pyarrow/hdfs.py](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaGRmcy5weQ==) | | |\n   | ... and [427 more](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=footer). Last update [612bdca...e0892fa](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T09:40:03.598+0000",
                    "updated": "2018-12-10T09:40:03.598+0000",
                    "started": "2018-12-10T09:40:03.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173456",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445903780\n \n \n   sure. I'll give it a go tomorrow (Paris time.)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T17:38:33.071+0000",
                    "updated": "2018-12-10T17:38:33.071+0000",
                    "started": "2018-12-10T17:38:33.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173703",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240520216\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -173,35 +169,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\tcsv     io.Reader\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname: \"including various values which doesn't contain null values\",\n+\t\t\tcsv: bytes.NewBufferString(`## a simple set of data which contains all supported types\n+## supported types: bool;int8;int16;int32;int64;uint8;uint16;uint32;uint64;float32;float64;string\n \n Review comment:\n   `supported types` is also mentioned on the line above.\r\n   perhaps rephrase to remove the stuttering?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T09:10:14.497+0000",
                    "updated": "2018-12-11T09:10:14.497+0000",
                    "started": "2018-12-11T09:10:14.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173957",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240519830\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -173,35 +169,25 @@ func TestCSVReader(t *testing.T) {\n \t\t},\n \t\tnil,\n \t)\n-\tr := csv.NewReader(bytes.NewReader(raw), schema,\n-\t\tcsv.WithAllocator(mem),\n-\t\tcsv.WithComment('#'), csv.WithComma(';'),\n-\t)\n-\tdefer r.Release()\n-\n-\tr.Retain()\n-\tr.Release()\n-\n-\tif got, want := r.Schema(), schema; !got.Equal(want) {\n-\t\tt.Fatalf(\"invalid schema: got=%v, want=%v\", got, want)\n-\t}\n-\n-\tout := new(bytes.Buffer)\n-\n-\tn := 0\n-\tfor r.Next() {\n-\t\trec := r.Record()\n-\t\tfor i, col := range rec.Columns() {\n-\t\t\tfmt.Fprintf(out, \"rec[%d][%q]: %v\\n\", i, rec.ColumnName(i), col)\n-\t\t}\n-\t\tn++\n-\t}\n-\n-\tif got, want := n, 2; got != want {\n-\t\tt.Fatalf(\"invalid number of rows: got=%d, want=%d\", got, want)\n-\t}\n-\n-\twant := `rec[0][\"bool\"]: [true]\n+\tfor _, tc := range []struct {\n+\t\tname    string\n+\t\tcsv     io.Reader\n+\t\topts    []csv.Option\n+\t\trecords int\n+\t\twant    string\n+\t}{\n+\t\t{\n+\t\t\tname: \"including various values which doesn't contain null values\",\n \n Review comment:\n   that's a bit of a mouthful.\r\n   also, it makes it harder to selectively select or disable a given set of sub-tests.\r\n   \r\n   could we come up with a shorter yet descriptive name?\r\n   perhaps something along the lines of `without-null-values`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T09:10:14.500+0000",
                    "updated": "2018-12-11T09:10:14.500+0000",
                    "started": "2018-12-11T09:10:14.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173958",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240520595\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -225,18 +211,87 @@ rec[8][\"u64\"]: [2]\n rec[9][\"f32\"]: [2.2]\n rec[10][\"f64\"]: [2.2]\n rec[11][\"str\"]: [\"str-2\"]\n-`\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"including null values\",\n+\t\t\tcsv: bytes.NewBufferString(`## a simple set of data which contains all supported types\n+## supported types: bool;int8;int16;int32;int64;uint8;uint16;uint32;uint64;float32;float64;string\n \n Review comment:\n   ditto.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T09:10:14.511+0000",
                    "updated": "2018-12-11T09:10:14.511+0000",
                    "started": "2018-12-11T09:10:14.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173959",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240520485\n \n \n\n ##########\n File path: go/arrow/csv/csv_test.go\n ##########\n @@ -225,18 +211,87 @@ rec[8][\"u64\"]: [2]\n rec[9][\"f32\"]: [2.2]\n rec[10][\"f64\"]: [2.2]\n rec[11][\"str\"]: [\"str-2\"]\n-`\n+`,\n+\t\t},\n+\t\t{\n+\t\t\tname: \"including null values\",\n \n Review comment:\n   `s/including null values/with-null-values/` ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T09:10:14.513+0000",
                    "updated": "2018-12-11T09:10:14.513+0000",
                    "started": "2018-12-11T09:10:14.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173960",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/173976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-445457240\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=h1) Report\n   > Merging [#3129](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/612bdca20c9685911cfa5de6f87993f0544fb7aa?src=pr&el=desc) will **decrease** coverage by `19.12%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3129/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #3129       +/-   ##\n   ===========================================\n   - Coverage   87.16%   68.03%   -19.13%     \n   ===========================================\n     Files         494       58      -436     \n     Lines       69612     3770    -65842     \n   ===========================================\n   - Hits        60675     2565    -58110     \n   + Misses       8836     1108     -7728     \n   + Partials      101       97        -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/csv/csv.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvY3N2L2Nzdi5nbw==) | `81.86% <100%> (+0.34%)` | :arrow_up: |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | ... and [440 more](https://codecov.io/gh/apache/arrow/pull/3129/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=footer). Last update [612bdca...11c7ca9](https://codecov.io/gh/apache/arrow/pull/3129?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T09:28:34.282+0000",
                    "updated": "2018-12-11T09:28:34.282+0000",
                    "started": "2018-12-11T09:28:34.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173976",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/174303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stuartcarnie commented on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-446373580\n \n \n   @sbinet are you asking about the default behavior for handling `null` in the CSV reader?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-11T21:44:16.279+0000",
                    "updated": "2018-12-11T21:44:16.279+0000",
                    "started": "2018-12-11T21:44:16.278+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "174303",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/174444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-446504579\n \n \n   yes. I think I am asking for the default behaviour of the CSV reader to be to fail early and loudly when encountering missing values.\r\n   but still have an optional config-func (say, `WithNulls()` or something) to enable adding `null` values when encountering missing values.\r\n   \r\n   I'd argue that dataset cleaning shouldn't be coupled to nor baked in the CSV reader.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-12T08:33:51.708+0000",
                    "updated": "2018-12-12T08:33:51.708+0000",
                    "started": "2018-12-12T08:33:51.707+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "174444",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/174445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240919815\n \n \n\n ##########\n File path: go/arrow/csv/csv.go\n ##########\n @@ -237,6 +238,11 @@ func (r *Reader) validate(recs []string) {\n \n func (r *Reader) read(recs []string) {\n \tfor i, str := range recs {\n+\t\tif str == \"\" {\n+\t\t\tr.bld.Field(i).AppendNull()\n \n Review comment:\n   actually, there's an issue here: how do we make the distinction b/w a `null` value for a `string` column and a valid `\"\"` value for a `string` column?\r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-12T08:34:17.215+0000",
                    "updated": "2018-12-12T08:34:17.215+0000",
                    "started": "2018-12-12T08:34:17.214+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "174445",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/174472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "c-bata commented on a change in pull request #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#discussion_r240964785\n \n \n\n ##########\n File path: go/arrow/csv/csv.go\n ##########\n @@ -237,6 +238,11 @@ func (r *Reader) validate(recs []string) {\n \n func (r *Reader) read(recs []string) {\n \tfor i, str := range recs {\n+\t\tif str == \"\" {\n+\t\t\tr.bld.Field(i).AppendNull()\n \n Review comment:\n   thanks. I fixed this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-12T10:48:09.540+0000",
                    "updated": "2018-12-12T10:48:09.540+0000",
                    "started": "2018-12-12T10:48:09.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "174472",
                    "issueId": "13203203"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/worklog/174522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3129: ARROW-3962: [Go] Accept null values while reading CSV\nURL: https://github.com/apache/arrow/pull/3129#issuecomment-446598454\n \n \n   It seems fine to not recognize null values by default, as long as you have the option to provide a global list (in case the same types of markers are used in many columns) or a per column list\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-12T14:04:22.925+0000",
                    "updated": "2018-12-12T14:04:22.925+0000",
                    "started": "2018-12-12T14:04:22.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "174522",
                    "issueId": "13203203"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 37800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f9cce91[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63c049cf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c7d1491[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d92b0e0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15a40217[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@153f25ee[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21d27244[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@9efc32e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ceedcbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@50929e98[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62e0869c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15e1cf5d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 37800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 27 08:28:58 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-27T08:28:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3962/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-12-08T11:32:26.000+0000",
        "updated": "2019-11-27T08:39:50.000+0000",
        "timeoriginalestimate": null,
        "description": "\u00a0\r\n\r\nCSV reader doesn't\u00a0support null values.\r\nh1. How to reproduce\r\n\r\nSo when given a following CSV file,\u00a0 `(csv.Reader).Next` return `false`.\u00a0\r\n{code:java}\r\n0;0;str-0\r\n1;;str-1\r\n;2;str-2\r\n3;3;str-3\r\n4;;str-4\r\n5;5;str-5\r\n6;6;\r\n7;7;str-7\r\n8;8;str-8\r\n9;9;str-9{code}\r\n\u00a0\r\n\r\nThe result of Example function in csv_test.go is:\r\n{code:java}\r\n# https://github.com/apache/arrow/blob/137a69e1fb6647dde5da9d18d9da47e7a9e694b0/go/arrow/csv/csv_test.go#L32-L90\r\nrec[0][\"i64\"]: [0]\r\nrec[1][\"f64\"]: [0]\r\nrec[2][\"str\"]: [\"str-0\"]\r\nrec[0][\"i64\"]: [1]\r\nrec[1][\"f64\"]: [0]\r\nrec[2][\"str\"]: [\"str-1\"]\r\n{code}\r\nThe reason why stopping is csv.Reader got error while parsing empty string as a float64 (the error message is `strconv.ParseFloat: parsing \"\": invalid syntax`).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 37800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Support null values while reading a CSV file.",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203203/comment/16983278",
                    "id": "16983278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
                        "name": "sbinet",
                        "key": "sbinet",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
                        },
                        "displayName": "Sebastien Binet",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 4346\n[https://github.com/apache/arrow/pull/4346]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
                        "name": "sbinet",
                        "key": "sbinet",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
                        },
                        "displayName": "Sebastien Binet",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-11-27T08:28:58.449+0000",
                    "updated": "2019-11-27T08:28:58.449+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s01b6g:",
        "customfield_12314139": null
    }
}