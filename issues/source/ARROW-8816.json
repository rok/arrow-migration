{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13305209",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305209",
    "key": "ARROW-8816",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/10008",
            "id": "10008",
            "description": "Information Provided",
            "name": "Information Provided"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12650338",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12650338",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13492529",
                    "key": "ARROW-18175",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13492529",
                    "fields": {
                        "summary": "[Python] Use saved pandas metadata to determine default timestamp_as_object in to_pandas()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rauli",
            "name": "rauli",
            "key": "rauli",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rauli Ruohonen",
            "active": true,
            "timeZone": "Europe/Helsinki"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rauli",
            "name": "rauli",
            "key": "rauli",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rauli Ruohonen",
            "active": true,
            "timeZone": "Europe/Helsinki"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8816/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@101451e6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1eb95609[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@754a959e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@21179c20[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@607b9b18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c7b042d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d3c8059[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@d7f942[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cc8111b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@587620c3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21314ddc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1e13ad51[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 27 13:23:50 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-10-27T13:26:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8816/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-05-15T13:58:59.000+0000",
        "updated": "2022-10-27T13:26:14.000+0000",
        "timeoriginalestimate": null,
        "description": "Using pyarrow 0.17.0, this\r\n\r\n\u00a0\r\n{code:java}\r\nimport datetime\r\nimport pandas as pd\r\n\r\ndef try_with_year(year):\r\n\u00a0 \u00a0 print(f'Year {year:_}:')\r\n\u00a0 \u00a0 df = pd.DataFrame({'x': [datetime.datetime(year, 1, 1)]})\r\n\u00a0 \u00a0 df.to_parquet('foo.parquet', engine='pyarrow', compression=None)\r\n\u00a0 \u00a0 try:\r\n\u00a0 \u00a0 \u00a0 \u00a0 print(pd.read_parquet('foo.parquet', engine='pyarrow'))\r\n\u00a0 \u00a0 except Exception as exc:\r\n\u00a0 \u00a0 \u00a0 \u00a0 print(repr(exc))\r\n\u00a0 \u00a0 print()\r\n\r\ntry_with_year(2_263)\r\ntry_with_year(2_262)\r\n{code}\r\n\u00a0\r\n\r\nprints\r\n\r\n\u00a0\r\n{noformat}\r\nYear 2_263:\r\nArrowInvalid('Casting from timestamp[ms] to timestamp[ns] would result in out of bounds timestamp: 9246182400000')\r\n\r\nYear 2_262:\r\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 x\r\n0 2262-01-01{noformat}\r\nand using pyarrow 0.16.0, it prints\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n{noformat}\r\nYear 2_263:\r\n                              x\r\n0 1678-06-12 00:25:26.290448384\r\n\r\nYear 2_262:\r\n           x\r\n0 2262-01-01{noformat}\r\nThe issue is that 2263-01-01 is out of bounds for a timestamp stored using epoch nanoseconds, but not out of bounds for a Python datetime.\r\n\r\nWhile pyarrow 0.17.0 refuses to read the erroneous output, it is still possible to read it using other parquet readers (e.g. pyarrow 0.16.0 or fastparquet), yielding the same result as with 0.16.0 above (i.e. only reading has changed in 0.17.0, not writing). It would be better if an error was raised when attempting to write the file instead of silently producing erroneous output.\r\n\r\nThe reason I suspect this is a pyarrow issue instead of a pandas issue is this modified example:\r\n\r\n\u00a0\r\n{code:java}\r\nimport datetime\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\ndf = pd.DataFrame({'x': [datetime.datetime(2_263, 1, 1)]})\r\ntable = pa.Table.from_pandas(df)\r\nprint(table[0])\r\ntry:\r\n\u00a0 \u00a0 print(table.to_pandas())\r\nexcept Exception as exc:\r\n\u00a0 \u00a0 print(repr(exc))\r\n{code}\r\nwhich prints\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n{noformat}\r\n[\r\n\u00a0 [\r\n\u00a0 \u00a0 2263-01-01 00:00:00.000000\r\n\u00a0 ]\r\n]\r\nArrowInvalid('Casting from timestamp[us] to timestamp[ns] would result in out of bounds timestamp: 9246182400000000'){noformat}\r\non pyarrow 0.17.0 and\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n{noformat}\r\n[\r\n\u00a0 [\r\n\u00a0 \u00a0 2263-01-01 00:00:00.000000\r\n\u00a0 ]\r\n]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 x\r\n0 1678-06-12 00:25:26.290448384{noformat}\r\non pyarrow 0.16.0. Both from_pandas() and to_pandas() are pyarrow methods, pyarrow prints the correct timestamp when asked to produce it as a string (so it was not lost inside pandas), but the\u00a0pa.Table.from_pandas(df).to_pandas() round-trip fails.\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Year 2263 or later datetimes get mangled when written using pandas",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Tested using pyarrow 0.17.0 and 0.16.0, pandas 1.0.3, python 3.7.5, mojave (macos). Also tested using pyarrow 0.16.0, pandas 1.0.3, python 3.8.2, ubuntu 20.04 (linux).",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305209/comment/17108548",
                    "id": "17108548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "> It would be better if an error was raised when attempting to write the file instead of silently producing erroneous output.\r\n\r\nThe file is correct (so we shouldn't error when writing), it is only after reading in that the conversion to pandas causes the issue given pandas' limitation on the range of timestamps.\r\n\r\nAs you can see, in pyarrow 0.17 it was at least fixed to not produces garbage dates but an error is raised instead (which I would say is better than garbage). But it is a known issue that there should be a way to still convert to pandas but with converting to datetime objects instead of to datetime64[ns] dtype. This is covered by ARROW-5359 with the idea to add a {{timestamp_as_object}} keyword.\r\n\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-15T18:48:40.876+0000",
                    "updated": "2020-05-15T18:48:40.876+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305209/comment/17108736",
                    "id": "17108736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rauli",
                        "name": "rauli",
                        "key": "rauli",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rauli Ruohonen",
                        "active": true,
                        "timeZone": "Europe/Helsinki"
                    },
                    "body": "Ah, I see. I thought that the output was wrong, because fastparquet also reads it incorrectly. But using both from pandas is not an independent test, because pandas is shared between the tests. Checking with parquet-tools, the output does look correct (9246182400000 is 2263-01-01 00:00:00, and the extra field gives \"datetime\" for pandas_type and \"object\" for numpy_type; AFAICS the reader has no basis to assume that unchecked cast to datetime64 would be safe).\r\n\r\nStill, it's something of a pitfall that you can successfully save data (using default options), and when you later try to load it using the same software (using default options), it fails. If timestamp_as_object is required to read the data, one could symmetrically also require it to write the data, and avoid surprises upon loading.\r\n\r\nOTOH raising an exception when you actually can produce correct output would also be slightly odd. One solution would be to have a timestamp_as_object='infer' option (instead of just True/False) that would be the default, so that the current writing behavior would be matched with symmetric reading behavior that would produce datetime64 when possible, and datetime when not.\r\n\r\nFrom one pragmatic perspective it'd be safer to raise an exception when trying to write these things unless explicitly requested, because there are readers that fail with them in common use (such as current pyarrow and fastparquet). Maybe the reasoning why write_table defaults to parquet version 1.0 output instead of 2.0 is similar...?\r\n\r\nIMHO the important thing is to always be able to read back in what one wrote (possibly with wider types) if the write was successful, provided that one uses the same pyarrow version and the default options for both reading and writing.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rauli",
                        "name": "rauli",
                        "key": "rauli",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Rauli Ruohonen",
                        "active": true,
                        "timeZone": "Europe/Helsinki"
                    },
                    "created": "2020-05-15T23:09:50.726+0000",
                    "updated": "2020-05-15T23:09:50.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305209/comment/17109983",
                    "id": "17109983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "{quote}the extra field gives \"datetime\" for pandas_type and \"object\" for numpy_type;\r\n{quote}\r\nAh, if there is pandas metadata present and it indicates object dtype, we could indeed use that to avoid conversion to datetime64[ns], but keep datetime objects. That sounds as it should be possible in principle.\r\n{quote}IMHO the important thing is to always be able to read back in what one wrote (possibly with wider types) if the write was successful, provided that one uses the same pyarrow version and the default options for both reading and writing.\r\n{quote}\r\nYes, but again: we need to distinguish writing parquet and pandas<\\->pyarrow conversion. Just for writing parquet from a pyarrow table, fully correct roundtrip works perfectly fine. It's only the pandas<->pyarrow conversion that gives problems. \r\n And note that in general, roundtrip is always tricky when a single pyarrow type can map to multiple pandas types (like dates that can be converted to datetime64[D] or datetime.date, or ListArray that can be converted to a column of tuples, a column of lists or a column of numpy arrays)\r\n\r\nBut I agree a roundtrip should be possible: a {{timestamp_as_object}} keyword should at least help (while still needing to specify a keyword). And with the pandas metadata we could maybe try to automatically choose the good default.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-05-18T07:45:02.541+0000",
                    "updated": "2020-05-18T07:46:40.530+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305209/comment/17625122",
                    "id": "17625122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "Closing this as it is not relevant anymore (Arrow now errors with {{{}ArrowInvalid: Casting from timestamp[us] to timestamp[ns] would result in out of bounds timestamp{}}}) when converting to pandas.\r\n\r\nI did create a new issue https://issues.apache.org/jira/browse/ARROW-18175 to track work about using the information stored in the metadata:\r\n{quote}Ah, if there is pandas metadata present and it indicates object dtype, we could indeed use that to avoid conversion to datetime64[ns], but keep datetime objects. That sounds as it should be possible in principle.\r\n{quote}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2022-10-27T13:23:50.850+0000",
                    "updated": "2022-10-27T13:23:50.850+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0es9s:",
        "customfield_12314139": null
    }
}