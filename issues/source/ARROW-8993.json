{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13308596",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596",
    "key": "ARROW-8993",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeapo",
            "name": "zeapo",
            "key": "zeapo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10432",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10432",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10432",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10432"
            },
            "displayName": "Mohamed Zenadi",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeapo",
            "name": "zeapo",
            "key": "zeapo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10432",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10432",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10432",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10432"
            },
            "displayName": "Mohamed Zenadi",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8993/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo opened a new pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309\n\n\n   A proposal of an implementation to read `json.gz` files. The idea is to along `.json` files, support gziped ones. \r\n   \r\n   The implementation of `json::ReadBuilder` heavily rely on `File`. My first approach would have been to make another version of the builder that would rely on a `BufReader<Box<dyn Read>>` and have the original one delegate to this the final build.\r\n   \r\n   I went with another approach, in this case I've added an option to specify if the file is gziped or not. In this case, the original implementation works as defined, however requires a switch of type as per https://github.com/apache/arrow/compare/master...zeapo:feature/json-gzip?expand=1#diff-3fa6fc3c0ee201f5a3a1a5d25d0062ffR966-R967 \r\n   \r\n   I've got no religion on this. Suggestions are welcome, to be honest, I would love that the `infer_json_schema` be public , which would make all of this code unnecessary as it would delegate the builder process to the users who care about these features.\r\n   \r\n   3 options :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T21:15:47.645+0000",
                    "updated": "2020-05-31T21:15:47.645+0000",
                    "started": "2020-05-31T21:15:47.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439293",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636531370\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-31T21:17:01.261+0000",
                    "updated": "2020-05-31T21:17:01.261+0000",
                    "started": "2020-05-31T21:17:01.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439294",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636706744\n\n\n   After sleeping on it, here's the 3rd option (exposing infer schema with BufReader): https://github.com/apache/arrow/compare/master...zeapo:feature/buffer-exposed\r\n   \r\n   The advantage is that it does not need the dependency on gzip and has little impact on the api. It also opens the way to have other formats support.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T08:47:04.799+0000",
                    "updated": "2020-06-01T08:47:04.799+0000",
                    "started": "2020-06-01T08:47:04.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439443",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo edited a comment on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636706744\n\n\n   After sleeping on it, here's the 3rd option (exposing infer schema with BufReader): https://github.com/apache/arrow/compare/master...zeapo:feature/buffer-exposed\r\n   \r\n   The advantage is that it does not need the dependency on gzip and has little impact on the api. It also opens the way to have other formats support.\r\n   \r\n   However, this needs for the user to do manual seek (if the BufRead is on a File) and does not rely on the Builder. Unless a new builder with buffer is added.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T08:49:20.640+0000",
                    "updated": "2020-06-01T08:49:20.640+0000",
                    "started": "2020-06-01T08:49:20.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439445",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636789883\n\n\n   > ...I would love that the `infer_json_schema` be public , which would make all of this code unnecessary as it would delegate the builder process to the users who care about these features.\r\n   \r\n   Hi @zeapo, firstly, thanks for working on this. If exposing the function as public is helpful, please go ahead.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T11:08:08.607+0000",
                    "updated": "2020-06-01T11:08:08.607+0000",
                    "started": "2020-06-01T11:08:08.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439484",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636794722\n\n\n   > It also opens the way to have other formats support\r\n   \r\n   Do you mean other compression formats?\r\n   \r\n   > However, this needs for the user to do manual seek (if the BufRead is on a File) and does not rely on the Builder. Unless a new builder with buffer is added.\r\n   \r\n   I suppose the broader question to ask would be whether we'd like to support reading (and writing) compressed data. There have also been some changes on the `arrow::csv` side, such as allowing inference of multiple files, which might also be convenient to have in `arrow::json`.\r\n   \r\n   What's your opinion on the 2 above? We need not implement them as part of this PR, but I suppose some user feedback is helpful :)\r\n   \r\n   I'm still pro returning the reader back to the start, or is there a performance impact in doing so? I wouldn't want to place the burden of seeking on the user, because I'd expect the common inference case to be getting the schema then reading the file.\r\n   \r\n   ```rust\r\n       // return the reader seek back to the start\t\r\n       reader.into_inner().seek(SeekFrom::Start(0))?;\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T11:16:51.108+0000",
                    "updated": "2020-06-01T11:16:51.108+0000",
                    "started": "2020-06-01T11:16:51.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439487",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636802967\n\n\n   https://issues.apache.org/jira/browse/ARROW-8993\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T11:32:02.519+0000",
                    "updated": "2020-06-01T11:32:02.519+0000",
                    "started": "2020-06-01T11:32:02.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439491",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636850680\n\n\n   Thanks for your feedback.\r\n   \r\n   > Do you mean other compression formats?\r\n   \r\n   Yes, but not only. This would allow also to have different filesystems (like S3) where using `File` is not possible, and would make much more sense to have `dyn Read` (in rusoto they use ByteStream that implements Read and AsyncRead)\r\n   \r\n   > There have also been some changes on the arrow::csv side, such as allowing inference of multiple files, which might also be convenient to have in arrow::json\r\n   \r\n   That would be great. This would help when there are multiple small file that are written without a fixed batch size (small & big files) and data would be scattered across multiple files. If you have a JIRA issue for this I can take a look at it :)\r\n   \r\n   > I'm still pro returning the reader back to the start, or is there a performance impact in doing so? I wouldn't want to place the burden of seeking on the user, because I'd expect the common inference case to be getting the schema then reading the file.\r\n   \r\n   I agree that placing the burden on the user is a bad idea. However, there are situations where we just can't seek back to start (s3 is one example). Maybe a specific implementation for `Seek + Read`, that would do the seek back to start, and one for `Read` only, that would not. However... this would need the use of specialization, so more nightly dependencies.\r\n   \r\n   Not really sure :/\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T13:07:45.602+0000",
                    "updated": "2020-06-01T13:07:45.602+0000",
                    "started": "2020-06-01T13:07:45.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439508",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636863181\n\n\n   I've updated the little poc: https://github.com/apache/arrow/compare/master...zeapo:feature/buffer-exposed\r\n   \r\n   The main changes are:\r\n   ```rust\r\n   pub fn infer_json_schema_from_seekable<R: Read + Seek>(\r\n      source: &mut R,\r\n      max_read_records: Option<usize>\r\n   ) -> Result<Arc<Schema>>\r\n   ```\r\n   and\r\n   ```rust\r\n   pub fn infer_json_schema_from_reader<R: Read>(\r\n      reader: &mut BufReader<R>,\r\n      max_read_records: Option<usize>\r\n   ) -> Result<Arc<Schema>>\r\n   ```\r\n   And the fact the `build` requires a `Seek` too. This makes the builder `File` agnostic, and relies only on Seek.\r\n   \r\n   Now, if the user (i.e. me? ^_^) wants to use a non-seekable, I'd use the infer on the buffer, handle the memory myself and pass the schema I inferred. \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T13:32:49.636+0000",
                    "updated": "2020-06-01T13:32:49.636+0000",
                    "started": "2020-06-01T13:32:49.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439531",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636864911\n\n\n   > I agree that placing the burden on the user is a bad idea. However, there are situations where we just can't seek back to start (s3 is one example). Maybe a specific implementation for `Seek + Read`, that would do the seek back to start, and one for `Read` only, that would not. However... this would need the use of specialization, so more nightly dependencies.\r\n   \r\n   Okay, in that case I could support not seeking back to the start of the input. One downside though is that in the case where no schema is supplied, and the readers (csv and json) infer the schema, we do need to reset the input to its starting position. I've briefly looked at the csv code, so if it's doable, we could find a solution.\r\n   \r\n   Regarding specialization, we are already dependent on it, with low likelihood of this changing soon; so I'd say it's an option.\r\n   \r\n   With regards to `dyn Read`, please have a look at the `arrow::csv::reader` code. We already support a `BufReader<R: Read>`, so I think we can implement the same without boxing the reader in the way that you've done so far. The only/primary reason why we still use `File` in `arrow::json` is that nobody's needed to use something else, or at least raised the issue.\r\n   ___\r\n   \r\n   One dramatic alternative would be to always require a schema, and leave inference to the user. We could then consume the buffer reader (`reader: mut BufReader<R>` instead of `reader: &mut BufReader<R>`), so that we don't leave the user with a file handle that's already partially/fully consumed.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T13:36:08.246+0000",
                    "updated": "2020-06-01T13:36:08.246+0000",
                    "started": "2020-06-01T13:36:08.246+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439536",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-636865514\n\n\n   > One dramatic alternative would be to always require a schema, and leave inference to the user. We could then consume the buffer reader (reader: mut BufReader<R> instead of reader: &mut BufReader<R>), so that we don't leave the user with a file handle that's already partially/fully consumed.\r\n   \r\n   I like this :+1: \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T13:37:13.684+0000",
                    "updated": "2020-06-01T13:37:13.684+0000",
                    "started": "2020-06-01T13:37:13.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439538",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-637040555\n\n\n   > One dramatic alternative would be to always require a schema, and leave inference to the user. We could then consume the buffer reader (reader: mut BufReader<R> instead of reader: &mut BufReader<R>), so that we don't leave the user with a file handle that's already partially/fully consumed.\r\n   \r\n   this is the approach csv reader took as well, so another benefit from doing this would be consistent user experience.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T18:50:31.557+0000",
                    "updated": "2020-06-01T18:50:31.557+0000",
                    "started": "2020-06-01T18:50:31.557+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439675",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-637046642\n\n\n    Would it make sense to implement for json reader the same interfaces that are on csv reader, i.e. `Read + Seek` for `infer_file_schema`, and a `json::Reader::from_buf_reader()`.\r\n   \r\n   Then in another PR add an interface on `Read` only? In both json and csv. That would mean creating a new `infer_reader_schema` that takes a `Read` (rather than `Read + Seek`).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T19:04:32.200+0000",
                    "updated": "2020-06-01T19:04:32.200+0000",
                    "started": "2020-06-01T19:04:32.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439680",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/439692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-637059093\n\n\n   Looks like we have to remove Seek constraints in order to support compressed format across the board. If this is the plan here as well, then I recommend just implement Read for json in this PR (with extra Seek helper function if you prefer). Then send a follow up PR to update csv reader.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T19:32:05.038+0000",
                    "updated": "2020-06-01T19:32:05.038+0000",
                    "started": "2020-06-01T19:32:05.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439692",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-637601236\n\n\n   As per @houqp suggestion, here are the changes:\r\n   \r\n   -  match csv's infer schema:\r\n       - CSV: https://github.com/apache/arrow/blob/master/rust/arrow/src/csv/reader.rs#L90-L95 \r\n       - JSON: https://github.com/apache/arrow/pull/7309/files#diff-3fa6fc3c0ee201f5a3a1a5d25d0062ffR174-R177\r\n       - Mismatch: notice that the json's one return an `Arc<Schema>`. I don't know if we should make the csv reader match this or the other way arround. Especially that `Reader::new` takes `Arc<Schema>`\r\n       - new function for seekable: https://github.com/apache/arrow/pull/7309/files?diff=split&w=1#diff-3fa6fc3c0ee201f5a3a1a5d25d0062ffR159-R168\r\n   - match csv's `Reader::from_buf_reader`:\r\n       - csv: https://github.com/apache/arrow/blob/master/rust/arrow/src/csv/reader.rs#L235-L242\r\n       - json: https://github.com/apache/arrow/pull/7309/files#diff-3fa6fc3c0ee201f5a3a1a5d25d0062ffR377-R382\r\n   - match csv's `Reader::new`:\r\n       - csv: https://github.com/apache/arrow/blob/master/rust/arrow/src/csv/reader.rs#L198-L214\r\n       - json: https://github.com/apache/arrow/pull/7309/files#diff-3fa6fc3c0ee201f5a3a1a5d25d0062ffR341-R347\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T15:03:18.407+0000",
                    "updated": "2020-06-02T15:03:18.407+0000",
                    "started": "2020-06-02T15:03:18.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440178",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#issuecomment-638169616\n\n\n   > As per @houqp suggestion, here are the changes:\r\n   \r\n   Thanks, I'll start reviewing them\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T12:38:04.589+0000",
                    "updated": "2020-06-03T12:38:04.589+0000",
                    "started": "2020-06-03T12:38:04.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440757",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#discussion_r434689868\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -157,9 +156,26 @@ fn generate_schema(spec: HashMap<String, HashSet<DataType>>) -> Result<Arc<Schem\n /// `max_read_records` controlling the maximum number of records to read.\n ///\n /// If `max_read_records` is not set, the whole file is read to infer its field types.\n-fn infer_json_schema(file: File, max_read_records: Option<usize>) -> Result<Arc<Schema>> {\n+pub fn infer_json_schema_from_seekable<R: Read + Seek>(\n\nReview comment:\n       May you please add a note on why a user would want/need to use this vs the non-seekable one\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -1037,62 +1065,73 @@ mod tests {\n             .unwrap();\n         let batch = reader.next().unwrap().unwrap();\n \n-        assert_eq!(4, batch.num_columns());\n-        assert_eq!(4, batch.num_rows());\n-\n-        let schema = batch.schema();\n-\n-        let a = schema.column_with_name(\"a\").unwrap();\n-        assert_eq!(&DataType::Int64, a.1.data_type());\n-        let b = schema.column_with_name(\"b\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Float64)),\n-            b.1.data_type()\n-        );\n-        let c = schema.column_with_name(\"c\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Boolean)),\n-            c.1.data_type()\n-        );\n-        let d = schema.column_with_name(\"d\").unwrap();\n-        assert_eq!(&DataType::List(Box::new(DataType::Utf8)), d.1.data_type());\n-\n-        let bb = batch\n-            .column(b.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let bb = bb.values();\n-        let bb = bb.as_any().downcast_ref::<Float64Array>().unwrap();\n-        assert_eq!(10, bb.len());\n-        assert_eq!(4.0, bb.value(9));\n-\n-        let cc = batch\n-            .column(c.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let cc = cc.values();\n-        let cc = cc.as_any().downcast_ref::<BooleanArray>().unwrap();\n-        assert_eq!(6, cc.len());\n-        assert_eq!(false, cc.value(0));\n-        assert_eq!(false, cc.value(3));\n-        assert_eq!(false, cc.is_valid(2));\n-        assert_eq!(false, cc.is_valid(4));\n-\n-        let dd = batch\n-            .column(d.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let dd = dd.values();\n-        let dd = dd.as_any().downcast_ref::<StringArray>().unwrap();\n-        assert_eq!(7, dd.len());\n-        assert_eq!(false, dd.is_valid(1));\n-        assert_eq!(\"text\", dd.value(2));\n-        assert_eq!(\"1\", dd.value(3));\n-        assert_eq!(\"false\", dd.value(4));\n-        assert_eq!(\"array\", dd.value(5));\n-        assert_eq!(\"2.4\", dd.value(6));\n+        let mut file = File::open(\"test/data/mixed_arrays.json.gz\").unwrap();\n\nReview comment:\n       Will this mean that we're then not supporting zipped files for now? I'm fine with that.\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -364,6 +370,24 @@ impl<R: Read> Reader<R> {\n         }\n     }\n \n+    /// Create a new JSON Reader from a `BufReader<R: Read>`\n+    ///\n+    /// If reading a `File`, you can customise the Reader, such as to enable schema\n\nReview comment:\n       This doesn't flow well. Perhaps:\r\n   \r\n   ```\r\n   To customi{s|z}e the schema, such as to enable schema inference, use `ReaderBuilder`\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T16:22:54.454+0000",
                    "updated": "2020-06-03T16:22:54.454+0000",
                    "started": "2020-06-03T16:22:54.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440861",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "houqp commented on a change in pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#discussion_r434772617\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -1037,62 +1065,73 @@ mod tests {\n             .unwrap();\n         let batch = reader.next().unwrap().unwrap();\n \n-        assert_eq!(4, batch.num_columns());\n-        assert_eq!(4, batch.num_rows());\n-\n-        let schema = batch.schema();\n-\n-        let a = schema.column_with_name(\"a\").unwrap();\n-        assert_eq!(&DataType::Int64, a.1.data_type());\n-        let b = schema.column_with_name(\"b\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Float64)),\n-            b.1.data_type()\n-        );\n-        let c = schema.column_with_name(\"c\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Boolean)),\n-            c.1.data_type()\n-        );\n-        let d = schema.column_with_name(\"d\").unwrap();\n-        assert_eq!(&DataType::List(Box::new(DataType::Utf8)), d.1.data_type());\n-\n-        let bb = batch\n-            .column(b.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let bb = bb.values();\n-        let bb = bb.as_any().downcast_ref::<Float64Array>().unwrap();\n-        assert_eq!(10, bb.len());\n-        assert_eq!(4.0, bb.value(9));\n-\n-        let cc = batch\n-            .column(c.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let cc = cc.values();\n-        let cc = cc.as_any().downcast_ref::<BooleanArray>().unwrap();\n-        assert_eq!(6, cc.len());\n-        assert_eq!(false, cc.value(0));\n-        assert_eq!(false, cc.value(3));\n-        assert_eq!(false, cc.is_valid(2));\n-        assert_eq!(false, cc.is_valid(4));\n-\n-        let dd = batch\n-            .column(d.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let dd = dd.values();\n-        let dd = dd.as_any().downcast_ref::<StringArray>().unwrap();\n-        assert_eq!(7, dd.len());\n-        assert_eq!(false, dd.is_valid(1));\n-        assert_eq!(\"text\", dd.value(2));\n-        assert_eq!(\"1\", dd.value(3));\n-        assert_eq!(\"false\", dd.value(4));\n-        assert_eq!(\"array\", dd.value(5));\n-        assert_eq!(\"2.4\", dd.value(6));\n+        let mut file = File::open(\"test/data/mixed_arrays.json.gz\").unwrap();\n\nReview comment:\n       yeah, i feel like compression support should be handled by higher level interface that takes filenames/paths as inputs.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T18:32:44.466+0000",
                    "updated": "2020-06-03T18:32:44.466+0000",
                    "started": "2020-06-03T18:32:44.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440916",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on a change in pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#discussion_r434797655\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -1037,62 +1065,73 @@ mod tests {\n             .unwrap();\n         let batch = reader.next().unwrap().unwrap();\n \n-        assert_eq!(4, batch.num_columns());\n-        assert_eq!(4, batch.num_rows());\n-\n-        let schema = batch.schema();\n-\n-        let a = schema.column_with_name(\"a\").unwrap();\n-        assert_eq!(&DataType::Int64, a.1.data_type());\n-        let b = schema.column_with_name(\"b\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Float64)),\n-            b.1.data_type()\n-        );\n-        let c = schema.column_with_name(\"c\").unwrap();\n-        assert_eq!(\n-            &DataType::List(Box::new(DataType::Boolean)),\n-            c.1.data_type()\n-        );\n-        let d = schema.column_with_name(\"d\").unwrap();\n-        assert_eq!(&DataType::List(Box::new(DataType::Utf8)), d.1.data_type());\n-\n-        let bb = batch\n-            .column(b.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let bb = bb.values();\n-        let bb = bb.as_any().downcast_ref::<Float64Array>().unwrap();\n-        assert_eq!(10, bb.len());\n-        assert_eq!(4.0, bb.value(9));\n-\n-        let cc = batch\n-            .column(c.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let cc = cc.values();\n-        let cc = cc.as_any().downcast_ref::<BooleanArray>().unwrap();\n-        assert_eq!(6, cc.len());\n-        assert_eq!(false, cc.value(0));\n-        assert_eq!(false, cc.value(3));\n-        assert_eq!(false, cc.is_valid(2));\n-        assert_eq!(false, cc.is_valid(4));\n-\n-        let dd = batch\n-            .column(d.0)\n-            .as_any()\n-            .downcast_ref::<ListArray>()\n-            .unwrap();\n-        let dd = dd.values();\n-        let dd = dd.as_any().downcast_ref::<StringArray>().unwrap();\n-        assert_eq!(7, dd.len());\n-        assert_eq!(false, dd.is_valid(1));\n-        assert_eq!(\"text\", dd.value(2));\n-        assert_eq!(\"1\", dd.value(3));\n-        assert_eq!(\"false\", dd.value(4));\n-        assert_eq!(\"array\", dd.value(5));\n-        assert_eq!(\"2.4\", dd.value(6));\n+        let mut file = File::open(\"test/data/mixed_arrays.json.gz\").unwrap();\n\nReview comment:\n       That would be great. I've seen that the C++ and Python libs have a filesystem interface. Maybe we could add that first, then work from there into adding mime-type and compression support?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T19:19:15.676+0000",
                    "updated": "2020-06-03T19:19:15.676+0000",
                    "started": "2020-06-03T19:19:15.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440933",
                    "issueId": "13308596"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/worklog/440954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeapo commented on a change in pull request #7309:\nURL: https://github.com/apache/arrow/pull/7309#discussion_r434820112\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -364,6 +370,24 @@ impl<R: Read> Reader<R> {\n         }\n     }\n \n+    /// Create a new JSON Reader from a `BufReader<R: Read>`\n+    ///\n+    /// If reading a `File`, you can customise the Reader, such as to enable schema\n\nReview comment:\n       changed :+1: \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-03T20:00:12.627+0000",
                    "updated": "2020-06-03T20:00:12.627+0000",
                    "started": "2020-06-03T20:00:12.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440954",
                    "issueId": "13308596"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@566863bf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@af47e18[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27b62140[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@e9b8f10[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a725c7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6ee9e7a3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7843771f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2af29408[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@521b8ca0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@73eeadbf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1076d752[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2e9a5380[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 16 07:45:03 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-16T07:45:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8993/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-31T21:07:24.000+0000",
        "updated": "2020-06-16T07:45:06.000+0000",
        "timeoriginalestimate": null,
        "description": "It would be interesting to be able to read already compressed json files. This is is regularly used, with many storing their files as json.gz (we do the same).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Support reading non-seekable sources in text readers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308596/comment/17136401",
                    "id": "17136401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 7309\n[https://github.com/apache/arrow/pull/7309]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-06-16T07:45:03.854+0000",
                    "updated": "2020-06-16T07:45:03.854+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fd48:",
        "customfield_12314139": null
    }
}