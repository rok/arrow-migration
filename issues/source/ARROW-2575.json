{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13158753",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753",
    "key": "ARROW-2575",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ukaratay",
            "name": "ukaratay",
            "key": "ukaratay",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Durmus Karatay",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ukaratay",
            "name": "ukaratay",
            "key": "ukaratay",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Durmus Karatay",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10430",
                "value": "Patch",
                "id": "10430",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2575/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/101155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ukaratay commented on issue #2027: ARROW-2575: [Python] Silently exclude hidden files\nURL: https://github.com/apache/arrow/pull/2027#issuecomment-388398802\n \n \n   @pitrou I have created a JIRA ticket for it. However, there seems be no test for ParquetDataset class in Python code. So, adding a test is gonna take some time unless I wasn't able to see them.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-11T15:31:07.403+0000",
                    "updated": "2018-05-11T15:31:07.403+0000",
                    "started": "2018-05-11T15:31:07.402+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101155",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/101546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #2027: ARROW-2575: [Python] Silently exclude hidden files\nURL: https://github.com/apache/arrow/pull/2027#issuecomment-388643767\n \n \n   @ukaratay A simple unit test for this could be:\r\n   \r\n   1. Write a Parquet file to a directory, read the directory as a Parquet dataset.\r\n   2. Add a hidden, non-Parquet file to this directory.\r\n   3. Read the directory again as a dataset. Without this PR, this should lead to an error; with the PR, it should produce the same output as 1.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-13T17:45:17.467+0000",
                    "updated": "2018-05-13T17:45:17.467+0000",
                    "started": "2018-05-13T17:45:17.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101546",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/124724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2027: ARROW-2575: [Python] Silently exclude hidden files\nURL: https://github.com/apache/arrow/pull/2027#issuecomment-406119592\n \n \n   Added this to 0.10.0 as it's a nuisance and not too difficult to test. @ukaratay can you write a test? Otherwise someone else may be able to get to it before 0.10 goes out\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T00:55:38.931+0000",
                    "updated": "2018-07-19T00:55:38.931+0000",
                    "started": "2018-07-19T00:55:38.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "124724",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kr-hansen commented on issue #2027: ARROW-2575: [Python] Exclude hidden files when reading Parquet dataset\nURL: https://github.com/apache/arrow/pull/2027#issuecomment-407135539\n \n \n   I don't have the source downloaded as I've been working from Conda, but I figured I'd do what I could to help this along.  Here's what @xhochy mentioned put into code using some of the examples in the pyarrow docs.  I tested it and it seems to work from what I tested.  If someone (perhaps @ukaratay) added this as a test function it should work.\r\n   \r\n   #Imports \r\n   import os\r\n   import pyarrow as pa\r\n   import pyarrow.parquet as pq\r\n   \r\n   #Make table\r\n   data = [pa.array([1,2,3,4,]), pa.array(['foo', 'bar', 'baz', None]), pa.array([True, None, False, True])]\r\n   batch = pa.RecordBatch.from_arrays(data, ['f0', 'f1', 'f2'])\r\n   batches = [batch]*5\r\n   table = pa.Table.from_batches(batches)\r\n   \r\n   #Write Table\r\n   pq.write_to_dataset(table, root_path='test.parquet') \r\n   \r\n   #Read Directory\r\n   read1 = pq.read_table('test.parquet')\r\n   \r\n   #Add Hidden File\r\n   open('test.parquet/.test','a').close()\r\n   \r\n   #Try Reading Again\r\n   read2 = pq.read_table('test.parquet')\r\n   \r\n   #Test \r\n   success = read1.equals(read2)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T17:22:12.891+0000",
                    "updated": "2018-07-23T17:22:12.891+0000",
                    "started": "2018-07-23T17:22:12.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126147",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2312: ARROW-2575: [Python] Exclude hidden files starting with . in ParquetManifest\nURL: https://github.com/apache/arrow/pull/2312\n \n \n   I also moved a large nested helper function to a slightly more appropriate place (we need to develop abstract interfaces for different partition schemes)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T01:51:34.121+0000",
                    "updated": "2018-07-24T01:51:34.121+0000",
                    "started": "2018-07-24T01:51:34.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126386",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2312: ARROW-2575: [Python] Exclude hidden files starting with . in ParquetManifest\nURL: https://github.com/apache/arrow/pull/2312#issuecomment-407292258\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=h1) Report\n   > Merging [#2312](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/566e398650b40292b1f6293eb80c8f09d2451f98?src=pr&el=desc) will **increase** coverage by `2.39%`.\n   > The diff coverage is `96.42%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2312/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2312      +/-   ##\n   ==========================================\n   + Coverage   84.38%   86.77%   +2.39%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       44784    42056    -2728     \n   ==========================================\n   - Hits        37789    36494    -1295     \n   + Misses       6964     5562    -1402     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `97.02% <100%> (+0.03%)` | :arrow_up: |\n   | [python/pyarrow/parquet.py](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFycXVldC5weQ==) | `91.1% <94.28%> (+0.01%)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | | |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/buffer.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2J1ZmZlci5nbw==) | | |\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | | |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/2312/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=footer). Last update [566e398...92dec69](https://codecov.io/gh/apache/arrow/pull/2312?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T06:09:23.637+0000",
                    "updated": "2018-07-24T06:09:23.637+0000",
                    "started": "2018-07-24T06:09:23.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126459",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #2312: ARROW-2575: [Python] Exclude hidden files starting with . in ParquetManifest\nURL: https://github.com/apache/arrow/pull/2312\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex 70c70b62ae..bd97678f36 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -580,6 +580,49 @@ def get_index(self, level, name, key):\n \n         return self.levels[level].get_index(key)\n \n+    def filter_accepts_partition(self, part_key, filter, level):\n+        p_column, p_value_index = part_key\n+        f_column, op, f_value = filter\n+        if p_column != f_column:\n+            return True\n+\n+        f_type = type(f_value)\n+\n+        if isinstance(f_value, set):\n+            if not f_value:\n+                raise ValueError(\"Cannot use empty set as filter value\")\n+            if op not in {'in', 'not in'}:\n+                raise ValueError(\"Op '%s' not supported with set value\",\n+                                 op)\n+            if len(set([type(item) for item in f_value])) != 1:\n+                raise ValueError(\"All elements of set '%s' must be of\"\n+                                 \" same type\", f_value)\n+            f_type = type(next(iter(f_value)))\n+\n+        p_value = f_type((self.levels[level]\n+                          .dictionary[p_value_index]\n+                          .as_py()))\n+\n+        if op == \"=\" or op == \"==\":\n+            return p_value == f_value\n+        elif op == \"!=\":\n+            return p_value != f_value\n+        elif op == '<':\n+            return p_value < f_value\n+        elif op == '>':\n+            return p_value > f_value\n+        elif op == '<=':\n+            return p_value <= f_value\n+        elif op == '>=':\n+            return p_value >= f_value\n+        elif op == 'in':\n+            return p_value in f_value\n+        elif op == 'not in':\n+            return p_value not in f_value\n+        else:\n+            raise ValueError(\"'%s' is not a valid operator in predicates.\",\n+                             filter[1])\n+\n \n def is_path(x):\n     return (isinstance(x, six.string_types)\n@@ -642,7 +685,8 @@ def _visit_level(self, level, base_path, part_keys):\n             self._push_pieces(filtered_files, part_keys)\n \n     def _should_silently_exclude(self, file_name):\n-        return (file_name.endswith('.crc') or\n+        return (file_name.endswith('.crc') or  # Checksums\n+                file_name.startswith('.') or  # Hidden files\n                 file_name in EXCLUDED_PARQUET_PATHS)\n \n     def _visit_directories(self, level, directories, part_keys):\n@@ -865,53 +909,10 @@ def open_file(path, meta=None):\n         return open_file\n \n     def _filter(self, filters):\n-        def filter_accepts_partition(part_key, filter, level):\n-\n-            p_column, p_value_index = part_key\n-            f_column, op, f_value = filter\n-            if p_column != f_column:\n-                return True\n-\n-            f_type = type(f_value)\n-\n-            if isinstance(f_value, set):\n-                if not f_value:\n-                    raise ValueError(\"Cannot use empty set as filter value\")\n-                if op not in {'in', 'not in'}:\n-                    raise ValueError(\"Op '%s' not supported with set value\",\n-                                     op)\n-                if len(set([type(item) for item in f_value])) != 1:\n-                    raise ValueError(\"All elements of set '%s' must be of\"\n-                                     \" same type\", f_value)\n-                f_type = type(next(iter(f_value)))\n-\n-            p_value = f_type((self.partitions\n-                                  .levels[level]\n-                                  .dictionary[p_value_index]\n-                                  .as_py()))\n-\n-            if op == \"=\" or op == \"==\":\n-                return p_value == f_value\n-            elif op == \"!=\":\n-                return p_value != f_value\n-            elif op == '<':\n-                return p_value < f_value\n-            elif op == '>':\n-                return p_value > f_value\n-            elif op == '<=':\n-                return p_value <= f_value\n-            elif op == '>=':\n-                return p_value >= f_value\n-            elif op == 'in':\n-                return p_value in f_value\n-            elif op == 'not in':\n-                return p_value not in f_value\n-            else:\n-                raise ValueError(\"'%s' is not a valid operator in predicates.\",\n-                                 filter[1])\n+        accepts_filter = self.partitions.filter_accepts_partition\n \n         def one_filter_accepts(piece, filter):\n-            return all(filter_accepts_partition(part_key, filter, level)\n+            return all(accepts_filter(part_key, filter, level)\n                        for level, part_key in enumerate(piece.partition_keys))\n \n         def all_filters_accept(piece):\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex 21610d9957..0e5104592c 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -1643,24 +1643,27 @@ def test_dataset_read_pandas_common_metadata(tmpdir, preserve_index):\n     tm.assert_frame_equal(result, expected)\n \n \n+def _make_example_multifile_dataset(base_path, nfiles=10, file_nrows=5):\n+    test_data = []\n+    paths = []\n+    for i in range(nfiles):\n+        df = _test_dataframe(file_nrows, seed=i)\n+        path = pjoin(base_path, '{0}.parquet'.format(i))\n+\n+        test_data.append(_write_table(df, path))\n+        paths.append(path)\n+    return paths\n+\n+\n @parquet\n def test_ignore_private_directories(tmpdir):\n     import pyarrow.parquet as pq\n \n-    nfiles = 10\n-    size = 5\n-\n     dirpath = tmpdir.join(guid()).strpath\n     os.mkdir(dirpath)\n \n-    test_data = []\n-    paths = []\n-    for i in range(nfiles):\n-        df = _test_dataframe(size, seed=i)\n-        path = pjoin(dirpath, '{0}.parquet'.format(i))\n-\n-        test_data.append(_write_table(df, path))\n-        paths.append(path)\n+    paths = _make_example_multifile_dataset(dirpath, nfiles=10,\n+                                            file_nrows=5)\n \n     # private directory\n     os.mkdir(pjoin(dirpath, '_impala_staging'))\n@@ -1669,6 +1672,26 @@ def test_ignore_private_directories(tmpdir):\n     assert set(paths) == set(x.path for x in dataset.pieces)\n \n \n+@parquet\n+def test_ignore_hidden_files(tmpdir):\n+    import pyarrow.parquet as pq\n+\n+    dirpath = tmpdir.join(guid()).strpath\n+    os.mkdir(dirpath)\n+\n+    paths = _make_example_multifile_dataset(dirpath, nfiles=10,\n+                                            file_nrows=5)\n+\n+    with open(pjoin(dirpath, '.DS_Store'), 'wb') as f:\n+        f.write(b'gibberish')\n+\n+    with open(pjoin(dirpath, '.private'), 'wb') as f:\n+        f.write(b'gibberish')\n+\n+    dataset = pq.ParquetDataset(dirpath)\n+    assert set(paths) == set(x.path for x in dataset.pieces)\n+\n+\n @parquet\n def test_multiindex_duplicate_values(tmpdir):\n     num_rows = 3\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T08:34:35.125+0000",
                    "updated": "2018-07-24T08:34:35.125+0000",
                    "started": "2018-07-24T08:34:35.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126506",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2027: ARROW-2575: [Python] Exclude hidden files when reading Parquet dataset\nURL: https://github.com/apache/arrow/pull/2027#issuecomment-407353664\n \n \n   Superseded by PR #2312.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T10:07:35.884+0000",
                    "updated": "2018-07-24T10:07:35.884+0000",
                    "started": "2018-07-24T10:07:35.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126546",
                    "issueId": "13158753"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/worklog/126547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #2027: ARROW-2575: [Python] Exclude hidden files when reading Parquet dataset\nURL: https://github.com/apache/arrow/pull/2027\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex 18f329ea4b..cb14aaacfc 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -642,7 +642,8 @@ def _visit_level(self, level, base_path, part_keys):\n \n     def _should_silently_exclude(self, file_name):\n         return (file_name.endswith('.crc') or\n-                file_name in EXCLUDED_PARQUET_PATHS)\n+                file_name in EXCLUDED_PARQUET_PATHS or\n+                file_name.startswith('.'))\n \n     def _visit_directories(self, level, directories, part_keys):\n         for path in directories:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-24T10:07:36.236+0000",
                    "updated": "2018-07-24T10:07:36.236+0000",
                    "started": "2018-07-24T10:07:36.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126547",
                    "issueId": "13158753"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@597e8a06[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ee20ae5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21d13043[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1f5aa3be[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f26cc04[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3646bd08[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ebdd0ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5430c791[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d6f77ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4e423da7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e8a844c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6cd4d043[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 24 08:34:33 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-24T08:34:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2575/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-05-11T15:23:18.000+0000",
        "updated": "2018-07-24T10:07:36.000+0000",
        "timeoriginalestimate": null,
        "description": "On Unix systems hidden files are listed because os.walk does not care about hidden files. This especially creates a problem in macOS where .DS_Store files are created automatically.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Exclude hidden files when reading Parquet dataset",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Unix-like systems",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158753/comment/16553962",
                    "id": "16553962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 2312\n[https://github.com/apache/arrow/pull/2312]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-07-24T08:34:33.239+0000",
                    "updated": "2018-07-24T08:34:33.239+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3tm6n:",
        "customfield_12314139": null
    }
}