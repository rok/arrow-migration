{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13402562",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562",
    "key": "ARROW-14061",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14061/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 44,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/653794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade opened a new pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206\n\n\n   Continuing with the idea of exposing the Compute APIs within the Go implementation via CGO, in order to ensure safer memory handling there should be an allocator implementation which uses CGO in order to allocate memory via the C++ memory pool along with utilities for tracking memory leaks.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T20:15:45.373+0000",
                    "updated": "2021-09-21T20:15:45.373+0000",
                    "started": "2021-09-21T20:15:45.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653794",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/653795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-924350368\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T20:16:09.034+0000",
                    "updated": "2021-09-21T20:16:09.034+0000",
                    "started": "2021-09-21T20:16:09.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653795",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/656194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-929306287\n\n\n   CC @emkornfield \r\n   \r\n   We really need to get someone else who can review Go stuff so I don't keep overwhelming you with so many PRs haha.\r\n   \r\n   Also, @pitrou may want to look at this or know who else I can tag given the connection with the C++ memory pool stuff here.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T14:52:10.909+0000",
                    "updated": "2021-09-28T14:52:10.909+0000",
                    "started": "2021-09-28T14:52:10.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656194",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/656598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-929306287\n\n\n   CC @emkornfield \r\n   \r\n   We really need to get someone else who can review Go stuff so I don't keep overwhelming you with so many PRs haha.\r\n   \r\n   Also, @pitrou may want to look at this or know who else I can tag given the connection with the C++ memory pool stuff here.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T20:03:10.074+0000",
                    "updated": "2021-09-28T20:03:10.074+0000",
                    "started": "2021-09-28T20:03:10.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656598",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-929945396\n\n\n   This PR isn't based on git master, is it?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T08:14:37.692+0000",
                    "updated": "2021-09-29T08:14:37.692+0000",
                    "started": "2021-09-29T08:14:37.692+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657051",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718264548\n\n\n\n##########\nFile path: ci/docker/debian-10-go-cgo.dockerfile\n##########\n@@ -0,0 +1,34 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       Why do we need this in addition to the existing `debian-10-go-cgo-python` dockerfile?\n\n##########\nFile path: go/arrow/memory/cgo_allocator.go\n##########\n@@ -0,0 +1,108 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build cgo\n+// +build ccalloc\n+\n+package memory\n+\n+import (\n+\t\"runtime\"\n+\n+\tcga \"github.com/apache/arrow/go/arrow/memory/internal/cgoalloc\"\n+)\n+\n+// CgoArrowAllocator is an allocator which exposes the C++ memory pool class\n+// from the Arrow C++ Library as an allocator for memory buffers to use in Go.\n+// The build tag 'ccalloc' must be used in order to include it as it requires\n+// linking against the arrow library.\n+//\n+// The primary reason to use this would be as an allocator when dealing with\n+// exporting data across the cdata interface in order to ensure that the memory\n+// is allocated safely on the C side so it can be held on the CGO side beyond\n+// the context of a single function call. If the memory in use isn't allocated\n+// on the C side, then it is not safe for any pointers to data to be held outside\n+// of Go beyond the context of a single Cgo function call as it will be invisible\n+// to the Go garbage collector and could potentially get moved without being updated.\n\nReview comment:\n       I don't understand this comment. In #11220 your `releaseData` function seems to take care of this correctly (by defining a global container of exported arrays).\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.cc\n##########\n@@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// +build ccalloc\n+\n+#include \"allocator.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"helpers.h\"\n+\n+struct mem_holder {\n+    std::unique_ptr<arrow::MemoryPool> pool;\n+    arrow::MemoryPool* current_pool;\n\nReview comment:\n       Why isn't this a `unique_ptr` as well?\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/helpers.h\n##########\n@@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// helper functions to be included by C++ code for interacting with Cgo\n+\n+// create_ref will construct a shared_ptr on the heap and return a pointer\n+// to it. the returned uintptr_t can then be used with retrieve_instance\n+// to get back the shared_ptr and object it refers to. This ensures that\n+// the object outlives the exported function so that Go can use it.\n+template <typename T>\n+uintptr_t create_ref(std::shared_ptr<T> t) {\n+    std::shared_ptr<T>* retained_ptr = new std::shared_ptr<T>(t);\n+    return reinterpret_cast<uintptr_t>(retained_ptr);\n+}\n+\n+// specialization for shared_ptrs to const objects\n\nReview comment:\n       I'm curious: `create_ref<const T>` doesn't work by itself?\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.go\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build ccalloc\n+\n+package cgoalloc\n+\n+// #cgo !windows pkg-config: arrow\n+// #cgo CXXFLAGS: -std=c++14\n+// #cgo windows LDFLAGS:  -larrow\n+// #include \"allocator.h\"\n+import \"C\"\n+import (\n+\t\"reflect\"\n+\t\"unsafe\"\n+)\n+\n+// CGOMemPool is an alias to the typedef'd uintptr from the allocator.h file\n+type CGOMemPool = C.ArrowMemoryPool\n+\n+// CgoPoolAlloc allocates a block of memory of length 'size' using the memory\n+// pool that is passed in.\n+func CgoPoolAlloc(pool CGOMemPool, size int) []byte {\n+\tvar out *C.uint8_t\n+\tC.arrow_pool_allocate(pool, C.int64_t(size), (**C.uint8_t)(unsafe.Pointer(&out)))\n+\n+\tvar ret []byte\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&ret))\n+\ts.Data = uintptr(unsafe.Pointer(out))\n+\ts.Len = size\n+\ts.Cap = size\n+\n+\treturn ret\n+}\n+\n+// CgoPoolRealloc calls 'reallocate' on the block of memory passed in which must\n+// be a slice that was returned by CgoPoolAlloc or CgoPoolRealloc.\n+func CgoPoolRealloc(pool CGOMemPool, size int, b []byte) []byte {\n+\toldSize := C.int64_t(len(b))\n+\tdata := (*C.uint8_t)(unsafe.Pointer(&b[0]))\n+\tC.arrow_pool_reallocate(pool, oldSize, C.int64_t(size), &data)\n+\n+\tvar ret []byte\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&ret))\n+\ts.Data = uintptr(unsafe.Pointer(data))\n+\ts.Len = size\n+\ts.Cap = size\n+\n+\treturn ret\n+}\n+\n+// CgoPoolFree uses the indicated memory pool to free a block of memory. The\n+// slice passed in *must* be a slice which was returned by CgoPoolAlloc or\n+// CgoPoolRealloc.\n+func CgoPoolFree(pool CGOMemPool, b []byte) {\n+\tif len(b) == 0 {\n\nReview comment:\n       I don't see a corresponding condition in `CgoPoolAlloc` and `CgoPoolRealloc`, won't this leak 0-byte allocated areas?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T08:31:49.893+0000",
                    "updated": "2021-09-29T08:31:49.893+0000",
                    "started": "2021-09-29T08:31:49.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657053",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-929959026\n\n\n   @kou Do you want to take a look at the MinGW CI additions?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T08:32:05.026+0000",
                    "updated": "2021-09-29T08:32:05.026+0000",
                    "started": "2021-09-29T08:32:05.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657054",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718505637\n\n\n\n##########\nFile path: ci/docker/debian-10-go-cgo.dockerfile\n##########\n@@ -0,0 +1,34 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       The `debian-10-go-cgo-python` dockerfile installs pyarrow and the underlying go does not rely on linking against the libarrow.so objects.\r\n   \r\n   This dockerfile installs libarrow directly via apt so that pkg-config can find libarrow.so since the allocator piece directly needs to link against libarrow.so to run which is explicitly different than the case for the `cgo-python` one which in which Go has no dependency on libarrow since it only needs the header files and .c/.cc files which are in the Go repo itself.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T13:20:51.929+0000",
                    "updated": "2021-09-29T13:20:51.929+0000",
                    "started": "2021-09-29T13:20:51.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657217",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718527172\n\n\n\n##########\nFile path: go/arrow/memory/cgo_allocator.go\n##########\n@@ -0,0 +1,108 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build cgo\n+// +build ccalloc\n+\n+package memory\n+\n+import (\n+\t\"runtime\"\n+\n+\tcga \"github.com/apache/arrow/go/arrow/memory/internal/cgoalloc\"\n+)\n+\n+// CgoArrowAllocator is an allocator which exposes the C++ memory pool class\n+// from the Arrow C++ Library as an allocator for memory buffers to use in Go.\n+// The build tag 'ccalloc' must be used in order to include it as it requires\n+// linking against the arrow library.\n+//\n+// The primary reason to use this would be as an allocator when dealing with\n+// exporting data across the cdata interface in order to ensure that the memory\n+// is allocated safely on the C side so it can be held on the CGO side beyond\n+// the context of a single function call. If the memory in use isn't allocated\n+// on the C side, then it is not safe for any pointers to data to be held outside\n+// of Go beyond the context of a single Cgo function call as it will be invisible\n+// to the Go garbage collector and could potentially get moved without being updated.\n\nReview comment:\n       When making a CGO call, during the execution of it the Go garbage collector will pin memory being used so that any pointers to go memory will remain valid during the length of that cgo call. But the documentation is very clear that it is *not* safe to let C/C++ maintain pointers to Go memory beyond the context of that single call because after the cgo call returns, the Go garbage collector is free to move memory around as necessary. Normally the garbage collector can update any references in Go when it does this so that everything continues to work just fine, but it cannot update any pointers in C/C++ when it does this. \r\n   \r\n   So the global container of exported arrays used by `releaseData` serves two purposes:\r\n   \r\n   1. Ensuring that during the context of a single CGO call that there is a maintained reference to the Go objects so that it keeps the garbage collector from cleaning it up\r\n   2. Allowing C/C++ to call `releaseData` to free the memory if we're handing it off, or allowing the ability to hand off memory to let C/C++ own it and control when it is released. this is only safe if the underlying buffers were allocated by C and not Go allocated memory.\r\n   \r\n   For more information about this specifically in terms of passing pointers around: https://pkg.go.dev/cmd/cgo#hdr-Passing_pointers is the documentation on CGO that i'm referencing.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T13:42:45.051+0000",
                    "updated": "2021-09-29T13:42:45.051+0000",
                    "started": "2021-09-29T13:42:45.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657235",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718528374\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/helpers.h\n##########\n@@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <cstdint>\n+#include <memory>\n+\n+// helper functions to be included by C++ code for interacting with Cgo\n+\n+// create_ref will construct a shared_ptr on the heap and return a pointer\n+// to it. the returned uintptr_t can then be used with retrieve_instance\n+// to get back the shared_ptr and object it refers to. This ensures that\n+// the object outlives the exported function so that Go can use it.\n+template <typename T>\n+uintptr_t create_ref(std::shared_ptr<T> t) {\n+    std::shared_ptr<T>* retained_ptr = new std::shared_ptr<T>(t);\n+    return reinterpret_cast<uintptr_t>(retained_ptr);\n+}\n+\n+// specialization for shared_ptrs to const objects\n\nReview comment:\n       So i was running into an issue with something i was trying before but i don't remember if i had tried that correctly. I don't think the const specialization here is needed for *this* change so i can remove it for now and then when i get to that point that i needed it i'll double check doing `create_ref<const T>`  and if that works, then i won't need to add this :smile:\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T13:43:55.576+0000",
                    "updated": "2021-09-29T13:43:55.576+0000",
                    "started": "2021-09-29T13:43:55.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657238",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718531178\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.cc\n##########\n@@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// +build ccalloc\n+\n+#include \"allocator.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"helpers.h\"\n+\n+struct mem_holder {\n+    std::unique_ptr<arrow::MemoryPool> pool;\n+    arrow::MemoryPool* current_pool;\n\nReview comment:\n       `arrow::default_memory_pool` returns a raw pointer, so if this is holding a reference to the *default* memory pool, `current_pool` can be set to the pointer without worry of deleting it. The `unique_ptr` is there for the case where we're not using the `default_memory_pool`, allowing the logic to not have to explicitly check which is in use when using the allocate/reallocate functions since the raw pointer should always be valid regardless of if it's using the default memory pool or not.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T13:46:42.454+0000",
                    "updated": "2021-09-29T13:46:42.454+0000",
                    "started": "2021-09-29T13:46:42.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657242",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#issuecomment-930193853\n\n\n   @pitrou this is based on master though it wasn't up to date until just now when i re-fetched and merged upstream \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T13:48:41.741+0000",
                    "updated": "2021-09-29T13:48:41.741+0000",
                    "started": "2021-09-29T13:48:41.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657243",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718596375\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.cc\n##########\n@@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// +build ccalloc\n+\n+#include \"allocator.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"helpers.h\"\n+\n+struct mem_holder {\n+    std::unique_ptr<arrow::MemoryPool> pool;\n+    arrow::MemoryPool* current_pool;\n\nReview comment:\n       I've added a comment explaining this, and also functions for referencing the default memory pool (which was in my original version of this but didn't make it into this cleaned up branch for whatever reason)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T14:46:56.506+0000",
                    "updated": "2021-09-29T14:46:56.506+0000",
                    "started": "2021-09-29T14:46:56.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657289",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718597485\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.go\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build ccalloc\n+\n+package cgoalloc\n+\n+// #cgo !windows pkg-config: arrow\n+// #cgo CXXFLAGS: -std=c++14\n+// #cgo windows LDFLAGS:  -larrow\n+// #include \"allocator.h\"\n+import \"C\"\n+import (\n+\t\"reflect\"\n+\t\"unsafe\"\n+)\n+\n+// CGOMemPool is an alias to the typedef'd uintptr from the allocator.h file\n+type CGOMemPool = C.ArrowMemoryPool\n+\n+// CgoPoolAlloc allocates a block of memory of length 'size' using the memory\n+// pool that is passed in.\n+func CgoPoolAlloc(pool CGOMemPool, size int) []byte {\n+\tvar out *C.uint8_t\n+\tC.arrow_pool_allocate(pool, C.int64_t(size), (**C.uint8_t)(unsafe.Pointer(&out)))\n+\n+\tvar ret []byte\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&ret))\n+\ts.Data = uintptr(unsafe.Pointer(out))\n+\ts.Len = size\n+\ts.Cap = size\n+\n+\treturn ret\n+}\n+\n+// CgoPoolRealloc calls 'reallocate' on the block of memory passed in which must\n+// be a slice that was returned by CgoPoolAlloc or CgoPoolRealloc.\n+func CgoPoolRealloc(pool CGOMemPool, size int, b []byte) []byte {\n+\toldSize := C.int64_t(len(b))\n+\tdata := (*C.uint8_t)(unsafe.Pointer(&b[0]))\n+\tC.arrow_pool_reallocate(pool, oldSize, C.int64_t(size), &data)\n+\n+\tvar ret []byte\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&ret))\n+\ts.Data = uintptr(unsafe.Pointer(data))\n+\ts.Len = size\n+\ts.Cap = size\n+\n+\treturn ret\n+}\n+\n+// CgoPoolFree uses the indicated memory pool to free a block of memory. The\n+// slice passed in *must* be a slice which was returned by CgoPoolAlloc or\n+// CgoPoolRealloc.\n+func CgoPoolFree(pool CGOMemPool, b []byte) {\n+\tif len(b) == 0 {\n\nReview comment:\n       fair point, i assumed that calling allocate with a 0 byte size wouldn't actually allocate anything and thus there would be nothing to leak. i've added a corresponding check to alloc and realloc to address this\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T14:47:54.043+0000",
                    "updated": "2021-09-29T14:47:54.043+0000",
                    "started": "2021-09-29T14:47:54.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657291",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718691230\n\n\n\n##########\nFile path: go/arrow/memory/cgo_allocator.go\n##########\n@@ -0,0 +1,108 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build cgo\n+// +build ccalloc\n+\n+package memory\n+\n+import (\n+\t\"runtime\"\n+\n+\tcga \"github.com/apache/arrow/go/arrow/memory/internal/cgoalloc\"\n+)\n+\n+// CgoArrowAllocator is an allocator which exposes the C++ memory pool class\n+// from the Arrow C++ Library as an allocator for memory buffers to use in Go.\n+// The build tag 'ccalloc' must be used in order to include it as it requires\n+// linking against the arrow library.\n+//\n+// The primary reason to use this would be as an allocator when dealing with\n+// exporting data across the cdata interface in order to ensure that the memory\n+// is allocated safely on the C side so it can be held on the CGO side beyond\n+// the context of a single function call. If the memory in use isn't allocated\n+// on the C side, then it is not safe for any pointers to data to be held outside\n+// of Go beyond the context of a single Cgo function call as it will be invisible\n+// to the Go garbage collector and could potentially get moved without being updated.\n\nReview comment:\n       Ok, so what it seems to mean is that Go should always use its own allocator when allocating array data, rather than the Go GC. Would there be a problem in doing that?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T16:28:23.216+0000",
                    "updated": "2021-09-29T16:28:23.216+0000",
                    "started": "2021-09-29T16:28:23.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657377",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718692276\n\n\n\n##########\nFile path: ci/docker/debian-10-go-cgo.dockerfile\n##########\n@@ -0,0 +1,34 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       Ok, but the comment is misleading then (\"so we can use pyarrow\").\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T16:29:33.319+0000",
                    "updated": "2021-09-29T16:29:33.319+0000",
                    "started": "2021-09-29T16:29:33.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657380",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718693189\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.cc\n##########\n@@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// +build ccalloc\n+\n+#include \"allocator.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"helpers.h\"\n+\n+struct mem_holder {\n+    std::unique_ptr<arrow::MemoryPool> pool;\n+    arrow::MemoryPool* current_pool;\n\nReview comment:\n       But you're not using `default_memory_pool`, you're using `MemoryPool::CreateDefault`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T16:30:44.299+0000",
                    "updated": "2021-09-29T16:30:44.299+0000",
                    "started": "2021-09-29T16:30:44.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657382",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718718767\n\n\n\n##########\nFile path: go/arrow/memory/cgo_allocator.go\n##########\n@@ -0,0 +1,108 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build cgo\n+// +build ccalloc\n+\n+package memory\n+\n+import (\n+\t\"runtime\"\n+\n+\tcga \"github.com/apache/arrow/go/arrow/memory/internal/cgoalloc\"\n+)\n+\n+// CgoArrowAllocator is an allocator which exposes the C++ memory pool class\n+// from the Arrow C++ Library as an allocator for memory buffers to use in Go.\n+// The build tag 'ccalloc' must be used in order to include it as it requires\n+// linking against the arrow library.\n+//\n+// The primary reason to use this would be as an allocator when dealing with\n+// exporting data across the cdata interface in order to ensure that the memory\n+// is allocated safely on the C side so it can be held on the CGO side beyond\n+// the context of a single function call. If the memory in use isn't allocated\n+// on the C side, then it is not safe for any pointers to data to be held outside\n+// of Go beyond the context of a single Cgo function call as it will be invisible\n+// to the Go garbage collector and could potentially get moved without being updated.\n\nReview comment:\n       So that's also a possibility, rather than using the memorypool exposed by the arrow lib we could instead create our own allocator (or utilize a different one) that allocates memory using C always rather than the DefaultGoAllocator using Go-allocated memory. But that then changes some semantics in terms of memory usage and potential performance characteristics because CGO calls have a higher overhead. \r\n   \r\n   If you aren't making calls to C or passing data around then using the Go allocator is perfectly fine and performant (though if you're doing *a lot* of allocations, there are a few libraries which have shown significant benefits to using things like jemalloc and manually managing the memory via C calls but this has to be done carefully to avoid paying large overheads in CGO calls and avoid introducing extra dependencies that may not be needed). \r\n   \r\n   I can definitely see a future enhancement to make the default allocator do this, but I didn't want to change the default allocation behavior yet.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T17:03:18.428+0000",
                    "updated": "2021-09-29T17:03:18.428+0000",
                    "started": "2021-09-29T17:03:18.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657411",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718719335\n\n\n\n##########\nFile path: go/arrow/memory/cgo_allocator.go\n##########\n@@ -0,0 +1,108 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// +build cgo\n+// +build ccalloc\n+\n+package memory\n+\n+import (\n+\t\"runtime\"\n+\n+\tcga \"github.com/apache/arrow/go/arrow/memory/internal/cgoalloc\"\n+)\n+\n+// CgoArrowAllocator is an allocator which exposes the C++ memory pool class\n+// from the Arrow C++ Library as an allocator for memory buffers to use in Go.\n+// The build tag 'ccalloc' must be used in order to include it as it requires\n+// linking against the arrow library.\n+//\n+// The primary reason to use this would be as an allocator when dealing with\n+// exporting data across the cdata interface in order to ensure that the memory\n+// is allocated safely on the C side so it can be held on the CGO side beyond\n+// the context of a single function call. If the memory in use isn't allocated\n+// on the C side, then it is not safe for any pointers to data to be held outside\n+// of Go beyond the context of a single Cgo function call as it will be invisible\n+// to the Go garbage collector and could potentially get moved without being updated.\n\nReview comment:\n       i don't want the vanilla `go get github.com/apache/arrow/go/arrow` library to require having the C++ libarrow available to link against\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T17:04:03.719+0000",
                    "updated": "2021-09-29T17:04:03.719+0000",
                    "started": "2021-09-29T17:04:03.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657413",
                    "issueId": "13402562"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/worklog/657414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11206:\nURL: https://github.com/apache/arrow/pull/11206#discussion_r718719827\n\n\n\n##########\nFile path: go/arrow/memory/internal/cgoalloc/allocator.cc\n##########\n@@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// +build ccalloc\n+\n+#include \"allocator.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"helpers.h\"\n+\n+struct mem_holder {\n+    std::unique_ptr<arrow::MemoryPool> pool;\n+    arrow::MemoryPool* current_pool;\n\nReview comment:\n       I actually added a function which exposes the `default_memory_pool` and adds it as an optional pull in the package because it seemed like that made sense to do.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-29T17:04:49.956+0000",
                    "updated": "2021-09-29T17:04:49.956+0000",
                    "started": "2021-09-29T17:04:49.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "657414",
                    "issueId": "13402562"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@27ccc1d4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d631a4d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@683b333e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d5fed06[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2eb22af1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@43ca4f7e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@725936fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@30acc26a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ff6832c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ed69c13[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@250397d5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@73eabe8d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 30 16:51:41 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-30T16:51:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14061/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-21T19:30:14.000+0000",
        "updated": "2021-09-30T16:51:41.000+0000",
        "timeoriginalestimate": null,
        "description": "Continuing with the idea of exposing the Compute APIs within the Go implementation via CGO, in order to ensure safer memory handling there should be an allocator implementation which uses CGO in order to allocate memory via the C++ memory pool along with utilities for tracking memory leaks.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Add Cgo Arrow Memory Pool Allocator",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402562/comment/17422911",
                    "id": "17422911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11206\n[https://github.com/apache/arrow/pull/11206]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-30T16:51:41.943+0000",
                    "updated": "2021-09-30T16:51:41.943+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v5sw:",
        "customfield_12314139": null
    }
}