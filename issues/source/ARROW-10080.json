{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13329177",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177",
    "key": "ARROW-10080",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12605739",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12605739",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13325823",
                    "key": "ARROW-9903",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325823",
                    "fields": {
                        "summary": "[R] open_dataset freezes opening feather files on Windows",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=svraka",
            "name": "svraka",
            "key": "svraka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=svraka&avatarId=44226",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=svraka&avatarId=44226",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=svraka&avatarId=44226",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=svraka&avatarId=44226"
            },
            "displayName": "Andr\u00e1s Svraka",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=svraka",
            "name": "svraka",
            "key": "svraka",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=svraka&avatarId=44226",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=svraka&avatarId=44226",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=svraka&avatarId=44226",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=svraka&avatarId=44226"
            },
            "displayName": "Andr\u00e1s Svraka",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10080/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/504851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T18:24:01.200+0000",
                    "updated": "2020-10-26T18:24:01.200+0000",
                    "started": "2020-10-26T18:24:01.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504851",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/504869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-716754516\n\n\n   https://issues.apache.org/jira/browse/ARROW-10080\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T18:53:32.663+0000",
                    "updated": "2020-10-26T18:53:32.663+0000",
                    "started": "2020-10-26T18:53:32.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504869",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/504897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r512231253\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -19,10 +19,45 @@\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n \n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool()\n+      : pool_(arrow::default_memory_pool()), gc_(cpp11::package(\"base\")[\"gc\"]) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n\nReview comment:\n       Can you add a comment explaining the circumstances when this could fail / why (also put this in the PR description)?\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -19,10 +19,45 @@\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n \n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool()\n+      : pool_(arrow::default_memory_pool()), gc_(cpp11::package(\"base\")[\"gc\"]) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n+      return arrow::Status::OK();\n+    }\n+    // ARROW-10080\n+    gc_();\n\nReview comment:\n       Are `cpp11::function` objects threadsafe?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T19:59:10.404+0000",
                    "updated": "2020-10-26T19:59:10.404+0000",
                    "started": "2020-10-26T19:59:10.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504897",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/504905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r512242429\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -19,10 +19,45 @@\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n \n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool()\n+      : pool_(arrow::default_memory_pool()), gc_(cpp11::package(\"base\")[\"gc\"]) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n+      return arrow::Status::OK();\n+    }\n+    // ARROW-10080\n+    gc_();\n\nReview comment:\n       I don't think so. I'll guard with a mutex.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T20:19:12.662+0000",
                    "updated": "2020-10-26T20:19:12.662+0000",
                    "started": "2020-10-26T20:19:12.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504905",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/504906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r512242522\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -19,10 +19,45 @@\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n \n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool()\n+      : pool_(arrow::default_memory_pool()), gc_(cpp11::package(\"base\")[\"gc\"]) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n\nReview comment:\n       wilco\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T20:19:25.767+0000",
                    "updated": "2020-10-26T20:19:25.767+0000",
                    "started": "2020-10-26T20:19:25.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504906",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-717239034\n\n\n   I've replace explicit calls to `arrow::default_memory_pool()` with `gc_memory_pool()` to pick up this change. However there are many Arrow APIs which don't require an explicit `MemoryPool` and will invoke `arrow::default_memory_pool()` if none is provided. The leak will persist if we fail to identify one of these and keep the default memory pool. I've fixed two implicit default pool usages: [`dataset___Dataset__NewScan`](https://github.com/apache/arrow/pull/8533/files#diff-5a95c2439a17adb8dec5e2f4760b6f632da493a24b2a85f2e00368fa982dcca9R34-R39) and [`compute__CallFunction`](https://github.com/apache/arrow/pull/8533/files#diff-a138b87f0da58d824c72293eab62d9f352718dcb7f41a47ea7e1c3c84bbe27ddR179-R186). I'll look for others but please call out any I miss\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-27T13:22:10.745+0000",
                    "updated": "2020-10-27T13:22:10.745+0000",
                    "started": "2020-10-27T13:22:10.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505214",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-717516187\n\n\n   Not in scope for this PR, may result in further spurious OOMs later:\r\n   - Feather APIs don't accept a MemoryPool\r\n   - `LocalFileSystem::OpenInput{Stream,File}` use the default memory pool if `use_mmap` is not set. This affects dataset scanning transitively since we use those methods to open files for reading\r\n   - Any file opened with `FileSystem$OpenInputStream` is also affected\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-27T20:22:38.030+0000",
                    "updated": "2020-10-27T20:22:38.030+0000",
                    "started": "2020-10-27T20:22:38.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505403",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r513265845\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -18,11 +18,55 @@\n #include \"./arrow_types.h\"\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n+#include <arrow/util/mutex.h>\n+\n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool() : pool_(arrow::default_memory_pool()) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n+      return arrow::Status::OK();\n+    } else {\n+      auto lock = mutex_.Lock();\n+\n+      // ARROW-10080: Allocation may fail spuriously since the garbage collector is lazy.\n+      // Force it to run then try again in case any reusable allocations have been freed.\n+      static cpp11::function gc = cpp11::package(\"base\")[\"gc\"];\n\nReview comment:\n       Maybe make `gc()` a member of `GcMemoryPool` instead of repeating it for each `GcAndTryAgain` ?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T08:47:47.739+0000",
                    "updated": "2020-10-28T08:47:47.739+0000",
                    "started": "2020-10-28T08:47:47.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505639",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r513490264\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -18,11 +18,55 @@\n #include \"./arrow_types.h\"\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n+#include <arrow/util/mutex.h>\n+\n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool() : pool_(arrow::default_memory_pool()) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n+      return arrow::Status::OK();\n+    } else {\n+      auto lock = mutex_.Lock();\n+\n+      // ARROW-10080: Allocation may fail spuriously since the garbage collector is lazy.\n+      // Force it to run then try again in case any reusable allocations have been freed.\n+      static cpp11::function gc = cpp11::package(\"base\")[\"gc\"];\n\nReview comment:\n       The instance is static so it will only be initialized in the *first* call to `GcAndTryAgain()`.\r\n   \r\n   I had `gc` as a member of `GcMemoryPool` initially but it resulted in an instance of `gc` which didn't show up in `trace()`. I assume this is due to a subtlety with the timing of the constructor of `g_pool` but I didn't debug further.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T14:30:18.940+0000",
                    "updated": "2020-10-28T14:30:18.940+0000",
                    "started": "2020-10-28T14:30:18.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505737",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r513545431\n\n\n\n##########\nFile path: r/src/memorypool.cpp\n##########\n@@ -18,11 +18,55 @@\n #include \"./arrow_types.h\"\n #if defined(ARROW_R_WITH_ARROW)\n #include <arrow/memory_pool.h>\n+#include <arrow/util/mutex.h>\n+\n+class GcMemoryPool : public arrow::MemoryPool {\n+ public:\n+  GcMemoryPool() : pool_(arrow::default_memory_pool()) {}\n+\n+  arrow::Status Allocate(int64_t size, uint8_t** out) override {\n+    return GcAndTryAgain([&] { return pool_->Allocate(size, out); });\n+  }\n+\n+  arrow::Status Reallocate(int64_t old_size, int64_t new_size, uint8_t** ptr) override {\n+    return GcAndTryAgain([&] { return pool_->Reallocate(old_size, new_size, ptr); });\n+  }\n+\n+  void Free(uint8_t* buffer, int64_t size) override { pool_->Free(buffer, size); }\n+\n+  int64_t bytes_allocated() const override { return pool_->bytes_allocated(); }\n+\n+  int64_t max_memory() const override { return pool_->max_memory(); }\n+\n+  std::string backend_name() const override { return pool_->backend_name() + \"-gc\"; }\n+\n+ private:\n+  template <typename Call>\n+  arrow::Status GcAndTryAgain(const Call& call) {\n+    if (call().ok()) {\n+      return arrow::Status::OK();\n+    } else {\n+      auto lock = mutex_.Lock();\n+\n+      // ARROW-10080: Allocation may fail spuriously since the garbage collector is lazy.\n+      // Force it to run then try again in case any reusable allocations have been freed.\n+      static cpp11::function gc = cpp11::package(\"base\")[\"gc\"];\n\nReview comment:\n       In the first call of each version of the template method `GcAndTryAgain` right ? Probably no big deal anyway. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T15:37:06.796+0000",
                    "updated": "2020-10-28T15:37:06.796+0000",
                    "started": "2020-10-28T15:37:06.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505770",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-718021313\n\n\n   I also had, in a branch that builds on top of #8256 ways to prematurely invalidate objects when we know they won't be used anymore. For example, in this function: \r\n   \r\n   ```r\r\n   collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\r\n     x <- ensure_group_vars(x)\r\n     # Pull only the selected rows and cols into R\r\n     if (query_on_dataset(x)) {\r\n       # See dataset.R for Dataset and Scanner(Builder) classes\r\n       tab <- Scanner$create(x)$ToTable()\r\n     } else {\r\n       # This is a Table/RecordBatch. See record-batch.R for the [ method\r\n       tab <- x$.data[x$filtered_rows, x$selected_columns, keep_na = FALSE]\r\n     }\r\n     if (as_data_frame) {\r\n       df <- as.data.frame(tab)\r\n       tab$invalidate()\r\n       restore_dplyr_features(df, x)\r\n     } else {\r\n       restore_dplyr_features(tab, x)\r\n     }\r\n   }\r\n   ```\r\n   \r\n   inside the `if (as_data_frame)` as soon as `tab` is converted to a `data.frame` we will no longer need or use `tab`, so calling `$invalidate()` on it calls the destructor of the shared pointer held by the external pointer that lives in `tab`. \r\n   \r\n   Is this still worth having ? And in that case should I push this to #8256 cc @nealrichardson \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T15:43:11.153+0000",
                    "updated": "2020-10-28T15:43:11.153+0000",
                    "started": "2020-10-28T15:43:11.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505773",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505777",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-718021313\n\n\n   I also had, in a branch that builds on top of #8256 ways to prematurely invalidate objects when we know they won't be used anymore. For example, in this function: \r\n   \r\n   ```r\r\n   collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\r\n     x <- ensure_group_vars(x)\r\n     # Pull only the selected rows and cols into R\r\n     if (query_on_dataset(x)) {\r\n       # See dataset.R for Dataset and Scanner(Builder) classes\r\n       tab <- Scanner$create(x)$ToTable()\r\n     } else {\r\n       # This is a Table/RecordBatch. See record-batch.R for the [ method\r\n       tab <- x$.data[x$filtered_rows, x$selected_columns, keep_na = FALSE]\r\n     }\r\n     if (as_data_frame) {\r\n       df <- as.data.frame(tab)\r\n       tab$invalidate() # HERE <<<<<<------------- \r\n       restore_dplyr_features(df, x)\r\n     } else {\r\n       restore_dplyr_features(tab, x)\r\n     }\r\n   }\r\n   ```\r\n   \r\n   inside the `if (as_data_frame)` as soon as `tab` is converted to a `data.frame` we will no longer need or use `tab`, so calling `$invalidate()` on it calls the destructor of the shared pointer held by the external pointer that lives in `tab`, so that the memory is free right now instead of later when the gc is called\r\n   \r\n   Is this still worth having ? And in that case should I push this to #8256 cc @nealrichardson \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T15:44:39.104+0000",
                    "updated": "2020-10-28T15:44:39.104+0000",
                    "started": "2020-10-28T15:44:39.103+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505777",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-718032982\n\n\n   I think it's worthwhile to invalidate individual objects as soon as we know we won't need them since it removes unnecessary burden from the garbage collector; it'll essentially be a performance hint (and therefore removal is also justifiable if you want to keep things simple-as-possible).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T16:00:04.704+0000",
                    "updated": "2020-10-28T16:00:04.704+0000",
                    "started": "2020-10-28T16:00:04.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505779",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/505785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-718040728\n\n\n   Agree. So I cherry picked that commit into the #8256 pull request so that we have `$invalidate()` for Table and RecordBatch. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T16:11:18.636+0000",
                    "updated": "2020-10-28T16:11:18.636+0000",
                    "started": "2020-10-28T16:11:18.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505785",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/506371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-718981284\n\n\n   Follow ups:\r\n   https://issues.apache.org/jira/browse/ARROW-10420\r\n   https://issues.apache.org/jira/browse/ARROW-10421\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T19:47:17.449+0000",
                    "updated": "2020-10-29T19:47:17.449+0000",
                    "started": "2020-10-29T19:47:17.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506371",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/506378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#discussion_r514535632\n\n\n\n##########\nFile path: r/tests/testthat/test-arrow.R\n##########\n@@ -60,3 +60,17 @@ test_that(\"arrow gracefully fails to load objects from other sessions (ARROW-100\n test_that(\"check for an ArrowObject in functions use std::shared_ptr\", {\n   expect_error(Array__length(1), \"Invalid R object\")\n })\n+\n+test_that(\"MemoryPool calls gc() to free memory when allocation fails (ARROW-10080)\", {\n+  env <- new.env()\n+  trace(gc, print = FALSE, tracer = function() {\n+          env$gc_was_called <- TRUE\n+        })\n+  expect_error(\n+    BufferOutputStream$create(2 ** 60),\n+    \"Out of memory\"\n+  )\n+  expect_true(env$gc_was_called)\n+\n+  untrace(gc)\n\nReview comment:\n       ```suggestion\r\n     on.exit(untrace(gc))\r\n     # We expect this should fail because we don't have this much memory,\r\n     # but it should gc() and retry (and fail again)\r\n     expect_error(BufferOutputStream$create(2 ** 60))\r\n     expect_true(env$gc_was_called)\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-29T20:08:33.059+0000",
                    "updated": "2020-10-29T20:08:33.059+0000",
                    "started": "2020-10-29T20:08:33.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506378",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/506478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-719108858\n\n\n   CI failures are unrelated. Merging\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-30T01:04:53.245+0000",
                    "updated": "2020-10-30T01:04:53.245+0000",
                    "started": "2020-10-30T01:04:53.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506478",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/506479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-30T01:05:26.305+0000",
                    "updated": "2020-10-30T01:05:26.305+0000",
                    "started": "2020-10-30T01:05:26.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506479",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/507667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "terencehonles commented on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-721815501\n\n\n   > CI failures are unrelated. Merging\r\n   \r\n   @bkietz I've bisected the commit history, and it does look like [this change](https://github.com/apache/arrow/pull/8533/files#diff-2b5392b203328a6b9e7ff692e51eb39691cc1d05329882bef0200f0d9bd51f84R57)\r\n   \r\n   ```diff\r\n   diff --git a/cpp/src/arrow/io/memory.cc b/cpp/src/arrow/io/memory.cc\r\n   index 1cde5e64e..88f006fe0 100644\r\n   --- a/cpp/src/arrow/io/memory.cc\r\n   +++ b/cpp/src/arrow/io/memory.cc\r\n   @@ -54,7 +54,7 @@ BufferOutputStream::BufferOutputStream(const std::shared_ptr<ResizableBuffer>& b\r\n    Result<std::shared_ptr<BufferOutputStream>> BufferOutputStream::Create(\r\n        int64_t initial_capacity, MemoryPool* pool) {\r\n      // ctor is private, so cannot use make_shared\r\n   +  DCHECK_NE(pool, nullptr);\r\n      auto ptr = std::shared_ptr<BufferOutputStream>(new BufferOutputStream);\r\n      RETURN_NOT_OK(ptr->Reset(initial_capacity, pool));\r\n      return ptr;\r\n   \r\n   ```\r\n   \r\n    is \"responsible\" for breaking the JNI status check (you can also see it was passing on the first commit in this PR https://github.com/apache/arrow/runs/1310578738 and then failing at the end https://github.com/apache/arrow/runs/1329149428).\r\n   \r\n   I am not familiar with the code, and I was hoping for you to possibly help me understand why the check was added and why it might be segfaulting the test java/adapter/orc/src/test/java/org/apache/arrow/adapter/orc/OrcReaderTest.java. I have experimented with removing the check and the test passes as expected, but if the check was added to catch something I'd rather not cover it up. I noticed there were two follow ups ARROW-10420 and ARROW-10421 and I was wondering if this might be related?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T15:55:47.579+0000",
                    "updated": "2020-11-04T15:55:47.579+0000",
                    "started": "2020-11-04T15:55:47.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507667",
                    "issueId": "13329177"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/worklog/507668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "terencehonles edited a comment on pull request #8533:\nURL: https://github.com/apache/arrow/pull/8533#issuecomment-721815501\n\n\n   > CI failures are unrelated. Merging\r\n   \r\n   @bkietz I've bisected the commit history, and it does look like [this change](https://github.com/apache/arrow/pull/8533/files#diff-2b5392b203328a6b9e7ff692e51eb39691cc1d05329882bef0200f0d9bd51f84R57)\r\n   \r\n   ```diff\r\n   diff --git a/cpp/src/arrow/io/memory.cc b/cpp/src/arrow/io/memory.cc\r\n   index 1cde5e64e..88f006fe0 100644\r\n   --- a/cpp/src/arrow/io/memory.cc\r\n   +++ b/cpp/src/arrow/io/memory.cc\r\n   @@ -54,7 +54,7 @@ BufferOutputStream::BufferOutputStream(const std::shared_ptr<ResizableBuffer>& b\r\n    Result<std::shared_ptr<BufferOutputStream>> BufferOutputStream::Create(\r\n        int64_t initial_capacity, MemoryPool* pool) {\r\n      // ctor is private, so cannot use make_shared\r\n   +  DCHECK_NE(pool, nullptr);\r\n      auto ptr = std::shared_ptr<BufferOutputStream>(new BufferOutputStream);\r\n      RETURN_NOT_OK(ptr->Reset(initial_capacity, pool));\r\n      return ptr;\r\n   \r\n   ```\r\n   \r\n    is \"responsible\" for breaking the JNI status check (you can also see it was passing on the first commit in this PR https://github.com/apache/arrow/runs/1310578738 and then failing at the end https://github.com/apache/arrow/runs/1329149428).\r\n   \r\n   I am not familiar with the code, and I was hoping for you to possibly help me understand why the check was added and why it might be segfaulting the test java/adapter/orc/src/test/java/org/apache/arrow/adapter/orc/OrcReaderTest.java. I have experimented with removing the check and the test passes as expected, but if the check was added to catch something I'd rather not cover it up. I noticed there were two follow ups ARROW-10420 and ARROW-10421 and I was wondering if this might be related?\r\n   \r\n   Edit: since the runs above were not merged and their branch was deleted it looks like GitHub dropped the logs. This is the specific test error I am referring to (grabbed from a run on the `master` branch) https://github.com/apache/arrow/runs/1351819845#step:8:7374\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-04T15:59:03.829+0000",
                    "updated": "2020-11-04T15:59:03.829+0000",
                    "started": "2020-11-04T15:59:03.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "507668",
                    "issueId": "13329177"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1513b9ed[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d126fca[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d232cc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3b17096[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56e4f2b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1aa56228[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e8430af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76b9ca29[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@739f70a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@36bc71e7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69e22ed7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@51b25940[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 20 13:05:52 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-30T01:05:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10080/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2020-09-24T10:11:07.000+0000",
        "updated": "2021-08-20T13:05:52.000+0000",
        "timeoriginalestimate": null,
        "description": "I\u2019m having problems when {{collect()}}-ing Arrow data sources into data frames that are close in size to the available memory on the machine. Consider the following workflow. I have a dataset which I want to query so that at some point in needs to be {{collect()}}-ed but at the same I\u2019m also reducing the result. During the intermediate step the entire data frame fits into memory, and the following code runs without any problems.\r\n{code:r}\r\ntest_ds <- \"memory_test\"\r\n\r\nds1 <- open_dataset(test_ds) %>%\r\n  collect() %>%\r\n  dim()\r\n{code}\r\nHowever, running the same code in the same R session again fails with R running out of memory.\r\n{code:r}\r\nds1 <- open_dataset(test_ds) %>%\r\n  collect() %>%\r\n  dim()\r\n{code}\r\nThe example might be a but contrived but you can easily imagine a workflow where different queries are ran on a dataset and the reduced results are stored.\r\n\r\nAs far as I understand, R is a garbage collected language, and in this case there aren\u2019t any references left to large objects in memory. And indeed, the second query succeeds when manually forcing a garbage collection.\r\n\r\nIs this the expected behaviour from Arrow?\r\n\r\nI know, this is quite hard to reproduce, as the exact dataset size required to trigger this behaviour depends on the particular machine but I prepared a reproducible example in [this gist|https://gist.github.com/svraka/c63fca51c6cc50020551e2319ff652b7], that should give the same result on Ubuntu 20.04 with 1GB RAM and no swap. See attachment for {{sessionInfo()}} output. I ran it on a Digitalocean {{s-1vcpu-1gb}} droplet.\r\n\r\nFirst, let\u2019s create a a partitioned Arrow dataset:\r\n{code:java}\r\n$ Rscript ds_prep.R 1000000 5\r\n{code}\r\nThe first command line argument gives the number of rows in each partition, and second gives the number of partitions. The parameters are set so that the entire dataset should fit into memory.\r\n\r\nThen running the two queries fails:\r\n{code:java}\r\n$ Rscript ds_read.R\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nRunning query, 2nd try...\r\n[1]    11151 killed     Rscript ds_read.R\r\n{code}\r\nHowever, when forcing a {{gc()}} (which I\u2019m controlling here with a command line argument), it succeeds:\r\n{code:java}\r\n$ Rscript ds_read.R 1\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nrunning gc() ...\r\n          used (Mb) gc trigger  (Mb) max used  (Mb)\r\nNcells  703052 37.6    1571691  84.0  1038494  55.5\r\nVcells 1179578  9.0   36405636 277.8 41188956 314.3\r\nRunning query, 2nd try...\r\nds size, 2nd run: 56\r\n{code}\r\nIn general, [one shouldn\u2019t have to use {{gc()}} manually|https://adv-r.hadley.nz/names-values.html#gc]. Interestingly, setting R\u2019s garbage collection more aggressive (see {{?Memory}}) doesn\u2019t help either:\r\n{code:java}\r\n$ R_GC_MEM_GROW=0 Rscript ds_read.R\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nRunning query, 2nd try...\r\n[1]    11422 killed     Rscript ds_read.R\r\n{code}\r\nI didn\u2019t try to reproduce this problem on macOS, as my Mac would probably start swapping furiously but I managed to reproduce it on a Windows 7 machine with practically no swap. Of course the parameters are different, and the error messages are presumably system specific.\r\n{code:java}\r\n$ Rscript ds_prep.R 1000000 40\r\n$ Rscript ds_read.R\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nRunning query, 2nd try...\r\nError in dataset___Scanner__ToTable(self) :\r\n  IOError: Out of memory: malloc of size 524288 failed\r\nCalls: collect ... shared_ptr -> shared_ptr_is_null -> dataset___Scanner__ToTable\r\nExecution halted\r\n$ Rscript ds_read.R 1\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nrunning gc() ...\r\n          used (Mb) gc trigger   (Mb)  max used (Mb)\r\nNcells  688789 36.8    1198030   64.0   1198030   64\r\nVcells 1109451  8.5  271538343 2071.7 321118845 2450\r\nRunning query, 2nd try...\r\nds size, 2nd run: 56\r\n$ R_GC_MEM_GROW=0 Rscript ds_read.R\r\nRunning query, 1st try...\r\nds size, 1st run: 56\r\nRunning query, 2nd try...\r\nError in dataset___Scanner__ToTable(self) :\r\n  IOError: Out of memory: malloc of size 524288 failed\r\nCalls: collect ... shared_ptr -> shared_ptr_is_null -> dataset___Scanner__ToTable\r\nExecution halted\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13012055",
                "id": "13012055",
                "filename": "sessioninfo.txt",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=svraka",
                    "name": "svraka",
                    "key": "svraka",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=svraka&avatarId=44226",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=svraka&avatarId=44226",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=svraka&avatarId=44226",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=svraka&avatarId=44226"
                    },
                    "displayName": "Andr\u00e1s Svraka",
                    "active": true,
                    "timeZone": "Europe/Budapest"
                },
                "created": "2020-09-24T10:07:05.474+0000",
                "size": 1097,
                "mimeType": "text/plain",
                "content": "https://issues.apache.org/jira/secure/attachment/13012055/sessioninfo.txt"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Arrow does not release unused memory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Linux, Windows",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17201805",
                    "id": "17201805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks for the detailed report. Wonder if ARROW-9903 is experiencing the same thing (that is, with swap enabled, it appears to just \"hang\").\r\n\r\nAny ideas [~bkietz] [~romainfrancois]? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-09-24T22:51:10.905+0000",
                    "updated": "2020-09-24T22:51:10.905+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17204802",
                    "id": "17204802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think this is an issue with the laziness of R's garbage collection. When running R functions memory is freed as needed, but inside a C++ function the R garbage collector will not be invoked. This means that even though unused memory is available, in C++ the MemoryPool has no way of signaling that it should be freed. We could solve this by calling {{gc()}} before any potentially memory-intensive C++ function or more robustly by providing a custom implementation of MemoryPool which calls {{gc()}} if allocation fails, then tries again.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-09-30T15:19:19.090+0000",
                    "updated": "2020-09-30T15:19:19.090+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17204994",
                    "id": "17204994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Hi [~svraka], could you please try reproducing this on a nightly version of the package? {{install.packages(\"arrow\", \"https://arrow-r-nightly.s3.amazonaws.com\")}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-09-30T20:04:56.003+0000",
                    "updated": "2020-09-30T20:04:56.003+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17208107",
                    "id": "17208107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=svraka",
                        "name": "svraka",
                        "key": "svraka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=svraka&avatarId=44226",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=svraka&avatarId=44226",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=svraka&avatarId=44226",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=svraka&avatarId=44226"
                        },
                        "displayName": "Andr\u00e1s Svraka",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "The problem still exists on {{arrow_1.0.1.20201004}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=svraka",
                        "name": "svraka",
                        "key": "svraka",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=svraka&avatarId=44226",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=svraka&avatarId=44226",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=svraka&avatarId=44226",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=svraka&avatarId=44226"
                        },
                        "displayName": "Andr\u00e1s Svraka",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-10-05T14:26:44.000+0000",
                    "updated": "2020-10-05T14:26:44.000+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17223297",
                    "id": "17223297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8533\n[https://github.com/apache/arrow/pull/8533]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-10-30T01:05:22.318+0000",
                    "updated": "2020-10-30T01:05:22.318+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17401982",
                    "id": "17401982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bbertelsen",
                        "name": "bbertelsen",
                        "key": "bbertelsen",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brandon Bertelsen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "This Jira issue is marked as resolved but the problem still exists. Can confirm that manual garbage collection is still required after any type of query which frequently leads to OOMKills. Only a manual call to `gc()` or a session restart releases memory.\u00a0\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bbertelsen",
                        "name": "bbertelsen",
                        "key": "bbertelsen",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brandon Bertelsen",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-08-20T02:48:17.458+0000",
                    "updated": "2021-08-20T02:48:17.458+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13329177/comment/17402199",
                    "id": "17402199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Hi [~bbertelsen], if you're still seeing an issue like this, please open a new jira with details on how to reproduce.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-08-20T13:05:52.110+0000",
                    "updated": "2021-08-20T13:05:52.110+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ivmo:",
        "customfield_12314139": null
    }
}