{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13067146",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146",
    "key": "ARROW-906",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12528509",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12528509",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13142404",
                    "key": "ARROW-2255",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142404",
                    "fields": {
                        "summary": "[Developer][Integration] Serialize schema- and field-level custom metadata in integration test JSON format",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12528510",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12528510",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13127579",
                    "key": "ARROW-1954",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13127579",
                    "fields": {
                        "summary": "[Python] Add metadata accessor to pyarrow.Field",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-906/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 32,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/104668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391048650\n \n \n   Looks like You've already done that. I've just got back from a long weekend (Pentecost). I'm addressing the issues.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-22T16:08:26.637+0000",
                    "updated": "2018-05-22T16:08:26.637+0000",
                    "started": "2018-05-22T16:08:26.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "104668",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#discussion_r190165976\n \n \n\n ##########\n File path: cpp/src/arrow/table.cc\n ##########\n @@ -389,7 +389,7 @@ Status Table::FromRecordBatches(const std::shared_ptr<Schema>& schema,\n   const int ncolumns = static_cast<int>(schema->num_fields());\n \n   for (int i = 1; i < nbatches; ++i) {\n-    if (!batches[i]->schema()->Equals(*schema)) {\n+    if (!batches[i]->schema()->Equals(*schema, false)) {\n \n Review comment:\n   Because of the following failing test case:\r\n   \r\n   ```py\r\n   pyarrow/tests/test_parquet.py:614: AssertionError\r\n   ___________________________________________ test_recordbatchlist_to_pandas ____________________________________________\r\n   \r\n       def test_recordbatchlist_to_pandas():\r\n           data1 = pd.DataFrame({\r\n               'c1': np.array([1, 1, 2], dtype='uint32'),\r\n               'c2': np.array([1.0, 2.0, 3.0], dtype='float64'),\r\n               'c3': [True, None, False],\r\n               'c4': ['foo', 'bar', None]\r\n           })\r\n   \r\n           data2 = pd.DataFrame({\r\n               'c1': np.array([3, 5], dtype='uint32'),\r\n               'c2': np.array([4.0, 5.0], dtype='float64'),\r\n               'c3': [True, True],\r\n               'c4': ['baz', 'qux']\r\n           })\r\n   \r\n           batch1 = pa.RecordBatch.from_pandas(data1)\r\n           batch2 = pa.RecordBatch.from_pandas(data2)\r\n   \r\n   >       table = pa.Table.from_batches([batch1, batch2])\r\n   \r\n   pyarrow/tests/test_table.py:241:\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   table.pxi:1106: in pyarrow.lib.Table.from_batches\r\n       ???\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   \r\n   >   ???\r\n   E   pyarrow.lib.ArrowInvalid: Schema at index 1 was different:\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"object\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\"\r\n   , \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   E   vs\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"bool\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\",\r\n   \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   ```\r\n   \r\n   `numpy_type` values are different: bool vs object\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T08:40:37.493+0000",
                    "updated": "2018-05-23T08:40:37.493+0000",
                    "started": "2018-05-23T08:40:37.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105024",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#discussion_r190165976\n \n \n\n ##########\n File path: cpp/src/arrow/table.cc\n ##########\n @@ -389,7 +389,7 @@ Status Table::FromRecordBatches(const std::shared_ptr<Schema>& schema,\n   const int ncolumns = static_cast<int>(schema->num_fields());\n \n   for (int i = 1; i < nbatches; ++i) {\n-    if (!batches[i]->schema()->Equals(*schema)) {\n+    if (!batches[i]->schema()->Equals(*schema, false)) {\n \n Review comment:\n   Because of the following failing test case:\r\n   \r\n   ```py\r\n   pyarrow/tests/test_parquet.py:614: AssertionError\r\n   ___________________________________________ test_recordbatchlist_to_pandas ____________________________________________\r\n   \r\n       def test_recordbatchlist_to_pandas():\r\n           data1 = pd.DataFrame({\r\n               'c1': np.array([1, 1, 2], dtype='uint32'),\r\n               'c2': np.array([1.0, 2.0, 3.0], dtype='float64'),\r\n               'c3': [True, None, False],\r\n               'c4': ['foo', 'bar', None]\r\n           })\r\n   \r\n           data2 = pd.DataFrame({\r\n               'c1': np.array([3, 5], dtype='uint32'),\r\n               'c2': np.array([4.0, 5.0], dtype='float64'),\r\n               'c3': [True, True],\r\n               'c4': ['baz', 'qux']\r\n           })\r\n   \r\n           batch1 = pa.RecordBatch.from_pandas(data1)\r\n           batch2 = pa.RecordBatch.from_pandas(data2)\r\n   \r\n   >       table = pa.Table.from_batches([batch1, batch2])\r\n   \r\n   pyarrow/tests/test_table.py:241:\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   table.pxi:1106: in pyarrow.lib.Table.from_batches\r\n       ???\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   \r\n   >   ???\r\n   E   pyarrow.lib.ArrowInvalid: Schema at index 1 was different:\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"object\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\"\r\n   , \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   E   vs\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"bool\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\",\r\n   \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   ```\r\n   \r\n   `numpy_type` values are different: `bool` vs `object`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T08:40:55.825+0000",
                    "updated": "2018-05-23T08:40:55.825+0000",
                    "started": "2018-05-23T08:40:55.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105025",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#discussion_r190166449\n \n \n\n ##########\n File path: python/pyarrow/tests/test_ipc.py\n ##########\n @@ -507,6 +507,21 @@ def test_schema_batch_serialize_methods():\n     assert recons_batch.equals(batch)\n \n \n+def test_schema_serialization_with_metadata():\n+    field_metadata = {b'foo': b'bar', b'kind': b'field'}\n+    schema_metadata = {b'foo': b'bar', b'kind': b'schema'}\n+\n+    f0 = pa.field('a', pa.int8())\n+    f1 = pa.field('b', pa.string(), metadata=field_metadata)\n+\n+    schema = pa.schema([f0, f1], metadata=schema_metadata)\n+\n+    s_schema = schema.serialize()\n+    recons_schema = pa.read_schema(s_schema)\n \n Review comment:\n   Done, just below this particular line.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T08:42:06.129+0000",
                    "updated": "2018-05-23T08:42:06.129+0000",
                    "started": "2018-05-23T08:42:06.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105026",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#discussion_r190165976\n \n \n\n ##########\n File path: cpp/src/arrow/table.cc\n ##########\n @@ -389,7 +389,7 @@ Status Table::FromRecordBatches(const std::shared_ptr<Schema>& schema,\n   const int ncolumns = static_cast<int>(schema->num_fields());\n \n   for (int i = 1; i < nbatches; ++i) {\n-    if (!batches[i]->schema()->Equals(*schema)) {\n+    if (!batches[i]->schema()->Equals(*schema, false)) {\n \n Review comment:\n   Because of the this failing test case:\r\n   \r\n   ```py\r\n   pyarrow/tests/test_parquet.py:614: AssertionError\r\n   ___________________________________________ test_recordbatchlist_to_pandas ____________________________________________\r\n   \r\n       def test_recordbatchlist_to_pandas():\r\n           data1 = pd.DataFrame({\r\n               'c1': np.array([1, 1, 2], dtype='uint32'),\r\n               'c2': np.array([1.0, 2.0, 3.0], dtype='float64'),\r\n               'c3': [True, None, False],\r\n               'c4': ['foo', 'bar', None]\r\n           })\r\n   \r\n           data2 = pd.DataFrame({\r\n               'c1': np.array([3, 5], dtype='uint32'),\r\n               'c2': np.array([4.0, 5.0], dtype='float64'),\r\n               'c3': [True, True],\r\n               'c4': ['baz', 'qux']\r\n           })\r\n   \r\n           batch1 = pa.RecordBatch.from_pandas(data1)\r\n           batch2 = pa.RecordBatch.from_pandas(data2)\r\n   \r\n   >       table = pa.Table.from_batches([batch1, batch2])\r\n   \r\n   pyarrow/tests/test_table.py:241:\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   table.pxi:1106: in pyarrow.lib.Table.from_batches\r\n       ???\r\n   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n   \r\n   >   ???\r\n   E   pyarrow.lib.ArrowInvalid: Schema at index 1 was different:\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"object\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\"\r\n   , \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   E   vs\r\n   E   c1: uint32\r\n   E   c2: double\r\n   E   c3: bool\r\n   E   c4: string\r\n   E   __index_level_0__: int64\r\n   E   -- metadata --\r\n   E   pandas: {\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"name\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"c1\", \"field_name\": \"c1\r\n   \", \"pandas_type\": \"uint32\", \"numpy_type\": \"uint32\", \"metadata\": null}, {\"name\": \"c2\", \"field_name\": \"c2\", \"pandas_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}, {\"name\": \"c3\", \"field_name\": \"c3\", \"pandas_type\": \"bool\", \"num\r\n   py_type\": \"bool\", \"metadata\": null}, {\"name\": \"c4\", \"field_name\": \"c4\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\",\r\n   \"metadata\": null}], \"pandas_version\": \"0.23.0\"}\r\n   ```\r\n   \r\n   `numpy_type` values are different: `bool` vs `object`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T08:59:40.203+0000",
                    "updated": "2018-05-23T08:59:40.203+0000",
                    "started": "2018-05-23T08:59:40.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105030",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391460135\n \n \n   \"Java producing, C++ consuming\" integration test fails,\r\n   \r\n   ```\r\n   With output:\r\n   --------------\r\n   JSON schema: \r\n   struct_nullable: struct<f1: int32, f2: string>\r\n   Arrow schema: \r\n   struct_nullable: struct<f1: int32, f2: string>\r\n   -- metadata --\r\n   Error message: Invalid: Schemas did not match\r\n   ```\r\n   \r\n   I suspect that Java writes empty metadata instead of null, and now we check kv-meta for schema equality.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T18:59:59.147+0000",
                    "updated": "2018-05-23T18:59:59.147+0000",
                    "started": "2018-05-23T18:59:59.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105268",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391463336\n \n \n   Yes, Java drops the field metadata (this will need to be addressed as part of https://issues.apache.org/jira/browse/ARROW-2255). We'll have to add a flag for now to disable the metadata check\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T19:10:45.514+0000",
                    "updated": "2018-05-23T19:10:45.514+0000",
                    "started": "2018-05-23T19:10:45.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105284",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391463432\n \n \n   Perhaps in the meantime you can make empty metadata equivalent to null?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T19:11:03.836+0000",
                    "updated": "2018-05-23T19:11:03.836+0000",
                    "started": "2018-05-23T19:11:03.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105285",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391463432\n \n \n   Perhaps in the meantime you can make empty metadata equivalent to null? (that might be the right thing to do anyway)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-23T19:11:21.439+0000",
                    "updated": "2018-05-23T19:11:21.439+0000",
                    "started": "2018-05-23T19:11:21.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105286",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391652248\n \n \n   To properly check metadata in `StructType` I'd need to wire `check_metadata` through `TypeEquals`, `Array*Equals` etc. Parquet backward compatibility requires to skip metadata equality checks, but that means a lot of optional `check_metadata` arguments with probably a `false` default value.\r\n   To prevent increasing the complexity we could avoid metadata checks. I'm not sure what's the expected.\r\n   \r\n   Empty metadata vs. `nullptr` is another question.\r\n   \r\n   ping @pitrou \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T09:35:34.426+0000",
                    "updated": "2018-05-24T09:35:34.426+0000",
                    "started": "2018-05-24T09:35:34.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105517",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391652248\n \n \n   To properly check metadata in `StructType` I'd need to wire `check_metadata` through `TypeEquals`, `Array*Equals` etc. Parquet backward compatibility requires to skip metadata equality checks, but that means a lot of optional `check_metadata` arguments with probably a `false` default value.\r\n   OTOH to prevent increasing the complexity we could avoid metadata checks. I'm not sure what's the expected.\r\n   \r\n   Empty metadata vs. `nullptr` is another question.\r\n   \r\n   ping @pitrou \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T09:36:05.218+0000",
                    "updated": "2018-05-24T09:36:05.218+0000",
                    "started": "2018-05-24T09:36:05.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105518",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391652248\n \n \n   To properly check metadata in `StructType` I'd need to wire `check_metadata` through `TypeEquals`, `Array*Equals` etc. Parquet backward compatibility requires to skip metadata equality checks, but that means a lot of optional `check_metadata` arguments with probably a `false` default value.\r\n   OTOH to prevent increasing the complexity we could avoid metadata checks. I'm not sure what's the expected.\r\n   \r\n   Empty metadata vs. `nullptr` is another question.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T15:58:49.381+0000",
                    "updated": "2018-05-24T15:58:49.381+0000",
                    "started": "2018-05-24T15:58:49.381+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105626",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391791397\n \n \n   I'm +1 on making empty metadata equal to null. Does that make the tests pass?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T17:13:36.416+0000",
                    "updated": "2018-05-24T17:13:36.416+0000",
                    "started": "2018-05-24T17:13:36.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105660",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391798727\n \n \n   So previously only `Field.metadata` was checked for equality, and this PR has introduced the same for schema. Then the parquet metadata problem has appeared, because the pieces' metadata wasn't identical with the dataset's metadata. So I've introduces `check_metadata` for Schema and Field to disable the metadata equality checks, but I've left it out from Type equality checks, however nested types can contain other fields. \r\n   \r\n   I can see two paths:\r\n   1. If We keep `check_metadata` flag, then we should add it to `ArrayEquals`, `TypeEquals` etc. for completeness. We'll check metadata equality with the exception of parquet `validate_schemas` and IPC integration tests (at least for now).\r\n   2. Drop `check_metadata` completely, make empty metadata equal to null, which will solve the integration test problem, but not the parquet compatibility one where We would need another way to compare schemas without checking metadata equality.\r\n   \r\n   Are two Struct types semantically equal if one of their fields differs in its metadata?\r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T17:37:08.933+0000",
                    "updated": "2018-05-24T17:37:08.933+0000",
                    "started": "2018-05-24T17:37:08.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105671",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391798727\n \n \n   So previously only `Field.metadata` was checked for equality, and this PR has introduced the same for schema. Then the parquet metadata problem has appeared, because the pieces' metadata wasn't identical with the dataset's metadata. So I've introduces `check_metadata` for Schema and Field to disable the metadata equality checks, but I've left it out from Type equality checks, however nested types can contain other fields. \r\n   \r\n   I can see two paths:\r\n   1. If We keep `check_metadata` flag, then we should add it to `ArrayEquals`, `TypeEquals` etc. for completeness. We'll check metadata equality with the exception of parquet `validate_schemas` and IPC integration tests (at least for now).\r\n   2. Drop `check_metadata` completely, make empty metadata equal to null, which will solve the integration test problem, but not the parquet compatibility (at least it depends) one where We would need another way to compare schemas without checking metadata equality.\r\n   \r\n   Are two Struct types semantically equal if any of their fields differs in its metadata?\r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T17:39:29.717+0000",
                    "updated": "2018-05-24T17:39:29.717+0000",
                    "started": "2018-05-24T17:39:29.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105672",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391798727\n \n \n   So previously only `Field.metadata` was checked for equality, and this PR has introduced the same for schema. Then the parquet metadata problem has appeared, because the pieces' metadata wasn't identical with the dataset's metadata. So I've introduces `check_metadata` for Schema and Field to disable the metadata equality checks, but I've left it out from Type equality checks, however nested types can contain other fields. \r\n   \r\n   I can see two paths:\r\n   1. If We keep `check_metadata` flag, then we should add it to `ArrayEquals`, `TypeEquals` etc. for completeness. We'll check metadata equality with the exception of parquet `validate_schemas` and IPC integration tests (at least for now).\r\n   2. Drop `check_metadata` completely, make empty metadata equal to null, which will solve the integration test problem, but not the parquet compatibility (at least it depends) one where We would need another way to compare schemas without checking metadata equality.\r\n   \r\n   Are two Struct types semantically equal if any of their fields differs in its metadata? \r\n   Does my explanation make sense? :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T17:41:22.022+0000",
                    "updated": "2018-05-24T17:41:22.022+0000",
                    "started": "2018-05-24T17:41:22.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105673",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-391798727\n \n \n   So previously only `Field.metadata` was checked for equality, and this PR has introduced the same for schema. Then the [parquet metadata problem](https://github.com/apache/arrow/pull/2053/files#diff-211255c3faff2b62de57e1dca9f60e13R778) has appeared, because the pieces' metadata wasn't identical with the dataset's metadata. So I've introduces `check_metadata` for Schema and Field to disable the metadata equality checks, but I've left it out from Type equality checks, however nested types can contain other fields. \r\n   \r\n   I can see two paths:\r\n   1. If We keep `check_metadata` flag, then we should add it to `ArrayEquals`, `TypeEquals` etc. for completeness. We'll check metadata equality with the exception of parquet `validate_schemas` and IPC integration tests (at least for now).\r\n   2. Drop `check_metadata` completely, make empty metadata equal to null, which will solve the integration test problem, but not the parquet compatibility (at least it depends) one where We would need another way to compare schemas without checking metadata equality.\r\n   \r\n   Are two Struct types semantically equal if any of their fields differs in its metadata? \r\n   Does my explanation make sense? :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-24T17:43:31.572+0000",
                    "updated": "2018-05-24T17:43:31.572+0000",
                    "started": "2018-05-24T17:43:31.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105674",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-392047041\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=h1) Report\n   > Merging [#2053](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/ce23c06469de9cf0c3e38e35cdb8d135f341b964?src=pr&el=desc) will **increase** coverage by `0.01%`.\n   > The diff coverage is `97.71%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2053/graphs/tree.svg?token=LpTCFbqVT1&src=pr&height=150&width=650)](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2053      +/-   ##\n   ==========================================\n   + Coverage   86.35%   86.37%   +0.01%     \n   ==========================================\n     Files         242      230      -12     \n     Lines       41184    40388     -796     \n   ==========================================\n   - Hits        35564    34884     -680     \n   + Misses       5620     5504     -116\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `86.53% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/key\\_value\\_metadata.h](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2tleV92YWx1ZV9tZXRhZGF0YS5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type-test.cc](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLXRlc3QuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table.cc](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5jYw==) | `95.09% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `92.61% <100%> (+0.22%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_ipc.py](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pcGMucHk=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_types.py](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90eXBlcy5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_convert\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X3BhbmRhcy5weQ==) | `94.71% <100%> (-0.08%)` | :arrow_down: |\n   | [cpp/src/arrow/ipc/ipc-read-write-test.cc](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvaXBjLXJlYWQtd3JpdGUtdGVzdC5jYw==) | `99.09% <100%> (+0.01%)` | :arrow_up: |\n   | ... and [17 more](https://codecov.io/gh/apache/arrow/pull/2053/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=footer). Last update [ce23c06...2f88425](https://codecov.io/gh/apache/arrow/pull/2053?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-25T12:46:18.852+0000",
                    "updated": "2018-05-25T12:46:18.852+0000",
                    "started": "2018-05-25T12:46:18.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105904",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-392062443\n \n \n   @wesm I've updated it as You suggested, but I had to left `check_metadata` argument for `Schema::Equals` to pass parquet tests. It's green now, I hope metadata equality check won't introduce compatibility issues.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-25T13:45:17.371+0000",
                    "updated": "2018-05-25T13:45:17.371+0000",
                    "started": "2018-05-25T13:45:17.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105917",
                    "issueId": "13067146"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/worklog/105918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2053: ARROW-906: [C++/Python] Read and write field metadata in IPC\nURL: https://github.com/apache/arrow/pull/2053#issuecomment-392062443\n \n \n   @wesm I've updated it as You suggested, but I had to left `check_metadata` argument for `Schema::Equals` to pass parquet tests. It's green now, I hope metadata equality checks won't introduce compatibility issues.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-25T13:45:30.490+0000",
                    "updated": "2018-05-25T13:45:30.490+0000",
                    "started": "2018-05-25T13:45:30.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "105918",
                    "issueId": "13067146"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@20a2b19c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@184b44cf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e59c170[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5cf68348[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13ff74cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2ddde9e6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ddfef6c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@15dbdf5c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dea8824[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3f3acca6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d9ce0a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7676f972[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 31 21:44:54 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-31T21:44:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-906/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2017-04-26T19:04:24.000+0000",
        "updated": "2018-05-31T21:45:07.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow up work to ARROW-898",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Serialize Field metadata to IPC metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/comment/16254700",
                    "id": "16254700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'll address this during the 0.9.0 development cycle",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-16T03:34:56.562+0000",
                    "updated": "2017-11-16T03:34:56.562+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067146/comment/16497229",
                    "id": "16497229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2053\n[https://github.com/apache/arrow/pull/2053]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-05-31T21:44:54.416+0000",
                    "updated": "2018-05-31T21:44:54.416+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3e5av:",
        "customfield_12314139": null
    }
}