{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13468634",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634",
    "key": "ARROW-16913",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12642665",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12642665",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13382084",
                    "key": "ARROW-12965",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382084",
                    "fields": {
                        "summary": "[Java] Java implementation of Arrow C data interface",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16913/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/785981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request, #13465:\nURL: https://github.com/apache/arrow/pull/13465\n\n   Implements ArrowArrayStream for Java. The equivalent Java-side interface chosen is ArrowReader.\r\n   \r\n   Also:\r\n   - Fixes a couple of JDK9 compatibility issues I ran into. I _think_ these will not normally affect people except during development (I think because I was mixing IntelliJ and Maven).\r\n   - Manually clang-format the C++ code. Clean up some things to match Arrow convention and remove some unused declarations.\r\n   - Extends the DictionaryProvider interface. This is a potentially breaking change; we could make the method default (and raise an exception) instead.\n\n\n",
                    "created": "2022-06-29T14:34:40.405+0000",
                    "updated": "2022-06-29T14:34:40.405+0000",
                    "started": "2022-06-29T14:34:40.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785981",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/785988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1170082256\n\n   https://issues.apache.org/jira/browse/ARROW-16913\n\n\n",
                    "created": "2022-06-29T14:51:43.479+0000",
                    "updated": "2022-06-29T14:51:43.479+0000",
                    "started": "2022-06-29T14:51:43.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785988",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r910142254\n\n\n##########\njava/c/src/main/java/org/apache/arrow/c/ArrayStreamExporter.java:\n##########\n@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.c;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.arrow.c.jni.JniWrapper;\n+import org.apache.arrow.c.jni.PrivateData;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.ipc.ArrowReader;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * Utility to export an {@link ArrowReader} as an ArrowArrayStream.\n+ */\n+final class ArrayStreamExporter {\n+  private final BufferAllocator allocator;\n+\n+  ArrayStreamExporter(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Java-side state for the exported stream.\n+   */\n+  static class ExportedArrayStreamPrivateData implements PrivateData {\n+    final BufferAllocator allocator;\n+    final ArrowReader reader;\n+    int nextDictionary;\n\nReview Comment:\n   This member doesn't seem used anymore, or am I missing something?\n\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n\nReview Comment:\n   Also, according to the [JNI spec](https://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/types.html), a `jlong` is always 64 bits, so perhaps we should use `jlong` or simply `int64_t` here?\n\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n\nReview Comment:\n   I suppose this doesn't work on 64-bit Windows? `long` is 32 bits there...\n\n\n\n##########\njava/c/src/main/java/org/apache/arrow/c/Data.java:\n##########\n@@ -314,4 +325,14 @@ public static VectorSchemaRoot importVectorSchemaRoot(BufferAllocator allocator,\n     }\n     return vsr;\n   }\n+\n+  /**\n+   * Import an ArrowArrayStream as an {@link ArrowReader}.\n+   * @param allocator Buffer allocator for allocating the output data.\n+   * @param stream C stream interface struct to import.\n+   * @return Imported reader\n+   */\n+  public static ArrowReader importStream(BufferAllocator allocator, ArrowArrayStream stream) {\n\nReview Comment:\n   Is there a reason for the naming discrepancy (`importStream` vs. `exportArrayStream`)?\n\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -54,23 +53,52 @@ void ThrowPendingException(const std::string& message) {\n \n void JniThrow(std::string message) { ThrowPendingException(message); }\n \n+jclass CreateGlobalClassReference(JNIEnv* env, const char* class_name) {\n+  jclass local_class = env->FindClass(class_name);\n+  if (!local_class) {\n+    std::string message = \"Could not find class \";\n+    message += class_name;\n+    ThrowPendingException(message);\n+  }\n+  jclass global_class = (jclass)env->NewGlobalRef(local_class);\n+  if (!local_class) {\n\nReview Comment:\n   Is this a mistake?\r\n   ```suggestion\r\n     if (!global_class) {\r\n   ```\n\n\n\n",
                    "created": "2022-06-29T15:55:31.470+0000",
                    "updated": "2022-06-29T15:55:31.470+0000",
                    "started": "2022-06-29T15:55:31.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786027",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r910102218\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetSchemaMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n\nReview Comment:\n   If there's an exception, should it perhaps participate in `last_error_`?\n\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetSchemaMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    return EIO;\n+  }\n+  return err_code;\n+}\n+\n+int ArrowArrayStreamGetNext(ArrowArrayStream* stream, ArrowArray* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetNextMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    return EIO;\n+  }\n+  return err_code;\n+}\n+\n+const char* ArrowArrayStreamGetLastError(ArrowArrayStream* stream) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  jobject error_data =\n+      env->GetObjectField(private_data->j_private_data_, kPrivateDataLastErrorField);\n+  if (!error_data) return nullptr;\n+\n+  auto arr = reinterpret_cast<jbyteArray>(error_data);\n+  jbyte* error_bytes = env->GetByteArrayElements(arr, nullptr);\n+  if (!error_bytes) return nullptr;\n+\n+  char* error_str = reinterpret_cast<char*>(error_bytes);\n+  private_data->last_error_ = std::string(error_str, std::strlen(error_str));\n+\n+  env->ReleaseByteArrayElements(arr, error_bytes, JNI_ABORT);\n+  return private_data->last_error_.c_str();\n+}\n+\n+void ArrowArrayStreamRelease(ArrowArrayStream* stream) {\n+  // This should not be called on already released structure\n+  assert(stream->release != nullptr);\n+  // Release all data directly owned by the struct\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  env->CallObjectMethod(private_data->j_private_data_, kPrivateDataCloseMethod);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    ThrowPendingException(\"Error calling close of private data\");\n\nReview Comment:\n   Is this right? The release callback could be called from any context, such as a Python thread or R interpreter. In those contexts, a C++ exception would probably crash the process (or silently exit the thread)?\n\n\n\n",
                    "created": "2022-06-29T15:57:01.631+0000",
                    "updated": "2022-06-29T15:57:01.631+0000",
                    "started": "2022-06-29T15:57:01.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786028",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r910224633\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetSchemaMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n\nReview Comment:\n   Normally the JNI side sets the last error, the check here is just a last-resort safeguard. I suppose this can be refactored though: copy the Java-side error to the C++ side after get_next/get_stream, and get_last_error only has to return the C++-side error; then get_next/get_stream can also update last_error_ if it ends up catching a stray error.\n\n\n\n",
                    "created": "2022-06-29T17:23:49.956+0000",
                    "updated": "2022-06-29T17:23:49.956+0000",
                    "started": "2022-06-29T17:23:49.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786142",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r910225535\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetSchemaMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    return EIO;\n+  }\n+  return err_code;\n+}\n+\n+int ArrowArrayStreamGetNext(ArrowArrayStream* stream, ArrowArray* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n+  const int err_code = env->CallIntMethod(private_data->j_private_data_,\n+                                          kPrivateDataGetNextMethod, out_addr);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    return EIO;\n+  }\n+  return err_code;\n+}\n+\n+const char* ArrowArrayStreamGetLastError(ArrowArrayStream* stream) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  jobject error_data =\n+      env->GetObjectField(private_data->j_private_data_, kPrivateDataLastErrorField);\n+  if (!error_data) return nullptr;\n+\n+  auto arr = reinterpret_cast<jbyteArray>(error_data);\n+  jbyte* error_bytes = env->GetByteArrayElements(arr, nullptr);\n+  if (!error_bytes) return nullptr;\n+\n+  char* error_str = reinterpret_cast<char*>(error_bytes);\n+  private_data->last_error_ = std::string(error_str, std::strlen(error_str));\n+\n+  env->ReleaseByteArrayElements(arr, error_bytes, JNI_ABORT);\n+  return private_data->last_error_.c_str();\n+}\n+\n+void ArrowArrayStreamRelease(ArrowArrayStream* stream) {\n+  // This should not be called on already released structure\n+  assert(stream->release != nullptr);\n+  // Release all data directly owned by the struct\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  env->CallObjectMethod(private_data->j_private_data_, kPrivateDataCloseMethod);\n+  if (env->ExceptionCheck()) {\n+    env->ExceptionDescribe();\n+    env->ExceptionClear();\n+    ThrowPendingException(\"Error calling close of private data\");\n\nReview Comment:\n   ah, you're right. The existing handler has this issue too. I'll remove the throw. (Actually here I suppose we should do our best to free resources in C++/Java regardless.)\n\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -148,16 +176,99 @@ void release_exported(T* base) {\n   // Mark released\n   base->release = nullptr;\n }\n+\n+int ArrowArrayStreamGetSchema(ArrowArrayStream* stream, ArrowSchema* out) {\n+  assert(stream->private_data != nullptr);\n+  InnerPrivateData* private_data =\n+      reinterpret_cast<InnerPrivateData*>(stream->private_data);\n+  JNIEnvGuard guard(private_data->vm_);\n+  JNIEnv* env = guard.env();\n+\n+  const long out_addr = static_cast<long>(reinterpret_cast<uintptr_t>(out));\n\nReview Comment:\n   Good catch, thanks.\n\n\n\n",
                    "created": "2022-06-29T17:24:55.031+0000",
                    "updated": "2022-06-29T17:24:55.031+0000",
                    "started": "2022-06-29T17:24:55.031+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786143",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r910225998\n\n\n##########\njava/c/src/main/java/org/apache/arrow/c/ArrayStreamExporter.java:\n##########\n@@ -0,0 +1,116 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.c;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.arrow.c.jni.JniWrapper;\n+import org.apache.arrow.c.jni.PrivateData;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.ipc.ArrowReader;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+/**\n+ * Utility to export an {@link ArrowReader} as an ArrowArrayStream.\n+ */\n+final class ArrayStreamExporter {\n+  private final BufferAllocator allocator;\n+\n+  ArrayStreamExporter(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Java-side state for the exported stream.\n+   */\n+  static class ExportedArrayStreamPrivateData implements PrivateData {\n+    final BufferAllocator allocator;\n+    final ArrowReader reader;\n+    int nextDictionary;\n\nReview Comment:\n   Ah it's not used. I missed this when backing out a change.\n\n\n\n",
                    "created": "2022-06-29T17:25:25.112+0000",
                    "updated": "2022-06-29T17:25:25.112+0000",
                    "started": "2022-06-29T17:25:25.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786144",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171147151\n\n   @lwhite1 Would you like to take a look?\n\n\n",
                    "created": "2022-06-30T12:17:01.633+0000",
                    "updated": "2022-06-30T12:17:01.633+0000",
                    "started": "2022-06-30T12:17:01.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786538",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171154089\n\n   > For the record, did you try to use this to communicate with e.g. PyArrow?\r\n   \r\n   I have not yet, I need to give this a try: https://arrow.apache.org/docs/dev/python/integration/python_java.html#java-to-python-communication-using-the-c-data-interface\r\n   \r\n   and actually, I'll extend the doc page there as well.\n\n\n",
                    "created": "2022-06-30T12:24:15.244+0000",
                    "updated": "2022-06-30T12:24:15.244+0000",
                    "started": "2022-06-30T12:24:15.243+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786544",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #13465: ARROW-16913: [Java] Implement ArrowArrayStream\nURL: https://github.com/apache/arrow/pull/13465\n\n\n",
                    "created": "2022-06-30T12:24:16.050+0000",
                    "updated": "2022-06-30T12:24:16.050+0000",
                    "started": "2022-06-30T12:24:16.049+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786545",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request, #13465:\nURL: https://github.com/apache/arrow/pull/13465\n\n   Implements ArrowArrayStream for Java. The equivalent Java-side interface chosen is ArrowReader.\r\n   \r\n   Also:\r\n   - Fixes a couple of JDK9 compatibility issues I ran into. I _think_ these will not normally affect people except during development (I think because I was mixing IntelliJ and Maven).\r\n   - Manually clang-format the C++ code. Clean up some things to match Arrow convention and remove some unused declarations.\r\n   - Extends the DictionaryProvider interface. This is a potentially breaking change; we could make the method default (and raise an exception) instead.\n\n\n",
                    "created": "2022-06-30T12:24:34.840+0000",
                    "updated": "2022-06-30T12:24:34.840+0000",
                    "started": "2022-06-30T12:24:34.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786546",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171154656\n\n   \u2026wow, whatever GitHub did to their UI is rather frustrating.\n\n\n",
                    "created": "2022-06-30T12:24:52.183+0000",
                    "updated": "2022-06-30T12:24:52.183+0000",
                    "started": "2022-06-30T12:24:52.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786547",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171338313\n\n   Hmm, there's a possible minor bug between PyArrow/C++/Java: Python can keep a reference to the reader until interpreter shutdown (at which point the JVM has been shut down), and then collects the reader. This frees the `shared_ptr<RecordBatchReader>`; the implementation is `ArrayStreamBatchReader` whose destructor unconditionally calls ArrowArrayStreamRelease. (It doesn't implement Close() since this was just added). This calls into the JNI code, which tries to attach the JVM, fails, throws an uncaught exception, and dies.\r\n   \r\n   Changes needed:\r\n   - Implement Close() properly so we can explicitly free\r\n   - Don't unconditionally call ArrowArrayStreamRelease\r\n   - In the JNI side, fail gracefully if we can't attach the JVM (warn instead of abort?)\n\n\n",
                    "created": "2022-06-30T15:07:26.338+0000",
                    "updated": "2022-06-30T15:07:26.338+0000",
                    "started": "2022-06-30T15:07:26.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786649",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171340398\n\n   > Python can keep a reference to the reader until interpreter shutdown (at which point the JVM has been shut down), and then collects the reader\r\n   \r\n   Can Python perhaps release that reference once close() is called?\n\n\n",
                    "created": "2022-06-30T15:09:13.039+0000",
                    "updated": "2022-06-30T15:09:13.039+0000",
                    "started": "2022-06-30T15:09:13.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786651",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171342321\n\n   Well, the Python-side reference is the Python reader object itself. But close() should be wired up to call the new RecordBatchReader::Close() so we can at least explicitly call the release callback at a suitable time.\n\n\n",
                    "created": "2022-06-30T15:10:52.423+0000",
                    "updated": "2022-06-30T15:10:52.423+0000",
                    "started": "2022-06-30T15:10:52.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786653",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm closed pull request #13465: ARROW-16913: [Java] Implement ArrowArrayStream\nURL: https://github.com/apache/arrow/pull/13465\n\n\n",
                    "created": "2022-06-30T15:10:53.201+0000",
                    "updated": "2022-06-30T15:10:53.201+0000",
                    "started": "2022-06-30T15:10:53.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786654",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171342389\n\n   Though the Java improvements are welcome as well. We should probably try to do both.\n\n\n",
                    "created": "2022-06-30T15:10:55.790+0000",
                    "updated": "2022-06-30T15:10:55.790+0000",
                    "started": "2022-06-30T15:10:55.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786655",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#issuecomment-1171342464\n\n   \u2026\n\n\n",
                    "created": "2022-06-30T15:11:00.604+0000",
                    "updated": "2022-06-30T15:11:00.604+0000",
                    "started": "2022-06-30T15:11:00.603+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786656",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request, #13465:\nURL: https://github.com/apache/arrow/pull/13465\n\n   Implements ArrowArrayStream for Java. The equivalent Java-side interface chosen is ArrowReader.\r\n   \r\n   Also:\r\n   - Fixes a couple of JDK9 compatibility issues I ran into. I _think_ these will not normally affect people except during development (I think because I was mixing IntelliJ and Maven).\r\n   - Manually clang-format the C++ code. Clean up some things to match Arrow convention and remove some unused declarations.\r\n   - Extends the DictionaryProvider interface. This is a potentially breaking change; we could make the method default (and raise an exception) instead.\n\n\n",
                    "created": "2022-06-30T15:11:01.794+0000",
                    "updated": "2022-06-30T15:11:01.794+0000",
                    "started": "2022-06-30T15:11:01.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786657",
                    "issueId": "13468634"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/worklog/786673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13465:\nURL: https://github.com/apache/arrow/pull/13465#discussion_r911183043\n\n\n##########\njava/c/src/main/cpp/jni_wrapper.cc:\n##########\n@@ -162,17 +163,25 @@ void release_exported(T* base) {\n   InnerPrivateData* private_data =\n       reinterpret_cast<InnerPrivateData*>(base->private_data);\n \n-  JNIEnvGuard guard(private_data->vm_);\n-  JNIEnv* env = guard.env();\n-\n-  env->CallObjectMethod(private_data->j_private_data_, kPrivateDataCloseMethod);\n-  if (env->ExceptionCheck()) {\n-    // Can't signal this to caller, so log and then try to free things\n-    // as best we can\n-    env->ExceptionDescribe();\n-    env->ExceptionClear();\n+  // It is possible for the JVM to be shut down when this is called;\n+  // guard against that.  Example: Python code using JPype may shut\n+  // down the JVM before releasing the stream.\n+  try {\n+    JNIEnvGuard guard(private_data->vm_);\n+    JNIEnv* env = guard.env();\n+\n+    env->CallObjectMethod(private_data->j_private_data_, kPrivateDataCloseMethod);\n+    if (env->ExceptionCheck()) {\n+      // Can't signal this to caller, so log and then try to free things\n+      // as best we can\n+      env->ExceptionDescribe();\n+      env->ExceptionClear();\n+    }\n+    env->DeleteGlobalRef(private_data->j_private_data_);\n+  } catch (const JniPendingException& e) {\n+    std::cerr << \"WARNING: Failed to release Java C Data resource: \" << e.what()\n\nReview Comment:\n   Do we have access to `ARROW_LOG(WARNING)` here?\n\n\n\n",
                    "created": "2022-06-30T15:44:27.905+0000",
                    "updated": "2022-06-30T15:44:27.905+0000",
                    "started": "2022-06-30T15:44:27.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786673",
                    "issueId": "13468634"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@605e40a3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72ebe668[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@646d9912[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4918eb51[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d1eae65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6f495097[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67e4f165[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@69a8dcab[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@218d3a7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4651b33[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@444aad03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6b286ca5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 05 11:48:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-05T11:48:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16913/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-06-27T15:13:08.000+0000",
        "updated": "2022-07-05T11:48:27.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-12965 implemented the core C Data Interface, but we still need to implement the streaming interface.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement ArrowArrayStream/C Stream Interface",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13468634/comment/17562625",
                    "id": "17562625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "Issue resolved by pull request 13465\n[https://github.com/apache/arrow/pull/13465]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "created": "2022-07-05T11:48:27.485+0000",
                    "updated": "2022-07-05T11:48:27.485+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z16e9s:",
        "customfield_12314139": null
    }
}