{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393927",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393927",
    "key": "ARROW-13578",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mnizol",
            "name": "mnizol",
            "key": "mnizol",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Matt Nizol",
            "active": true,
            "timeZone": "America/Detroit"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mnizol",
            "name": "mnizol",
            "key": "mnizol",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Matt Nizol",
            "active": true,
            "timeZone": "America/Detroit"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13578/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@62067efd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51313e8d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b980457[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@238588ff[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bd60e84[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@62343a2b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59b52086[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5678893f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6de11f5a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2e4785af[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e8631f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4ca56a6f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 10 10:28:15 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13578/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-08-06T16:41:37.000+0000",
        "updated": "2021-08-10T10:34:50.000+0000",
        "timeoriginalestimate": null,
        "description": "When creating a partitioned data set via the pandas.to_parquet() method, partition columns are ostensibly cast to strings in the partition metadata.\u00a0 When reading specific partitions via the filters parameter in pandas.read_parquet(), string values must be used for filter operands _except when_ the partition column has an integer value.\u00a0\u00a0\r\n\r\nConsider the following example:\r\n{code:python}\r\nimport datetime\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame({\r\n    \"key1\": ['0', '1', '2'], \r\n    \"key2\": [0, 1, 2],\r\n    \"key3\": ['a', 'b', 'c'],\r\n    \"key4\": [1.1, 2.2, 3.3],\r\n    \"key5\": [True, False, True],\r\n    \"key6\": [datetime.date(2021, 6, 2), datetime.date(2021, 6, 3), datetime.date(2021, 6, 4)],\r\n    \"data\": [\"foo\", \"bar\", \"baz\"]\r\n})\r\n\r\ndf['key6'] = pd.to_datetime(df['key6'])\r\n\r\ndf.to_parquet('./test.parquet', partition_cols=['key1', 'key2', 'key3', 'key4', 'key5', 'key6'])\r\n{code}\r\nReading into a ParquetDataset and inspecting the partition levels suggests that partition keys have been cast to string, regardless of the original type:\r\n{code:python}\r\nimport pyarrow.parquet as pq\r\nds = pq.ParquetDataset('./test.parquet')\r\nfor level in ds.partitions.levels:\r\n    print(f\"{level.name}: {level.keys}\")\r\n{code}\r\n\r\nOutput:\r\n{noformat}\r\nkey1: ['0', '1', '2']\r\nkey2: ['0', '1', '2']\r\nkey3: ['a', 'b', 'c']\r\nkey4: ['1.1', '2.2', '3.3']\r\nkey5: ['True', 'False']\r\nkey6: ['2021-06-02 00:00:00', '2021-06-03 00:00:00', '2021-06-04 00:00:00']{noformat}\r\n\r\nFiltering the dataset using any of the non-integer partition keys along with string-valued operands works as expected:\r\n\r\n{code:python}\r\ndf2=pd.read_parquet('./test.parquet', filters=[('key4','=','1.1'), ('key5', '=', 'True')])\r\ndf2.head()\r\n{code}\r\n\r\nOutput:\r\n{noformat}\r\n\tdata\tkey1\tkey2\tkey3\tkey4\tkey5\tkey6\r\n0\tfoo\t0\t0\ta\t1.1\tTrue\t2021-06-02 00:00:00\r\n{noformat}\r\n\r\nHowever, filtering the dataset using either of the integer-valued partition keys with a string-valued operand raises an exception, *even when the original column's data type is string*:\r\n\r\n{code:python}\r\ndf2=pd.read_parquet('./test.parquet', filters=[('key1','=','1')])\r\ndf2.head()\r\n{code}\r\n\r\n{noformat}\r\nArrowNotImplementedError: Function equal has no kernel matching input types (array[int32], scalar[string])\r\n{noformat}\r\n\r\nIt would seem to be less surprising / more consistent if filter operands either (a) are always cast to string, or (b) always retain their original type.\r\n\r\nNote, this issue may be related to ARROW-12114.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Inconsistent handling of integer-valued partitions in dataset filters API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393927/comment/17396598",
                    "id": "17396598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~mnizol] thanks a lot for the clear and detailed report. \r\n\r\nWhat's causing the confusion here is that we have both a legacy Python implementation of ParquetDataset and a new generic Datasets API, and that we are still in the middle of moving to the new implementation: {{ParquetDataset}} still uses the legacy implementation by default (but you can use {{use_legacy_dataset=False}} to opt in to the new), while {{pq.read_table}} (which is what {{pd.read_parquet}} uses under the hood) is already defaulting to the new implementation (but you can fall back to the old with {{use_legacy_dataset=True}}).\r\n\r\nIn the legacy ParquetDataset implementation, all partition keys are indeed parsed as strings as you show with the output of {{ParquetDataset.partitions.levels}}. So when passing {{use_legacy_dataset=True}} to the read function, using a string actually works:\r\n\r\n{code}\r\nIn [19]: pd.read_parquet('./test.parquet', filters=[('key1','=','1')], use_legacy_dataset=True)\r\nOut[19]: \r\n  data key1 key2 key3 key4   key5                 key6\r\n0  bar    1    1    b  2.2  False  2021-06-03 00:00:00\r\n{code}\r\n\r\nBTW, also using an integer works here ({{('key1', '=', 1)}}), because the legacy implementation will try to interpret the value with the type of the partition levels.\r\n\r\nIn the new Datasets API, the parsing of the directory paths currently supports int32 and strings (when inferring, you can use other types when explicitly passing the schema for the partition keys). \r\nSo when creating a ParquetDataset with use_legacy_dataset=False, we see:\r\n\r\n{code}\r\nIn [21]: ds = pq.ParquetDataset('test_partitions', use_legacy_dataset=False)\r\n\r\nIn [22]: ds._dataset.partitioning\r\nOut[22]: <pyarrow._dataset.HivePartitioning at 0x7f2fe010c830>\r\n\r\nIn [23]: ds._dataset.partitioning.schema\r\nOut[23]: \r\nkey1: dictionary<values=int32, indices=int32, ordered=0>\r\nkey2: dictionary<values=int32, indices=int32, ordered=0>\r\nkey3: dictionary<values=string, indices=int32, ordered=0>\r\nkey4: dictionary<values=string, indices=int32, ordered=0>\r\nkey5: dictionary<values=string, indices=int32, ordered=0>\r\nkey6: dictionary<values=string, indices=int32, ordered=0>\r\n-- schema metadata --\r\npandas: '{\"index_columns\": [], \"column_indexes\": [{\"name\": null, \"field_n' + 340\r\n\r\nIn [24]: ds._dataset.partitioning.dictionaries\r\nOut[24]: \r\n[<pyarrow.lib.Int32Array object at 0x7f2f63ad8760>\r\n [\r\n   0,\r\n   1,\r\n   2\r\n ],\r\n <pyarrow.lib.Int32Array object at 0x7f2f62dae220>\r\n [\r\n   0,\r\n   1,\r\n   2\r\n ],\r\n <pyarrow.lib.StringArray object at 0x7f2f62dae8e0>\r\n [\r\n   \"a\",\r\n   \"b\",\r\n   \"c\"\r\n ],\r\n <pyarrow.lib.StringArray object at 0x7f2f62dae0a0>\r\n [\r\n   \"1.1\",\r\n   \"2.2\",\r\n   \"3.3\"\r\n ],\r\n <pyarrow.lib.StringArray object at 0x7f2f62dae1c0>\r\n [\r\n   \"True\",\r\n   \"False\"\r\n ],\r\n <pyarrow.lib.StringArray object at 0x7f2f62dae340>\r\n [\r\n   \"2021-06-02 00:00:00\",\r\n   \"2021-06-03 00:00:00\",\r\n   \"2021-06-04 00:00:00\"\r\n ]]\r\n{code}\r\n\r\nSo the first two partition keys are inferred as int, the others as string. And that's also the reason that for this case, you actually need to specify the filter using an integer (we decided to not do such automatic casting here in the new implementation).\r\nSidenote: I am using {{ds._dataset.partitioning}} above, but this will become {{ds.partitioning}} after ARROW-13525. \r\n\r\nSo with an integer value in the filter this works (adding {{use_legacy_dataset=False}} explicitly, but so this is the default in {{pq.read_table}} / {{pd.read_parquet}}):\r\n\r\n{code}\r\nIn [20]: pd.read_parquet('./test_partitions/', filters=[('key1','=', 1)], use_legacy_dataset=False)\r\nOut[20]: \r\n  data key1 key2 key3 key4   key5                 key6\r\n0  bar    1    1    b  2.2  False  2021-06-03 00:00:00\r\n{code}\r\n\r\nUsing the new datasets API directly, this looks like:\r\n\r\n{code}\r\nIn [25]: import pyarrow.dataset as ds\r\n\r\nIn [26]: dataset = ds.dataset(\"test_partitions/\", format=\"parquet\", partitioning=\"hive\")\r\n\r\nIn [28]: dataset.to_table(filter=ds.field(\"key1\") == 1).to_pandas()\r\nOut[28]: \r\n  data  key1  key2 key3 key4   key5                 key6\r\n0  bar     1     1    b  2.2  False  2021-06-03 00:00:00\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-08-10T10:28:15.474+0000",
                    "updated": "2021-08-10T10:34:50.695+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0toiw:",
        "customfield_12314139": null
    }
}