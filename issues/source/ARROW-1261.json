{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13089763",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763",
    "key": "ARROW-1261",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12513721",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12513721",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13090216",
                    "key": "ARROW-1279",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13090216",
                    "fields": {
                        "summary": "[Integration][Java] Integration tests for Map type",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1261/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 41,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/252858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: [WIP] ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-498063342\n \n \n   >@BryanCutler given its a WIP, do you still want a review?\r\n   \r\n   @emkornfield it might be better to hold off on a detailed review until I finish up with tests and make another pass through. If you'd like to take a high-level look now and discuss the new classes and APIs, that would be much appreciated! I basically extended everything from a List of key/value structs, but there are other ways to do it too.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-02T20:36:09.284+0000",
                    "updated": "2019-06-02T20:36:09.284+0000",
                    "started": "2019-06-02T20:36:09.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "252858",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: [WIP] ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-498869992\n \n \n   Making a MapWriter that is able to constrain the StructVector and key Vector to be non-nullable got a little messy.  The vector writers are all designed to only make nullable vectors, so I added a flag that can be set, so that when the writer creates a vector, it can be made as non-nullable. I tried a couple other ways to go about it, like using `NonNullableStructVector`, but it didn't work out very well so this was the cleanest way I could find to go about it. I didn't try to make a MapWriter from scratch, because that seemed overkill, but it could be possible also.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T22:42:35.635+0000",
                    "updated": "2019-06-04T22:42:35.635+0000",
                    "started": "2019-06-04T22:42:35.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254082",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: [WIP] ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-498870370\n \n \n   @bkietz I think this is ready to try integration tests with. How are things on the C++ side?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T22:44:26.844+0000",
                    "updated": "2019-06-04T22:44:26.844+0000",
                    "started": "2019-06-04T22:44:26.843+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254083",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: [WIP] ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-497891365\n \n \n   This is a WIP, currently need to add ~roundtrip tests in Java~ and complete unit tests - and add Javadocs of course :)\r\n   \r\n   Java roundtrip tests passing\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T22:45:37.158+0000",
                    "updated": "2019-06-04T22:45:37.158+0000",
                    "started": "2019-06-04T22:45:37.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254084",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4444: [WIP] ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-498894435\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=h1) Report\n   > Merging [#4444](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3379ec2bdfb5f5657d446f6bf7ed62026cd10a30?src=pr&el=desc) will **increase** coverage by `1.04%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4444/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4444      +/-   ##\n   ==========================================\n   + Coverage   88.42%   89.46%   +1.04%     \n   ==========================================\n     Files         793      645     -148     \n     Lines      101335    89543   -11792     \n     Branches     1253        0    -1253     \n   ==========================================\n   - Hits        89602    80109    -9493     \n   + Misses      11486     9434    -2052     \n   + Partials      247        0     -247\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/compat.py](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvY29tcGF0LnB5) | `57.14% <0%> (-32.97%)` | :arrow_down: |\n   | [python/pyarrow/flight.py](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZmxpZ2h0LnB5) | `80% <0%> (-20%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-9.63%)` | :arrow_down: |\n   | [python/pyarrow/util.py](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdXRpbC5weQ==) | `47.45% <0%> (-8.48%)` | :arrow_down: |\n   | [python/pyarrow/error.pxi](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZXJyb3IucHhp) | `53.19% <0%> (-6.39%)` | :arrow_down: |\n   | [cpp/src/arrow/status.cc](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuY2M=) | `33.69% <0%> (-3.27%)` | :arrow_down: |\n   | [python/pyarrow/tests/conftest.py](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvY29uZnRlc3QucHk=) | `71.42% <0%> (-3.07%)` | :arrow_down: |\n   | [python/pyarrow/io.pxi](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaW8ucHhp) | `72.03% <0%> (-3.04%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_io.py](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pby5weQ==) | `96.86% <0%> (-2.17%)` | :arrow_down: |\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | ... and [211 more](https://codecov.io/gh/apache/arrow/pull/4444/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=footer). Last update [3379ec2...afe89e2](https://codecov.io/gh/apache/arrow/pull/4444?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T00:40:54.756+0000",
                    "updated": "2019-06-05T00:40:54.756+0000",
                    "started": "2019-06-05T00:40:54.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254107",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-497891365\n \n \n   This is a WIP, currently need to add ~roundtrip tests in Java~ and ~complete unit tests~ - and ~add Javadocs~ of course :)\r\n   \r\n   Java roundtrip tests passing\r\n   MapVector tests passing\r\n   Javadocs added\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T22:18:15.516+0000",
                    "updated": "2019-06-05T22:18:15.516+0000",
                    "started": "2019-06-05T22:18:15.515+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254713",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-499287089\n \n \n   I think this is ready to review, although still need to work on integration testing. cc @emkornfield @siddharthteotia @pravindra @jacques-n \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T23:02:02.594+0000",
                    "updated": "2019-06-05T23:02:02.594+0000",
                    "started": "2019-06-05T23:02:02.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254742",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291029836\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionMapWriter.java\n ##########\n @@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.vector.complex.writer.DecimalWriter;\n+import org.apache.arrow.vector.holders.DecimalHolder;\n+\n+import java.lang.UnsupportedOperationException;\n+import java.math.BigDecimal;\n+\n+<@pp.dropOutputFile />\n+<@pp.changeOutputFile name=\"/org/apache/arrow/vector/complex/impl/UnionMapWriter.java\" />\n+\n+\n+<#include \"/@includes/license.ftl\" />\n+\n+package org.apache.arrow.vector.complex.impl;\n+\n+<#include \"/@includes/vv_imports.ftl\" />\n+\n+/*\n+ * This class is generated using freemarker and the ${.template_name} template.\n+ */\n+\n+@SuppressWarnings(\"unused\")\n+public class UnionMapWriter extends UnionListWriter {\n+\n+  private enum MapWriteMode {\n+    OFF,\n \n Review comment:\n   this might need more explanation?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.554+0000",
                    "updated": "2019-06-06T06:18:12.554+0000",
                    "started": "2019-06-06T06:18:12.553+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254911",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291031270\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n ##########\n @@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.AddOrGetResult;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.impl.UnionMapReader;\n+import org.apache.arrow.vector.complex.impl.UnionMapWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.Types.MinorType;\n+import org.apache.arrow.vector.types.pojo.ArrowType.Map;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+\n+/**\n+ * A MapVector is used to store entries of key/value pairs. It is a container vector that is\n+ * composed of a list of struct values with \"key\" and \"value\" fields. The MapVector is nullable,\n+ * but if a map is set at a given index, there be an entry. In other words, the StructVector data\n+ * is non-nullable. Also for a given entry, the \"key\" is non-nullable, however the \"value\" can\n+ * be null.\n+ */\n+public class MapVector extends ListVector {\n+\n+  public static final String KEY_NAME = \"key\";\n+  public static final String VALUE_NAME = \"value\";\n+\n+  /**\n+   * Construct an empty MapVector with no data. Child vectors must be added subsequently.\n+   *\n+   * @param name The name of the vector.\n+   * @param allocator The allocator used for allocating/reallocating buffers.\n+   * @param keysSorted True if the map keys have been pre-sorted.\n+   * @return a new instance of MapVector.\n+   */\n+  public static MapVector empty(String name, BufferAllocator allocator, boolean keysSorted) {\n+    return new MapVector(name, allocator, FieldType.nullable(new Map(keysSorted)), null);\n+  }\n+\n+  /**\n+   * Construct a MapVector instance.\n+   *\n+   * @param name The name of the vector.\n+   * @param allocator The allocator used for allocating/reallocating buffers.\n+   * @param fieldType The type definition of the MapVector.\n+   * @param callBack A schema change callback.\n+   */\n+  public MapVector(String name, BufferAllocator allocator, FieldType fieldType, CallBack callBack) {\n+    super(name, allocator, fieldType, callBack);\n+    reader = new UnionMapReader(this);\n+  }\n+\n+  /**\n+   * Initialize child vectors of the map from the given list of fields.\n+   *\n+   * @param children List of fields that will be children of this MapVector.\n+   */\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (children.size() != 1) {\n \n Review comment:\n   Predconditions.checkArgument?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.585+0000",
                    "updated": "2019-06-06T06:18:12.585+0000",
                    "started": "2019-06-06T06:18:12.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254912",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291033182\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionMapWriter.java\n ##########\n @@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.vector.complex.writer.DecimalWriter;\n+import org.apache.arrow.vector.holders.DecimalHolder;\n+\n+import java.lang.UnsupportedOperationException;\n+import java.math.BigDecimal;\n+\n+<@pp.dropOutputFile />\n+<@pp.changeOutputFile name=\"/org/apache/arrow/vector/complex/impl/UnionMapWriter.java\" />\n+\n+\n+<#include \"/@includes/license.ftl\" />\n+\n+package org.apache.arrow.vector.complex.impl;\n+\n+<#include \"/@includes/vv_imports.ftl\" />\n+\n+/*\n+ * This class is generated using freemarker and the ${.template_name} template.\n+ */\n+\n+@SuppressWarnings(\"unused\")\n+public class UnionMapWriter extends UnionListWriter {\n+\n+  private enum MapWriteMode {\n+    OFF,\n+    KEY,\n+    VALUE,\n+  }\n+\n+  private MapWriteMode mode = MapWriteMode.OFF;\n+  private StructWriter entryWriter;\n+\n \n Review comment:\n   should the writer enforce uniqueness/sorted-ness (I suppose this would be difficult in the general case)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.608+0000",
                    "updated": "2019-06-06T06:18:12.608+0000",
                    "started": "2019-06-06T06:18:12.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254913",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291031817\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -79,6 +81,40 @@ public NonNullableStructVector(String name, BufferAllocator allocator, FieldType\n     this.valueCount = 0;\n   }\n \n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (ownBuffers.size() != 0) {\n \n Review comment:\n   Preconditions?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.625+0000",
                    "updated": "2019-06-06T06:18:12.625+0000",
                    "started": "2019-06-06T06:18:12.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254914",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291032799\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionMapWriter.java\n ##########\n @@ -0,0 +1,141 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import io.netty.buffer.ArrowBuf;\n+import org.apache.arrow.vector.complex.writer.DecimalWriter;\n+import org.apache.arrow.vector.holders.DecimalHolder;\n+\n+import java.lang.UnsupportedOperationException;\n+import java.math.BigDecimal;\n+\n+<@pp.dropOutputFile />\n+<@pp.changeOutputFile name=\"/org/apache/arrow/vector/complex/impl/UnionMapWriter.java\" />\n+\n+\n+<#include \"/@includes/license.ftl\" />\n+\n+package org.apache.arrow.vector.complex.impl;\n+\n+<#include \"/@includes/vv_imports.ftl\" />\n+\n+/*\n+ * This class is generated using freemarker and the ${.template_name} template.\n+ */\n+\n+@SuppressWarnings(\"unused\")\n+public class UnionMapWriter extends UnionListWriter {\n \n Review comment:\n   some more javadoc here might be useful.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.725+0000",
                    "updated": "2019-06-06T06:18:12.725+0000",
                    "started": "2019-06-06T06:18:12.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254915",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291031136\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n ##########\n @@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.AddOrGetResult;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.impl.UnionMapReader;\n+import org.apache.arrow.vector.complex.impl.UnionMapWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.Types.MinorType;\n+import org.apache.arrow.vector.types.pojo.ArrowType.Map;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+\n+/**\n+ * A MapVector is used to store entries of key/value pairs. It is a container vector that is\n \n Review comment:\n   lists?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.745+0000",
                    "updated": "2019-06-06T06:18:12.745+0000",
                    "started": "2019-06-06T06:18:12.744+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254916",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291032649\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowFile.java\n ##########\n @@ -749,6 +749,52 @@ public void testReadWriteMultipleBatches() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testWriteReadMapVector() throws IOException {\n+    File file = new File(\"target/mytest_map.arrow\");\n+    ByteArrayOutputStream stream = new ByteArrayOutputStream();\n+\n+    // write\n+    try (BufferAllocator originalVectorAllocator =\n+           allocator.newChildAllocator(\"original vectors\", 0, Integer.MAX_VALUE)) {\n+\n+      try (VectorSchemaRoot root = writeMapData(originalVectorAllocator);\n+           FileOutputStream fileOutputStream = new FileOutputStream(file);\n+           ArrowFileWriter fileWriter = new ArrowFileWriter(root, null, fileOutputStream.getChannel());\n+           ArrowStreamWriter streamWriter = new ArrowStreamWriter(root, null, stream)) {\n+        LOGGER.debug(\"writing schema: \" + root.getSchema());\n+        fileWriter.start();\n+        streamWriter.start();\n+        fileWriter.writeBatch();\n+        streamWriter.writeBatch();\n+        fileWriter.end();\n+        streamWriter.end();\n+      }\n+    }\n+\n+    // read from file\n+    try (BufferAllocator readerAllocator = allocator.newChildAllocator(\"reader\", 0, Integer.MAX_VALUE);\n+         FileInputStream fileInputStream = new FileInputStream(file);\n+         ArrowFileReader arrowReader = new ArrowFileReader(fileInputStream.getChannel(), readerAllocator)) {\n+      VectorSchemaRoot root = arrowReader.getVectorSchemaRoot();\n+      Schema schema = root.getSchema();\n+      LOGGER.debug(\"reading schema: \" + schema);\n+      Assert.assertTrue(arrowReader.loadNextBatch());\n+      validateMapData(root);\n+    }\n+\n+    // Read from stream\n+    try (BufferAllocator readerAllocator = allocator.newChildAllocator(\"reader\", 0, Integer.MAX_VALUE);\n+         ByteArrayInputStream input = new ByteArrayInputStream(stream.toByteArray());\n+         ArrowStreamReader arrowReader = new ArrowStreamReader(input, readerAllocator)) {\n+      VectorSchemaRoot root = arrowReader.getVectorSchemaRoot();\n+      Schema schema = root.getSchema();\n \n Review comment:\n   we should make sure there is a unit or integration test that calls the columns by different names and we can still read/write the type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.823+0000",
                    "updated": "2019-06-06T06:18:12.823+0000",
                    "started": "2019-06-06T06:18:12.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254917",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291031780\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -79,6 +81,40 @@ public NonNullableStructVector(String name, BufferAllocator allocator, FieldType\n     this.valueCount = 0;\n   }\n \n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (ownBuffers.size() != 0) {\n+      throw new IllegalArgumentException(\"Illegal buffer count, expected \" + 0 + \", got: \" + ownBuffers.size());\n \n Review comment:\n   not sure this add much without a constant variable?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:12.890+0000",
                    "updated": "2019-06-06T06:18:12.890+0000",
                    "started": "2019-06-06T06:18:12.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254918",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291029140\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/AbstractFieldWriter.java\n ##########\n @@ -30,6 +30,13 @@\n  */\n @SuppressWarnings(\"unused\")\n abstract class AbstractFieldWriter extends AbstractBaseWriter implements FieldWriter {\n+\n+  protected boolean addVectorAsNullable = true;\n+\n+  public void setAddVectorAsNullable(boolean nullable) {\n+    addVectorAsNullable = nullable;\n+  }\n \n Review comment:\n   some more documentation here would be useful\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:14.240+0000",
                    "updated": "2019-06-06T06:18:14.240+0000",
                    "started": "2019-06-06T06:18:14.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254919",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291029258\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/StructWriters.java\n ##########\n @@ -65,7 +65,8 @@\n         list(child.getName());\n         break;\n       case UNION:\n-        UnionWriter writer = new UnionWriter(container.addOrGet(child.getName(), FieldType.nullable(MinorType.UNION.getType()), UnionVector.class), getNullableStructWriterFactory());\n+        FieldType fieldType = new FieldType(addVectorAsNullable, MinorType.UNION.getType(), null, null);\n \n Review comment:\n   what are the nulls being passed through here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:15.221+0000",
                    "updated": "2019-06-06T06:18:15.221+0000",
                    "started": "2019-06-06T06:18:15.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254920",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291030166\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n ##########\n @@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.AddOrGetResult;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.impl.UnionMapReader;\n+import org.apache.arrow.vector.complex.impl.UnionMapWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.Types.MinorType;\n+import org.apache.arrow.vector.types.pojo.ArrowType.Map;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+\n+/**\n+ * A MapVector is used to store entries of key/value pairs. It is a container vector that is\n+ * composed of a list of struct values with \"key\" and \"value\" fields. The MapVector is nullable,\n+ * but if a map is set at a given index, there be an entry. In other words, the StructVector data\n \n Review comment:\n   grammar?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:15.229+0000",
                    "updated": "2019-06-06T06:18:15.229+0000",
                    "started": "2019-06-06T06:18:15.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254921",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/254922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#discussion_r291031434\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n ##########\n @@ -0,0 +1,147 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.complex;\n+\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.AddOrGetResult;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.impl.UnionMapReader;\n+import org.apache.arrow.vector.complex.impl.UnionMapWriter;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.Types.MinorType;\n+import org.apache.arrow.vector.types.pojo.ArrowType.Map;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+\n+/**\n+ * A MapVector is used to store entries of key/value pairs. It is a container vector that is\n+ * composed of a list of struct values with \"key\" and \"value\" fields. The MapVector is nullable,\n+ * but if a map is set at a given index, there be an entry. In other words, the StructVector data\n+ * is non-nullable. Also for a given entry, the \"key\" is non-nullable, however the \"value\" can\n+ * be null.\n+ */\n+public class MapVector extends ListVector {\n+\n+  public static final String KEY_NAME = \"key\";\n+  public static final String VALUE_NAME = \"value\";\n+\n+  /**\n+   * Construct an empty MapVector with no data. Child vectors must be added subsequently.\n+   *\n+   * @param name The name of the vector.\n+   * @param allocator The allocator used for allocating/reallocating buffers.\n+   * @param keysSorted True if the map keys have been pre-sorted.\n+   * @return a new instance of MapVector.\n+   */\n+  public static MapVector empty(String name, BufferAllocator allocator, boolean keysSorted) {\n+    return new MapVector(name, allocator, FieldType.nullable(new Map(keysSorted)), null);\n+  }\n+\n+  /**\n+   * Construct a MapVector instance.\n+   *\n+   * @param name The name of the vector.\n+   * @param allocator The allocator used for allocating/reallocating buffers.\n+   * @param fieldType The type definition of the MapVector.\n+   * @param callBack A schema change callback.\n+   */\n+  public MapVector(String name, BufferAllocator allocator, FieldType fieldType, CallBack callBack) {\n+    super(name, allocator, fieldType, callBack);\n+    reader = new UnionMapReader(this);\n+  }\n+\n+  /**\n+   * Initialize child vectors of the map from the given list of fields.\n+   *\n+   * @param children List of fields that will be children of this MapVector.\n+   */\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (children.size() != 1) {\n+      throw new IllegalArgumentException(\"Maps have one List child. Found: \" + children);\n+    }\n+\n+    Field structField = children.get(0);\n+    MinorType minorType = Types.getMinorTypeForArrowType(structField.getType());\n+    if (minorType != MinorType.STRUCT || structField.isNullable()) {\n \n Review comment:\n   Preconditions?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:18:15.779+0000",
                    "updated": "2019-06-06T06:18:15.779+0000",
                    "started": "2019-06-06T06:18:15.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254922",
                    "issueId": "13089763"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/worklog/255128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #4444: ARROW-1261: [Java] Add MapVector with reader and writer\nURL: https://github.com/apache/arrow/pull/4444#issuecomment-499516769\n \n \n   @BryanCutler should be merged soon\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T14:25:14.031+0000",
                    "updated": "2019-06-06T14:25:14.031+0000",
                    "started": "2019-06-06T14:25:14.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255128",
                    "issueId": "13089763"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4e7aeca9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@751f81aa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a1a082b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5381d013[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74f2d2bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@52128963[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5843985a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@51fca09[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@679ab71b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2185731a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65c0be38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ef46f0b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 11 05:35:54 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-11T05:35:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1261/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-07-25T03:17:24.000+0000",
        "updated": "2019-06-11T05:35:54.000+0000",
        "timeoriginalestimate": null,
        "description": "As follow up to ARROW-1246",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Add container type for Map logical type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/comment/16840527",
                    "id": "16840527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I am planning to start working on this soon unless you still wanted to [~siddteotia]?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-05-15T16:05:51.862+0000",
                    "updated": "2019-05-15T16:05:51.862+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/comment/16850256",
                    "id": "16850256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I'll reassign to myself for now, I'll probably be able to start work in a couple days",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-05-29T00:39:19.099+0000",
                    "updated": "2019-05-29T00:39:19.099+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13089763/comment/16860572",
                    "id": "16860572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4444\n[https://github.com/apache/arrow/pull/4444]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-11T05:35:54.918+0000",
                    "updated": "2019-06-11T05:35:54.918+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3hylr:",
        "customfield_12314139": null
    }
}