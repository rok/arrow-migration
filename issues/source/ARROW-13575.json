{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393733",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733",
    "key": "ARROW-13575",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12620614",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12620614",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13389644",
                    "key": "ARROW-13339",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389644",
                    "fields": {
                        "summary": "[C++] Implement hash_aggregate kernels (umbrella issue)",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13575/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/634755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#issuecomment-893724407\n\n\n   https://issues.apache.org/jira/browse/ARROW-13575\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T19:24:35.145+0000",
                    "updated": "2021-08-05T19:24:35.145+0000",
                    "started": "2021-08-05T19:24:35.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634755",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/634948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r683931261\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1011,6 +1011,108 @@ struct GroupedSumFactory {\n   InputType argument_type;\n };\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+template <typename Type>\n+struct GroupedProductImpl : public GroupedAggregator {\n+  using AccType = typename FindAccumulatorType<Type>::Type;\n+  using ProductType = typename TypeTraits<AccType>::CType;\n+\n+  Status Init(ExecContext* ctx, const FunctionOptions*) override {\n+    pool_ = ctx->memory_pool();\n+    products_ = TypedBufferBuilder<ProductType>(pool_);\n+    valid_ = TypedBufferBuilder<bool>(pool_);\n+    out_type_ = TypeTraits<AccType>::type_singleton();\n+    return Status::OK();\n+  }\n+\n+  Status Resize(int64_t new_num_groups) override {\n+    auto added_groups = new_num_groups - num_groups_;\n+    num_groups_ = new_num_groups;\n+    RETURN_NOT_OK(products_.Append(added_groups * sizeof(AccType), 1));\n+    RETURN_NOT_OK(valid_.Append(added_groups, false));\n+    return Status::OK();\n+  }\n+\n+  Status Consume(const ExecBatch& batch) override {\n+    ProductType* products = products_.mutable_data();\n+    auto valid = valid_.mutable_data();\n+\n+    auto g = batch[1].array()->GetValues<uint32_t>(1);\n+    VisitArrayDataInline<Type>(\n+        *batch[0].array(),\n+        [&](typename TypeTraits<Type>::CType value) {\n+          products[*g] *= value;\n\nReview comment:\n       Will it cause signed integer overflow?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-06T04:08:35.051+0000",
                    "updated": "2021-08-06T04:08:35.051+0000",
                    "started": "2021-08-06T04:08:35.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634948",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r684235385\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1011,6 +1011,108 @@ struct GroupedSumFactory {\n   InputType argument_type;\n };\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+template <typename Type>\n+struct GroupedProductImpl : public GroupedAggregator {\n+  using AccType = typename FindAccumulatorType<Type>::Type;\n+  using ProductType = typename TypeTraits<AccType>::CType;\n+\n+  Status Init(ExecContext* ctx, const FunctionOptions*) override {\n+    pool_ = ctx->memory_pool();\n+    products_ = TypedBufferBuilder<ProductType>(pool_);\n+    valid_ = TypedBufferBuilder<bool>(pool_);\n+    out_type_ = TypeTraits<AccType>::type_singleton();\n+    return Status::OK();\n+  }\n+\n+  Status Resize(int64_t new_num_groups) override {\n+    auto added_groups = new_num_groups - num_groups_;\n+    num_groups_ = new_num_groups;\n+    RETURN_NOT_OK(products_.Append(added_groups * sizeof(AccType), 1));\n+    RETURN_NOT_OK(valid_.Append(added_groups, false));\n+    return Status::OK();\n+  }\n+\n+  Status Consume(const ExecBatch& batch) override {\n+    ProductType* products = products_.mutable_data();\n+    auto valid = valid_.mutable_data();\n+\n+    auto g = batch[1].array()->GetValues<uint32_t>(1);\n+    VisitArrayDataInline<Type>(\n+        *batch[0].array(),\n+        [&](typename TypeTraits<Type>::CType value) {\n+          products[*g] *= value;\n\nReview comment:\n       Ah fair point. Updated to check for overflow for integers.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-06T13:28:53.907+0000",
                    "updated": "2021-08-06T13:28:53.907+0000",
                    "started": "2021-08-06T13:28:53.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635147",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r684577283\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,158 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    return ConsumeImpl(batch);\n+  }\n+\n+  template <typename T = ArrowType>\n+  enable_if_integer<T, Status> ConsumeImpl(const ExecBatch& batch) {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<T>(\n+          *data,\n+          [&](typename TypeTraits<T>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n\nReview comment:\n       Is it possible to provide a sfina `multiply` function for integers and float, so we can eliminate duplicated array visiting code?\r\n   The float multiply always returns true, the compiler will optimize away the return value checking.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-07T03:33:51.550+0000",
                    "updated": "2021-08-07T03:33:51.550+0000",
                    "started": "2021-08-07T03:33:51.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635541",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r684577283\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,158 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    return ConsumeImpl(batch);\n+  }\n+\n+  template <typename T = ArrowType>\n+  enable_if_integer<T, Status> ConsumeImpl(const ExecBatch& batch) {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<T>(\n+          *data,\n+          [&](typename TypeTraits<T>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n\nReview comment:\n       Is it possible to provide a sfina `multiply` function for integers and float, so we can eliminate duplicated array visiting code?\r\n   The float multiply always returns 'no overflow', the compiler will optimize away the return value checking.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-07T04:39:08.619+0000",
                    "updated": "2021-08-07T04:39:08.619+0000",
                    "started": "2021-08-07T04:39:08.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635544",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r684593017\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,158 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    return ConsumeImpl(batch);\n+  }\n+\n+  template <typename T = ArrowType>\n+  enable_if_integer<T, Status> ConsumeImpl(const ExecBatch& batch) {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<T>(\n+          *data,\n+          [&](typename TypeTraits<T>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n\nReview comment:\n       Maybe it's not necessary to check overflow? Call `MultiplyWithOverflow` without checking the return value just to make sure signed integer overflow (UB) will not happen.\r\n   `numpy.prod` doesn't check overflow, https://numpy.org/doc/stable/reference/generated/numpy.prod.html.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-07T06:32:19.946+0000",
                    "updated": "2021-08-07T06:32:19.946+0000",
                    "started": "2021-08-07T06:32:19.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635556",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685174678\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,158 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    return ConsumeImpl(batch);\n+  }\n+\n+  template <typename T = ArrowType>\n+  enable_if_integer<T, Status> ConsumeImpl(const ExecBatch& batch) {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<T>(\n+          *data,\n+          [&](typename TypeTraits<T>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n\nReview comment:\n       Sounds good to me, thanks for the suggestion. We can add a `hash_product_checked` later if there is need for a checked version.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T13:05:53.452+0000",
                    "updated": "2021-08-09T13:05:53.452+0000",
                    "started": "2021-08-09T13:05:53.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635855",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685367287\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1011,6 +1012,118 @@ struct GroupedSumFactory {\n   InputType argument_type;\n };\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename Type>\n+struct GroupedProductImpl final : public GroupedAggregator {\n+  using AccType = typename FindAccumulatorType<Type>::Type;\n+  using ProductType = typename TypeTraits<AccType>::CType;\n+\n+  Status Init(ExecContext* ctx, const FunctionOptions*) override {\n+    pool_ = ctx->memory_pool();\n+    products_ = TypedBufferBuilder<ProductType>(pool_);\n+    valid_ = TypedBufferBuilder<bool>(pool_);\n+    out_type_ = TypeTraits<AccType>::type_singleton();\n+    return Status::OK();\n+  }\n\nReview comment:\n       The options are not taken into account (e.g. `min_count = 2`)?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -47,6 +47,9 @@ using applicator::ScalarUnaryNotNull;\n \n namespace {\n \n+// N.B. take care not to conflict with type_traits.h as that can cause surprises in a\n+// unity build\n\nReview comment:\n       :-D\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -189,6 +189,53 @@ TEST(TestBooleanAggregation, Sum) {\n               ResultWith(Datum(MakeNullScalar(uint64()))));\n }\n \n+TEST(TestBooleanAggregation, Product) {\n+  const ScalarAggregateOptions& options = ScalarAggregateOptions::Defaults();\n+  ValidateBooleanAgg<Product>(\"[]\", std::make_shared<UInt64Scalar>(), options);\n\nReview comment:\n       According to the declarations above, shouldn't `Product(booleans)` return a `Int64Scalar`?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,116 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<ArrowType>(\n+          *data,\n+          [&](typename TypeTraits<ArrowType>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n+            }\n+            return Status::OK();\n+          },\n+          [] { return Status::OK(); });\n+    } else {\n+      const auto& data = *batch[0].scalar();\n+      this->count += data.is_valid * batch.length;\n\nReview comment:\n       Hmm... in which circumstances can `batch.length` be greater than 1 here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:03:31.438+0000",
                    "updated": "2021-08-09T17:03:31.438+0000",
                    "started": "2021-08-09T17:03:31.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635947",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685378556\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -189,6 +189,53 @@ TEST(TestBooleanAggregation, Sum) {\n               ResultWith(Datum(MakeNullScalar(uint64()))));\n }\n \n+TEST(TestBooleanAggregation, Product) {\n+  const ScalarAggregateOptions& options = ScalarAggregateOptions::Defaults();\n+  ValidateBooleanAgg<Product>(\"[]\", std::make_shared<UInt64Scalar>(), options);\n\nReview comment:\n       FindAccumulatorType has a specialization for Boolean so that it's UInt64Scalar: https://github.com/apache/arrow/blob/2aa94c4712ce406d7c87d361b5c655a6ea585701/cpp/src/arrow/compute/kernels/aggregate_internal.h#L32-L35\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1011,6 +1012,118 @@ struct GroupedSumFactory {\n   InputType argument_type;\n };\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename Type>\n+struct GroupedProductImpl final : public GroupedAggregator {\n+  using AccType = typename FindAccumulatorType<Type>::Type;\n+  using ProductType = typename TypeTraits<AccType>::CType;\n+\n+  Status Init(ExecContext* ctx, const FunctionOptions*) override {\n+    pool_ = ctx->memory_pool();\n+    products_ = TypedBufferBuilder<ProductType>(pool_);\n+    valid_ = TypedBufferBuilder<bool>(pool_);\n+    out_type_ = TypeTraits<AccType>::type_singleton();\n+    return Status::OK();\n+  }\n\nReview comment:\n       Ah, whoops, let me fix that.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,116 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<ArrowType>(\n+          *data,\n+          [&](typename TypeTraits<ArrowType>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n+            }\n+            return Status::OK();\n+          },\n+          [] { return Status::OK(); });\n+    } else {\n+      const auto& data = *batch[0].scalar();\n+      this->count += data.is_valid * batch.length;\n\nReview comment:\n       If we aggregate over a partition column, we'll have a scalar but with batch.length > 1. See https://github.com/apache/arrow/pull/10725#discussion_r670689127\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:19:28.482+0000",
                    "updated": "2021-08-09T17:19:28.482+0000",
                    "started": "2021-08-09T17:19:28.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635963",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685383421\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/hash_aggregate.cc\n##########\n@@ -1011,6 +1012,118 @@ struct GroupedSumFactory {\n   InputType argument_type;\n };\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename Type>\n+struct GroupedProductImpl final : public GroupedAggregator {\n+  using AccType = typename FindAccumulatorType<Type>::Type;\n+  using ProductType = typename TypeTraits<AccType>::CType;\n+\n+  Status Init(ExecContext* ctx, const FunctionOptions*) override {\n+    pool_ = ctx->memory_pool();\n+    products_ = TypedBufferBuilder<ProductType>(pool_);\n+    valid_ = TypedBufferBuilder<bool>(pool_);\n+    out_type_ = TypeTraits<AccType>::type_singleton();\n+    return Status::OK();\n+  }\n\nReview comment:\n       The hash mean/sum don't support this either so I'll modify all three.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:24:39.305+0000",
                    "updated": "2021-08-09T17:24:39.305+0000",
                    "started": "2021-08-09T17:24:39.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635965",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685384628\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,116 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<ArrowType>(\n+          *data,\n+          [&](typename TypeTraits<ArrowType>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n+            }\n+            return Status::OK();\n+          },\n+          [] { return Status::OK(); });\n+    } else {\n+      const auto& data = *batch[0].scalar();\n+      this->count += data.is_valid * batch.length;\n\nReview comment:\n       I see, thanks. Is this kind of situation exercised somewhere?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:26:23.408+0000",
                    "updated": "2021-08-09T17:26:23.408+0000",
                    "started": "2021-08-09T17:26:23.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635966",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685385348\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -189,6 +189,53 @@ TEST(TestBooleanAggregation, Sum) {\n               ResultWith(Datum(MakeNullScalar(uint64()))));\n }\n \n+TEST(TestBooleanAggregation, Product) {\n+  const ScalarAggregateOptions& options = ScalarAggregateOptions::Defaults();\n+  ValidateBooleanAgg<Product>(\"[]\", std::make_shared<UInt64Scalar>(), options);\n\nReview comment:\n       Ok, but kernel registration does the following:\r\n   ```c++\r\n     aggregate::AddArrayScalarAggKernels(aggregate::ProductInit::Init, {boolean()}, int64(),\r\n                                         func.get());\r\n   ```\r\n   \r\n   (same for `Sum`, incidentally)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:27:27.691+0000",
                    "updated": "2021-08-09T17:27:27.691+0000",
                    "started": "2021-08-09T17:27:27.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635967",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685385480\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,116 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<ArrowType>(\n+          *data,\n+          [&](typename TypeTraits<ArrowType>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n+            }\n+            return Status::OK();\n+          },\n+          [] { return Status::OK(); });\n+    } else {\n+      const auto& data = *batch[0].scalar();\n+      this->count += data.is_valid * batch.length;\n\nReview comment:\n       Not off the top of my head, I'll go through and add tests as well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:27:40.823+0000",
                    "updated": "2021-08-09T17:27:40.823+0000",
                    "started": "2021-08-09T17:27:40.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635968",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/635969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685385813\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_test.cc\n##########\n@@ -189,6 +189,53 @@ TEST(TestBooleanAggregation, Sum) {\n               ResultWith(Datum(MakeNullScalar(uint64()))));\n }\n \n+TEST(TestBooleanAggregation, Product) {\n+  const ScalarAggregateOptions& options = ScalarAggregateOptions::Defaults();\n+  ValidateBooleanAgg<Product>(\"[]\", std::make_shared<UInt64Scalar>(), options);\n\nReview comment:\n       Well, that needs fixing :grimacing: good catch!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-09T17:28:14.037+0000",
                    "updated": "2021-08-09T17:28:14.037+0000",
                    "started": "2021-08-09T17:28:14.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "635969",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/636209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#discussion_r685624528\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/aggregate_basic.cc\n##########\n@@ -133,6 +134,116 @@ Result<std::unique_ptr<KernelState>> MeanInit(KernelContext* ctx,\n   return visitor.Create();\n }\n \n+// ----------------------------------------------------------------------\n+// Product implementation\n+\n+using arrow::internal::MultiplyWithOverflow;\n+\n+template <typename ArrowType>\n+struct ProductImpl : public ScalarAggregator {\n+  using ThisType = ProductImpl<ArrowType>;\n+  using CType = typename ArrowType::c_type;\n+  using ProductType = typename FindAccumulatorType<ArrowType>::Type;\n+  using OutputType = typename TypeTraits<ProductType>::ScalarType;\n+\n+  explicit ProductImpl(const ScalarAggregateOptions& options) { this->options = options; }\n+\n+  Status Consume(KernelContext*, const ExecBatch& batch) override {\n+    if (batch[0].is_array()) {\n+      const auto& data = batch[0].array();\n+      this->count += data->length - data->GetNullCount();\n+      return VisitArrayDataInline<ArrowType>(\n+          *data,\n+          [&](typename TypeTraits<ArrowType>::CType value) {\n+            if (ARROW_PREDICT_FALSE(\n+                    MultiplyWithOverflow(this->product, value, &this->product))) {\n+              return Status::Invalid(\"Overflow in product\");\n+            }\n+            return Status::OK();\n+          },\n+          [] { return Status::OK(); });\n+    } else {\n+      const auto& data = *batch[0].scalar();\n+      this->count += data.is_valid * batch.length;\n\nReview comment:\n       There was a test in plan_test.cc that's now extended, though not all the aggregate kernels actually work in a plan (index: ARROW-13591, mode/quantile: not truly aggregate kernels)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-10T01:25:56.308+0000",
                    "updated": "2021-08-10T01:25:56.308+0000",
                    "started": "2021-08-10T01:25:56.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "636209",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/636465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890#issuecomment-896065979\n\n\n   I opened https://issues.apache.org/jira/browse/ARROW-13595 to check for kernel output type mismatches.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-10T14:13:49.711+0000",
                    "updated": "2021-08-10T14:13:49.711+0000",
                    "started": "2021-08-10T14:13:49.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "636465",
                    "issueId": "13393733"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/worklog/636482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10890:\nURL: https://github.com/apache/arrow/pull/10890\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-10T15:03:08.504+0000",
                    "updated": "2021-08-10T15:03:08.504+0000",
                    "started": "2021-08-10T15:03:08.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "636482",
                    "issueId": "13393733"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5b5762a6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3043f227[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1764c2a4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3899c8a5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bc5760e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5a274ac2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6be7d2c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1d4df3f9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d889358[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4d99bd71[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@183d17d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a1ded15[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 10 15:02:59 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-10T15:02:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13575/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-08-05T14:45:42.000+0000",
        "updated": "2021-08-10T15:03:09.000+0000",
        "timeoriginalestimate": null,
        "description": "Like Pandas [prod|https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.prod.html]. Note that Pandas has a min_count option.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement product aggregate & hash aggregate kernels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393733/comment/17396730",
                    "id": "17396730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10890\n[https://github.com/apache/arrow/pull/10890]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-08-10T15:02:59.422+0000",
                    "updated": "2021-08-10T15:02:59.422+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tnbs:",
        "customfield_12314139": null
    }
}