{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393770",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770",
    "key": "ARROW-13576",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available",
            "query-engine"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12620639",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12620639",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13376404",
                    "key": "ARROW-12633",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376404",
                    "fields": {
                        "summary": "[C++] Query engine umbrella issue",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aocsa",
            "name": "aocsa",
            "key": "aocsa",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aocsa&avatarId=47387",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aocsa&avatarId=47387",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aocsa&avatarId=47387",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aocsa&avatarId=47387"
            },
            "displayName": "Alexander Ocsa",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13576/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 76,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/653903",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa opened a new pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210\n\n\n   WIP\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T05:05:25.755+0000",
                    "updated": "2021-09-22T05:05:25.755+0000",
                    "started": "2021-09-22T05:05:25.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653903",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/653904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#issuecomment-924587100\n\n\n   https://issues.apache.org/jira/browse/ARROW-13576\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T05:05:40.666+0000",
                    "updated": "2021-09-22T05:05:40.666+0000",
                    "started": "2021-09-22T05:05:40.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653904",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "felipeblazing commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r713921602\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/project_node.cc\n##########\n@@ -91,6 +91,7 @@ class ProjectNode : public ExecNode {\n \n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n+    ARROW_LOG(DEBUG) << \"ProjectNode: >> project input >>\" + batch.ToString();\n\nReview comment:\n       I take it this is debugging code specific to your test and this will be removed?\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n+    if (executor) {\n+      auto maybe_future = executor->Submit([this, batch] {\n\nReview comment:\n       I am not saying that we need to include those things now but it would be good to see if there is a way to send this information with the task\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n\nReview comment:\n       Is the purpose of the logic here to allow the FilterNode to still be used in the old way while allowing it schedule a task as well?\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n+    if (executor) {\n+      auto maybe_future = executor->Submit([this, batch] {\n\nReview comment:\n       Whatever we submit to the executor must be more than just a lambda if it is to encode information that the scheduler needs to use. A cost function and context about what query this belongs to and other metadata might want to be part of what the task includes.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T13:20:43.404+0000",
                    "updated": "2021-09-22T13:20:43.404+0000",
                    "started": "2021-09-22T13:20:43.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654064",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "felipeblazing commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r713942122\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n+    if (executor) {\n+      auto maybe_future = executor->Submit([this, batch] {\n+        ARROW_LOG(DEBUG) << \"FilterNode: >> filter ready: \" + batch.ToString();\n+\n+        auto maybe_filtered = DoFilter(std::move(batch));\n+        if (ErrorIfNotOk(maybe_filtered.status())) Status::Invalid(\"not ok\");\n+\n+        maybe_filtered->guarantee = batch.guarantee;\n+        this->outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n\nReview comment:\n       This feels like you would struggle to assure thread affinity as you went from task to task here.\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n+    if (executor) {\n+      auto maybe_future = executor->Submit([this, batch] {\n+        ARROW_LOG(DEBUG) << \"FilterNode: >> filter ready: \" + batch.ToString();\n+\n+        auto maybe_filtered = DoFilter(std::move(batch));\n+        if (ErrorIfNotOk(maybe_filtered.status())) Status::Invalid(\"not ok\");\n+\n+        maybe_filtered->guarantee = batch.guarantee;\n+        this->outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n\nReview comment:\n       The other proposal was to have the task build up and input_received receive a task with the first node in some plan receiving a task that is something akin to, my task is giving you this data. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T13:29:35.551+0000",
                    "updated": "2021-09-22T13:29:35.551+0000",
                    "started": "2021-09-22T13:29:35.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654072",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r714445570\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n\nReview comment:\n       Well executor is optional so I think will be maintained to run without executor. \n\n##########\nFile path: cpp/src/arrow/compute/exec/project_node.cc\n##########\n@@ -91,6 +91,7 @@ class ProjectNode : public ExecNode {\n \n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n+    ARROW_LOG(DEBUG) << \"ProjectNode: >> project input >>\" + batch.ToString();\n\nReview comment:\n       sure\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T03:20:00.417+0000",
                    "updated": "2021-09-23T03:20:00.417+0000",
                    "started": "2021-09-23T03:20:00.417+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654341",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r714774458\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n\nReview comment:\n       While that's currently true, I think we want to require an executor in the future (even if the executor is \"block and do the work on the calling thread\"). See https://github.com/apache/arrow/pull/10845#issuecomment-904986082 and ARROW-13741.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T13:03:26.909+0000",
                    "updated": "2021-09-23T13:03:26.909+0000",
                    "started": "2021-09-23T13:03:26.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654511",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r714779047\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -113,7 +131,22 @@ class FilterNode : public ExecNode {\n \n   void InputFinished(ExecNode* input, int total_batches) override {\n     DCHECK_EQ(input, inputs_[0]);\n+    auto executor = plan()->exec_context()->executor();\n+\n+    for (auto&& task : tasks_) {\n\nReview comment:\n       InputFinished (despite its name) can be called before InputReceived (it's less of an \"input is done\" and more of \"this is how many inputs to expect\"). So this won't necessarily work; you'll want something like the AtomicCounter pattern used in other exec nodes.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T13:09:50.395+0000",
                    "updated": "2021-09-23T13:09:50.395+0000",
                    "started": "2021-09-23T13:09:50.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654513",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r715094228\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -113,7 +131,22 @@ class FilterNode : public ExecNode {\n \n   void InputFinished(ExecNode* input, int total_batches) override {\n     DCHECK_EQ(input, inputs_[0]);\n+    auto executor = plan()->exec_context()->executor();\n+\n+    for (auto&& task : tasks_) {\n\nReview comment:\n       Thanks  @lidavidm  I am using AtomicCounters and there is not more race condition issues  \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T19:33:38.769+0000",
                    "updated": "2021-09-23T19:33:38.769+0000",
                    "started": "2021-09-23T19:33:38.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654712",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/654931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r715528675\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -283,6 +285,19 @@ bool ExecNode::ErrorIfNotOk(Status status) {\n   return true;\n }\n \n+Status ExecNode::SubmitTask(std::function<Status()> task) {\n+  auto executor = plan()->exec_context()->executor();\n+  auto maybe_future = executor->Submit(std::move(task));\n+  if (!maybe_future.ok()) {\n+    outputs_[0]->ErrorReceived(this, maybe_future.status());\n\nReview comment:\n       Nit: It doesn't matter today but if this is a general method we may want to loop through all outputs.\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -114,6 +126,10 @@ class FilterNode : public ExecNode {\n   void InputFinished(ExecNode* input, int total_batches) override {\n     DCHECK_EQ(input, inputs_[0]);\n     outputs_[0]->InputFinished(this, total_batches);\n+    if (batch_count_.SetTotal(total_batches)) {\n+      task_group_.WaitForTasksToFinish().AddCallback(\n+          [this](const Status& status) { this->finished_.MarkFinished(status); });\n+    }\n\nReview comment:\n       This also feels like code that will have to be repeated in every node.\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -98,12 +97,25 @@ class FilterNode : public ExecNode {\n \n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n-\n-    maybe_filtered->guarantee = batch.guarantee;\n-    outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n+    if (finished_.is_finished()) {\n+      return;\n+    }\n+    auto task = [this, batch]() {\n+      auto maybe_filtered = DoFilter(std::move(batch));\n+      if (ErrorIfNotOk(maybe_filtered.status())) return Status::OK();\n+      maybe_filtered->guarantee = batch.guarantee;\n+      outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n+      return Status::OK();\n+    };\n+    if (this->has_executor()) {\n+      DCHECK_OK(this->SubmitTask(task));\n+    } else {\n+      DCHECK_OK(task());\n+    }\n+    if (batch_count_.Increment()) {\n+      task_group_.WaitForTasksToFinish().AddCallback(\n+          [this](const Status& status) { this->finished_.MarkFinished(status); });\n+    }\n\nReview comment:\n       Could this be part of SubmitTask so that this if/else loop doesn't have to belong in every node?\r\n   \n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -98,12 +97,25 @@ class FilterNode : public ExecNode {\n \n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n-\n-    maybe_filtered->guarantee = batch.guarantee;\n-    outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n+    if (finished_.is_finished()) {\n+      return;\n+    }\n\nReview comment:\n       Could this be part of SubmitTask?\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -127,21 +143,25 @@ class FilterNode : public ExecNode {\n     StopProducing();\n   }\n \n-  void StopProducing() override { inputs_[0]->StopProducing(this); }\n+  void StopProducing() override {\n+    if (batch_count_.Cancel()) {\n+      task_group_.WaitForTasksToFinish().AddCallback(\n+          [this](const Status& status) { this->finished_.MarkFinished(status); });\n+    }\n\nReview comment:\n       This code feels like it will need to be repeated\n\n##########\nFile path: cpp/src/arrow/util/task_scheduler.h\n##########\n@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#ifndef _WIN32\n+#include <unistd.h>\n+#endif\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <memory>\n+#include <queue>\n+#include <type_traits>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/util/cancel.h\"\n+#include \"arrow/util/functional.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/macros.h\"\n+#include \"arrow/util/thread_pool.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+#if defined(_MSC_VER)\n+// Disable harmless warning for decorated name length limit\n+#pragma warning(disable : 4503)\n+#endif\n+\n+namespace arrow {\n+namespace internal {\n+\n+class ARROW_EXPORT TaskScheduler : public Executor {\n+ public:\n+  static Result<std::shared_ptr<TaskScheduler>> Make(int threads);\n+  static Result<std::shared_ptr<TaskScheduler>> MakeEternal(int threads);\n+\n+  ~TaskScheduler() override;\n+\n+  int GetCapacity() override;\n+\n+  bool OwnsThisThread() override;\n+\n+  std::shared_ptr<ThreadPool> pool() { return thread_pool_; }\n+\n+ protected:\n+  friend ARROW_EXPORT TaskScheduler* GetCpuTaskScheduler();\n+\n+  TaskScheduler();\n+\n+  Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n+                   StopCallback&&) override;\n+\n+  static std::shared_ptr<TaskScheduler> MakeCpuTaskScheduler();\n+\n+ private:\n+  std::shared_ptr<ThreadPool> thread_pool_;\n+  // std::queue<std::unique_ptr<Task>> task_queue_;\n+  // std::atomic<int> active_tasks_counter_;\n+  //\n+};\n\nReview comment:\n       I'm not really sure what the purpose is here.  I thought \"a scheduler has many executors\" but these seems like \"a scheduler is an executor\".  I don't think the scheduler should need `MakeEternal` and there shouldn't be `MakeCpuTaskScheduler`.\r\n   \r\n   Maybe there is a `MakeDefaultScheduler` which has only a single executor (the CPU executor).  The scheduler shouldn't worry about `OwnsThisThread` or `GetCapacity`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-24T11:33:51.546+0000",
                    "updated": "2021-09-24T11:33:51.546+0000",
                    "started": "2021-09-24T11:33:51.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654931",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "felipeblazing commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717287000\n\n\n\n##########\nFile path: cpp/src/arrow/util/task_scheduler.h\n##########\n@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#ifndef _WIN32\n+#include <unistd.h>\n+#endif\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <memory>\n+#include <queue>\n+#include <type_traits>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/util/cancel.h\"\n+#include \"arrow/util/functional.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/macros.h\"\n+#include \"arrow/util/thread_pool.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+#if defined(_MSC_VER)\n+// Disable harmless warning for decorated name length limit\n+#pragma warning(disable : 4503)\n+#endif\n+\n+namespace arrow {\n+namespace internal {\n+\n+class ARROW_EXPORT TaskScheduler : public Executor {\n+ public:\n+  static Result<std::shared_ptr<TaskScheduler>> Make(int threads);\n+  static Result<std::shared_ptr<TaskScheduler>> MakeEternal(int threads);\n+\n+  ~TaskScheduler() override;\n+\n+  int GetCapacity() override;\n+\n+  bool OwnsThisThread() override;\n+\n+  std::shared_ptr<ThreadPool> pool() { return thread_pool_; }\n+\n+ protected:\n+  friend ARROW_EXPORT TaskScheduler* GetCpuTaskScheduler();\n+\n+  TaskScheduler();\n+\n+  Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n+                   StopCallback&&) override;\n+\n+  static std::shared_ptr<TaskScheduler> MakeCpuTaskScheduler();\n+\n+ private:\n+  std::shared_ptr<ThreadPool> thread_pool_;\n+  // std::queue<std::unique_ptr<Task>> task_queue_;\n+  // std::atomic<int> active_tasks_counter_;\n+  //\n+};\n\nReview comment:\n       I agree that a scheduler should be able to have multiple executors. It also will eventually have more awareness of the entire system than an executor might have. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T07:11:23.217+0000",
                    "updated": "2021-09-28T07:11:23.217+0000",
                    "started": "2021-09-28T07:11:23.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656021",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717642037\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -98,12 +97,25 @@ class FilterNode : public ExecNode {\n \n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n-\n-    maybe_filtered->guarantee = batch.guarantee;\n-    outputs_[0]->InputReceived(this, maybe_filtered.MoveValueUnsafe());\n+    if (finished_.is_finished()) {\n+      return;\n+    }\n\nReview comment:\n       Sure\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T14:32:03.413+0000",
                    "updated": "2021-09-28T14:32:03.413+0000",
                    "started": "2021-09-28T14:32:03.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656186",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717662199\n\n\n\n##########\nFile path: cpp/src/arrow/util/task_scheduler.h\n##########\n@@ -0,0 +1,81 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#ifndef _WIN32\n+#include <unistd.h>\n+#endif\n+\n+#include <atomic>\n+#include <cstdint>\n+#include <memory>\n+#include <queue>\n+#include <type_traits>\n+#include <utility>\n+\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/util/cancel.h\"\n+#include \"arrow/util/functional.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/macros.h\"\n+#include \"arrow/util/thread_pool.h\"\n+#include \"arrow/util/visibility.h\"\n+\n+#if defined(_MSC_VER)\n+// Disable harmless warning for decorated name length limit\n+#pragma warning(disable : 4503)\n+#endif\n+\n+namespace arrow {\n+namespace internal {\n+\n+class ARROW_EXPORT TaskScheduler : public Executor {\n+ public:\n+  static Result<std::shared_ptr<TaskScheduler>> Make(int threads);\n+  static Result<std::shared_ptr<TaskScheduler>> MakeEternal(int threads);\n+\n+  ~TaskScheduler() override;\n+\n+  int GetCapacity() override;\n+\n+  bool OwnsThisThread() override;\n+\n+  std::shared_ptr<ThreadPool> pool() { return thread_pool_; }\n+\n+ protected:\n+  friend ARROW_EXPORT TaskScheduler* GetCpuTaskScheduler();\n+\n+  TaskScheduler();\n+\n+  Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n+                   StopCallback&&) override;\n+\n+  static std::shared_ptr<TaskScheduler> MakeCpuTaskScheduler();\n+\n+ private:\n+  std::shared_ptr<ThreadPool> thread_pool_;\n+  // std::queue<std::unique_ptr<Task>> task_queue_;\n+  // std::atomic<int> active_tasks_counter_;\n+  //\n+};\n\nReview comment:\n       Agree. TaskScheduler should have multiple executors. I think it can be part of follow-up PR after discussing the next steps. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T14:51:53.680+0000",
                    "updated": "2021-09-28T14:51:53.680+0000",
                    "started": "2021-09-28T14:51:53.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656192",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717662420\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -99,11 +105,35 @@ class FilterNode : public ExecNode {\n   void InputReceived(ExecNode* input, ExecBatch batch) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    auto maybe_filtered = DoFilter(std::move(batch));\n-    if (ErrorIfNotOk(maybe_filtered.status())) return;\n+    ARROW_LOG(DEBUG) << \"FilterNode: >> input\";\n+\n+    auto executor = plan()->exec_context()->executor();\n+    if (executor) {\n+      auto maybe_future = executor->Submit([this, batch] {\n\nReview comment:\n       done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T14:52:14.124+0000",
                    "updated": "2021-09-28T14:52:14.124+0000",
                    "started": "2021-09-28T14:52:14.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656195",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#issuecomment-929310722\n\n\n   I update this PR and I think is ready to review.  I  was struggling trying to work fine with `AsyncTaskGroup` but it seems this util has an issue when concurrent thread are trying to know when `all_task` are `done`.  See here: https://gist.github.com/aocsa/c4e66e9061d1dc9f1a0e8253ffad2be3\r\n   \r\n   So now I am using TaskGroup class in async mode with a `stop_token` to cancel tasks when `ExecNode::StopProducing`  is requested. cc @felipeblazing, @westonpace   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T14:57:16.671+0000",
                    "updated": "2021-09-28T14:57:16.671+0000",
                    "started": "2021-09-28T14:57:16.670+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656200",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717838373\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,8 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+  Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n+                   StopCallback&&) override;\n\nReview comment:\n       Do we still need to make this public?\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -283,6 +290,35 @@ bool ExecNode::ErrorIfNotOk(Status status) {\n   return true;\n }\n \n+Status ExecNode::SubmitTask(std::function<Status()> task) {\n+  if (finished_.is_finished()) {\n+    return Status::OK();\n+  }\n+  if (this->has_executor()) {\n+    DCHECK(task_group_ != nullptr);\n+    task_group_->Append(std::move(task));\n+  } else {\n+    std::move(task)();\n+  }\n+  if (batch_count_.Increment()) {\n+    this->MarkFinished();\n+  }\n+  return Status::OK();\n+}\n+\n+void ExecNode::MarkFinished(bool request_stop) {\n+  if (this->has_executor()) {\n+    if (request_stop) {\n+      this->stop_source_.RequestStop();\n+    }\n+    task_group_->FinishAsync().AddCallback([this](const Status& status) {\n+      if (!this->finished_.is_finished()) this->finished_.MarkFinished(status);\n\nReview comment:\n       This is racy/this is a TOC-TOU error.\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -127,21 +131,24 @@ class FilterNode : public ExecNode {\n     StopProducing();\n   }\n \n-  void StopProducing() override { inputs_[0]->StopProducing(this); }\n+  void StopProducing() override {\n+    if (batch_count_.Cancel()) {\n+      this->MarkFinished(/*request_stop=*/true);\n+    }\n+    inputs_[0]->StopProducing(this);\n+  }\n \n-  Future<> finished() override { return inputs_[0]->finished(); }\n+  Future<> finished() override { return finished_; }\n\nReview comment:\n       (And in general, if we're codifying patterns like `AtomicCounter batch_count_`, I think more of these boilerplate methods could be implemented in the base class instead, once we're OK with the overall design in this PR.)\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -283,6 +290,35 @@ bool ExecNode::ErrorIfNotOk(Status status) {\n   return true;\n }\n \n+Status ExecNode::SubmitTask(std::function<Status()> task) {\n+  if (finished_.is_finished()) {\n+    return Status::OK();\n+  }\n+  if (this->has_executor()) {\n+    DCHECK(task_group_ != nullptr);\n+    task_group_->Append(std::move(task));\n+  } else {\n+    std::move(task)();\n+  }\n+  if (batch_count_.Increment()) {\n+    this->MarkFinished();\n+  }\n+  return Status::OK();\n+}\n+\n+void ExecNode::MarkFinished(bool request_stop) {\n+  if (this->has_executor()) {\n+    if (request_stop) {\n+      this->stop_source_.RequestStop();\n+    }\n+    task_group_->FinishAsync().AddCallback([this](const Status& status) {\n+      if (!this->finished_.is_finished()) this->finished_.MarkFinished(status);\n\nReview comment:\n       So long as this is only called after checking AtomicCounter, is the check here necessary?\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -127,21 +131,24 @@ class FilterNode : public ExecNode {\n     StopProducing();\n   }\n \n-  void StopProducing() override { inputs_[0]->StopProducing(this); }\n+  void StopProducing() override {\n+    if (batch_count_.Cancel()) {\n+      this->MarkFinished(/*request_stop=*/true);\n+    }\n+    inputs_[0]->StopProducing(this);\n+  }\n \n-  Future<> finished() override { return inputs_[0]->finished(); }\n+  Future<> finished() override { return finished_; }\n\nReview comment:\n       Maybe this should be the default implementation in the base class now? (Though I guess for this PR that requires more refactoring.)\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -221,6 +228,18 @@ class ARROW_EXPORT ExecNode {\n \n   std::string ToString() const;\n \n+  /// \\brief Is an executor available?\n+  bool has_executor() { return plan()->exec_context()->executor() != nullptr; }\n\nReview comment:\n       I think all three new methods should be protected (also has_executor can be const, no?)\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -241,6 +260,15 @@ class ARROW_EXPORT ExecNode {\n   std::shared_ptr<Schema> output_schema_;\n   int num_outputs_;\n   NodeVector outputs_;\n+\n+  // Counter for the number of batches received\n+  AtomicCounter batch_count_;\n+  // Future to sync finished\n+  Future<> finished_ = Future<>::MakeFinished();\n\nReview comment:\n       No need to initialize here if we're also initializing in the constructor.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T18:15:01.008+0000",
                    "updated": "2021-09-28T18:15:01.008+0000",
                    "started": "2021-09-28T18:15:01.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656311",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#issuecomment-929512269\n\n\n   Ah, for AsyncTaskGroup, I think what's happening is that it allows adding tasks even after WaitForTaskToFinish, but it's assumed that this will only be done by another task. But for this PR, presumably that's not the case - we're adding tasks externally so that invariant may be violated, and so running_tasks_ may hit 0, the future may be marked finished, and then a concurrent call may add another task. So the semantics of AsyncTaskGroup don't quite fit what we want here.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T18:23:40.989+0000",
                    "updated": "2021-09-28T18:23:40.989+0000",
                    "started": "2021-09-28T18:23:40.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656323",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#issuecomment-929528783\n\n\n   FYI, in the new dataset writer node PR, I've renamed `WaitForTaskToFinish` to `End` so it's clear that it should only be called once.  I've also added `OnFinished` which returns a future and can be accessed early.  So you can call `OnFinished` as much as you want (e.g. before you add any tasks even) but you only call `End` once.  I think this clears up the confusion.\r\n   \r\n   Check it out here: https://github.com/apache/arrow/pull/11017/files\r\n   \r\n   If you want to use this I can pull out the changes to AsyncTaskGroup and submit them as a small PR on their own today.  Otherways, it will probably be some ways off before 11017 merges.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T18:46:35.407+0000",
                    "updated": "2021-09-28T18:46:35.407+0000",
                    "started": "2021-09-28T18:46:35.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656345",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717893533\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,8 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+  Status SpawnReal(TaskHints hints, FnOnce<void()> task, StopToken,\n+                   StopCallback&&) override;\n\nReview comment:\n       do, we don't \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T19:22:39.448+0000",
                    "updated": "2021-09-28T19:22:39.448+0000",
                    "started": "2021-09-28T19:22:39.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656369",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717897778\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -283,6 +290,35 @@ bool ExecNode::ErrorIfNotOk(Status status) {\n   return true;\n }\n \n+Status ExecNode::SubmitTask(std::function<Status()> task) {\n+  if (finished_.is_finished()) {\n+    return Status::OK();\n+  }\n+  if (this->has_executor()) {\n+    DCHECK(task_group_ != nullptr);\n+    task_group_->Append(std::move(task));\n+  } else {\n+    std::move(task)();\n+  }\n+  if (batch_count_.Increment()) {\n+    this->MarkFinished();\n+  }\n+  return Status::OK();\n+}\n+\n+void ExecNode::MarkFinished(bool request_stop) {\n+  if (this->has_executor()) {\n+    if (request_stop) {\n+      this->stop_source_.RequestStop();\n+    }\n+    task_group_->FinishAsync().AddCallback([this](const Status& status) {\n+      if (!this->finished_.is_finished()) this->finished_.MarkFinished(status);\n\nReview comment:\n       Based on my test and profiling test, yes this is necessary. The first call to this functions could when `batch_count_` reach the total_batches, but at the same time ExecNode::StopProducing signal could happens. So only once it's neccesary to mark as Finished  `finished_`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T19:28:46.939+0000",
                    "updated": "2021-09-28T19:28:46.939+0000",
                    "started": "2021-09-28T19:28:46.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656379",
                    "issueId": "13393770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/worklog/656380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aocsa commented on a change in pull request #11210:\nURL: https://github.com/apache/arrow/pull/11210#discussion_r717897893\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -221,6 +228,18 @@ class ARROW_EXPORT ExecNode {\n \n   std::string ToString() const;\n \n+  /// \\brief Is an executor available?\n+  bool has_executor() { return plan()->exec_context()->executor() != nullptr; }\n\nReview comment:\n       For sure\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-28T19:29:00.148+0000",
                    "updated": "2021-09-28T19:29:00.148+0000",
                    "started": "2021-09-28T19:29:00.147+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "656380",
                    "issueId": "13393770"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 45600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@45055353[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69d15cf1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b2f0252[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@18faff12[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38eccf51[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@56ff7951[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5541dc4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1a8cab9b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44c479dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@695ca5e4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3224a72d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d8b1281[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 45600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 12 18:21:17 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-12T18:21:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13576/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-08-05T20:01:04.000+0000",
        "updated": "2021-10-13T18:51:11.000+0000",
        "timeoriginalestimate": null,
        "description": "Instead of immediately pushing to outputs, ExecNodes should package their work into tasks and defer execution to allow more sophisticated external scheduling. This will also relieve pipeline breaking ExecNodes of the responsibility to ensure their work is correctly parallelized.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 45600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Compute] Replace ExecNode::InputReceived with ::MakeTask",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393770/comment/17427855",
                    "id": "17427855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 11210\n[https://github.com/apache/arrow/pull/11210]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-10-12T18:21:17.291+0000",
                    "updated": "2021-10-12T18:21:17.291+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tnk0:",
        "customfield_12314139": null
    }
}