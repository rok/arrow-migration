{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13376052",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052",
    "key": "ARROW-12609",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
            "name": "mosalx",
            "key": "mosalx",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sergey Mozharov",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
            "name": "mosalx",
            "key": "mosalx",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sergey Mozharov",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12609/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2fa9d7fb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37030801[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28e99f52[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@705d94e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36562d6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@b896e95[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ffe63b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@469818a1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41a2685a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@19f5b3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d60031c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1bbb5d01[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 19 00:49:56 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12609/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-04-30T12:29:42.000+0000",
        "updated": "2021-05-19T00:49:56.000+0000",
        "timeoriginalestimate": null,
        "description": "For List-like data types, the scalar corresponding to a missing value has '___len___' attribute, but TypeError is raised when it is accessed\r\n{code:java}\r\nimport pyarrow as pa\r\n\r\ndata_type = pa.list_(pa.struct([\r\n    ('a', pa.int64()),\r\n    ('b', pa.bool_())\r\n]))\r\ndata = [[{'a': 1, 'b': False}, {'a': 2, 'b': True}], None]\r\narr = pa.array(data, type=data_type)\r\nmissing_scalar = arr[1]  # <pyarrow.ListScalar: None>\r\nassert hasattr(missing_scalar, '__len__')\r\nassert len(missing_scalar) == 0\u00a0 # -->\u00a0TypeError: object of type 'NoneType' has no len()\r\n{code}\r\nExpected behavior: length is expected to be 0.\r\n\r\nThis issue causes several pandas unit tests to fail when an ExtensionArray backed by arrow array with this data type is built.\r\n\r\nThis behavior is also inconsistent with a similar example where the data type is a struct:\r\n{code:java}\r\nimport pyarrow as pa\r\n\r\ndata_type = pa.struct([\r\n    ('a', pa.int64()),\r\n    ('b', pa.bool_())\r\n])\r\ndata = [{'a': 1, 'b': False}, None]\r\narr = pa.array(data, type=data_type)\r\nmissing_scalar = arr[1]  # <pyarrow.StructScalar: None>\r\nassert hasattr(missing_scalar, '__len__')\r\nassert len(missing_scalar) == 0  # Ok\r\n{code}\r\n\u00a0In this second example the TypeError is not raised.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] TypeError when accessing length of an invalid ListScalar",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Windows 10\r\npython=3.9.2\r\npyarrow=4.0.0 (3.0.0 has the same behavior)",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17337452",
                    "id": "17337452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Iteration of invalid list scalars is also broken. In the first example from the description:\r\n{code:java}\r\nassert hasattr(missing_scalar, '__iter__')\r\nassert len(list(missing_scalar)) == 0  # -> TypeError: 'NoneType' object is not iterable\r\n{code}\r\nI assume that an invalid ListScalar should be iterable and should produce an empty iterable object. But I am not sure if this is the right way to think about it and if it is specified anywhere.\r\n\r\nAnother example: should __getitem__ with an invalid ListScalar raise an IndexError instead of TypeError?\r\n{code:java}\r\nmissing_scalar[0]  # -> TypeError: 'NoneType' object is not subscriptable{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-04-30T15:20:54.796+0000",
                    "updated": "2021-04-30T15:20:54.796+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17338383",
                    "id": "17338383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "This looks like an interesting question in term of possible behaviours.\r\n\r\nI mean, the moment we declare an {{Array}} as containing lists (thus {{Array[x]}} is {{ListScalar}}) what's the proper behaviour when {{Array[x]}} in reality is not a list?\r\n\r\nNormally when the value doesn't respect the schema it seems we throw an error\r\n{code:java}\r\n>>> pa.array([[1], 1], type=pa.list_(pa.int32()))\r\n...\r\npyarrow.lib.ArrowTypeError: Could not convert 1 with type int: was not a sequence or recognized null for conversion to list type\r\n{code}\r\nfor {{None}} that is not true by the way as it's necessary to nulls\r\n{code:java}\r\n>>> pa.array([[1], None], type=pa.list_(pa.int32()))\r\n<pyarrow.lib.ListArray object at 0x120e69e20>\r\n[\r\n  [\r\n    1\r\n  ],\r\n  null\r\n]\r\n{code}\r\nThe question at that point is what should {{Array[x]}} return? Does it make sense to return a {{ListScalar}} when in reality it's not a list?\r\n{code:java}\r\n>>> pa.array([[1], None], type=pa.list_(pa.int32()))[1]\r\n<pyarrow.ListScalar: None>\r\n{code}\r\nwhy not return {{NullScalar}} in such case? It seems to me that {{pa.list_(pa.int32())}} means a schema that supports null values in the list, then the array should just return a null value when it hits one.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "created": "2021-05-03T14:01:39.166+0000",
                    "updated": "2021-05-03T14:05:58.047+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17338409",
                    "id": "17338409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "To me it makes sense to wrap null into a ListScalar in this case. One benefit of doing it is that it makes the interface simpler: the array type defines the type of its scalar that is returned during iteration, and there is a single type instead of a union of valid type and invalid type. This is consistent with the behavior of primitive arrays, which have one scalar type instead of Union[Int32Scalar, NullScalar].\r\n\r\nI would expect the behavior of ListScalar<null> to be identical to the behavior of ListScalar<[]> (wrapping an empty list) with the only difference that the first scalar is invalid (scalar.is_valid -> False) while the second one is valid.\u00a0I understand that there may be many other nuances I am not aware of. I am very curious to know what other alternatives can be suggested.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-03T14:54:38.732+0000",
                    "updated": "2021-05-03T14:54:38.732+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17338414",
                    "id": "17338414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Another question to think about is what does the \"length\" of a ListScalar mean? If it can defined is as \"how many wrapped objects can I get from this list scalar?\", then the validity of the wrapped object is irrelevant. Both an empty list and null have no wrapped objects in them so the length of both scalars would be 0.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-03T15:13:51.010+0000",
                    "updated": "2021-05-03T15:13:51.010+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17346055",
                    "id": "17346055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq. why not return {{NullScalar}} in such case? It seems to me that {{pa.list_(pa.int32())}} means a schema that supports null values in the list, then the array should just return a null value when it hits one.\r\n\r\n[~amol-] The returned ListScalar _is_ a null value, though. Because each type supports null values, each scalar type also supports it's own null scalars. A {{NullScalar}} is what you would get when accessing a single element of a {{NullArray}}:\r\n\r\n{code}\r\n>>> arr = pa.array([None, None])\r\n>>> arr\r\n<pyarrow.lib.NullArray object at 0x7fee45555940>\r\n2 nulls\r\n>>> arr[0]\r\n<pyarrow.NullScalar: None>\r\n{code}\r\n\r\nbq. Expected behavior: length is expected to be 0.\r\n\r\n[~mosalx] I think you could also argue that a missing list scalar has \"no defined length\" (why would it be zero? it's an empty list that has zero length) \r\nThe problem, though, is that Python doesn't support this kind of missing or undefined values for integers ({{\\_\\_len\\_\\_}} needs to return an integer, or error)\r\n\r\nFor example, if not using Python's builtin {{len}}, but using the pyarrow compute kernel to get the length of list element, we actually \"propagate\" the null, and the null list has a null length:\r\n\r\n{code}\r\n>>> import pyarrow.compute as pc\r\n>>> pc.list_value_length(pa.scalar([1, 2], type=pa.list_(pa.int32())))\r\n<pyarrow.Int32Scalar: 2>\r\n>>> pc.list_value_length(pa.scalar(None, type=pa.list_(pa.int32())))\r\n<pyarrow.Int32Scalar: None>\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-17T10:29:43.296+0000",
                    "updated": "2021-05-17T10:29:43.296+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376052/comment/17347226",
                    "id": "17347226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorisvandenbossche] My original thinking (which I am questioning now) was based on the following thoughts/assumptions:\r\n * All properties of {{ListScalar}}s and the concept of \"validity\" (null or not null) are independent. That is, the {{ListScalar}}\u00a0API could guarantee that all instances will have length, will be iterable, etc - with some not perfect but reasonable behavior assigned to null scalars\r\n * the benefit of this approach is that users can write simpler code with pyarrow by not having to worry about handling exceptions when a Null\u00a0{{ListScalar}}\u00a0is encountered, when the presence/absence of null scalars is not important for what the user is trying to achieve\r\n * in cases when validity of scalars is important, {{is_valid}}\u00a0property could be used to tell apart an empty {{ListScalar}}\u00a0from a Null\u00a0{{ListScalar}}\r\n\r\n??you could also argue that a missing list scalar has \"no defined length\"??\r\n\r\nAgreed. This argument makes perfect sense if we think about Null scalars as undefined values (it can be anything, we just don't know). In this case a dedicated error may be needed to communicate this. I think {{AttributeError}}\u00a0would be confusing here because {{hasattr(null_scalar, '__len__')}}\u00a0returns True. {{TypeError}}\u00a0definitely does not seem right.\r\n\r\nI think pyarrow API consistency is probably the most important criterion. Assigning length 0 to a Null {{ListScalar}}\u00a0would make API inconsistent with the behavior of pyarrow compute kernel. Raising the right kind of error seems like a reasonable solution because the root cause is that Python does not support undefined values.\r\n\r\nIf the arrow developers prefer this direction, then I hope the issue can be resolved in pandas. My use case is integration of list-like and struct-like arrow arrays with pandas Extension Arrays API. I believe this is a very powerful integration that deserves some attention. At the pandas side the problem seems to be that pandas attempts to analyze internal structure of scalars, and the non-standard behavior of arrow Null scalars breaks some important assumptions. I created a [pandas issue 41377|https://github.com/pandas-dev/pandas/issues/41377] related to this with a concrete example.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mosalx",
                        "name": "mosalx",
                        "key": "mosalx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Sergey Mozharov",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-19T00:49:56.234+0000",
                    "updated": "2021-05-19T00:49:56.234+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qmfk:",
        "customfield_12314139": null
    }
}