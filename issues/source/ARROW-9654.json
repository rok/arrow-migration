{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13321096",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096",
    "key": "ARROW-9654",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9654/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb opened a new pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959\n\n\n   In order to help users and developers understand what DataFusion's planner is doing, this PR adds an `\"EXPLAIN PLAN\"` feature. All other database systems I have worked with have such a feature (e.g. see [MySql](https://dev.mysql.com/doc/refman/8.0/en/explain-output.html)). \r\n   \r\n   Example printout (the plans printed are simply the `std::fmt::Debug` representation of the plan structures:\r\n   \r\n   ```\r\n   > explain SELECT status, COUNT(1) FROM http_api_requests_total WHERE path = '/api/v2/write' GROUP BY status;\r\n   +--------------+----------------------------------------------------------+\r\n   | plan_type    | plan                                                     |\r\n   +--------------+----------------------------------------------------------+\r\n   | logical_plan | Aggregate: groupBy=[[#status]], aggr=[[COUNT(UInt8(1))]] |\r\n   |              |   Selection: #path Eq Utf8(\"/api/v2/write\")              |\r\n   |              |     TableScan: http_api_requests_total projection=None   |\r\n   +--------------+----------------------------------------------------------+\r\n   1 rows in set. Query took 0 seconds.\r\n   \r\n   ```\r\n   \r\n   And an example `EXPLAIN VERBOSE`:\r\n   \r\n   ```\r\n   > explain verbose SELECT status, COUNT(1) FROM http_api_requests_total WHERE path = '/api/v2/write' GROUP BY status;\r\n   +----------------------+----------------------------------------------------------------+\r\n   | plan_type            | plan                                                           |\r\n   +----------------------+----------------------------------------------------------------+\r\n   | logical_plan         | Aggregate: groupBy=[[#status]], aggr=[[COUNT(UInt8(1))]]       |\r\n   |                      |   Selection: #path Eq Utf8(\"/api/v2/write\")                    |\r\n   |                      |     TableScan: http_api_requests_total projection=None         |\r\n   | projection_push_down | Aggregate: groupBy=[[#status]], aggr=[[COUNT(UInt8(1))]]       |\r\n   |                      |   Selection: #path Eq Utf8(\"/api/v2/write\")                    |\r\n   |                      |     TableScan: http_api_requests_total projection=Some([6, 8]) |\r\n   | type_coercion        | Aggregate: groupBy=[[#status]], aggr=[[COUNT(UInt8(1))]]       |\r\n   |                      |   Selection: #path Eq Utf8(\"/api/v2/write\")                    |\r\n   |                      |     TableScan: http_api_requests_total projection=Some([6, 8]) |\r\n   | physical_plan        | HashAggregateExec {                                            |\r\n   |                      |     group_expr: [                                              |\r\n   |                      |         Column {                                               |\r\n   |                      |             name: \"status\",                                    |\r\n   |                      |         },                                                     |\r\n   |                      |     ],                                                         |\r\n   |                      |     aggr_expr: [                                               |\r\n   |                      |         Count {                                                |\r\n   |                      |             expr: Literal {                                    |\r\n   |                      |                 value: UInt8(                                  |\r\n   |                      |                     1,                                         |\r\n   |                      |                 ),                                             |\r\n   |                      |             },                                                 |\r\n   |                      |         },                                                     |\r\n   |                      |     ],                                                         |\r\n   |                      |     input: SelectionExec {                                     |\r\n   |                      |         expr: BinaryExpr {                                     |\r\n   |                      |             left: Column {                                     |\r\n   |                      |                 name: \"path\",                                  |\r\n   |                      |             },                                                 |\r\n   |                      |             op: Eq,                                            |\r\n   |                      |             right: Literal {                                   |\r\n   |                      |                 value: Utf8(                                   |\r\n   |                      |                     \"/api/v2/write\",                           |\r\n   |                      |                 ),                                             |\r\n   |                      |             },                                                 |\r\n   |                      |         },                                                     |\r\n   |                      |         input: DataSourceExec {                                |\r\n   |                      |             schema: Schema {                                   |\r\n   |                      |                 fields: [                                      |\r\n   |                      |                     Field {                                    |\r\n   |                      |                         name: \"path\",                          |\r\n   |                      |                         data_type: Utf8,                       |\r\n   |                      |                         nullable: true,                        |\r\n   |                      |                         dict_id: 0,                            |\r\n   |                      |                         dict_is_ordered: false,                |\r\n   |                      |                     },                                         |\r\n   |                      |                     Field {                                    |\r\n   |                      |                         name: \"status\",                        |\r\n   |                      |                         data_type: Utf8,                       |\r\n   |                      |                         nullable: true,                        |\r\n   |                      |                         dict_id: 0,                            |\r\n   |                      |                         dict_is_ordered: false,                |\r\n   |                      |                     },                                         |\r\n   |                      |                 ],                                             |\r\n   |                      |                 metadata: {},                                  |\r\n   |                      |             },                                                 |\r\n   |                      |             partitions.len: 1,                                 |\r\n   |                      |         },                                                     |\r\n   |                      |     },                                                         |\r\n   |                      |     schema: Schema {                                           |\r\n   |                      |         fields: [                                              |\r\n   |                      |             Field {                                            |\r\n   |                      |                 name: \"status\",                                |\r\n   |                      |                 data_type: Utf8,                               |\r\n   |                      |                 nullable: true,                                |\r\n   |                      |                 dict_id: 0,                                    |\r\n   |                      |                 dict_is_ordered: false,                        |\r\n   |                      |             },                                                 |\r\n   |                      |             Field {                                            |\r\n   |                      |                 name: \"COUNT(UInt8(1))\",                       |\r\n   |                      |                 data_type: UInt64,                             |\r\n   |                      |                 nullable: true,                                |\r\n   |                      |                 dict_id: 0,                                    |\r\n   |                      |                 dict_is_ordered: false,                        |\r\n   |                      |             },                                                 |\r\n   |                      |         ],                                                     |\r\n   |                      |         metadata: {},                                          |\r\n   |                      |     },                                                         |\r\n   |                      | }                                                              |\r\n   +----------------------+----------------------------------------------------------------+\r\n   4 row in set. Query took 0 seconds.\r\n   \r\n   ```\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T18:34:15.115+0000",
                    "updated": "2020-08-13T18:34:15.115+0000",
                    "started": "2020-08-13T18:34:15.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470360",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470165435\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -784,6 +784,18 @@ pub enum LogicalPlan {\n         /// Whether the CSV file contains a header\n         has_header: bool,\n     },\n+    /// Produces a relation with string representations of\n+    /// various parts of the plan\n+    Explain {\n\nReview comment:\n       In a subsequent PR, I would like to suggest we consider making this `Explain(ExplainNode)` or something, and having a separate `struct ExplainNode` with these fields. There is a bunch of boiler plate code for matching and reconstructing `LogicalPlanner` nodes that I think would be less awkward (and require fewer changes to add / modify fields)  if they were collected into a struct\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T18:36:52.616+0000",
                    "updated": "2020-08-13T18:36:52.616+0000",
                    "started": "2020-08-13T18:36:52.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470361",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470166183\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -45,7 +50,7 @@ impl ProjectionPushDown {\n     }\n \n     fn optimize_plan(\n-        &self,\n+        &mut self,\n\nReview comment:\n       I needed to make this `mut` so that `optimize_explain` can call `OptimizerRule::optimize` which requires a `mut` reference\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T18:38:25.802+0000",
                    "updated": "2020-08-13T18:38:25.802+0000",
                    "started": "2020-08-13T18:38:25.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470362",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-673647220\n\n\n   I am sure this PR conflicts with https://github.com/apache/arrow/pull/7880... FYI @jorgecarleitao \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T18:45:36.221+0000",
                    "updated": "2020-08-13T18:45:36.221+0000",
                    "started": "2020-08-13T18:45:36.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470365",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-673647904\n\n\n   https://issues.apache.org/jira/browse/ARROW-9654\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T18:46:59.380+0000",
                    "updated": "2020-08-13T18:46:59.380+0000",
                    "started": "2020-08-13T18:46:59.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470366",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-673769611\n\n\n   This makes me very happy! I took a quick skim through and LGTM but will review more tomorrow.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T00:10:24.675+0000",
                    "updated": "2020-08-14T00:10:24.675+0000",
                    "started": "2020-08-14T00:10:24.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470502",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470397152\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -432,6 +432,40 @@ fn csv_query_count_one() {\n     assert_eq!(expected, actual);\n }\n \n+#[test]\n+fn csv_explain() {\n+    let mut ctx = ExecutionContext::new();\n+    register_aggregate_csv_by_sql(&mut ctx);\n+    let sql = \"EXPLAIN SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    let expected = \"\\\"logical_plan\\\"\\t\\\"Projection: #c1\\\\n  Selection: #c2 Gt Int64(10)\\\\n    TableScan: aggregate_test_100 projection=None\\\"\".to_string();\n+    assert_eq!(expected, actual);\n+\n+    // Also, expect same result with case explain\n\nReview comment:\n       `with lowercase explain`?\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -1128,6 +1153,32 @@ impl LogicalPlanBuilder {\n     }\n }\n \n+/// Represents some sort of execution plan, in String form\n+#[derive(Debug, Clone, PartialEq)]\n+pub struct StringifiedPlan {\n+    /// An identifier of what type of plan this string represents\n+    pub plan_type: Arc<String>, // TODO make this an enum?\n\nReview comment:\n       I would say so, this is a finite and well defined number of cases.\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -1128,6 +1153,32 @@ impl LogicalPlanBuilder {\n     }\n }\n \n+/// Represents some sort of execution plan, in String form\n+#[derive(Debug, Clone, PartialEq)]\n+pub struct StringifiedPlan {\n+    /// An identifier of what type of plan this string represents\n+    pub plan_type: Arc<String>, // TODO make this an enum?\n+    /// The string representation of the plan\n+    pub plan: Arc<String>,\n+}\n+\n+impl StringifiedPlan {\n+    /// Create a new Stringified plan of `plan_type` with string\n+    /// representation `plan`\n+    pub fn new(plan_type: impl Into<String>, plan: impl Into<String>) -> Self {\n+        StringifiedPlan {\n+            plan_type: Arc::new(plan_type.into()),\n+            plan: Arc::new(plan.into()),\n+        }\n+    }\n+\n+    /// returns true if this plan should be displayed. Generally\n+    /// `verbose_mode = true` will display all available plans\n+    pub fn should_display(&self, verbose_mode: bool) -> bool {\n\nReview comment:\n       I would try to be systematic with the name: if `LogicalPlan::Explain::verbose`, then `verbose_mode` here or vice-versa.\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -432,6 +432,40 @@ fn csv_query_count_one() {\n     assert_eq!(expected, actual);\n }\n \n+#[test]\n+fn csv_explain() {\n+    let mut ctx = ExecutionContext::new();\n+    register_aggregate_csv_by_sql(&mut ctx);\n+    let sql = \"EXPLAIN SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    let expected = \"\\\"logical_plan\\\"\\t\\\"Projection: #c1\\\\n  Selection: #c2 Gt Int64(10)\\\\n    TableScan: aggregate_test_100 projection=None\\\"\".to_string();\n+    assert_eq!(expected, actual);\n+\n+    // Also, expect same result with case explain\n+    let sql = \"explain SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    assert_eq!(expected, actual);\n+}\n+\n+#[test]\n+fn csv_explain_verbose() {\n+    let mut ctx = ExecutionContext::new();\n+    register_aggregate_csv_by_sql(&mut ctx);\n+    let sql = \"EXPLAIN VERBOSE SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    // Don't actually test the contents of the debuging output (as\n\nReview comment:\n       yes! :)\n\n##########\nFile path: rust/datafusion/src/optimizer/projection_push_down.rs\n##########\n@@ -45,7 +50,7 @@ impl ProjectionPushDown {\n     }\n \n     fn optimize_plan(\n-        &self,\n+        &mut self,\n\nReview comment:\n       IMO that is fine, these optimizers are just implementation structs anyway, so changing state has no impact.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T04:35:21.695+0000",
                    "updated": "2020-08-14T04:35:21.695+0000",
                    "started": "2020-08-14T04:35:21.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470563",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-674208715\n\n\n   Thanks @jorgecarleitao \r\n   \r\n   > #### Physical Plan?\r\n   > Looking at CreateExternalTable, we do not construct a physical plan out of it. Wouldn't it be simpler if we do not create a physical plan, like we do for CreateExternalTable, since we do not need to multi-thread it nor run through partitions nor batches?\r\n   \r\n   Yes, you are right that we could special case explain not to actually run a physical plan. I was thinking there are some benefits to using a physical plan, as follows:\r\n   \r\n   1. Immediate support for all other input/output channels (not just the CLI) -- so for example if there is ever a client library for DataFusion, it will not need any additional logic to handle `EXPLAIN`\r\n   2. Use / store the plans themselves as data ( imagine `INSERT INTO foo EXPLAIN select * from bar`)/  \r\n   \r\n   I admit these are both forward looking features with likely no practical import in the near term. However, I felt making `Explain` a first class part of both logical and physical plans would reduce special cases and make the code \"cleaner\" (though this is just my opinion)\r\n   \r\n   > #### Plans as {:#?}\r\n   > If I read correctly, we currently return the result of the explain as the debug (`{:#?}`) of the plans. Shouldn't we reserve the debug format for our internal representation, and introduce a new format to `EXPLAIN` (not necessarily in this PR)?\r\n   \r\n   I am torn on this and have no strong opinion. I could go either way -- I think that most of the information that is typically in explain plans is useful for developers, and thus there would always be substantial overlap between a Debug format and an explain format. But maybe the differences between them could justify the duplication? I am not sure. \r\n   \r\n   > #### Other formats?\r\n   > One thing I dislike about spark is that EXPLAIN is in a not-so-nice format to parse programmatically. One idea is to allow `explain` to return the result in json. This is e.g. useful to construct a visual graph representation of the plan. One idea would be to support another string parameter, `format`, and make it default to `string` (not necessarily in this PR).\r\n   \r\n   I like this idea. The typical thing I have used in the past for such purposes is https://graphviz.org/ and `dot` -- I have filed https://issues.apache.org/jira/browse/ARROW-9746 to track the improvement. \r\n   \r\n   > #### Support on `table` API?\r\n   > We should consider adding `.explain` on the `table.rs`.\r\n   \r\n   Good idea -- I defer to @andygrove on how he sees the DataFusion CLI evolving -- aka if he wants to mirror the SQLite style `.table` or `.quit` type commands or the current `quit` command or something else entirely.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T18:35:15.300+0000",
                    "updated": "2020-08-14T18:35:15.300+0000",
                    "started": "2020-08-14T18:35:15.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470815",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470798942\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -432,6 +432,40 @@ fn csv_query_count_one() {\n     assert_eq!(expected, actual);\n }\n \n+#[test]\n+fn csv_explain() {\n+    let mut ctx = ExecutionContext::new();\n+    register_aggregate_csv_by_sql(&mut ctx);\n+    let sql = \"EXPLAIN SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    let expected = \"\\\"logical_plan\\\"\\t\\\"Projection: #c1\\\\n  Selection: #c2 Gt Int64(10)\\\\n    TableScan: aggregate_test_100 projection=None\\\"\".to_string();\n+    assert_eq!(expected, actual);\n+\n+    // Also, expect same result with case explain\n\nReview comment:\n       Yes, good catch. Will fix\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T18:36:18.629+0000",
                    "updated": "2020-08-14T18:36:18.629+0000",
                    "started": "2020-08-14T18:36:18.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470816",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470817",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470799418\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -1128,6 +1153,32 @@ impl LogicalPlanBuilder {\n     }\n }\n \n+/// Represents some sort of execution plan, in String form\n+#[derive(Debug, Clone, PartialEq)]\n+pub struct StringifiedPlan {\n+    /// An identifier of what type of plan this string represents\n+    pub plan_type: Arc<String>, // TODO make this an enum?\n+    /// The string representation of the plan\n+    pub plan: Arc<String>,\n+}\n+\n+impl StringifiedPlan {\n+    /// Create a new Stringified plan of `plan_type` with string\n+    /// representation `plan`\n+    pub fn new(plan_type: impl Into<String>, plan: impl Into<String>) -> Self {\n+        StringifiedPlan {\n+            plan_type: Arc::new(plan_type.into()),\n+            plan: Arc::new(plan.into()),\n+        }\n+    }\n+\n+    /// returns true if this plan should be displayed. Generally\n+    /// `verbose_mode = true` will display all available plans\n+    pub fn should_display(&self, verbose_mode: bool) -> bool {\n\nReview comment:\n       I think an enum might be cleaner too -- let me give it a shit\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T18:36:41.693+0000",
                    "updated": "2020-08-14T18:36:41.693+0000",
                    "started": "2020-08-14T18:36:41.693+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470817",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470799418\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -1128,6 +1153,32 @@ impl LogicalPlanBuilder {\n     }\n }\n \n+/// Represents some sort of execution plan, in String form\n+#[derive(Debug, Clone, PartialEq)]\n+pub struct StringifiedPlan {\n+    /// An identifier of what type of plan this string represents\n+    pub plan_type: Arc<String>, // TODO make this an enum?\n+    /// The string representation of the plan\n+    pub plan: Arc<String>,\n+}\n+\n+impl StringifiedPlan {\n+    /// Create a new Stringified plan of `plan_type` with string\n+    /// representation `plan`\n+    pub fn new(plan_type: impl Into<String>, plan: impl Into<String>) -> Self {\n+        StringifiedPlan {\n+            plan_type: Arc::new(plan_type.into()),\n+            plan: Arc::new(plan.into()),\n+        }\n+    }\n+\n+    /// returns true if this plan should be displayed. Generally\n+    /// `verbose_mode = true` will display all available plans\n+    pub fn should_display(&self, verbose_mode: bool) -> bool {\n\nReview comment:\n       I think an enum might be cleaner too -- let me give it a shot\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T18:36:54.771+0000",
                    "updated": "2020-08-14T18:36:54.771+0000",
                    "started": "2020-08-14T18:36:54.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470818",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470835",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470813982\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -432,6 +432,40 @@ fn csv_query_count_one() {\n     assert_eq!(expected, actual);\n }\n \n+#[test]\n+fn csv_explain() {\n+    let mut ctx = ExecutionContext::new();\n+    register_aggregate_csv_by_sql(&mut ctx);\n+    let sql = \"EXPLAIN SELECT c1 FROM aggregate_test_100 where c2 > 10\";\n+    let actual = execute(&mut ctx, sql).join(\"\\n\");\n+    let expected = \"\\\"logical_plan\\\"\\t\\\"Projection: #c1\\\\n  Selection: #c2 Gt Int64(10)\\\\n    TableScan: aggregate_test_100 projection=None\\\"\".to_string();\n+    assert_eq!(expected, actual);\n+\n+    // Also, expect same result with case explain\n\nReview comment:\n       fixed in https://github.com/apache/arrow/pull/7959/commits/639db5f109c5861c7fb646152a48b156afde4ac3\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T18:59:59.116+0000",
                    "updated": "2020-08-14T18:59:59.116+0000",
                    "started": "2020-08-14T18:59:59.116+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470835",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470852",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#discussion_r470819775\n\n\n\n##########\nFile path: rust/datafusion/src/logicalplan.rs\n##########\n@@ -1128,6 +1153,32 @@ impl LogicalPlanBuilder {\n     }\n }\n \n+/// Represents some sort of execution plan, in String form\n+#[derive(Debug, Clone, PartialEq)]\n+pub struct StringifiedPlan {\n+    /// An identifier of what type of plan this string represents\n+    pub plan_type: Arc<String>, // TODO make this an enum?\n+    /// The string representation of the plan\n+    pub plan: Arc<String>,\n+}\n+\n+impl StringifiedPlan {\n+    /// Create a new Stringified plan of `plan_type` with string\n+    /// representation `plan`\n+    pub fn new(plan_type: impl Into<String>, plan: impl Into<String>) -> Self {\n+        StringifiedPlan {\n+            plan_type: Arc::new(plan_type.into()),\n+            plan: Arc::new(plan.into()),\n+        }\n+    }\n+\n+    /// returns true if this plan should be displayed. Generally\n+    /// `verbose_mode = true` will display all available plans\n+    pub fn should_display(&self, verbose_mode: bool) -> bool {\n\nReview comment:\n       @jorgecarleitao  -- check this out: https://github.com/apache/arrow/pull/7959/commits/7e9e42ce385a4825ff986b70f87960cec6a18f1c\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T19:13:10.528+0000",
                    "updated": "2020-08-14T19:13:10.528+0000",
                    "started": "2020-08-14T19:13:10.527+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470852",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-674233722\n\n\n   I agree with your answers, the changes, and ready to merge for me.\r\n   \r\n   It is being great fun working on this string of PRs from each of us, @alamb and @andygrove ! \ud83d\udc4d\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T19:18:14.900+0000",
                    "updated": "2020-08-14T19:18:14.900+0000",
                    "started": "2020-08-14T19:18:14.900+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470853",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959#issuecomment-674255667\n\n\n   > It is being great fun working on this string of PRs from each of us, @alamb and @andygrove ! \ud83d\udc4d\r\n   \r\n   I agree @jorgecarleitao \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T20:19:43.096+0000",
                    "updated": "2020-08-14T20:19:43.096+0000",
                    "started": "2020-08-14T20:19:43.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470871",
                    "issueId": "13321096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/worklog/470905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #7959:\nURL: https://github.com/apache/arrow/pull/7959\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-14T22:16:24.501+0000",
                    "updated": "2020-08-14T22:16:24.501+0000",
                    "started": "2020-08-14T22:16:24.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470905",
                    "issueId": "13321096"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@31480a8a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@386aeb33[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4224be3d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2d78f639[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ae229c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@162357c2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7191c66d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1bb22f58[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60e589e3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6cf44f7a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13294e27[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@196b6bf5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 14 22:16:14 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-14T22:16:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9654/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-08-05T12:51:52.000+0000",
        "updated": "2020-08-14T22:16:25.000+0000",
        "timeoriginalestimate": null,
        "description": "In order to understand what DataFusion's planner is doing, it would be helpful to have an \"EXPLAIN PLAN\" feature. All other database systems I have worked with have such a feature (e.g. see [MySql|https://dev.mysql.com/doc/refman/8.0/en/explain-output.html]). \r\n\r\nI have found EXPLAIN helpful for both users but also very much developers.\r\n\r\nThe feature would look something like\r\n{code}\r\nEXPLAIN <sql>\r\n{code}\r\n\r\nWhich would then print a string with the logical plan. One way to implement this would simply be to use the debugging printout of the logical and physical plans\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Add an EXPLAIN command to the datafusion CLI",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/comment/17171480",
                    "id": "17171480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~andygrove] -- is this a feature you would be willing to consider to accept? I was thinking of trying to code it up",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-08-05T12:52:53.575+0000",
                    "updated": "2020-08-05T12:52:53.575+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/comment/17171527",
                    "id": "17171527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "[~alamb] Yes, absolutely. This would a great addition. For now it can just show the logical plan, but eventually, I would like to see the physical plan as well.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-05T14:07:16.739+0000",
                    "updated": "2020-08-05T14:07:16.739+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/comment/17171568",
                    "id": "17171568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks [~andygrove] -- I'll see what I can do",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-08-05T15:27:00.253+0000",
                    "updated": "2020-08-05T15:27:00.253+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321096/comment/17178083",
                    "id": "17178083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 7959\n[https://github.com/apache/arrow/pull/7959]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-08-14T22:16:14.379+0000",
                    "updated": "2020-08-14T22:16:14.379+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hhwo:",
        "customfield_12314139": null
    }
}