{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13373188",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188",
    "key": "ARROW-12431",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nugend",
            "name": "nugend",
            "key": "nugend",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Daniel Nugent",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nugend",
            "name": "nugend",
            "key": "nugend",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Daniel Nugent",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12431/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/591108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- opened a new pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T16:26:02.719+0000",
                    "updated": "2021-04-29T16:26:02.719+0000",
                    "started": "2021-04-29T16:26:02.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591108",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/591162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#issuecomment-829462317\n\n\n   https://issues.apache.org/jira/browse/ARROW-12431\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T17:45:38.499+0000",
                    "updated": "2021-04-29T17:45:38.499+0000",
                    "started": "2021-04-29T17:45:38.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591162",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/591463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r623819764\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,31 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert pa.array([b'\\x05']).to_pylist() == masked_basic.to_pylist()\n\nReview comment:\n       ```suggestion\r\n       assert [b'\\x05'] == masked_basic.to_pylist()\r\n   ```\r\n   \r\n   I would compare it here to the known result, since it's a simple result (and to not rely on another conversion path)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-30T11:54:46.276+0000",
                    "updated": "2021-04-30T11:54:46.276+0000",
                    "started": "2021-04-30T11:54:46.276+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591463",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/591484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r623836273\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,31 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert pa.array([b'\\x05']).to_pylist() == masked_basic.to_pylist()\n\nReview comment:\n       \ud83d\udc4d \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-30T12:25:26.478+0000",
                    "updated": "2021-04-30T12:25:26.478+0000",
                    "started": "2021-04-30T12:25:26.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591484",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625052940\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       This is doing a spurious additional allocation and memory copy. You could reuse `MaskToBitmap` instead.\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,31 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(-1),\n\nReview comment:\n       This should be `pa.binary()`, not `pa.binary(-1)`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T12:32:52.208+0000",
                    "updated": "2021-05-03T12:32:52.208+0000",
                    "started": "2021-05-03T12:32:52.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592144",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625056720\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       The issue is that `AppendValues` needs a byte mask, not bit mask\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T12:39:41.704+0000",
                    "updated": "2021-05-03T12:39:41.704+0000",
                    "started": "2021-05-03T12:39:41.703+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592145",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625057919\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       Right. That said, we can also eschew `AppendValues` and construct the `ArrayData` directly.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T12:41:47.869+0000",
                    "updated": "2021-05-03T12:41:47.869+0000",
                    "started": "2021-05-03T12:41:47.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592146",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625114336\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,31 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(-1),\n\nReview comment:\n       I thought that it was better to make it explicit that we were testing against a variable length binary, but given that ``-1``\u00a0 is the default anyway I guess it doesn't make much difference.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T14:12:36.046+0000",
                    "updated": "2021-05-03T14:12:36.046+0000",
                    "started": "2021-05-03T14:12:36.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592186",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625115182\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,31 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(-1),\n\nReview comment:\n       Well, `pa.binary()` is the official way to get a variable length binary. `binary(-1)` is an implementation detail.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T14:13:39.365+0000",
                    "updated": "2021-05-03T14:13:39.365+0000",
                    "started": "2021-05-03T14:13:39.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592187",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625177654\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       The version for variable length binaries ( `NumPyConverter::Visit(const BinaryType& type)` ) does that same work simply iterating over the data and invoking `AppendNull` / `Append` depending on the value of the mask.  Would that approach be ok? That would avoid the need to allocate the inverted mask\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T15:42:31.018+0000",
                    "updated": "2021-05-03T15:42:31.018+0000",
                    "started": "2021-05-03T15:42:31.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592231",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625179220\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       Yes, that would work. Note you can also call `builder.Reserve` to preallocate the required data size.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-03T15:44:48.898+0000",
                    "updated": "2021-05-03T15:44:48.898+0000",
                    "started": "2021-05-03T15:44:48.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592233",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625640867\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       I'm wondering, given that this seems a fairly reasonable need, if the ArrayBuilder itself shouldn't have a specialised version of `AppendValues` that accepts a mask. Maybe `AppendValuesWithMask`. \r\n   \r\n   It seems confusing by the way that the builder interface would have multiple different \"definitions\" of how to edit the bitmap, but in the end we already have such dichotomy in place as the ``Array`` **mask** is ``True for NULL`` while the **bitmap** is ``0 for NULL`` \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T09:34:44.074+0000",
                    "updated": "2021-05-04T09:34:44.074+0000",
                    "started": "2021-05-04T09:34:44.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592623",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625640867\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       I'm wondering, given that this seems a fairly reasonable need, if the ArrayBuilder itself shouldn't have a specialised version of `AppendValues` that accepts a mask. Maybe `AppendValuesWithMask`. \r\n   \r\n   It seems confusing, on the other side, that the builder interface would have multiple different \"definitions\" of how to edit the bitmap, but in the end we already have such dichotomy in place as the ``Array`` **mask** is ``True for NULL`` while the **bitmap** is ``0 for NULL`` \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T09:35:07.266+0000",
                    "updated": "2021-05-04T09:35:07.266+0000",
                    "started": "2021-05-04T09:35:07.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592624",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625647786\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       Well, the only place where this is needed is the PyArrow API, and I don't even know why we have this `mask` argument (with the confusing convention that `true` means \"null\", which is exactly the reverse of Arrow validity bitmaps).\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T09:45:36.212+0000",
                    "updated": "2021-05-04T09:45:36.212+0000",
                    "started": "2021-05-04T09:45:36.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592626",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/592628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r625650105\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,13 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    std::unique_ptr<uint8_t[]> inverted_mask(new uint8_t[length_]);\n+    for (int64_t i = 0; i < length_; ++i) {\n+      inverted_mask[i] = !mask_values[i];\n+    }\n\nReview comment:\n       The `mask` keyword is useful if you have numpy-style masked arrays (having a boolean numpy array as the mask). We use this keyword in pandas.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-04T09:49:15.866+0000",
                    "updated": "2021-05-04T09:49:15.866+0000",
                    "started": "2021-05-04T09:49:15.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "592628",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/595222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r630955362\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,38 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Fixed Length Binary, copy\n\nReview comment:\n       I don't understand what this is supposed to test. The fact that a copy is made is just an implementation detail.\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,15 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    RETURN_NOT_OK(builder.Reserve(length_));\n+    for (int64_t i = 0; i < length_; ++i) {\n+      if (mask_values[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+      } else {\n+        RETURN_NOT_OK(builder.Append(data));\n+      }\n+      data += stride_;\n\nReview comment:\n       Does this solve the strided conversion case? If so, perhaps you can add a test for it?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T11:28:34.204+0000",
                    "updated": "2021-05-12T11:28:34.204+0000",
                    "started": "2021-05-12T11:28:34.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595222",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/596577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r632411238\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,38 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Fixed Length Binary, copy\n\nReview comment:\n       It verifies that the behaviour is the same that we get from variable length binary arrays, which do not reuse the numpy array memory. I don't think it's an implementation detail because it changes the user experience.\r\n   \r\n   The fact that the underlying numpy array is shared or not changes the user experience as it means the user can't modify the original numpy array without indirectly modifying (probably unexpectedly) the Arrow array too.\r\n   \r\n   which lead me to create https://issues.apache.org/jira/browse/ARROW-12666 because in some cases we reuse the numpy memory (all basic types) and in other cases we don't (the string, binary etc... types). The follow up ticket suggests to make that behaviour clear as numpy does by adding a `copy=True/False` argument to the `pyarrow.array`\u00a0 function. \r\n   \r\n   We can discuss further what's the best way to go in that dedicated ticket, here I wanted to make sure we were consistent with that happens when `pa.binary()` and `pa.binary(N)` are used.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T09:41:02.151+0000",
                    "updated": "2021-05-14T09:41:02.151+0000",
                    "started": "2021-05-14T09:41:02.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596577",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/596578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r632411238\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -2666,6 +2666,38 @@ def test_array_masked():\n     assert arr.type == pa.int64()\n \n \n+def test_binary_array_masked():\n+    # ARROW-12431\n+    masked_basic = pa.array([b'\\x05'], type=pa.binary(1),\n+                            mask=np.array([False]))\n+    assert [b'\\x05'] == masked_basic.to_pylist()\n+\n+    # Fixed Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(1),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Variable Length Binary\n+    masked = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                      mask=np.array([False]))\n+    assert [b'\\x05'] == masked.to_pylist()\n+\n+    masked_nulls = pa.array(np.array([b'\\x05']), type=pa.binary(),\n+                            mask=np.array([True]))\n+    assert [None] == masked_nulls.to_pylist()\n+\n+    # Fixed Length Binary, copy\n\nReview comment:\n       It verifies that the behaviour is the same that we get from variable length binary arrays, which do not reuse the numpy array memory. I don't think it's an implementation detail because it changes the user experience.\r\n   \r\n   The fact that the underlying numpy array is shared or not changes the user experience as it means the user can't modify the original numpy array without indirectly modifying (probably unexpectedly) the Arrow array too.\r\n   \r\n   which lead me to create https://issues.apache.org/jira/browse/ARROW-12666 because in some cases we reuse the numpy memory (all basic types) and in other cases we don't (the string, binary etc... types). The follow up ticket suggests to make that behaviour clear as numpy does by adding a `copy=True/False` argument to the `pyarrow.array`\u00a0 function. \r\n   \r\n   We can discuss further what's the best way to go in that dedicated ticket, here I wanted to make sure we were consistent with that happens when `pa.binary()` and `pa.binary(N)` are used. So the test verifies that if you modify the numpy array the arraw array doesn't change.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T09:41:55.748+0000",
                    "updated": "2021-05-14T09:41:55.748+0000",
                    "started": "2021-05-14T09:41:55.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596578",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/596579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#discussion_r632412367\n\n\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,15 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    RETURN_NOT_OK(builder.Reserve(length_));\n+    for (int64_t i = 0; i < length_; ++i) {\n+      if (mask_values[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+      } else {\n+        RETURN_NOT_OK(builder.Append(data));\n+      }\n+      data += stride_;\n\nReview comment:\n       Sadly not, I expected it would, but I wrote some tests and it wasn't sufficient. That's why I made https://issues.apache.org/jira/browse/ARROW-12667 as a follow up issue. So that I can test it for all various types and make sure it works in all cases.\n\n##########\nFile path: cpp/src/arrow/python/numpy_to_arrow.cc\n##########\n@@ -594,7 +594,15 @@ Status NumPyConverter::Visit(const FixedSizeBinaryType& type) {\n \n   if (mask_ != nullptr) {\n     Ndarray1DIndexer<uint8_t> mask_values(mask_);\n-    RETURN_NOT_OK(builder.AppendValues(data, length_, mask_values.data()));\n+    RETURN_NOT_OK(builder.Reserve(length_));\n+    for (int64_t i = 0; i < length_; ++i) {\n+      if (mask_values[i]) {\n+        RETURN_NOT_OK(builder.AppendNull());\n+      } else {\n+        RETURN_NOT_OK(builder.Append(data));\n+      }\n+      data += stride_;\n\nReview comment:\n       Sadly not, I expected it would, but I wrote some tests and it wasn't enough. That's why I made https://issues.apache.org/jira/browse/ARROW-12667 as a follow up issue. So that I can test it for all various types and make sure it works in all cases.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T09:43:19.140+0000",
                    "updated": "2021-05-14T09:43:19.140+0000",
                    "started": "2021-05-14T09:43:19.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596579",
                    "issueId": "13373188"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/worklog/600361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #10199:\nURL: https://github.com/apache/arrow/pull/10199#issuecomment-845943151\n\n\n   @pitrou @jorisvandenbossche did you have a chance to have a final pass?\r\n   \r\n   Given that the solution is comparable to what we are already doing for variable length arrays, it doesn't seem to introduce new issues and is isolated enough, I think it could make sense to ship a fix to contain the bug while we work on eventual performance improvements and the other two related issues.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-21T13:16:47.438+0000",
                    "updated": "2021-05-21T13:16:47.438+0000",
                    "started": "2021-05-21T13:16:47.438+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "600361",
                    "issueId": "13373188"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@21a1eec7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76b17c50[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ee0614c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@34ed13c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19ca78bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@21a2a50[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f0dd15e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@abf28b2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@407ab6c8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13614c3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f7f82e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@71feaa7a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 15 09:57:02 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-15T09:57:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12431/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-04-17T07:33:53.000+0000",
        "updated": "2021-06-15T09:57:17.000+0000",
        "timeoriginalestimate": null,
        "description": "{code:python}\r\nPython 3.9.2 | packaged by conda-forge | (default, Feb 21 2021, 05:02:46)                                   \r\n[GCC 9.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numpy as np\r\n>>> import pyarrow as pa\r\n>>>\r\n>>> pa.array(np.array([b'\\x00']),type=pa.binary(1), mask = np.array([False]))\r\n<pyarrow.lib.FixedSizeBinaryArray object at 0x7fa080ca3640>\r\n[\r\n  null\r\n]\r\n>>> pa.array(np.array([b'\\x00']),type=pa.binary(1), mask = np.array([True]))\r\n<pyarrow.lib.FixedSizeBinaryArray object at 0x7fa080ca3700>\r\n[\r\n  00\r\n]\r\n>>> pa.array([b'\\x00'],type=pa.binary(1), mask = np.array([False]))\r\n<pyarrow.lib.FixedSizeBinaryArray object at 0x7fa083cc9520>\r\n[\r\n  00\r\n]\r\n>>> pa.__version__\r\n'3.0.0'\r\n>>> np.__version__\r\n'1.20.1'\r\n{code}\r\n\r\nHappens both with FixedSizeBinary and variable sized binary (I was working with FixedSizeBinary). Does not happen for integers (presumably other types, didn't exhaustively check)?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pa.array mask inverted when type is binary and value to be converted is numpy array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/comment/17324893",
                    "id": "17324893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~nugend] thanks for the report!\r\n\r\nIt seems to specifically happen when the input array has numpy's binary/string dtype (and not when it's object type):\r\n\r\n{code}\r\nIn [27]: pa.array(np.array([b'\\x00']),type=pa.binary(1), mask = np.array([True]))\r\nOut[27]: \r\n<pyarrow.lib.FixedSizeBinaryArray object at 0x7f6d65b32640>\r\n[\r\n  00\r\n]\r\n\r\nIn [28]: pa.array(np.array([b'\\x00'], dtype=object),type=pa.binary(1), mask = np.array([True]))\r\nOut[28]: \r\n<pyarrow.lib.FixedSizeBinaryArray object at 0x7f6d65b32f40>\r\n[\r\n  null\r\n{code}\r\n\r\n(I assume the object dtype array takes a similar path as the list input)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-04-19T09:09:28.969+0000",
                    "updated": "2021-04-19T09:09:28.969+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13373188/comment/17363521",
                    "id": "17363521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10199\n[https://github.com/apache/arrow/pull/10199]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-15T09:57:02.092+0000",
                    "updated": "2021-06-15T09:57:02.092+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0q4rs:",
        "customfield_12314139": null
    }
}