{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13442723",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723",
    "key": "ARROW-16431",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
            "name": "milesgranger",
            "key": "JIRAUSER293894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Miles Granger",
            "active": true,
            "timeZone": "Europe/Oslo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=multimeric",
            "name": "multimeric",
            "key": "JIRAUSER286038",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Michael Milton",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=multimeric",
            "name": "multimeric",
            "key": "JIRAUSER286038",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Michael Milton",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16431/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger opened a new pull request, #14029:\nURL: https://github.com/apache/arrow/pull/14029\n\n   Fix [ARROW-16431](https://issues.apache.org/jira/browse/ARROW-16431)\r\n   \r\n   Feel free to opine on specific error messages or the implementation as a whole. \ud83d\udc4c \n\n\n",
                    "created": "2022-09-02T07:38:47.848+0000",
                    "updated": "2022-09-02T07:38:47.848+0000",
                    "started": "2022-09-02T07:38:47.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805690",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#issuecomment-1235186687\n\n   https://issues.apache.org/jira/browse/ARROW-16431\n\n\n",
                    "created": "2022-09-02T07:53:57.820+0000",
                    "updated": "2022-09-02T07:53:57.820+0000",
                    "started": "2022-09-02T07:53:57.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805691",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961554936\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   Sorry if this is a silly question, but, `ToString() `uses `PrettyPrint` to print out the column values. It prints out the schema also, right? Can you maybe share the message from Python when two columns differ?\n\n\n\n",
                    "created": "2022-09-02T10:58:08.242+0000",
                    "updated": "2022-09-02T10:58:08.242+0000",
                    "started": "2022-09-02T10:58:08.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805713",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805715",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961561085\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   Good point, I should have presented a short example. Please see my updated comment for this PR. \ud83d\udc4d \n\n\n\n",
                    "created": "2022-09-02T11:06:59.316+0000",
                    "updated": "2022-09-02T11:06:59.316+0000",
                    "started": "2022-09-02T11:06:59.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805715",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961590794\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   Do you think it would make any sense to replace \"This schema ...\" with something more informative? I think in the test, `this` is `meta1` and `other` is `meta2`? I think that would help when debugging the error.\r\n   \r\n   Similar for \"These\" being `meta1` and `meta2` columns on position `i-1` differ?\n\n\n\n",
                    "created": "2022-09-02T11:47:39.303+0000",
                    "updated": "2022-09-02T11:47:39.303+0000",
                    "started": "2022-09-02T11:47:39.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805723",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961598909\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   Sure thing. Were you thinking something like _\"The first schema has N columns, the second has J columns\"_ then? For me, \"this\" would refer to the one being appended to, but likely I have tunnel vision in this case. ;-) \r\n   \r\n   For the \"These columns differ\".. you're thinking adding the index  of the two then? Do you think the resulting printed schemas of the two columns are sufficient?\n\n\n\n",
                    "created": "2022-09-02T11:56:50.427+0000",
                    "updated": "2022-09-02T11:56:50.427+0000",
                    "started": "2022-09-02T11:56:50.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805725",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961699361\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   I hope I didn't complicate things for you!\r\n   \r\n   In the example you added I was thinking something like:\r\n   ```python\r\n   # meta1 and meta2 differ in number of columns\r\n   meta1.append_row_groups(meta2)\r\n   *** RuntimeError: AppendRowGroups requires equal schemas but meta1 has 2 columns and meta2 has 1.\r\n   ```\r\n   \r\n   ```python\r\n   # meta1 and meta2 differ in column types\r\n   meta1.append_row_groups(meta2)\r\n   *** RuntimeError: AppendRowGroups requires equal schemas but schemas meta1 and meta2 differ in these columns:\r\n   ...\r\n   ```\r\n   \r\n   But note, this is just me thinking about it. Feel free to ignore it ;)\n\n\n\n",
                    "created": "2022-09-02T13:48:36.941+0000",
                    "updated": "2022-09-02T13:48:36.941+0000",
                    "started": "2022-09-02T13:48:36.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805764",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/805769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r961712482\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   ah, I'm following now. I'm not sure we have access to the specific variable names inside of this C++ context, but I'll see what's possible. \ud83d\udc4d \n\n\n\n",
                    "created": "2022-09-02T13:59:08.570+0000",
                    "updated": "2022-09-02T13:59:08.570+0000",
                    "started": "2022-09-02T13:59:08.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805769",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/806099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r962545888\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n\nReview Comment:\n   Maybe try to include `i` in the sentence? (since it's the position that is used to compare columns, and not for example column names)\n\n\n\n##########\ncpp/src/parquet/metadata.cc:\n##########\n@@ -690,8 +690,9 @@ class FileMetaData::FileMetaDataImpl {\n   }\n \n   void AppendRowGroups(const std::unique_ptr<FileMetaDataImpl>& other) {\n-    if (!schema()->Equals(*other->schema())) {\n-      throw ParquetException(\"AppendRowGroups requires equal schemas.\");\n\nReview Comment:\n   I would keep this original sentence as the start of the new message (it's still useful to know the context of why the schema difference is printed)\n\n\n\n",
                    "created": "2022-09-05T06:59:22.962+0000",
                    "updated": "2022-09-05T06:59:22.962+0000",
                    "started": "2022-09-05T06:59:22.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806099",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/807858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r968235420\n\n\n##########\ncpp/src/parquet/schema.cc:\n##########\n@@ -795,12 +795,27 @@ void SchemaDescriptor::Init(NodePtr schema) {\n }\n \n bool SchemaDescriptor::Equals(const SchemaDescriptor& other) const {\n+  return this->Equals(other, nullptr);\n+}\n+\n+bool SchemaDescriptor::Equals(\n+    const SchemaDescriptor& other,\n+    std::shared_ptr<std::stringstream> diff_msg = NULLPTR) const {\n   if (this->num_columns() != other.num_columns()) {\n+    if (diff_msg != nullptr) {\n+      *diff_msg.get() << \"This schema has \" << this->num_columns()\n+                      << \" columns, other has \" << other.num_columns();\n+    }\n     return false;\n   }\n \n   for (int i = 0; i < this->num_columns(); ++i) {\n     if (!this->Column(i)->Equals(*other.Column(i))) {\n+      if (diff_msg != nullptr) {\n+        *diff_msg.get() << \"These two columns differ:\" << std::endl\n+                        << this->Column(i)->ToString() << std::endl\n+                        << other.Column(i)->ToString();\n\nReview Comment:\n   I don't think there is an obvious way to get the exact variable names which caused the exception. We'd at least need to catch the exception raised from C++ then introspect somehow in Python. I'll resolve this(?) even.. but of course open to suggestions, I just couldn't make it work. \ud83e\udd14 \n\n\n\n",
                    "created": "2022-09-12T10:15:52.676+0000",
                    "updated": "2022-09-12T10:15:52.676+0000",
                    "started": "2022-09-12T10:15:52.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807858",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/808138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#issuecomment-1245000333\n\n   Can you rebase once more to see if that makes the failures go away?\n\n\n",
                    "created": "2022-09-13T07:18:10.351+0000",
                    "updated": "2022-09-13T07:18:10.351+0000",
                    "started": "2022-09-13T07:18:10.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808138",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/812602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r981522367\n\n\n##########\npython/pyarrow/tests/parquet/test_metadata.py:\n##########\n@@ -433,7 +434,9 @@ def test_write_metadata(tempdir):\n     assert parquet_meta_mult.num_row_groups == 2\n \n     # append metadata with different schema raises an error\n-    with pytest.raises(RuntimeError, match=\"requires equal schemas\"):\n+    msg = (\"AppendRowGroups requires equal schemas.\\n\"\n+           \"These two columns differ at index: 0\")\n\nReview Comment:\n   The message is a bit confusing and it took me some time to understand what \"differ at index 0\" meant.\r\n   I would suggest \"The two columns with index 0 differ\".\n\n\n\n##########\npython/pyarrow/tests/parquet/test_metadata.py:\n##########\n@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+import io\n\nReview Comment:\n   Can we keep stdlib imports alphabetically ordered?\n\n\n\n##########\npython/pyarrow/tests/parquet/test_metadata.py:\n##########\n@@ -580,3 +583,33 @@ def test_metadata_equals():\n     match = \"Argument 'other' has incorrect type\"\n     with pytest.raises(TypeError, match=match):\n         original_metadata.equals(None)\n+\n+\n+@pytest.mark.parametrize(\"t1,t2,expected\", (\n+    ({'col1': range(10)}, {'col1': range(10)}, None),\n+    ({'col1': range(10)}, {'col2': range(10)},\n+     \"These two columns differ at index: 0\"),\n+    ({'col1': range(10), 'col2': range(10)}, {'col3': range(10)},\n+     \"This schema has 2 columns, other has 1\")\n+))\n+def test_metadata_append_row_groups_diff(t1, t2, expected):\n\nReview Comment:\n   For clarity\r\n   ```suggestion\r\n   def test_metadata_append_row_groups_diff(t1, t2, expected_error):\r\n   ```\n\n\n\n##########\ncpp/src/parquet/schema.h:\n##########\n@@ -433,6 +433,8 @@ class PARQUET_EXPORT SchemaDescriptor {\n   int ColumnIndex(const schema::Node& node) const;\n \n   bool Equals(const SchemaDescriptor& other) const;\n+  bool Equals(const SchemaDescriptor& other,\n+              std::shared_ptr<std::stringstream> diff_msg) const;\n\nReview Comment:\n   Three things: 1) this should take a raw pointer (no need to give ownership), 2) this should take a generic `ostream` not a specific implementation, 3) no need for two separate signatures as the second argument can be made optional\r\n   ```suggestion\r\n     bool Equals(const SchemaDescriptor& other,\r\n                 std::ostream* diff_output = NULLPTR) const;\r\n   ```\n\n\n\n",
                    "created": "2022-09-27T17:26:01.067+0000",
                    "updated": "2022-09-27T17:26:01.067+0000",
                    "started": "2022-09-27T17:26:01.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812602",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/812747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r981925738\n\n\n##########\ncpp/src/parquet/schema.h:\n##########\n@@ -433,6 +433,8 @@ class PARQUET_EXPORT SchemaDescriptor {\n   int ColumnIndex(const schema::Node& node) const;\n \n   bool Equals(const SchemaDescriptor& other) const;\n+  bool Equals(const SchemaDescriptor& other,\n+              std::shared_ptr<std::stringstream> diff_msg) const;\n\nReview Comment:\n   Thank you. I hope reviewing such noobie C++ coding isn't too taxing; I appreciate the help. :pray: \n\n\n\n",
                    "created": "2022-09-28T04:16:40.405+0000",
                    "updated": "2022-09-28T04:16:40.405+0000",
                    "started": "2022-09-28T04:16:40.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812747",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/812761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#discussion_r982010384\n\n\n##########\ncpp/src/parquet/schema.h:\n##########\n@@ -433,6 +433,8 @@ class PARQUET_EXPORT SchemaDescriptor {\n   int ColumnIndex(const schema::Node& node) const;\n \n   bool Equals(const SchemaDescriptor& other) const;\n+  bool Equals(const SchemaDescriptor& other,\n+              std::shared_ptr<std::stringstream> diff_msg) const;\n\nReview Comment:\n   It's definitely ok :-)\n\n\n\n",
                    "created": "2022-09-28T06:51:24.617+0000",
                    "updated": "2022-09-28T06:51:24.617+0000",
                    "started": "2022-09-28T06:51:24.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812761",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/812778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou merged PR #14029:\nURL: https://github.com/apache/arrow/pull/14029\n\n\n",
                    "created": "2022-09-28T08:08:44.779+0000",
                    "updated": "2022-09-28T08:08:44.779+0000",
                    "started": "2022-09-28T08:08:44.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812778",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/813057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#issuecomment-1261173849\n\n   Benchmark runs are scheduled for baseline = 35bfeb418b288bfc05c3dd23d696d470a0e13773 and contender = 6cccec5fe66c57d327aac1c6c9244aa0326ab3d3. 6cccec5fe66c57d327aac1c6c9244aa0326ab3d3 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/a192e405ad38413392930ea641a1b34b...82c35c9278ce4710b1fe2423f299f787/)\n   [Failed :arrow_down:0.2% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/118d009fd2e34284b14f319c9490694a...1892dc1f267d43a88d34b4b00b2c39c4/)\n   [Failed :arrow_down:1.1% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bddabe9c4e5a4e46ac5af0b93278e99b...20d608913f9841bdbfffe4a8f6af1a50/)\n   [Finished :arrow_down:0.07% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/1ad101ef32094c4d8b9376ce6714982d...d295bf4fb3e2459098f384f39e4608d6/)\n   Buildkite builds:\n   [Finished] [`6cccec5f` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1585)\n   [Failed] [`6cccec5f` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1603)\n   [Failed] [`6cccec5f` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1586)\n   [Finished] [`6cccec5f` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1599)\n   [Finished] [`35bfeb41` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1584)\n   [Failed] [`35bfeb41` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1602)\n   [Failed] [`35bfeb41` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1585)\n   [Finished] [`35bfeb41` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1598)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-09-28T16:43:06.240+0000",
                    "updated": "2022-09-28T16:43:06.240+0000",
                    "started": "2022-09-28T16:43:06.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813057",
                    "issueId": "13442723"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/worklog/813058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #14029:\nURL: https://github.com/apache/arrow/pull/14029#issuecomment-1261174210\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bddabe9c4e5a4e46ac5af0b93278e99b...20d608913f9841bdbfffe4a8f6af1a50/)\n   \n\n\n",
                    "created": "2022-09-28T16:43:24.734+0000",
                    "updated": "2022-09-28T16:43:24.734+0000",
                    "started": "2022-09-28T16:43:24.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813058",
                    "issueId": "13442723"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4ac52b91[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ab614a2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e62561a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@24eb4670[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@457c17c0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5bc684cb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7738cb2f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@91ecb7e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2cf91f8a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@43f62602[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72a6ece0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@d1c8cf1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 28 08:08:45 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-28T08:08:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16431/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-05-01T23:58:13.000+0000",
        "updated": "2022-09-28T16:43:24.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently if you try to append together metadata from row groups with different schemas (?), you get the following error: \r\n\r\n\r\n{code:java}\r\n  File \"/home/mmilton/.conda/envs/mmilton/envs/driverpipe/lib/python3.9/site-packages/dask/dataframe/io/parquet/arrow.py\", line 52, in _append_row_groups\r\n    metadata.append_row_groups(md)\r\n  File \"pyarrow/_parquet.pyx\", line 628, in pyarrow._parquet.FileMetaData.append_row_groups\r\n    self._metadata.AppendRowGroups(deref(c_metadata))\r\nRuntimeError: AppendRowGroups requires equal schemas.\r\n{code}\r\n\r\nWhat would be useful here is to actually pass the schema difference in the error object in terms of which columns disagree. This information should _also_ be in the error message.\r\n\r\nFor example if it said:\r\n\r\n\r\n{code:java}\r\nRuntimeError: AppendRowGroups requires equal schemas. Column \"foo\" was previously an int32 but the latest row group is storing it as an int64\r\n{code}\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Parquet] Improve error message in append_row_groups() when appending disjoint metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/comment/17531128",
                    "id": "17531128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~multimeric] thanks for opening the issue. That would indeed be a welcome improvement of the error message (or at least we could print the two schemas, if it is not that easy to infer the exact difference between both).\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-05-03T10:11:39.564+0000",
                    "updated": "2022-05-03T10:11:39.564+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13442723/comment/17610419",
                    "id": "17610419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 14029\n[https://github.com/apache/arrow/pull/14029]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-09-28T08:08:45.556+0000",
                    "updated": "2022-09-28T08:08:45.556+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z11ze8:",
        "customfield_12314139": null
    }
}