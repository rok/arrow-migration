{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13260348",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348",
    "key": "ARROW-6784",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12573243",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12573243",
                "type": {
                    "id": "12310060",
                    "name": "Container",
                    "inward": "Is contained by",
                    "outward": "contains",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310060"
                },
                "outwardIssue": {
                    "id": "13236728",
                    "key": "ARROW-5454",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13236728",
                    "fields": {
                        "summary": "[C++] Implement Take on ChunkedArray for DataFrame use",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6784/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/330063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686\n \n \n   - [x] RecordBatch Filter\r\n   - [x] RecordBatch Take\r\n   - [ ] ChunkedArray Filter\r\n   - [ ] ChunkedArray Take\r\n   - [ ] Table Filter\r\n   - [ ] Table Take\r\n   - [ ] RecordBatch Select\r\n   - [ ] Table Select\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T18:48:46.413+0000",
                    "updated": "2019-10-17T18:48:46.413+0000",
                    "started": "2019-10-17T18:48:46.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330063",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/330068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#issuecomment-543314100\n \n \n   https://issues.apache.org/jira/browse/ARROW-6784\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T18:56:08.201+0000",
                    "updated": "2019-10-17T18:56:08.201+0000",
                    "started": "2019-10-17T18:56:08.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330068",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337142793\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,79 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *filter.Slice(offset, len), &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::ChunkedArray> current_chunked_filter;\n+  std::shared_ptr<arrow::Array> current_filter;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    current_chunked_filter = filter.Slice(offset, len);\n+    if (current_chunked_filter->num_chunks() == 1) {\n+      current_filter = current_chunked_filter->chunk(0);\n+    } else {\n+      // Concatenate the chunks of the filter so we have an Array\n+      RETURN_NOT_OK(Concatenate(current_chunked_filter->chunks(),\n \n Review comment:\n   Instead of using `Concatenate` here, I think it'd be better to use `std::vector<ArrayVector> RechunkArraysConsistently(const std::vector<ArrayVector>&);` (defined in `array.h`). After that the the chunks will be equal length, suitable for filtering.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.371+0000",
                    "updated": "2019-10-21T18:58:25.371+0000",
                    "started": "2019-10-21T18:58:25.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331582",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337145547\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,79 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *filter.Slice(offset, len), &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::ChunkedArray> current_chunked_filter;\n+  std::shared_ptr<arrow::Array> current_filter;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    current_chunked_filter = filter.Slice(offset, len);\n+    if (current_chunked_filter->num_chunks() == 1) {\n+      current_filter = current_chunked_filter->chunk(0);\n+    } else {\n+      // Concatenate the chunks of the filter so we have an Array\n+      RETURN_NOT_OK(Concatenate(current_chunked_filter->chunks(),\n+                                        default_memory_pool(), &current_filter));\n+    }\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *current_filter, &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const Table& table, const Array& filter,\n+              std::shared_ptr<Table>* out) {\n+  auto ncols = table.num_columns();\n+\n+  std::vector<std::shared_ptr<arrow::ChunkedArray>> columns(ncols);\n+\n+  for (int j = 0; j < ncols; j++) {\n+    RETURN_NOT_OK(Filter(ctx, *table.column(j), filter, &columns[j]));\n+  }\n+  *out = Table::Make(table.schema(), columns);\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const Table& table, const ChunkedArray& filter,\n+              std::shared_ptr<Table>* out) {\n+  auto ncols = table.num_columns();\n+\n+  std::vector<std::shared_ptr<arrow::ChunkedArray>> columns(ncols);\n \n Review comment:\n   This can be addressed later, but: there's an unfortunate missed optimization here. Since we're reusing the same filter for each column we don't need to recount the set bits in each chunk of the filter for every column (see the record batch overload which takes advantage of this optimization).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.768+0000",
                    "updated": "2019-10-21T18:58:25.768+0000",
                    "started": "2019-10-21T18:58:25.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331583",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337158103\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.cc\n ##########\n @@ -99,5 +100,95 @@ Status Take(FunctionContext* ctx, const Datum& values, const Datum& indices,\n   return kernel->Call(ctx, values, indices, out);\n }\n \n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  std::shared_ptr<arrow::Array> current_chunk;\n+\n+  // Case 1: `values` has a single chunk, so just use it\n+  if (num_chunks == 1) {\n+    current_chunk = values.chunk(0);\n+  } else {\n+    // TODO Case 2: See if all `indices` fall in the same chunk and call Array Take on it\n+    // See https://github.com/apache/arrow/blob/6f2c9041137001f7a9212f244b51bc004efc29af/r/src/compute.cpp#L123-L151\n+    // TODO Case 3: If indices are sorted, can slice them and call Array Take\n+\n+    // Case 4: Else, concatenate chunks and call Array Take\n+    RETURN_NOT_OK(Concatenate(values.chunks(), default_memory_pool(), &current_chunk));\n+  }\n+  // Call Array Take on our single chunk\n+  RETURN_NOT_OK(Take(ctx, *current_chunk, indices, options, &new_chunks[0]));\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = indices.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::ChunkedArray> current_chunk;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    // Take with that indices chunk\n+    RETURN_NOT_OK(Take(ctx, values, *indices.chunk(i), options, &current_chunk));\n+    // Concatenate the result to make a single array for this chunk\n+    RETURN_NOT_OK(Concatenate(current_chunk->chunks(), default_memory_pool(), &new_chunks[i]));\n \n Review comment:\n   Instead of concatenating here, you could flatten chunks from current_chunk directly into new_chunks:\r\n   ```c++\r\n   ArrayVector new_chunks;\r\n   for (const auto& indices_chunk : indices.chunks()) {\r\n     std::shared_ptr<ChunkedArray> taken;\r\n     RETURN_NOT_OK(Take(ctx, values, *indices_chunk, options, &taken));\r\n     std::move(taken->chunks()->begin(), taken->chunks()->end(), std::back_inserter(new_chunks));\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.835+0000",
                    "updated": "2019-10-21T18:58:25.835+0000",
                    "started": "2019-10-21T18:58:25.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331584",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337146316\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -64,6 +100,34 @@ ARROW_EXPORT\n Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n               std::shared_ptr<RecordBatch>* out);\n \n+/// \\brief Filter a table with a boolean selection filter\n+///\n+/// The output record batch's columns will be populated with values from corresponding\n+/// columns of the input at positions where the selection filter is not 0. Nulls in the\n+/// filter will result in nulls in the output.\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] table record batch to filter\n+/// \\param[in] filter indicates which values should be filtered out\n+/// \\param[out] out resulting record batch\n \n Review comment:\n   ```suggestion\r\n   /// \\param[out] out resulting table\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.871+0000",
                    "updated": "2019-10-21T18:58:25.871+0000",
                    "started": "2019-10-21T18:58:25.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331585",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337145826\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -64,6 +100,34 @@ ARROW_EXPORT\n Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n               std::shared_ptr<RecordBatch>* out);\n \n+/// \\brief Filter a table with a boolean selection filter\n+///\n+/// The output record batch's columns will be populated with values from corresponding\n \n Review comment:\n   ```suggestion\r\n   /// The output table's columns will be populated with values from corresponding\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.892+0000",
                    "updated": "2019-10-21T18:58:25.892+0000",
                    "started": "2019-10-21T18:58:25.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331586",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337150110\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.h\n ##########\n @@ -53,6 +53,113 @@ ARROW_EXPORT\n Status Take(FunctionContext* ctx, const Array& values, const Array& indices,\n             const TakeOptions& options, std::shared_ptr<Array>* out);\n \n+/// \\brief Take from a chunked array of values at indices in another array\n+///\n+/// The output chunked array will be of the same type as the input values\n+/// array, with elements taken from the values array at the given\n+/// indices. If an index is null then the taken element will be null.\n+///\n+/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n+/// indices = [2, 1, null, 3], the output will be\n+/// = [values[2], values[1], null, values[3]]\n+/// = [\"c\", \"b\", null, null]\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] values chunked array from which to take\n+/// \\param[in] indices which values to take\n+/// \\param[in] options options\n+/// \\param[out] out resulting chunked array\n+ARROW_EXPORT\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out);\n+\n+/// \\brief Take from a chunked array of values at indices in a chunked array\n+///\n+/// The output chunked array will be of the same type as the input values\n+/// array, with elements taken from the values array at the given\n+/// indices. If an index is null then the taken element will be null.\n+/// The chunks in the output array will align with the chunks in the indices.\n+///\n+/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n+/// indices = [2, 1, null, 3], the output will be\n+/// = [values[2], values[1], null, values[3]]\n+/// = [\"c\", \"b\", null, null]\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] values chunked array from which to take\n+/// \\param[in] indices which values to take\n+/// \\param[in] options options\n+/// \\param[out] out resulting chunked array\n+ARROW_EXPORT\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out);\n \n Review comment:\n   I don't think it's necessary to pre-emptively add every possible permutation here. I added the RecordBatch overload because I specifically planned to use it in `arrow::dataset::`. Although it saves a few lines of code which would otherwise be necessary to box/unbox from `compute::Datum`, I think most consumers should rely on the `Datum` overload.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.895+0000",
                    "updated": "2019-10-21T18:58:25.895+0000",
                    "started": "2019-10-21T18:58:25.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331587",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337159060\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.cc\n ##########\n @@ -99,5 +100,95 @@ Status Take(FunctionContext* ctx, const Datum& values, const Datum& indices,\n   return kernel->Call(ctx, values, indices, out);\n }\n \n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  std::shared_ptr<arrow::Array> current_chunk;\n+\n+  // Case 1: `values` has a single chunk, so just use it\n+  if (num_chunks == 1) {\n+    current_chunk = values.chunk(0);\n+  } else {\n+    // TODO Case 2: See if all `indices` fall in the same chunk and call Array Take on it\n+    // See https://github.com/apache/arrow/blob/6f2c9041137001f7a9212f244b51bc004efc29af/r/src/compute.cpp#L123-L151\n+    // TODO Case 3: If indices are sorted, can slice them and call Array Take\n+\n+    // Case 4: Else, concatenate chunks and call Array Take\n+    RETURN_NOT_OK(Concatenate(values.chunks(), default_memory_pool(), &current_chunk));\n+  }\n+  // Call Array Take on our single chunk\n+  RETURN_NOT_OK(Take(ctx, *current_chunk, indices, options, &new_chunks[0]));\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = indices.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::ChunkedArray> current_chunk;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    // Take with that indices chunk\n+    RETURN_NOT_OK(Take(ctx, values, *indices.chunk(i), options, &current_chunk));\n+    // Concatenate the result to make a single array for this chunk\n+    RETURN_NOT_OK(Concatenate(current_chunk->chunks(), default_memory_pool(), &new_chunks[i]));\n \n Review comment:\n   (of course it's a moot point until `Take(ChunkedArray values, Array indices)` can also avoid concatenation)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.895+0000",
                    "updated": "2019-10-21T18:58:25.895+0000",
                    "started": "2019-10-21T18:58:25.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331588",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337146256\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -64,6 +100,34 @@ ARROW_EXPORT\n Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n               std::shared_ptr<RecordBatch>* out);\n \n+/// \\brief Filter a table with a boolean selection filter\n+///\n+/// The output record batch's columns will be populated with values from corresponding\n+/// columns of the input at positions where the selection filter is not 0. Nulls in the\n+/// filter will result in nulls in the output.\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] table record batch to filter\n \n Review comment:\n   ```suggestion\r\n   /// \\param[in] table table to filter\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.955+0000",
                    "updated": "2019-10-21T18:58:25.955+0000",
                    "started": "2019-10-21T18:58:25.955+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331589",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337146097\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -64,6 +100,34 @@ ARROW_EXPORT\n Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n               std::shared_ptr<RecordBatch>* out);\n \n+/// \\brief Filter a table with a boolean selection filter\n+///\n+/// The output record batch's columns will be populated with values from corresponding\n+/// columns of the input at positions where the selection filter is not 0. Nulls in the\n+/// filter will result in nulls in the output.\n \n Review comment:\n   ```suggestion\r\n   /// filter will result in nulls in each column of the output.\r\n   ```\r\n   (maybe apply this to the record batch overload as well)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T18:58:25.958+0000",
                    "updated": "2019-10-21T18:58:25.958+0000",
                    "started": "2019-10-21T18:58:25.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331590",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#issuecomment-544668016\n \n \n   One other thing: it's not necessary to use the `arrow::` prefix when inside our namespace, so we typically leave it off\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T19:24:22.361+0000",
                    "updated": "2019-10-21T19:24:22.361+0000",
                    "started": "2019-10-21T19:24:22.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331600",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337207464\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,79 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *filter.Slice(offset, len), &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::ChunkedArray> current_chunked_filter;\n+  std::shared_ptr<arrow::Array> current_filter;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    current_chunked_filter = filter.Slice(offset, len);\n+    if (current_chunked_filter->num_chunks() == 1) {\n+      current_filter = current_chunked_filter->chunk(0);\n+    } else {\n+      // Concatenate the chunks of the filter so we have an Array\n+      RETURN_NOT_OK(Concatenate(current_chunked_filter->chunks(),\n \n Review comment:\n   Thanks, I'll look into that.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T19:52:50.152+0000",
                    "updated": "2019-10-21T19:52:50.152+0000",
                    "started": "2019-10-21T19:52:50.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331614",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337205455\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,79 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *filter.Slice(offset, len), &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::ChunkedArray> current_chunked_filter;\n+  std::shared_ptr<arrow::Array> current_filter;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    current_chunked_filter = filter.Slice(offset, len);\n+    if (current_chunked_filter->num_chunks() == 1) {\n+      current_filter = current_chunked_filter->chunk(0);\n+    } else {\n+      // Concatenate the chunks of the filter so we have an Array\n+      RETURN_NOT_OK(Concatenate(current_chunked_filter->chunks(),\n+                                        default_memory_pool(), &current_filter));\n+    }\n+    RETURN_NOT_OK(Filter(ctx, *current_chunk, *current_filter, &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const Table& table, const Array& filter,\n+              std::shared_ptr<Table>* out) {\n+  auto ncols = table.num_columns();\n+\n+  std::vector<std::shared_ptr<arrow::ChunkedArray>> columns(ncols);\n+\n+  for (int j = 0; j < ncols; j++) {\n+    RETURN_NOT_OK(Filter(ctx, *table.column(j), filter, &columns[j]));\n+  }\n+  *out = Table::Make(table.schema(), columns);\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const Table& table, const ChunkedArray& filter,\n+              std::shared_ptr<Table>* out) {\n+  auto ncols = table.num_columns();\n+\n+  std::vector<std::shared_ptr<arrow::ChunkedArray>> columns(ncols);\n \n Review comment:\n   Another missed (deferred) optimization would be to parallelize the filtering across the columns rather than iterating in serial. \r\n   \r\n   I'll take a look at the one you reference and see if I can translate it for tables; otherwise I'll make followup Jiras.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T19:52:50.224+0000",
                    "updated": "2019-10-21T19:52:50.224+0000",
                    "started": "2019-10-21T19:52:50.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331615",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337204504\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.cc\n ##########\n @@ -99,5 +100,95 @@ Status Take(FunctionContext* ctx, const Datum& values, const Datum& indices,\n   return kernel->Call(ctx, values, indices, out);\n }\n \n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  std::shared_ptr<arrow::Array> current_chunk;\n+\n+  // Case 1: `values` has a single chunk, so just use it\n+  if (num_chunks == 1) {\n+    current_chunk = values.chunk(0);\n+  } else {\n+    // TODO Case 2: See if all `indices` fall in the same chunk and call Array Take on it\n+    // See https://github.com/apache/arrow/blob/6f2c9041137001f7a9212f244b51bc004efc29af/r/src/compute.cpp#L123-L151\n+    // TODO Case 3: If indices are sorted, can slice them and call Array Take\n+\n+    // Case 4: Else, concatenate chunks and call Array Take\n+    RETURN_NOT_OK(Concatenate(values.chunks(), default_memory_pool(), &current_chunk));\n+  }\n+  // Call Array Take on our single chunk\n+  RETURN_NOT_OK(Take(ctx, *current_chunk, indices, options, &new_chunks[0]));\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = indices.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::ChunkedArray> current_chunk;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    // Take with that indices chunk\n+    RETURN_NOT_OK(Take(ctx, values, *indices.chunk(i), options, &current_chunk));\n+    // Concatenate the result to make a single array for this chunk\n+    RETURN_NOT_OK(Concatenate(current_chunk->chunks(), default_memory_pool(), &new_chunks[i]));\n \n Review comment:\n   The point of this concatenate was that the resulting chunks should correspond to the chunks defined by `indices`, as @jorisvandenbossche suggested. This, of course, gets us back to the original discussion of what chunks are for, whether they are purely an internal implementation detail or something that users should govern, what \"optimal\" chunking is, etc.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T19:52:50.526+0000",
                    "updated": "2019-10-21T19:52:50.526+0000",
                    "started": "2019-10-21T19:52:50.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331616",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/331617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337206885\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.h\n ##########\n @@ -53,6 +53,113 @@ ARROW_EXPORT\n Status Take(FunctionContext* ctx, const Array& values, const Array& indices,\n             const TakeOptions& options, std::shared_ptr<Array>* out);\n \n+/// \\brief Take from a chunked array of values at indices in another array\n+///\n+/// The output chunked array will be of the same type as the input values\n+/// array, with elements taken from the values array at the given\n+/// indices. If an index is null then the taken element will be null.\n+///\n+/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n+/// indices = [2, 1, null, 3], the output will be\n+/// = [values[2], values[1], null, values[3]]\n+/// = [\"c\", \"b\", null, null]\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] values chunked array from which to take\n+/// \\param[in] indices which values to take\n+/// \\param[in] options options\n+/// \\param[out] out resulting chunked array\n+ARROW_EXPORT\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out);\n+\n+/// \\brief Take from a chunked array of values at indices in a chunked array\n+///\n+/// The output chunked array will be of the same type as the input values\n+/// array, with elements taken from the values array at the given\n+/// indices. If an index is null then the taken element will be null.\n+/// The chunks in the output array will align with the chunks in the indices.\n+///\n+/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n+/// indices = [2, 1, null, 3], the output will be\n+/// = [values[2], values[1], null, values[3]]\n+/// = [\"c\", \"b\", null, null]\n+///\n+/// \\param[in] ctx the FunctionContext\n+/// \\param[in] values chunked array from which to take\n+/// \\param[in] indices which values to take\n+/// \\param[in] options options\n+/// \\param[out] out resulting chunked array\n+ARROW_EXPORT\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out);\n \n Review comment:\n   It's not preemptive, there are different implementations for each signature. Maybe you can show me what you mean; I haven't worked with `Datum` objects.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T19:52:50.808+0000",
                    "updated": "2019-10-21T19:52:50.808+0000",
                    "started": "2019-10-21T19:52:50.807+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331617",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/332154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter, take, select C++ code from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r337696079\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/take.cc\n ##########\n @@ -99,5 +100,95 @@ Status Take(FunctionContext* ctx, const Datum& values, const Datum& indices,\n   return kernel->Call(ctx, values, indices, out);\n }\n \n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const Array& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  std::shared_ptr<arrow::Array> current_chunk;\n+\n+  // Case 1: `values` has a single chunk, so just use it\n+  if (num_chunks == 1) {\n+    current_chunk = values.chunk(0);\n+  } else {\n+    // TODO Case 2: See if all `indices` fall in the same chunk and call Array Take on it\n+    // See https://github.com/apache/arrow/blob/6f2c9041137001f7a9212f244b51bc004efc29af/r/src/compute.cpp#L123-L151\n+    // TODO Case 3: If indices are sorted, can slice them and call Array Take\n+\n+    // Case 4: Else, concatenate chunks and call Array Take\n+    RETURN_NOT_OK(Concatenate(values.chunks(), default_memory_pool(), &current_chunk));\n+  }\n+  // Call Array Take on our single chunk\n+  RETURN_NOT_OK(Take(ctx, *current_chunk, indices, options, &new_chunks[0]));\n+  *out = std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Take(FunctionContext* ctx, const ChunkedArray& values, const ChunkedArray& indices,\n+            const TakeOptions& options, std::shared_ptr<ChunkedArray>* out) {\n+  auto num_chunks = indices.num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(num_chunks);\n+  std::shared_ptr<arrow::ChunkedArray> current_chunk;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    // Take with that indices chunk\n+    RETURN_NOT_OK(Take(ctx, values, *indices.chunk(i), options, &current_chunk));\n+    // Concatenate the result to make a single array for this chunk\n+    RETURN_NOT_OK(Concatenate(current_chunk->chunks(), default_memory_pool(), &new_chunks[i]));\n \n Review comment:\n   I think optimal chunking for output from a kernel is whatever allows the consumer greatest control over allocation and other performance overhead. Based on this: concatenation should be kept to a minimum since that generates new allocations instead of cheaply slicing existing ones. As a secondary consideration, the chunked array should have as few chunks as possible since large contiguous chunks can be processed more efficiently than lots of short chunks. Based on that: an output chunked array should not contain empty chunks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-22T19:02:05.524+0000",
                    "updated": "2019-10-22T19:02:05.524+0000",
                    "started": "2019-10-22T19:02:05.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332154",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/335154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5686: ARROW-6784: [C++][R] Move filter and take for ChunkedArray, RecordBatch, and Table from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#issuecomment-547127102\n \n \n   @bkietz I've deferred the remaining refactoring to these followup issues: ARROW-6959, ARROW-7009, ARROW-7012\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-28T20:17:45.044+0000",
                    "updated": "2019-10-28T20:17:45.044+0000",
                    "started": "2019-10-28T20:17:45.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335154",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/335693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter and take for ChunkedArray, RecordBatch, and Table from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r340273189\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,91 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  if (values.length() != filter.length()) {\n+    return Status::Invalid(\"filter and value array must have identical lengths\");\n+  }\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<Array>> new_chunks(num_chunks);\n+  std::shared_ptr<Array> current_chunk;\n+  int offset = 0;\n+  int len;\n \n Review comment:\n   These two should be `int64_t`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T19:09:40.443+0000",
                    "updated": "2019-10-29T19:09:40.443+0000",
                    "started": "2019-10-29T19:09:40.442+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335693",
                    "issueId": "13260348"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/worklog/335694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5686: ARROW-6784: [C++][R] Move filter and take for ChunkedArray, RecordBatch, and Table from Rcpp to C++ library\nURL: https://github.com/apache/arrow/pull/5686#discussion_r340273421\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -163,5 +164,91 @@ Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filte\n   return Status::OK();\n }\n \n+Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n+              std::shared_ptr<ChunkedArray>* out) {\n+  if (values.length() != filter.length()) {\n+    return Status::Invalid(\"filter and value array must have identical lengths\");\n+  }\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<Array>> new_chunks(num_chunks);\n+  std::shared_ptr<Array> current_chunk;\n+  int offset = 0;\n+  int len;\n+\n+  for (int i = 0; i < num_chunks; i++) {\n+    current_chunk = values.chunk(i);\n+    len = current_chunk->length();\n+    RETURN_NOT_OK(\n+        Filter(ctx, *current_chunk, *filter.Slice(offset, len), &new_chunks[i]));\n+    offset += len;\n+  }\n+\n+  *out = std::make_shared<ChunkedArray>(std::move(new_chunks));\n+  return Status::OK();\n+}\n+\n+Status Filter(FunctionContext* ctx, const ChunkedArray& values,\n+              const ChunkedArray& filter, std::shared_ptr<ChunkedArray>* out) {\n+  if (values.length() != filter.length()) {\n+    return Status::Invalid(\"filter and value array must have identical lengths\");\n+  }\n+  auto num_chunks = values.num_chunks();\n+  std::vector<std::shared_ptr<Array>> new_chunks(num_chunks);\n+  std::shared_ptr<Array> current_chunk;\n+  std::shared_ptr<ChunkedArray> current_chunked_filter;\n+  std::shared_ptr<Array> current_filter;\n+  int offset = 0;\n+  int len;\n \n Review comment:\n   `int64_t`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-29T19:09:40.569+0000",
                    "updated": "2019-10-29T19:09:40.569+0000",
                    "started": "2019-10-29T19:09:40.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "335694",
                    "issueId": "13260348"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@386e2ca7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@163b1519[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65818ea6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2b5cdcd2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dcbe0e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3d9cfa3c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5481b797[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@19765b99[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b684493[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@11ff1ad8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@481b3a7f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@639a0a76[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Nov 02 14:50:56 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-02T14:50:55.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6784/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-10-03T17:50:09.000+0000",
        "updated": "2019-11-04T18:25:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Followup to ARROW-3808 and some other previous work. Of particular interest:\r\n * Filter and Take methods for ChunkedArray, in r/src/compute.cpp\r\n * Methods for that and some other things that apply Array and ChunkedArray methods across the columns of a RecordBatch or Table, respectively\r\n * RecordBatch__select and Table__select to take columns",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][R] Move filter and take code from Rcpp to C++ library",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/comment/16952824",
                    "id": "16952824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "See also\u00a0ARROW-5454",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-16T13:28:26.853+0000",
                    "updated": "2019-10-16T13:28:26.853+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/comment/16961441",
                    "id": "16961441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Followup issues: ARROW-6959, ARROW-7009, ARROW-7012",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-28T20:16:10.024+0000",
                    "updated": "2019-10-28T20:16:10.024+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13260348/comment/16965393",
                    "id": "16965393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 5686\n[https://github.com/apache/arrow/pull/5686]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-11-02T14:50:56.005+0000",
                    "updated": "2019-11-02T14:50:56.005+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z079rk:",
        "customfield_12314139": null
    }
}