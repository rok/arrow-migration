{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13130220",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220",
    "key": "ARROW-1990",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342291",
                "id": "12342291",
                "name": "JS-0.3.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-02-21"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1990/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@331160c3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@306ec4fa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a9a8914[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c95d1a9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@101f5835[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2d30e4e3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@531c0a78[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@11c6812b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bf2bdd6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@51cf59b7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6233d63c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4759dc88[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 02 00:21:38 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-01T22:23:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1990/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-11T15:55:33.000+0000",
        "updated": "2018-02-08T21:51:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Add a TypeScript class that can perform optimized dataframe operations on an arrow {{Table}} and/or {{StructVector}}. Initially this should include operations like filtering, counting, and scanning. Eventually this class could include more operations like sorting, count by/group by, etc...",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Add \"DataFrame\" object",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16327337",
                    "id": "16327337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit opened a new pull request #1482: ARROW-1990: [JS] Add \"DataFrame\" object\nURL: https://github.com/apache/arrow/pull/1482\n \n \n   This PR moves the `Table` class out of the Vector hierarchy and adds optimized dataframe operations to it. Currently implements an optimized `scan()` method, `filter(predicate)`, `count()`, and `countBy(column_name)` (only works on dictionary-encoded columns).\r\n   \r\n   Some usage examples, based on the file generated by `js/data/test/tables/generate.py`:\r\n   ``` js\r\n   > let table = Table.from(...);\r\n   > let table = Table.from([fs.readFileSync('./test/data/tables/generated.arrow')])\r\n   undefined\r\n   > table.count()\r\n   1000000\r\n   > table.filter(col('lat').gteq(0)).count()\r\n   499718\r\n   > table.countBy('origin').asJSON()\r\n   { Charlottesville: 166839,\r\n     'New York': 166251,\r\n     'San Francisco': 166642,\r\n     Seattle: 166659,\r\n     'Terre Haute': 166756,\r\n     'Washington, DC': 166853 }\r\n   > table.filter(col('lng').gteq(0)).countBy('origin').asJSON()\r\n   { Charlottesville: 83109,\r\n     'New York': 83221,\r\n     'San Francisco': 83515,\r\n     Seattle: 83362,\r\n     'Terre Haute': 83314,\r\n     'Washington, DC': 83479 }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T16:28:52.071+0000",
                    "updated": "2018-01-16T16:28:52.071+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16327344",
                    "id": "16327344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1482: ARROW-1990: [JS] Add \"DataFrame\" object\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-358021487\n \n \n   @trxcllnt, @wesm: We may want to keep this open until after @trxcllnt's refactor is complete, but in the meantime I'm interested in what you think about the API and implementation.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T16:34:00.653+0000",
                    "updated": "2018-01-16T16:34:00.653+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16327754",
                    "id": "16327754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on a change in pull request #1482: ARROW-1990: [JS] Add \"DataFrame\" object\nURL: https://github.com/apache/arrow/pull/1482#discussion_r161879051\n \n \n\n ##########\n File path: js/src/table.ts\n ##########\n @@ -0,0 +1,272 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Vector } from './vector/vector';\n+import { DictionaryVector } from './vector/dictionary';\n+import { Uint32Vector } from './vector/numeric';\n+import { read, readAsync } from './reader/arrow';\n+import { Col, Predicate } from './predicate';\n+\n+export type NextFunc = (idx: number, cols: Vector[]) => void;\n+\n+export class TableRow {\n+    constructor (readonly batch: Vector[], readonly idx: number) {}\n+    toArray() {\n+        return this.batch.map((vec) => vec.get(this.idx));\n+    }\n+    toString() {\n+        return this.toArray().map((x) => JSON.stringify(x)).join(', ');\n+    }\n+    *[Symbol.iterator]() {\n+        for (const vec of this.batch) {\n+            yield vec.get(this.idx);\n+        }\n+    }\n+}\n+\n+export interface DataFrame {\n+    filter(predicate: Predicate): DataFrame;\n+    scan(next: NextFunc): void;\n+    count(): number;\n+    countBy(col: (Col|string)): CountByResult;\n+}\n+\n+function columnsFromBatches(batches: Vector[][]) {\n+    const remaining = batches.slice(1);\n+    return batches[0].map((vec, colidx) =>\n+        vec.concat(...remaining.map((batch) => batch[colidx]))\n+    );\n+}\n+\n+export class Table implements DataFrame {\n+    static from(sources?: Iterable<Uint8Array | Buffer | string> | object | string) {\n+        let batches: Vector[][] = [];\n+        if (sources) {\n+            batches = [];\n+            for (let batch of read(sources)) {\n+                batches.push(batch);\n+            }\n+        }\n+        return new Table({ batches });\n+    }\n+    static async fromAsync(sources?: AsyncIterable<Uint8Array | Buffer | string>) {\n+        let batches: Vector[][] = [];\n+        if (sources) {\n+            batches = [];\n+            for await (let batch of readAsync(sources)) {\n+                batches.push(batch);\n+            }\n+        }\n+        return new Table({ batches });\n+    }\n+\n+    // VirtualVector of each column, spanning batches\n+    readonly columns: Vector<any>[];\n+\n+    // List of batches, where each batch is a list of Vectors\n+    readonly batches: Vector<any>[][];\n+    readonly lengths: Uint32Array;\n+    readonly length: number;\n+    constructor(argv: { batches: Vector<any>[][] }) {\n+        this.batches = argv.batches;\n+        this.columns = columnsFromBatches(this.batches);\n+        this.lengths = new Uint32Array(this.batches.map((batch) => batch[0].length));\n+\n+        this.length = this.lengths.reduce((acc, length) => acc + length);\n+    }\n+    get(idx: number): TableRow {\n+        let batch = 0;\n+        while (idx >= this.lengths[batch] && batch < this.lengths.length) {\n+            idx -= this.lengths[batch++];\n+        }\n+\n+        if (batch === this.lengths.length) { throw new Error('Overflow'); }\n+\n+        return new TableRow(this.batches[batch], idx);\n+    }\n+    filter(predicate: Predicate): DataFrame {\n+        return new FilteredDataFrame(this, predicate);\n+    }\n+    scan(next: NextFunc) {\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                next(idx, columns);\n+            }\n+        }\n+    }\n+    count(): number {\n+        return this.lengths.reduce((acc, val) => acc + val);\n+    }\n+    countBy(count_by: (Col|string)): CountByResult {\n+        if (!(count_by instanceof Col)) {\n+            count_by = new Col(count_by);\n+        }\n+\n+        // Assume that all dictionary batches are deltas, which means that the\n+        // last record batch has the most complete dictionary\n+        count_by.bind(this.batches[this.batches.length - 1]);\n+        if (!(count_by.vector instanceof DictionaryVector)) {\n+            throw new Error('countBy currently only supports dictionary-encoded columns');\n+        }\n+\n+        let data: Vector = (count_by.vector as DictionaryVector<any>).data;\n+        // TODO: Adjust array byte width based on overall length\n+        // (e.g. if this.length <= 255 use Uint8Array, etc...)\n+        let counts: Uint32Array = new Uint32Array(data.length);\n+\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+            count_by.bind(columns);\n+            const keys: Vector = (count_by.vector as DictionaryVector<any>).keys;\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                let key = keys.get(idx);\n+                if (key !== null) { counts[key]++; }\n+            }\n+        }\n+\n+        return new CountByResult(data, new Uint32Vector({data: counts}));\n+    }\n+    *[Symbol.iterator]() {\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                yield new TableRow(columns, idx);\n+            }\n+        }\n+    }\n+}\n+\n+class FilteredDataFrame implements DataFrame {\n+    constructor (readonly parent: Table, private predicate: Predicate) {}\n+\n+    scan(next: NextFunc) {\n+        // inlined version of this:\n+        // this.parent.scan((idx, columns) => {\n+        //     if (this.predicate(idx, columns)) next(idx, columns);\n+        // });\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                if (predicate(idx, columns)) { next(idx, columns); }\n+            }\n+        }\n+    }\n+\n+    count(): number {\n+        // inlined version of this:\n+        // let sum = 0;\n+        // this.parent.scan((idx, columns) => {\n+        //     if (this.predicate(idx, columns)) ++sum;\n+        // });\n+        // return sum;\n+        let sum = 0;\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                if (predicate(idx, columns)) { ++sum; }\n+            }\n+        }\n+        return sum;\n+    }\n+\n+    filter(predicate: Predicate): DataFrame {\n+        return new FilteredDataFrame(\n+            this.parent,\n+            this.predicate.and(predicate)\n+        );\n+    }\n+\n+    countBy(count_by: (Col|string)): CountByResult {\n+        if (!(count_by instanceof Col)) {\n+            count_by = new Col(count_by);\n+        }\n+\n+        // Assume that all dictionary batches are deltas, which means that the\n+        // last record batch has the most complete dictionary\n+        count_by.bind(this.parent.batches[this.parent.batches.length - 1]);\n+        if (!(count_by.vector instanceof DictionaryVector)) {\n+            throw new Error('countBy currently only supports dictionary-encoded columns');\n+        }\n+\n+        const data: Vector = (count_by.vector as DictionaryVector<any>).data;\n+        // TODO: Adjust array byte width based on overall length\n+        // (e.g. if this.length <= 255 use Uint8Array, etc...)\n+        const counts: Uint32Array = new Uint32Array(data.length);\n+\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+            count_by.bind(columns);\n+            const keys: Vector = (count_by.vector as DictionaryVector<any>).keys;\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                let key = keys.get(idx);\n+                if (key !== null && predicate(idx, columns)) { counts[key]++; }\n+            }\n+        }\n+\n+        return new CountByResult(data, new Uint32Vector({data: counts}));\n+    }\n+}\n+\n+export class CountByResult extends Table implements DataFrame {\n+    constructor(readonly values: Vector, readonly counts: Vector<number|null>) {\n+        super({batches: [[values, counts]]});\n+    }\n+\n+    asJSON(): Object {\n \n Review comment:\n   @TheNeuralBit what about renaming this to `toJSON()`, so it also becomes the [default serialization behavior](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) if an instance is serialized via JSON.stringify()?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T20:36:40.636+0000",
                    "updated": "2018-01-16T20:36:40.636+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16327793",
                    "id": "16327793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on a change in pull request #1482: ARROW-1990: [JS] Add \"DataFrame\" object\nURL: https://github.com/apache/arrow/pull/1482#discussion_r161884210\n \n \n\n ##########\n File path: js/src/table.ts\n ##########\n @@ -0,0 +1,272 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Vector } from './vector/vector';\n+import { DictionaryVector } from './vector/dictionary';\n+import { Uint32Vector } from './vector/numeric';\n+import { read, readAsync } from './reader/arrow';\n+import { Col, Predicate } from './predicate';\n+\n+export type NextFunc = (idx: number, cols: Vector[]) => void;\n+\n+export class TableRow {\n+    constructor (readonly batch: Vector[], readonly idx: number) {}\n+    toArray() {\n+        return this.batch.map((vec) => vec.get(this.idx));\n+    }\n+    toString() {\n+        return this.toArray().map((x) => JSON.stringify(x)).join(', ');\n+    }\n+    *[Symbol.iterator]() {\n+        for (const vec of this.batch) {\n+            yield vec.get(this.idx);\n+        }\n+    }\n+}\n+\n+export interface DataFrame {\n+    filter(predicate: Predicate): DataFrame;\n+    scan(next: NextFunc): void;\n+    count(): number;\n+    countBy(col: (Col|string)): CountByResult;\n+}\n+\n+function columnsFromBatches(batches: Vector[][]) {\n+    const remaining = batches.slice(1);\n+    return batches[0].map((vec, colidx) =>\n+        vec.concat(...remaining.map((batch) => batch[colidx]))\n+    );\n+}\n+\n+export class Table implements DataFrame {\n+    static from(sources?: Iterable<Uint8Array | Buffer | string> | object | string) {\n+        let batches: Vector[][] = [];\n+        if (sources) {\n+            batches = [];\n+            for (let batch of read(sources)) {\n+                batches.push(batch);\n+            }\n+        }\n+        return new Table({ batches });\n+    }\n+    static async fromAsync(sources?: AsyncIterable<Uint8Array | Buffer | string>) {\n+        let batches: Vector[][] = [];\n+        if (sources) {\n+            batches = [];\n+            for await (let batch of readAsync(sources)) {\n+                batches.push(batch);\n+            }\n+        }\n+        return new Table({ batches });\n+    }\n+\n+    // VirtualVector of each column, spanning batches\n+    readonly columns: Vector<any>[];\n+\n+    // List of batches, where each batch is a list of Vectors\n+    readonly batches: Vector<any>[][];\n+    readonly lengths: Uint32Array;\n+    readonly length: number;\n+    constructor(argv: { batches: Vector<any>[][] }) {\n+        this.batches = argv.batches;\n+        this.columns = columnsFromBatches(this.batches);\n+        this.lengths = new Uint32Array(this.batches.map((batch) => batch[0].length));\n+\n+        this.length = this.lengths.reduce((acc, length) => acc + length);\n+    }\n+    get(idx: number): TableRow {\n+        let batch = 0;\n+        while (idx >= this.lengths[batch] && batch < this.lengths.length) {\n+            idx -= this.lengths[batch++];\n+        }\n+\n+        if (batch === this.lengths.length) { throw new Error('Overflow'); }\n+\n+        return new TableRow(this.batches[batch], idx);\n+    }\n+    filter(predicate: Predicate): DataFrame {\n+        return new FilteredDataFrame(this, predicate);\n+    }\n+    scan(next: NextFunc) {\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                next(idx, columns);\n+            }\n+        }\n+    }\n+    count(): number {\n+        return this.lengths.reduce((acc, val) => acc + val);\n+    }\n+    countBy(count_by: (Col|string)): CountByResult {\n+        if (!(count_by instanceof Col)) {\n+            count_by = new Col(count_by);\n+        }\n+\n+        // Assume that all dictionary batches are deltas, which means that the\n+        // last record batch has the most complete dictionary\n+        count_by.bind(this.batches[this.batches.length - 1]);\n+        if (!(count_by.vector instanceof DictionaryVector)) {\n+            throw new Error('countBy currently only supports dictionary-encoded columns');\n+        }\n+\n+        let data: Vector = (count_by.vector as DictionaryVector<any>).data;\n+        // TODO: Adjust array byte width based on overall length\n+        // (e.g. if this.length <= 255 use Uint8Array, etc...)\n+        let counts: Uint32Array = new Uint32Array(data.length);\n+\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+            count_by.bind(columns);\n+            const keys: Vector = (count_by.vector as DictionaryVector<any>).keys;\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                let key = keys.get(idx);\n+                if (key !== null) { counts[key]++; }\n+            }\n+        }\n+\n+        return new CountByResult(data, new Uint32Vector({data: counts}));\n+    }\n+    *[Symbol.iterator]() {\n+        for (let batch = -1; ++batch < this.lengths.length;) {\n+            const length = this.lengths[batch];\n+\n+            // load batches\n+            const columns = this.batches[batch];\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                yield new TableRow(columns, idx);\n+            }\n+        }\n+    }\n+}\n+\n+class FilteredDataFrame implements DataFrame {\n+    constructor (readonly parent: Table, private predicate: Predicate) {}\n+\n+    scan(next: NextFunc) {\n+        // inlined version of this:\n+        // this.parent.scan((idx, columns) => {\n+        //     if (this.predicate(idx, columns)) next(idx, columns);\n+        // });\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                if (predicate(idx, columns)) { next(idx, columns); }\n+            }\n+        }\n+    }\n+\n+    count(): number {\n+        // inlined version of this:\n+        // let sum = 0;\n+        // this.parent.scan((idx, columns) => {\n+        //     if (this.predicate(idx, columns)) ++sum;\n+        // });\n+        // return sum;\n+        let sum = 0;\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                if (predicate(idx, columns)) { ++sum; }\n+            }\n+        }\n+        return sum;\n+    }\n+\n+    filter(predicate: Predicate): DataFrame {\n+        return new FilteredDataFrame(\n+            this.parent,\n+            this.predicate.and(predicate)\n+        );\n+    }\n+\n+    countBy(count_by: (Col|string)): CountByResult {\n+        if (!(count_by instanceof Col)) {\n+            count_by = new Col(count_by);\n+        }\n+\n+        // Assume that all dictionary batches are deltas, which means that the\n+        // last record batch has the most complete dictionary\n+        count_by.bind(this.parent.batches[this.parent.batches.length - 1]);\n+        if (!(count_by.vector instanceof DictionaryVector)) {\n+            throw new Error('countBy currently only supports dictionary-encoded columns');\n+        }\n+\n+        const data: Vector = (count_by.vector as DictionaryVector<any>).data;\n+        // TODO: Adjust array byte width based on overall length\n+        // (e.g. if this.length <= 255 use Uint8Array, etc...)\n+        const counts: Uint32Array = new Uint32Array(data.length);\n+\n+        for (let batch = -1; ++batch < this.parent.lengths.length;) {\n+            const length = this.parent.lengths[batch];\n+\n+            // load batches\n+            const columns = this.parent.batches[batch];\n+            const predicate = this.predicate.bind(columns);\n+            count_by.bind(columns);\n+            const keys: Vector = (count_by.vector as DictionaryVector<any>).keys;\n+\n+            // yield all indices\n+            for (let idx = -1; ++idx < length;) {\n+                let key = keys.get(idx);\n+                if (key !== null && predicate(idx, columns)) { counts[key]++; }\n+            }\n+        }\n+\n+        return new CountByResult(data, new Uint32Vector({data: counts}));\n+    }\n+}\n+\n+export class CountByResult extends Table implements DataFrame {\n+    constructor(readonly values: Vector, readonly counts: Vector<number|null>) {\n+        super({batches: [[values, counts]]});\n+    }\n+\n+    asJSON(): Object {\n \n Review comment:\n   ah nice I didn't know about `toJSON`, I'll make that change\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T20:58:18.266+0000",
                    "updated": "2018-01-16T20:58:18.266+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16341566",
                    "id": "16341566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-360899640\n \n \n   @trxcllnt I don't have anything else major I want to add to this. What do you think?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T20:45:45.054+0000",
                    "updated": "2018-01-26T20:45:45.054+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16341605",
                    "id": "16341605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-360905210\n \n \n   @TheNeuralBit I would like to add more tests tonight to validate everything before it goes into master. We're hovering around 60% coverage with unit + integration tests, but not covering some of the cases like `dateVec.asInt32()` etc.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T21:10:45.936+0000",
                    "updated": "2018-01-26T21:10:45.936+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16341606",
                    "id": "16341606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-360905265\n \n \n   This is really cool. It's a big patch -- is there anything I can help review?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T21:10:58.506+0000",
                    "updated": "2018-01-26T21:10:58.506+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16341607",
                    "id": "16341607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-360905647\n \n \n   @wesm it may be worthwhile discussing the JS refactor with respect to the C++ implementation -- I tried to implement the Array/ArrayData stuff as faithfully as I could, but may have misunderstood a few things. I'm in meetings today, but will be available tonight\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T21:12:45.656+0000",
                    "updated": "2018-01-26T21:12:45.656+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16341670",
                    "id": "16341670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-360918140\n \n \n   @trxcllnt I'll look at adding some more tests for table.ts, hopefully that'll bump up the coverage for the vectors a bit as well.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-26T22:09:25.025+0000",
                    "updated": "2018-01-26T22:09:25.025+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349114",
                    "id": "16349114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362367934\n \n \n   @wesm I believe this is ready -- we would like to add more tests of the new capabilities, but I wouldn't block the PR over it. I can follow up with the tests/enhancements I'd like in another PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T19:04:34.634+0000",
                    "updated": "2018-02-01T19:04:34.634+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349383",
                    "id": "16349383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362422185\n \n \n   Cool, this patch is so big I'm just going to merge it. Hopefully the JS patch size can decrease in future PRs to make it easier to review =) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T22:23:14.474+0000",
                    "updated": "2018-02-01T22:23:14.474+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349384",
                    "id": "16349384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1482\n[https://github.com/apache/arrow/pull/1482]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-01T22:23:39.653+0000",
                    "updated": "2018-02-01T22:23:39.653+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349385",
                    "id": "16349385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362422422\n \n \n   Thanks @trxcllnt and @TheNeuralBit for all your hard work on this! Would love to see a blog post or some other document to show off the new fancy stuff\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T22:24:09.166+0000",
                    "updated": "2018-02-01T22:24:09.166+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349387",
                    "id": "16349387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362422555\n \n \n   Would you mind updating all the JIRAs that are resolved from this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T22:24:36.178+0000",
                    "updated": "2018-02-01T22:24:36.178+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349428",
                    "id": "16349428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362427080\n \n \n   @wesm sure thing!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T22:43:48.200+0000",
                    "updated": "2018-02-01T22:43:48.200+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13130220/comment/16349571",
                    "id": "16349571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1482: ARROW-1990: [JS] C++ Refactor, Add DataFrame\nURL: https://github.com/apache/arrow/pull/1482#issuecomment-362446178\n \n \n   Thanks @wesm! I'm travelling at the moment but I'm hoping to write up a blog post about the DataFrame ops when I get back next week.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-02T00:21:38.051+0000",
                    "updated": "2018-02-02T00:21:38.051+0000"
                }
            ],
            "maxResults": 16,
            "total": 16,
            "startAt": 0
        },
        "customfield_12311820": "0|i3osvb:",
        "customfield_12314139": null
    }
}