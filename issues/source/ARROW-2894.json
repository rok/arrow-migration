{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13173677",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677",
    "key": "ARROW-2894",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2894/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy opened a new pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303\n \n \n   cc @kou \r\n   \r\n   I I adjusted the tests to pass. Sadly I had to realise that some of the outputs still don't look pretty. I will change this in a follow-up PR.\r\n   \r\n   There were some issues for me to build Glib in the same environment as the conda one described in https://arrow.apache.org/docs/python/development.html#developing-on-linux-and-macos.\r\n   \r\n   - my configure command was \r\n   ```\r\n   ./configure PKG_CONFIG_PATH=$(brew --prefix libffi)/lib/pkgconfig:$CONDA_PREFIX/lib/pkgconfig/:$PKG_CONFIG_PATH --prefix=`pwd`/dist\r\n   ```\r\n   - I had to run `cp $CONDA_PREFIX/lib/libarrow* arrow-glib/.libs/` as otherwise the GISCAN step would not suceed. Even setting `LD_LIBRARY_PATH` did not help\r\n   - To run the tests I also needed to add `GI.prepend_typelib_path('dist/lib/girepository-1.0/')` to `c_glib/test/run-test.rb`. Otherwise `GI.load(\"Arrow\")` did not find the necessary definitions.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-22T19:05:25.169+0000",
                    "updated": "2018-07-22T19:05:25.169+0000",
                    "started": "2018-07-22T19:05:25.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125812",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204251380\n \n \n\n ##########\n File path: c_glib/test/test-dictionary-encode.rb\n ##########\n @@ -23,19 +23,40 @@ def test_int32\n     array = build_int32_array([1, 3, 1, -1, -3, -1])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [1, 3, -1, -3]\n--- indices: [0, 1, 0, 2, 3, 2]\n+-- dictionary:\n \n Review comment:\n   Is `is_valid` intentionally missing here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-22T19:18:22.769+0000",
                    "updated": "2018-07-22T19:18:22.769+0000",
                    "started": "2018-07-22T19:18:22.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125814",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125815",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204251569\n \n \n\n ##########\n File path: c_glib/test/test-orc-file-reader.rb\n ##########\n @@ -60,48 +60,85 @@ def test_field_indexes\n           column.data.chunks.collect(&:to_s),\n         ]\n       end\n-      assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"byte1: int8\", [\"[1, 100]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n-                     [\"int1: int32\", [\"[65536, 65536]\"]],\n+      expected = [\n+                     [\"boolean1: bool\", [\"[\\n  false,\\n  true\\n]\"]],\n+                     [\"byte1: int8\", [\"[\\n  1,\\n  100\\n]\"]],\n+                     [\"short1: int16\", [\"[\\n  1024,\\n  2048\\n]\"]],\n+                     [\"int1: int32\", [\"[\\n  65536,\\n  65536\\n]\"]],\n                      [\n                        \"long1: int64\",\n-                       [\"[9223372036854775807, 9223372036854775807]\"],\n+                       [\"[\\n  9223372036854775807,\\n  9223372036854775807\\n]\"],\n                      ],\n-                     [\"float1: float\", [\"[1, 2]\"]],\n-                     [\"double1: double\", [\"[-15, -5]\"]],\n-                     [\"bytes1: binary\", [\"[0001020304, ]\"]],\n-                     [\"string1: string\", [\"[\\\"hi\\\", \\\"bye\\\"]\"]],\n+                     [\"float1: float\", [\"[\\n  1,\\n  2\\n]\"]],\n+                     [\"double1: double\", [\"[\\n  -15,\\n  -5\\n]\"]],\n+                     [\"bytes1: binary\", [\"[\\n  0001020304,\\n  \\n]\"]],\n+                     [\"string1: string\", [\"[\\n  \\\"hi\\\",\\n  \\\"bye\\\"\\n]\"]],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n \n Review comment:\n   I know You're planning to implement it in a follow-up PR, just suggesting that something like this would be more readable (without type and value):\r\n   \r\n   ```\r\n   -- child 0: int32 [\r\n         1,\r\n         2\r\n      ]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-22T19:25:23.782+0000",
                    "updated": "2018-07-22T19:25:23.782+0000",
                    "started": "2018-07-22T19:25:23.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125815",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204251569\n \n \n\n ##########\n File path: c_glib/test/test-orc-file-reader.rb\n ##########\n @@ -60,48 +60,85 @@ def test_field_indexes\n           column.data.chunks.collect(&:to_s),\n         ]\n       end\n-      assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"byte1: int8\", [\"[1, 100]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n-                     [\"int1: int32\", [\"[65536, 65536]\"]],\n+      expected = [\n+                     [\"boolean1: bool\", [\"[\\n  false,\\n  true\\n]\"]],\n+                     [\"byte1: int8\", [\"[\\n  1,\\n  100\\n]\"]],\n+                     [\"short1: int16\", [\"[\\n  1024,\\n  2048\\n]\"]],\n+                     [\"int1: int32\", [\"[\\n  65536,\\n  65536\\n]\"]],\n                      [\n                        \"long1: int64\",\n-                       [\"[9223372036854775807, 9223372036854775807]\"],\n+                       [\"[\\n  9223372036854775807,\\n  9223372036854775807\\n]\"],\n                      ],\n-                     [\"float1: float\", [\"[1, 2]\"]],\n-                     [\"double1: double\", [\"[-15, -5]\"]],\n-                     [\"bytes1: binary\", [\"[0001020304, ]\"]],\n-                     [\"string1: string\", [\"[\\\"hi\\\", \\\"bye\\\"]\"]],\n+                     [\"float1: float\", [\"[\\n  1,\\n  2\\n]\"]],\n+                     [\"double1: double\", [\"[\\n  -15,\\n  -5\\n]\"]],\n+                     [\"bytes1: binary\", [\"[\\n  0001020304,\\n  \\n]\"]],\n+                     [\"string1: string\", [\"[\\n  \\\"hi\\\",\\n  \\\"bye\\\"\\n]\"]],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n \n Review comment:\n   I know You're planning to implement it in a follow-up PR, just suggesting that something like this would be more readable (without type and values):\r\n   \r\n   ```\r\n   -- child 0: int32 [\r\n         1,\r\n         2\r\n      ]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-22T19:30:03.862+0000",
                    "updated": "2018-07-22T19:30:03.862+0000",
                    "started": "2018-07-22T19:30:03.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125818",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125835",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204262250\n \n \n\n ##########\n File path: c_glib/test/test-dictionary-encode.rb\n ##########\n @@ -23,19 +23,40 @@ def test_int32\n     array = build_int32_array([1, 3, 1, -1, -3, -1])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [1, 3, -1, -3]\n--- indices: [0, 1, 0, 2, 3, 2]\n+-- dictionary:\n \n Review comment:\n   It seems that new pretty print implementation doesn't show `is_valid` information.\r\n   Can you open a JIRA ticket to discuss what should we do for it?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T00:49:49.889+0000",
                    "updated": "2018-07-23T00:49:49.889+0000",
                    "started": "2018-07-23T00:49:49.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125835",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#issuecomment-406913472\n \n \n   I'll try GLib build with https://arrow.apache.org/docs/python/development.html#developing-on-linux-and-macos steps.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T01:20:54.183+0000",
                    "updated": "2018-07-23T01:20:54.183+0000",
                    "started": "2018-07-23T01:20:54.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125838",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#issuecomment-406934428\n \n \n   > I had to run `cp $CONDA_PREFIX/lib/libarrow* arrow-glib/.libs/` as otherwise the GISCAN step would not suceed. Even setting `LD_LIBRARY_PATH` did not help\r\n   \r\n   I could reproduce this.\r\n   I can fix it by setting the following `LD_LIBRARY_PATH`:\r\n   \r\n   ```console\r\n   % LD_LIBRARY_PATH=$CONDA_PREFIX/lib make\r\n   ```\r\n   \r\n   > To run the tests I also needed to add `GI.prepend_typelib_path('dist/lib/girepository-1.0/')` to `c_glib/test/run-test.rb`. Otherwise `GI.load(\"Arrow\")` did not find the necessary definitions.\r\n   \r\n   I could also reproduce this.\r\n   We need `export`s:\r\n   \r\n   ```diff\r\n   diff --git a/c_glib/test/run-test.sh b/c_glib/test/run-test.sh\r\n   index d563e858..9abd0354 100755\r\n   --- a/c_glib/test/run-test.sh\r\n   +++ b/c_glib/test/run-test.sh\r\n   @@ -33,6 +33,7 @@ for module in ${modules}; do\r\n        fi\r\n      fi\r\n    done\r\n   +export LD_LIBRARY_PATH\r\n    \r\n    if [ -f \"Makefile\" -a \"${NO_MAKE}\" != \"yes\" ]; then\r\n      make -j8 > /dev/null || exit $?\r\n   @@ -49,5 +50,6 @@ for module in ${modules}; do\r\n        GI_TYPELIB_PATH=\"${module_typelib_dir}:${GI_TYPELIB_PATH}\"\r\n      fi\r\n    done\r\n   +export GI_TYPELIB_PATH\r\n    \r\n    ${GDB} ruby ${test_dir}/run-test.rb \"$@\"\r\n   ```\r\n   \r\n   I could run tests by the following with the above change:\r\n   \r\n   ```console\r\n   %  LD_LIBRARY_PATH=$CONDA_PREFIX/lib test/run-test.sh \r\n   ```\r\n   \r\n   I'll send a pull request for the `export`s.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T04:17:03.529+0000",
                    "updated": "2018-07-23T04:17:03.529+0000",
                    "started": "2018-07-23T04:17:03.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125859",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#issuecomment-406934456\n \n \n   CI is green. I'll merge this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T04:17:21.632+0000",
                    "updated": "2018-07-23T04:17:21.632+0000",
                    "started": "2018-07-23T04:17:21.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125860",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/test/test-array.rb b/c_glib/test/test-array.rb\nindex ca9bff8c2d..12fba7346c 100644\n--- a/c_glib/test/test-array.rb\n+++ b/c_glib/test/test-array.rb\n@@ -107,7 +107,12 @@ def test_slice\n   end\n \n   def test_to_s\n-    assert_equal(\"[true, false, true]\",\n-                 build_boolean_array([true, false, true]).to_s)\n+    assert_equal(<<-CONTENT.chomp, build_boolean_array([true, false, true]).to_s)\n+[\n+  true,\n+  false,\n+  true\n+]\n+    CONTENT\n   end\n end\ndiff --git a/c_glib/test/test-dictionary-array.rb b/c_glib/test/test-dictionary-array.rb\nindex d4f4b34430..7d07b45872 100644\n--- a/c_glib/test/test-dictionary-array.rb\n+++ b/c_glib/test/test-dictionary-array.rb\n@@ -33,9 +33,20 @@ def test_new\n       dictionary_array = Arrow::DictionaryArray.new(@data_type, indices)\n       assert_equal(<<-STRING.chomp, dictionary_array.to_s)\n \n--- is_valid: all not null\n--- dictionary: [\"C\", \"C++\", \"Ruby\"]\n--- indices: [0, 2, 2, 1, 0]\n+-- dictionary:\n+  [\n+    \"C\",\n+    \"C++\",\n+    \"Ruby\"\n+  ]\n+-- indices:\n+  [\n+    0,\n+    2,\n+    2,\n+    1,\n+    0\n+  ]\n       STRING\n     end\n   end\ndiff --git a/c_glib/test/test-dictionary-encode.rb b/c_glib/test/test-dictionary-encode.rb\nindex ea77be64ae..100494c9e3 100644\n--- a/c_glib/test/test-dictionary-encode.rb\n+++ b/c_glib/test/test-dictionary-encode.rb\n@@ -23,9 +23,22 @@ def test_int32\n     array = build_int32_array([1, 3, 1, -1, -3, -1])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [1, 3, -1, -3]\n--- indices: [0, 1, 0, 2, 3, 2]\n+-- dictionary:\n+  [\n+    1,\n+    3,\n+    -1,\n+    -3\n+  ]\n+-- indices:\n+  [\n+    0,\n+    1,\n+    0,\n+    2,\n+    3,\n+    2\n+  ]\n     STRING\n   end\n \n@@ -33,9 +46,17 @@ def test_string\n     array = build_string_array([\"Ruby\", \"Python\", \"Ruby\"])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [\"Ruby\", \"Python\"]\n--- indices: [0, 1, 0]\n+-- dictionary:\n+  [\n+    \"Ruby\",\n+    \"Python\"\n+  ]\n+-- indices:\n+  [\n+    0,\n+    1,\n+    0\n+  ]\n     STRING\n   end\n end\ndiff --git a/c_glib/test/test-orc-file-reader.rb b/c_glib/test/test-orc-file-reader.rb\nindex 6b5c640bba..714ee5ac5c 100644\n--- a/c_glib/test/test-orc-file-reader.rb\n+++ b/c_glib/test/test-orc-file-reader.rb\n@@ -60,19 +60,19 @@ def test_field_indexes\n           column.data.chunks.collect(&:to_s),\n         ]\n       end\n-      assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"byte1: int8\", [\"[1, 100]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n-                     [\"int1: int32\", [\"[65536, 65536]\"]],\n+      expected = [\n+                     [\"boolean1: bool\", [\"[\\n  false,\\n  true\\n]\"]],\n+                     [\"byte1: int8\", [\"[\\n  1,\\n  100\\n]\"]],\n+                     [\"short1: int16\", [\"[\\n  1024,\\n  2048\\n]\"]],\n+                     [\"int1: int32\", [\"[\\n  65536,\\n  65536\\n]\"]],\n                      [\n                        \"long1: int64\",\n-                       [\"[9223372036854775807, 9223372036854775807]\"],\n+                       [\"[\\n  9223372036854775807,\\n  9223372036854775807\\n]\"],\n                      ],\n-                     [\"float1: float\", [\"[1, 2]\"]],\n-                     [\"double1: double\", [\"[-15, -5]\"]],\n-                     [\"bytes1: binary\", [\"[0001020304, ]\"]],\n-                     [\"string1: string\", [\"[\\\"hi\\\", \\\"bye\\\"]\"]],\n+                     [\"float1: float\", [\"[\\n  1,\\n  2\\n]\"]],\n+                     [\"double1: double\", [\"[\\n  -15,\\n  -5\\n]\"]],\n+                     [\"bytes1: binary\", [\"[\\n  0001020304,\\n  \\n]\"]],\n+                     [\"string1: string\", [\"[\\n  \\\"hi\\\",\\n  \\\"bye\\\"\\n]\"]],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n@@ -80,14 +80,32 @@ def test_field_indexes\n                        [\n                          <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ],\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ]\n+  ]\n                           STRUCT\n                        ]\n                      ],\n@@ -95,13 +113,32 @@ def test_field_indexes\n                        \"list: list<item: struct<int1: int32, string1: string>>\",\n                        [\n                          <<-LIST.chomp\n+[\n \n--- is_valid: all not null\n--- value_offsets: [0, 2, 5]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: int32 values: [3, 4, 100000000, -100000, 1234]\n-  -- child 1 type: string values: [\"good\", \"bad\", \"cat\", \"in\", \"hat\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      3,\n+      4\n+    ]\n+  -- child 1 type: string values:     [\n+      \"good\",\n+      \"bad\"\n+    ],\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      100000000,\n+      -100000,\n+      1234\n+    ]\n+  -- child 1 type: string values:     [\n+      \"cat\",\n+      \"in\",\n+      \"hat\"\n+    ]\n+]\n                          LIST\n                        ]\n                      ],\n@@ -111,21 +148,42 @@ def test_field_indexes\n                        \"struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-MAP.chomp\n+[\n \n--- is_valid: all not null\n--- value_offsets: [0, 0, 2]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: string values: [\"chani\", \"mauddib\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     []\n   -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [5, 1]\n-    -- child 1 type: string values: [\"chani\", \"mauddib\"]\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       []\n+    -- child 1 type: string values:       [],\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     [\n+      \"chani\",\n+      \"mauddib\"\n+    ]\n+  -- child 1 type: struct<int1: int32, string1: string> values: \n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        5,\n+        1\n+      ]\n+    -- child 1 type: string values:       [\n+        \"chani\",\n+        \"mauddib\"\n+      ]\n+]\n                          MAP\n                        ],\n                      ],\n-                   ],\n-                   dump)\n+                   ]\n+      expected.zip(dump).each do |ex, actual|\n+        assert_equal(ex, actual)\n+      end\n     end\n \n     test(\"select fields\") do\n@@ -139,8 +197,8 @@ def test_field_indexes\n         ]\n       end\n       assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n+                     [\"boolean1: bool\", [\"[\\n  false,\\n  true\\n]\"]],\n+                     [\"short1: int16\", [\"[\\n  1024,\\n  2048\\n]\"]],\n                    ],\n                    dump)\n     end\n@@ -155,45 +213,82 @@ def test_field_indexes\n           record_batch.get_column(i).to_s,\n         ]\n       end\n-      assert_equal([\n-                     [\"boolean1: bool\", \"[false, true]\"],\n-                     [\"byte1: int8\", \"[1, 100]\"],\n-                     [\"short1: int16\", \"[1024, 2048]\"],\n-                     [\"int1: int32\", \"[65536, 65536]\"],\n+      expected = [\n+                     [\"boolean1: bool\", \"[\\n  false,\\n  true\\n]\"],\n+                     [\"byte1: int8\", \"[\\n  1,\\n  100\\n]\"],\n+                     [\"short1: int16\", \"[\\n  1024,\\n  2048\\n]\"],\n+                     [\"int1: int32\", \"[\\n  65536,\\n  65536\\n]\"],\n                      [\n                        \"long1: int64\",\n-                       \"[9223372036854775807, 9223372036854775807]\",\n+                       \"[\\n  9223372036854775807,\\n  9223372036854775807\\n]\",\n                      ],\n-                     [\"float1: float\", \"[1, 2]\"],\n-                     [\"double1: double\", \"[-15, -5]\"],\n-                     [\"bytes1: binary\", \"[0001020304, ]\"],\n-                     [\"string1: string\", \"[\\\"hi\\\", \\\"bye\\\"]\"],\n+                     [\"float1: float\", \"[\\n  1,\\n  2\\n]\"],\n+                     [\"double1: double\", \"[\\n  -15,\\n  -5\\n]\"],\n+                     [\"bytes1: binary\", \"[\\n  0001020304,\\n  \\n]\"],\n+                     [\"string1: string\", \"[\\n  \\\"hi\\\",\\n  \\\"bye\\\"\\n]\"],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ],\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ]\n+  ]\n                         STRUCT\n                      ],\n                      [\n                        \"list: list<item: struct<int1: int32, string1: string>>\",\n                        <<-LIST.chomp\n+[\n \n--- is_valid: all not null\n--- value_offsets: [0, 2, 5]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: int32 values: [3, 4, 100000000, -100000, 1234]\n-  -- child 1 type: string values: [\"good\", \"bad\", \"cat\", \"in\", \"hat\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      3,\n+      4\n+    ]\n+  -- child 1 type: string values:     [\n+      \"good\",\n+      \"bad\"\n+    ],\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      100000000,\n+      -100000,\n+      1234\n+    ]\n+  -- child 1 type: string values:     [\n+      \"cat\",\n+      \"in\",\n+      \"hat\"\n+    ]\n+]\n                        LIST\n                      ],\n                      [\n@@ -201,20 +296,41 @@ def test_field_indexes\n                        \"struct<key: string, value: \" +\n                        \"struct<int1: int32, string1: string>>>\",\n                        <<-MAP.chomp\n+[\n \n--- is_valid: all not null\n--- value_offsets: [0, 0, 2]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: string values: [\"chani\", \"mauddib\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     []\n   -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [5, 1]\n-    -- child 1 type: string values: [\"chani\", \"mauddib\"]\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       []\n+    -- child 1 type: string values:       [],\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     [\n+      \"chani\",\n+      \"mauddib\"\n+    ]\n+  -- child 1 type: struct<int1: int32, string1: string> values: \n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        5,\n+        1\n+      ]\n+    -- child 1 type: string values:       [\n+        \"chani\",\n+        \"mauddib\"\n+      ]\n+]\n                        MAP\n                      ],\n-                   ],\n-                   dump)\n+                   ]\n+      expected.zip(dump).each do |ex, actual|\n+        assert_equal(ex, actual)\n+      end\n     end\n \n     test(\"select fields\") do\n@@ -227,8 +343,8 @@ def test_field_indexes\n         ]\n       end\n       assert_equal([\n-                     [\"boolean1: bool\", \"[false, true]\"],\n-                     [\"short1: int16\", \"[1024, 2048]\"],\n+                     [\"boolean1: bool\", \"[\\n  false,\\n  true\\n]\"],\n+                     [\"short1: int16\", \"[\\n  1024,\\n  2048\\n]\"],\n                    ],\n                    dump)\n     end\ndiff --git a/c_glib/test/test-record-batch.rb b/c_glib/test/test-record-batch.rb\nindex b215e725a6..1cbc7cb4a6 100644\n--- a/c_glib/test/test-record-batch.rb\n+++ b/c_glib/test/test-record-batch.rb\n@@ -131,8 +131,20 @@ def test_slice\n \n     def test_to_s\n       assert_equal(<<-PRETTY_PRINT, @record_batch.to_s)\n-visible: [true, false, true, false, true]\n-valid: [false, true, false, true, false]\n+visible:   [\n+    true,\n+    false,\n+    true,\n+    false,\n+    true\n+  ]\n+valid:   [\n+    false,\n+    true,\n+    false,\n+    true,\n+    false\n+  ]\n       PRETTY_PRINT\n     end\n \ndiff --git a/ruby/red-arrow/test/run-test.rb b/ruby/red-arrow/test/run-test.rb\nindex 957bb3ac12..9551f60d1d 100755\n--- a/ruby/red-arrow/test/run-test.rb\n+++ b/ruby/red-arrow/test/run-test.rb\n@@ -32,4 +32,6 @@\n \n require_relative \"helper\"\n \n+ENV[\"TEST_UNIT_MAX_DIFF_TARGET_STRING_SIZE\"] ||= \"10000\"\n+\n exit(Test::Unit::AutoRunner.run(true, test_dir.to_s))\ndiff --git a/ruby/red-arrow/test/test-orc.rb b/ruby/red-arrow/test/test-orc.rb\nindex d5237ad2ec..9f31449a62 100644\n--- a/ruby/red-arrow/test/test-orc.rb\n+++ b/ruby/red-arrow/test/test-orc.rb\n@@ -23,6 +23,10 @@ def setup\n     @orc_path = fixture_path(\"TestOrcFile.test1.orc\")\n   end\n \n+  def pp_values(values)\n+    \"[\\n  \" + values.collect(&:inspect).join(\",\\n  \") + \"\\n]\"\n+  end\n+\n   sub_test_case(\"load\") do\n     test(\"default\") do\n       table = Arrow::Table.load(@orc_path)\n@@ -33,18 +37,18 @@ def setup\n         ]\n       end\n       assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"byte1: int8\", [\"[1, 100]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n-                     [\"int1: int32\", [\"[65536, 65536]\"]],\n+                     [\"boolean1: bool\", [pp_values([false, true])]],\n+                     [\"byte1: int8\", [pp_values([1, 100])]],\n+                     [\"short1: int16\", [pp_values([1024, 2048])]],\n+                     [\"int1: int32\", [pp_values([65536, 65536])]],\n                      [\n                        \"long1: int64\",\n-                       [\"[9223372036854775807, 9223372036854775807]\"],\n+                       [pp_values([9223372036854775807, 9223372036854775807])],\n                      ],\n-                     [\"float1: float\", [\"[1, 2]\"]],\n-                     [\"double1: double\", [\"[-15, -5]\"]],\n-                     [\"bytes1: binary\", [\"[0001020304, ]\"]],\n-                     [\"string1: string\", [\"[\\\"hi\\\", \\\"bye\\\"]\"]],\n+                     [\"float1: float\", [pp_values([1, 2])]],\n+                     [\"double1: double\", [pp_values([-15, -5])]],\n+                     [\"bytes1: binary\", [\"[\\n  0001020304,\\n  \\n]\"]],\n+                     [\"string1: string\", [pp_values([\"hi\", \"bye\"])]],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n@@ -52,14 +56,32 @@ def setup\n                        [\n                          <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ],\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        1,\n+        2\n+      ]\n+    -- child 1 type: string values:       [\n+        \"bye\",\n+        \"sigh\"\n+      ]\n+  ]\n                           STRUCT\n                        ]\n                      ],\n@@ -67,13 +89,32 @@ def setup\n                        \"list: list<item: struct<int1: int32, string1: string>>\",\n                        [\n                          <<-LIST.chomp\n+[\n \n--- is_valid: all not null\n--- value_offsets: [0, 2, 5]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: int32 values: [3, 4, 100000000, -100000, 1234]\n-  -- child 1 type: string values: [\"good\", \"bad\", \"cat\", \"in\", \"hat\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      3,\n+      4\n+    ]\n+  -- child 1 type: string values:     [\n+      \"good\",\n+      \"bad\"\n+    ],\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: int32 values:     [\n+      100000000,\n+      -100000,\n+      1234\n+    ]\n+  -- child 1 type: string values:     [\n+      \"cat\",\n+      \"in\",\n+      \"hat\"\n+    ]\n+]\n                          LIST\n                        ]\n                      ],\n@@ -83,16 +124,35 @@ def setup\n                        \"struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-MAP.chomp\n+[\n+\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     []\n+  -- child 1 type: struct<int1: int32, string1: string> values: \n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       []\n+    -- child 1 type: string values:       [],\n \n--- is_valid: all not null\n--- value_offsets: [0, 0, 2]\n--- values: \n-  -- is_valid: all not null\n-  -- child 0 type: string values: [\"chani\", \"mauddib\"]\n+  -- is_valid:\n+all not null\n+  -- child 0 type: string values:     [\n+      \"chani\",\n+      \"mauddib\"\n+    ]\n   -- child 1 type: struct<int1: int32, string1: string> values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [5, 1]\n-    -- child 1 type: string values: [\"chani\", \"mauddib\"]\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n+        5,\n+        1\n+      ]\n+    -- child 1 type: string values:       [\n+        \"chani\",\n+        \"mauddib\"\n+      ]\n+]\n                          MAP\n                        ],\n                      ],\n@@ -109,8 +169,8 @@ def setup\n         ]\n       end\n       assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n+                     [\"boolean1: bool\", [pp_values([false, true])]],\n+                     [\"short1: int16\", [pp_values([1024, 2048])]],\n                    ],\n                    dump)\n     end\ndiff --git a/ruby/red-arrow/test/test-rolling-window.rb b/ruby/red-arrow/test/test-rolling-window.rb\nindex 497a0834f8..4158ad1622 100644\n--- a/ruby/red-arrow/test/test-rolling-window.rb\n+++ b/ruby/red-arrow/test/test-rolling-window.rb\n@@ -27,7 +27,14 @@ def setup\n \n   test(\"#lag\") do\n     assert_equal(<<-ARRAY.chomp, @table.window.lag(:number).to_s)\n-[null, -3, null, null, 2, -3]\n+[\n+  null,\n+  -3,\n+  null,\n+  null,\n+  2,\n+  -3\n+]\n     ARRAY\n   end\n end\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T04:18:55.170+0000",
                    "updated": "2018-07-23T04:18:55.170+0000",
                    "started": "2018-07-23T04:18:55.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125861",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204282487\n \n \n\n ##########\n File path: c_glib/test/test-dictionary-encode.rb\n ##########\n @@ -23,19 +23,40 @@ def test_int32\n     array = build_int32_array([1, 3, 1, -1, -3, -1])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [1, 3, -1, -3]\n--- indices: [0, 1, 0, 2, 3, 2]\n+-- dictionary:\n \n Review comment:\n   `is_valid` is a duplicate information. We also show nulls in the indices now, before the refactor we have shown undefined values instead there.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T05:00:56.817+0000",
                    "updated": "2018-07-23T05:00:56.817+0000",
                    "started": "2018-07-23T05:00:56.816+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125868",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204282658\n \n \n\n ##########\n File path: c_glib/test/test-orc-file-reader.rb\n ##########\n @@ -60,48 +60,85 @@ def test_field_indexes\n           column.data.chunks.collect(&:to_s),\n         ]\n       end\n-      assert_equal([\n-                     [\"boolean1: bool\", [\"[false, true]\"]],\n-                     [\"byte1: int8\", [\"[1, 100]\"]],\n-                     [\"short1: int16\", [\"[1024, 2048]\"]],\n-                     [\"int1: int32\", [\"[65536, 65536]\"]],\n+      expected = [\n+                     [\"boolean1: bool\", [\"[\\n  false,\\n  true\\n]\"]],\n+                     [\"byte1: int8\", [\"[\\n  1,\\n  100\\n]\"]],\n+                     [\"short1: int16\", [\"[\\n  1024,\\n  2048\\n]\"]],\n+                     [\"int1: int32\", [\"[\\n  65536,\\n  65536\\n]\"]],\n                      [\n                        \"long1: int64\",\n-                       [\"[9223372036854775807, 9223372036854775807]\"],\n+                       [\"[\\n  9223372036854775807,\\n  9223372036854775807\\n]\"],\n                      ],\n-                     [\"float1: float\", [\"[1, 2]\"]],\n-                     [\"double1: double\", [\"[-15, -5]\"]],\n-                     [\"bytes1: binary\", [\"[0001020304, ]\"]],\n-                     [\"string1: string\", [\"[\\\"hi\\\", \\\"bye\\\"]\"]],\n+                     [\"float1: float\", [\"[\\n  1,\\n  2\\n]\"]],\n+                     [\"double1: double\", [\"[\\n  -15,\\n  -5\\n]\"]],\n+                     [\"bytes1: binary\", [\"[\\n  0001020304,\\n  \\n]\"]],\n+                     [\"string1: string\", [\"[\\n  \\\"hi\\\",\\n  \\\"bye\\\"\\n]\"]],\n                      [\n                        \"middle: \" +\n                        \"struct<list: \" +\n                        \"list<item: struct<int1: int32, string1: string>>>\",\n                        [\n                          <<-STRUCT.chomp\n \n--- is_valid: all not null\n--- child 0 type: list<item: struct<int1: int32, string1: string>> values: \n-  -- is_valid: all not null\n-  -- value_offsets: [0, 2, 4]\n-  -- values: \n-    -- is_valid: all not null\n-    -- child 0 type: int32 values: [1, 2, 1, 2]\n-    -- child 1 type: string values: [\"bye\", \"sigh\", \"bye\", \"sigh\"]\n+-- is_valid:\n+all not null\n+-- child 0 type: list<item: struct<int1: int32, string1: string>> values:   [\n+\n+    -- is_valid:\n+all not null\n+    -- child 0 type: int32 values:       [\n \n Review comment:\n   I will take up your suggestion and go for \r\n   \r\n   ```\r\n   \r\n   -- child 0: int32 \r\n     [\r\n         1,\r\n         2\r\n      ]\r\n   ```\r\n   \r\n   The line break before `[` is mainly due to the fact that makes the array printing code simpler in a first round. We don't need to take the context in consideration then. If that really looks better, we can have a closer look afterwards. My first objective is to iron out any strong misaligments before the release.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T05:03:04.266+0000",
                    "updated": "2018-07-23T05:03:04.266+0000",
                    "started": "2018-07-23T05:03:04.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125869",
                    "issueId": "13173677"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/worklog/125876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #2303: ARROW-2894: [Glib] Adjust tests to format refactor\nURL: https://github.com/apache/arrow/pull/2303#discussion_r204285585\n \n \n\n ##########\n File path: c_glib/test/test-dictionary-encode.rb\n ##########\n @@ -23,19 +23,40 @@ def test_int32\n     array = build_int32_array([1, 3, 1, -1, -3, -1])\n     assert_equal(<<-STRING.chomp, array.dictionary_encode.to_s)\n \n--- is_valid: all not null\n--- dictionary: [1, 3, -1, -3]\n--- indices: [0, 1, 0, 2, 3, 2]\n+-- dictionary:\n \n Review comment:\n   I see. It makes sense.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T05:32:52.684+0000",
                    "updated": "2018-07-23T05:32:52.684+0000",
                    "started": "2018-07-23T05:32:52.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125876",
                    "issueId": "13173677"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2a7d65eb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8765471[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19ab7394[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2344690c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e79e0c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@46e3d6f4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4162a6f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@49a2fe8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15f4a852[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4d78986e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@788886fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2d38136a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 23 04:19:33 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-23T04:19:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2894/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-07-22T17:24:56.000+0000",
        "updated": "2018-07-23T05:32:52.000+0000",
        "timeoriginalestimate": null,
        "description": "Missed them while refactoring the C++ code. I'll take care of them",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Glib]\u00a0Format tests broken due to recent refactor",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13173677/comment/16552309",
                    "id": "16552309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 2303\n[https://github.com/apache/arrow/pull/2303]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-07-23T04:19:33.637+0000",
                    "updated": "2018-07-23T04:19:33.637+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3w5hb:",
        "customfield_12314139": null
    }
}