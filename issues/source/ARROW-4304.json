{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13210623",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623",
    "key": "ARROW-4304",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12555634",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12555634",
                "type": {
                    "id": "12310010",
                    "name": "Incorporates",
                    "inward": "is part of",
                    "outward": "incorporates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"
                },
                "inwardIssue": {
                    "id": "13218087",
                    "key": "ARROW-4683",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218087",
                    "fields": {
                        "summary": "[Rust] Enable \"#![warn(missing_docs)]\"",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
            "name": "csun",
            "key": "csun",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
            },
            "displayName": "Chao Sun",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4304/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Jibbow commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828\n \n \n   Hi all,\r\n   \r\n   I hope I don't bother you too much with this.\r\n   I recently started using the Rust implementation of Apache Arrow and it's going well so far! However, I noticed that the documentation is a bit sparse.\r\n   \r\n   I then dug a little bit around in Jira and noticed there are a bunch of issues targeting enhancement of documentation, most notably [ARROW-4304](https://issues.apache.org/jira/browse/ARROW-4304), [ARROW-4683](https://issues.apache.org/jira/browse/ARROW-4683) and [ARROW-4927](https://issues.apache.org/jira/browse/ARROW-4927).\r\n   \r\n   I then started documenting a few things and adding working doctests to it. I also updated some external links that were broken.\r\n   \r\n   It's far from complete but I guess it's a decent start for a wonderful documentation of this crate :blush: \r\n   \r\n   I am happy to discuss what I've written :innocent:\r\n   \r\n   - [x] tests passing (including doctests)\r\n   - [x] code formatting passes\r\n   - [x] link check (only for external links)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T18:27:51.255+0000",
                    "updated": "2020-04-03T18:27:51.255+0000",
                    "started": "2020-04-03T18:27:51.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415651",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-608594831\n \n \n   https://issues.apache.org/jira/browse/ARROW-4304\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T18:31:38.593+0000",
                    "updated": "2020-04-03T18:31:38.593+0000",
                    "started": "2020-04-03T18:31:38.592+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415659",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-608642182\n \n \n   @Jibbow this is great!  The docs need some love alright, especially with us working toward 1.0.  Will review when I get a chance.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T20:25:45.478+0000",
                    "updated": "2020-04-03T20:25:45.478+0000",
                    "started": "2020-04-03T20:25:45.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415719",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-608655420\n \n \n   I will also review this weekend. Thank you for doing this!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T20:59:47.812+0000",
                    "updated": "2020-04-03T20:59:47.812+0000",
                    "started": "2020-04-03T20:59:47.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415733",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r403342871\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -49,55 +54,108 @@ use crate::error::{ArrowError, Result};\n ///\n /// Nested types can themselves be nested within other arrays.\n /// For more information on these types please see\n-/// [here](https://arrow.apache.org/docs/memory_layout.html).\n+/// [the physical memory layout of Apache Arrow](https://arrow.apache.org/docs/format/Columnar.html#physical-memory-layout).\n #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum DataType {\n+    /// A boolean datatype representing the values `true` and `false`.\n     Boolean,\n+    /// A signed 8-bit integer.\n     Int8,\n+    /// A signed 16-bit integer.\n     Int16,\n+    /// A signed 32-bit integer.\n     Int32,\n+    /// A signed 64-bit integer.\n     Int64,\n+    /// An unsigned 8-bit integer.\n     UInt8,\n+    /// An unsigned 16-bit integer.\n     UInt16,\n+    /// An unsigned 32-bit integer.\n     UInt32,\n+    /// An unsigned 64-bit integer.\n     UInt64,\n+    /// A 16-bit floating point number.\n     Float16,\n+    /// A 32-bit floating point number.\n     Float32,\n+    /// A 64-bit floating point number.\n     Float64,\n-    /// A timestamp with an optional timezone\n+    /// A timestamp with an optional timezone.\n+    ///\n+    /// Time is measured as a Unix epoch, counting the seconds from\n+    /// 00:00:00.000 on 1 January 1970, excluding leap seconds,\n+    /// as a 64-bit integer.\n+    ///\n+    /// The time zone is a string indicating the name of a time zone, one of:\n+    ///\n+    /// * As used in the Olson time zone database (the \"tz database\" or\n+    ///   \"tzdata\"), such as \"America/New_York\"\n+    /// * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n     Timestamp(TimeUnit, Option<Arc<String>>),\n+    /// A 32-bit date representing the elapsed time since UNIX epoch (1970-01-01)\n+    /// in days (32 bits).\n     Date32(DateUnit),\n+    /// A 64-bit date representing the elapsed time since UNIX epoch (1970-01-01)\n+    /// in milliseconds (64 bits).\n     Date64(DateUnit),\n+    /// A 32-bit time representing the elapsed time since midnight in the unit of `TimeUnit`.\n     Time32(TimeUnit),\n+    /// A 64-bit time representing the elapsed time since midnight in the unit of `TimeUnit`.\n     Time64(TimeUnit),\n+    /// Measure of elapsed time in either seconds, milliseconds, microseconds or nanoseconds.\n     Duration(TimeUnit),\n+    /// A \"calendar\" interval which models types that don't necessarily\n+    /// have a precise duration without the context of a base timestamp (e.g.\n+    /// days can differ in length during day light savings time transitions).\n     Interval(IntervalUnit),\n+    /// Opaque binary data of variable length.\n     Binary,\n+    /// Opaque binary data of fixed size.\n+    /// Enum parameter specifies the number of bytes per value.\n     FixedSizeBinary(i32),\n+    /// A variable-length string in Unicode with UTF-8 encoding.\n     Utf8,\n+    /// A list of some logical data type with variable length.\n     List(Box<DataType>),\n+    /// A list of some logical data type with fixed length.\n     FixedSizeList(Box<DataType>, i32),\n+    /// A nested datatype that contains a number of sub-fields.\n     Struct(Vec<Field>),\n     Dictionary(Box<DataType>, Box<DataType>),\n \n Review comment:\n   Could you add something for `Dictionary` as well?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T21:26:09.942+0000",
                    "updated": "2020-04-03T21:26:09.942+0000",
                    "started": "2020-04-03T21:26:09.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415745",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r403338142\n \n \n\n ##########\n File path: rust/arrow/src/array/array.rs\n ##########\n @@ -45,57 +45,165 @@ const MICROSECONDS: i64 = 1_000_000;\n const NANOSECONDS: i64 = 1_000_000_000;\n \n /// Trait for dealing with different types of array at runtime when the type of the\n-/// array is not known in advance\n+/// array is not known in advance.\n pub trait Array: fmt::Debug + Send + Sync + ArrayEqual + JsonEqual {\n-    /// Returns the array as `Any` so that it can be downcast to a specific implementation\n+    /// Returns the array as [`Any`](std::any::Any) so that it can be\n+    /// downcasted to a specific implementation.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use std::sync::Arc;\n+    /// use arrow::array::Int32Array;\n+    /// use arrow::datatypes::{Schema, Field, DataType};\n+    /// use arrow::record_batch::RecordBatch;\n+    ///\n+    /// # fn main() -> arrow::error::Result<()> {\n+    /// let id = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    /// let batch = RecordBatch::try_new(\n+    ///     Arc::new(Schema::new(vec![Field::new(\"id\", DataType::Int32, false)])),\n+    ///     vec![Arc::new(id)]\n+    /// )?;\n+    ///\n+    /// let int32array = batch\n+    ///     .column(0)\n+    ///     .as_any()\n+    ///     .downcast_ref::<Int32Array>()\n+    ///     .unwrap();\n \n Review comment:\n   it would be nice to change `.unwrap()` to `.expect(\"Failed to downcast\")` or similar\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T21:26:09.945+0000",
                    "updated": "2020-04-03T21:26:09.945+0000",
                    "started": "2020-04-03T21:26:09.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415746",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r403341334\n \n \n\n ##########\n File path: rust/arrow/src/array/builder.rs\n ##########\n @@ -31,29 +33,170 @@ use crate::datatypes::*;\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Buffer builder with zero-copy build method\n+/// Builder for creating a [`Buffer`](crate::buffer::Buffer) object.\n+///\n+/// This builder is implemented for primitive types and creates a\n+/// buffer with a zero-copy `build()` method.\n+///\n+/// See trait [`BufferBuilderTrait`](crate::array::BufferBuilderTrait)\n+/// for further documentation and examples.\n+///\n+/// A [`Buffer`](crate::buffer::Buffer) is the underlying data\n+/// structure of Arrow's [`Arrays`](crate::array::Array).\n+///\n+/// For all supported types, there are type definitions for the\n+/// generic version of `BufferBuilder<T>`, e.g. `UInt8BufferBuilder`.\n+///\n+/// # Example:\n+///\n+/// ```\n+/// use arrow::array::{UInt8BufferBuilder, BufferBuilderTrait};\n+///\n+/// # fn main() -> arrow::error::Result<()> {\n+/// let mut builder = UInt8BufferBuilder::new(100);\n+/// builder.append_slice(&[42, 43, 44]);\n+/// builder.append(45);\n+/// let buffer = builder.finish();\n+///\n+/// assert_eq!(unsafe { buffer.typed_data::<u8>() }, &[42, 43, 44, 45]);\n+/// # Ok(())\n+/// # }\n+/// ```\n pub struct BufferBuilder<T: ArrowPrimitiveType> {\n     buffer: MutableBuffer,\n     len: usize,\n     _marker: PhantomData<T>,\n }\n \n-// Trait for buffer builder. This is used mainly to offer separate implementations for\n-// numeric types and boolean types, while still be able to call methods on buffer builder\n-// with generic primitive type.\n+/// Trait for simplifying the construction of [`Buffers`](crate::buffer::Buffer).\n+///\n+/// This trait is used mainly to offer separate implementations for\n+/// numeric types and boolean types, while still be able to call methods on buffer builder\n+/// with generic primitive type.\n pub trait BufferBuilderTrait<T: ArrowPrimitiveType> {\n+    /// Creates a new builder with initial capacity for _at least_ `capacity`\n+    /// elements of type `T`.\n+    ///\n+    /// The capactity can later be manually adjusted with the\n \n Review comment:\n   typo: `capactity` -> `capacity`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T21:26:09.949+0000",
                    "updated": "2020-04-03T21:26:09.949+0000",
                    "started": "2020-04-03T21:26:09.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415747",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r403390221\n \n \n\n ##########\n File path: rust/arrow/src/array/array.rs\n ##########\n @@ -45,57 +45,165 @@ const MICROSECONDS: i64 = 1_000_000;\n const NANOSECONDS: i64 = 1_000_000_000;\n \n /// Trait for dealing with different types of array at runtime when the type of the\n-/// array is not known in advance\n+/// array is not known in advance.\n pub trait Array: fmt::Debug + Send + Sync + ArrayEqual + JsonEqual {\n-    /// Returns the array as `Any` so that it can be downcast to a specific implementation\n+    /// Returns the array as [`Any`](std::any::Any) so that it can be\n+    /// downcasted to a specific implementation.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use std::sync::Arc;\n+    /// use arrow::array::Int32Array;\n+    /// use arrow::datatypes::{Schema, Field, DataType};\n+    /// use arrow::record_batch::RecordBatch;\n+    ///\n+    /// # fn main() -> arrow::error::Result<()> {\n+    /// let id = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    /// let batch = RecordBatch::try_new(\n+    ///     Arc::new(Schema::new(vec![Field::new(\"id\", DataType::Int32, false)])),\n+    ///     vec![Arc::new(id)]\n+    /// )?;\n+    ///\n+    /// let int32array = batch\n+    ///     .column(0)\n+    ///     .as_any()\n+    ///     .downcast_ref::<Int32Array>()\n+    ///     .unwrap();\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     fn as_any(&self) -> &Any;\n \n-    /// Returns a reference-counted pointer to the data of this array\n+    /// Returns a reference-counted pointer to the underlying data of this array.\n     fn data(&self) -> ArrayDataRef;\n \n-    /// Returns a borrowed & reference-counted pointer to the data of this array\n+    /// Returns a borrowed & reference-counted pointer to the underlying data of this array.\n     fn data_ref(&self) -> &ArrayDataRef;\n \n-    /// Returns a reference to the data type of this array\n+    /// Returns a reference to the [`DataType`](crate::datatype::DataType) of this array.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::datatypes::DataType;\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    ///\n+    /// assert_eq!(*array.data_type(), DataType::Int32);\n+    /// ```\n     fn data_type(&self) -> &DataType {\n         self.data_ref().data_type()\n     }\n \n     /// Returns a zero-copy slice of this array with the indicated offset and length.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    /// // Make slice over the values [2, 3, 4]\n+    /// let array_slice = array.slice(1, 3);\n+    ///\n+    /// assert!(array_slice.equals(&Int32Array::from(vec![2, 3, 4])));\n+    /// ```\n     fn slice(&self, offset: usize, length: usize) -> ArrayRef {\n         make_array(slice_data(self.data(), offset, length))\n     }\n \n-    /// Returns the length (i.e., number of elements) of this array\n+    /// Returns the length (i.e., number of elements) of this array.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    ///\n+    /// assert_eq!(array.len(), 5);\n+    /// ```\n     fn len(&self) -> usize {\n         self.data().len()\n     }\n \n-    /// Returns the offset of this array\n+    /// Returns the offset of this array(-slice) within another array's data.\n \n Review comment:\n   I think I know the distinction you are trying to make here but `within another array's data` doesn't seem correct, i.e. it can be within this array's data.  Maybe something like `Returns the offset into the underlying data used by this array(-slice).  Note that the underlying data can be shared by many arrays`? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T00:17:20.232+0000",
                    "updated": "2020-04-04T00:17:20.232+0000",
                    "started": "2020-04-04T00:17:20.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415855",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/415856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r403392911\n \n \n\n ##########\n File path: rust/arrow/src/array/builder.rs\n ##########\n @@ -31,29 +33,170 @@ use crate::datatypes::*;\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Buffer builder with zero-copy build method\n+/// Builder for creating a [`Buffer`](crate::buffer::Buffer) object.\n+///\n+/// This builder is implemented for primitive types and creates a\n+/// buffer with a zero-copy `build()` method.\n+///\n+/// See trait [`BufferBuilderTrait`](crate::array::BufferBuilderTrait)\n+/// for further documentation and examples.\n+///\n+/// A [`Buffer`](crate::buffer::Buffer) is the underlying data\n+/// structure of Arrow's [`Arrays`](crate::array::Array).\n+///\n+/// For all supported types, there are type definitions for the\n+/// generic version of `BufferBuilder<T>`, e.g. `UInt8BufferBuilder`.\n+///\n+/// # Example:\n+///\n+/// ```\n+/// use arrow::array::{UInt8BufferBuilder, BufferBuilderTrait};\n+///\n+/// # fn main() -> arrow::error::Result<()> {\n+/// let mut builder = UInt8BufferBuilder::new(100);\n+/// builder.append_slice(&[42, 43, 44]);\n+/// builder.append(45);\n+/// let buffer = builder.finish();\n+///\n+/// assert_eq!(unsafe { buffer.typed_data::<u8>() }, &[42, 43, 44, 45]);\n+/// # Ok(())\n+/// # }\n+/// ```\n pub struct BufferBuilder<T: ArrowPrimitiveType> {\n     buffer: MutableBuffer,\n     len: usize,\n     _marker: PhantomData<T>,\n }\n \n-// Trait for buffer builder. This is used mainly to offer separate implementations for\n-// numeric types and boolean types, while still be able to call methods on buffer builder\n-// with generic primitive type.\n+/// Trait for simplifying the construction of [`Buffers`](crate::buffer::Buffer).\n+///\n+/// This trait is used mainly to offer separate implementations for\n+/// numeric types and boolean types, while still be able to call methods on buffer builder\n \n Review comment:\n   Maybe mention why separate implementations are necessary, i.e. boolean arrays are bit-packed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T00:17:20.274+0000",
                    "updated": "2020-04-04T00:17:20.274+0000",
                    "started": "2020-04-04T00:17:20.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415856",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-609506062\n \n \n   Looks like with some minor fixes this could be included in 0.17.0. I'm adding to the milestone\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-05T23:53:40.260+0000",
                    "updated": "2020-04-05T23:53:40.260+0000",
                    "started": "2020-04-05T23:53:40.259+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416289",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Jibbow commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r404116771\n \n \n\n ##########\n File path: rust/arrow/src/datatypes.rs\n ##########\n @@ -49,55 +54,108 @@ use crate::error::{ArrowError, Result};\n ///\n /// Nested types can themselves be nested within other arrays.\n /// For more information on these types please see\n-/// [here](https://arrow.apache.org/docs/memory_layout.html).\n+/// [the physical memory layout of Apache Arrow](https://arrow.apache.org/docs/format/Columnar.html#physical-memory-layout).\n #[derive(Serialize, Deserialize, Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum DataType {\n+    /// A boolean datatype representing the values `true` and `false`.\n     Boolean,\n+    /// A signed 8-bit integer.\n     Int8,\n+    /// A signed 16-bit integer.\n     Int16,\n+    /// A signed 32-bit integer.\n     Int32,\n+    /// A signed 64-bit integer.\n     Int64,\n+    /// An unsigned 8-bit integer.\n     UInt8,\n+    /// An unsigned 16-bit integer.\n     UInt16,\n+    /// An unsigned 32-bit integer.\n     UInt32,\n+    /// An unsigned 64-bit integer.\n     UInt64,\n+    /// A 16-bit floating point number.\n     Float16,\n+    /// A 32-bit floating point number.\n     Float32,\n+    /// A 64-bit floating point number.\n     Float64,\n-    /// A timestamp with an optional timezone\n+    /// A timestamp with an optional timezone.\n+    ///\n+    /// Time is measured as a Unix epoch, counting the seconds from\n+    /// 00:00:00.000 on 1 January 1970, excluding leap seconds,\n+    /// as a 64-bit integer.\n+    ///\n+    /// The time zone is a string indicating the name of a time zone, one of:\n+    ///\n+    /// * As used in the Olson time zone database (the \"tz database\" or\n+    ///   \"tzdata\"), such as \"America/New_York\"\n+    /// * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n     Timestamp(TimeUnit, Option<Arc<String>>),\n+    /// A 32-bit date representing the elapsed time since UNIX epoch (1970-01-01)\n+    /// in days (32 bits).\n     Date32(DateUnit),\n+    /// A 64-bit date representing the elapsed time since UNIX epoch (1970-01-01)\n+    /// in milliseconds (64 bits).\n     Date64(DateUnit),\n+    /// A 32-bit time representing the elapsed time since midnight in the unit of `TimeUnit`.\n     Time32(TimeUnit),\n+    /// A 64-bit time representing the elapsed time since midnight in the unit of `TimeUnit`.\n     Time64(TimeUnit),\n+    /// Measure of elapsed time in either seconds, milliseconds, microseconds or nanoseconds.\n     Duration(TimeUnit),\n+    /// A \"calendar\" interval which models types that don't necessarily\n+    /// have a precise duration without the context of a base timestamp (e.g.\n+    /// days can differ in length during day light savings time transitions).\n     Interval(IntervalUnit),\n+    /// Opaque binary data of variable length.\n     Binary,\n+    /// Opaque binary data of fixed size.\n+    /// Enum parameter specifies the number of bytes per value.\n     FixedSizeBinary(i32),\n+    /// A variable-length string in Unicode with UTF-8 encoding.\n     Utf8,\n+    /// A list of some logical data type with variable length.\n     List(Box<DataType>),\n+    /// A list of some logical data type with fixed length.\n     FixedSizeList(Box<DataType>, i32),\n+    /// A nested datatype that contains a number of sub-fields.\n     Struct(Vec<Field>),\n     Dictionary(Box<DataType>, Box<DataType>),\n \n Review comment:\n   Oh yes, absolutely! I left it out because I wasn't really sure about it and then I forgot about it :sweat_smile: \r\n   \r\n   For clarification: what exactly is this `Dictionary`?\r\n   Is this conceptually similar to https://github.com/apache/arrow/blob/master/format/Schema.fbs#L269?\r\n   Also die C++ doc on this wasn't really clear, but also mentions `Maps`: https://arrow.apache.org/docs/cpp/api/datatype.html#_CPPv4N5arrow4Type10DICTIONARYE\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T14:04:35.776+0000",
                    "updated": "2020-04-06T14:04:35.776+0000",
                    "started": "2020-04-06T14:04:35.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416625",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Jibbow commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r404116865\n \n \n\n ##########\n File path: rust/arrow/src/array/array.rs\n ##########\n @@ -45,57 +45,165 @@ const MICROSECONDS: i64 = 1_000_000;\n const NANOSECONDS: i64 = 1_000_000_000;\n \n /// Trait for dealing with different types of array at runtime when the type of the\n-/// array is not known in advance\n+/// array is not known in advance.\n pub trait Array: fmt::Debug + Send + Sync + ArrayEqual + JsonEqual {\n-    /// Returns the array as `Any` so that it can be downcast to a specific implementation\n+    /// Returns the array as [`Any`](std::any::Any) so that it can be\n+    /// downcasted to a specific implementation.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use std::sync::Arc;\n+    /// use arrow::array::Int32Array;\n+    /// use arrow::datatypes::{Schema, Field, DataType};\n+    /// use arrow::record_batch::RecordBatch;\n+    ///\n+    /// # fn main() -> arrow::error::Result<()> {\n+    /// let id = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    /// let batch = RecordBatch::try_new(\n+    ///     Arc::new(Schema::new(vec![Field::new(\"id\", DataType::Int32, false)])),\n+    ///     vec![Arc::new(id)]\n+    /// )?;\n+    ///\n+    /// let int32array = batch\n+    ///     .column(0)\n+    ///     .as_any()\n+    ///     .downcast_ref::<Int32Array>()\n+    ///     .unwrap();\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     fn as_any(&self) -> &Any;\n \n-    /// Returns a reference-counted pointer to the data of this array\n+    /// Returns a reference-counted pointer to the underlying data of this array.\n     fn data(&self) -> ArrayDataRef;\n \n-    /// Returns a borrowed & reference-counted pointer to the data of this array\n+    /// Returns a borrowed & reference-counted pointer to the underlying data of this array.\n     fn data_ref(&self) -> &ArrayDataRef;\n \n-    /// Returns a reference to the data type of this array\n+    /// Returns a reference to the [`DataType`](crate::datatype::DataType) of this array.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::datatypes::DataType;\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    ///\n+    /// assert_eq!(*array.data_type(), DataType::Int32);\n+    /// ```\n     fn data_type(&self) -> &DataType {\n         self.data_ref().data_type()\n     }\n \n     /// Returns a zero-copy slice of this array with the indicated offset and length.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    /// // Make slice over the values [2, 3, 4]\n+    /// let array_slice = array.slice(1, 3);\n+    ///\n+    /// assert!(array_slice.equals(&Int32Array::from(vec![2, 3, 4])));\n+    /// ```\n     fn slice(&self, offset: usize, length: usize) -> ArrayRef {\n         make_array(slice_data(self.data(), offset, length))\n     }\n \n-    /// Returns the length (i.e., number of elements) of this array\n+    /// Returns the length (i.e., number of elements) of this array.\n+    ///\n+    /// # Example:\n+    ///\n+    /// ```\n+    /// use arrow::array::{Array, Int32Array};\n+    ///\n+    /// let array = Int32Array::from(vec![1, 2, 3, 4, 5]);\n+    ///\n+    /// assert_eq!(array.len(), 5);\n+    /// ```\n     fn len(&self) -> usize {\n         self.data().len()\n     }\n \n-    /// Returns the offset of this array\n+    /// Returns the offset of this array(-slice) within another array's data.\n \n Review comment:\n   Thanks for the pointer! I see your point and like your suggestion :blush: \r\n   Updated the documentation accordingly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T14:04:43.184+0000",
                    "updated": "2020-04-06T14:04:43.184+0000",
                    "started": "2020-04-06T14:04:43.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416626",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Jibbow commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#discussion_r404116919\n \n \n\n ##########\n File path: rust/arrow/src/array/builder.rs\n ##########\n @@ -31,29 +33,170 @@ use crate::datatypes::*;\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Buffer builder with zero-copy build method\n+/// Builder for creating a [`Buffer`](crate::buffer::Buffer) object.\n+///\n+/// This builder is implemented for primitive types and creates a\n+/// buffer with a zero-copy `build()` method.\n+///\n+/// See trait [`BufferBuilderTrait`](crate::array::BufferBuilderTrait)\n+/// for further documentation and examples.\n+///\n+/// A [`Buffer`](crate::buffer::Buffer) is the underlying data\n+/// structure of Arrow's [`Arrays`](crate::array::Array).\n+///\n+/// For all supported types, there are type definitions for the\n+/// generic version of `BufferBuilder<T>`, e.g. `UInt8BufferBuilder`.\n+///\n+/// # Example:\n+///\n+/// ```\n+/// use arrow::array::{UInt8BufferBuilder, BufferBuilderTrait};\n+///\n+/// # fn main() -> arrow::error::Result<()> {\n+/// let mut builder = UInt8BufferBuilder::new(100);\n+/// builder.append_slice(&[42, 43, 44]);\n+/// builder.append(45);\n+/// let buffer = builder.finish();\n+///\n+/// assert_eq!(unsafe { buffer.typed_data::<u8>() }, &[42, 43, 44, 45]);\n+/// # Ok(())\n+/// # }\n+/// ```\n pub struct BufferBuilder<T: ArrowPrimitiveType> {\n     buffer: MutableBuffer,\n     len: usize,\n     _marker: PhantomData<T>,\n }\n \n-// Trait for buffer builder. This is used mainly to offer separate implementations for\n-// numeric types and boolean types, while still be able to call methods on buffer builder\n-// with generic primitive type.\n+/// Trait for simplifying the construction of [`Buffers`](crate::buffer::Buffer).\n+///\n+/// This trait is used mainly to offer separate implementations for\n+/// numeric types and boolean types, while still be able to call methods on buffer builder\n \n Review comment:\n   Good point! Done :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T14:04:47.523+0000",
                    "updated": "2020-04-06T14:04:47.523+0000",
                    "started": "2020-04-06T14:04:47.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416627",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Jibbow commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-609817207\n \n \n   Thank you for the positive feedback!\r\n   \r\n   I pushed a new commit with the changes, except for the documentation on `Dictionary` because I wasn't sure what it exactly was (see comment). I would appreciate some help here :innocent: \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T14:07:23.467+0000",
                    "updated": "2020-04-06T14:07:23.467+0000",
                    "started": "2020-04-06T14:07:23.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416631",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828#issuecomment-609921034\n \n \n   Let's go ahead and merge this and we can add documentation for `Dictionary` in a future PR. I don't know enough about this new functionality to suggest documentation for it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T17:09:30.950+0000",
                    "updated": "2020-04-06T17:09:30.950+0000",
                    "started": "2020-04-06T17:09:30.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416775",
                    "issueId": "13210623"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/worklog/416789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6828: ARROW-4304: [Rust] Enhance documentation for arrow\nURL: https://github.com/apache/arrow/pull/6828\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T17:35:56.206+0000",
                    "updated": "2020-04-06T17:35:56.206+0000",
                    "started": "2020-04-06T17:35:56.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416789",
                    "issueId": "13210623"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@a900b45[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56a61f1c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ac983ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7c712145[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@214fc199[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7a592080[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2cd9824f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@59d7f598[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cbb432[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3525c94b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@550eee5a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3393aa56[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 06 17:35:58 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-06T17:35:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4304/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-01-20T17:50:11.000+0000",
        "updated": "2020-04-06T17:35:58.000+0000",
        "timeoriginalestimate": null,
        "description": "The documentation for arrow crate (https://docs.rs/arrow/0.12.0/arrow/) is not complete. We should add more content to it to help people who want to use the crate.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Enhance documentation for arrow",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16792810",
                    "id": "16792810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Do you want to do this for 0.13?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-03-14T15:57:09.413+0000",
                    "updated": "2019-03-14T15:57:09.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16792814",
                    "id": "16792814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I think we can push this to 0.14 since some of the work has been done in some other JIRAs such as\u00a0ARROW-4245.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-03-14T16:01:19.070+0000",
                    "updated": "2019-03-14T16:01:19.070+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16861481",
                    "id": "16861481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Is there a reasonable scope of work here for 0.14.0?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-11T20:39:42.065+0000",
                    "updated": "2019-06-11T20:39:42.065+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16861514",
                    "id": "16861514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Sorry for the delay. I think the scope is not that big. Let me try to push this in 0.14.0.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-06-11T21:30:01.250+0000",
                    "updated": "2019-06-11T21:30:01.250+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16861529",
                    "id": "16861529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~csun] see also\u00a0https://issues.apache.org/jira/browse/ARROW-5497\u00a0where I hope to wrangle the other language docs. LMK if you want to get the Rust docs published at arrow.apache.org/docs/rust alongside the others and I can help.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-06-11T22:01:12.077+0000",
                    "updated": "2019-06-11T22:01:12.077+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16861536",
                    "id": "16861536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~npr] Yes it would be great if we can publish the Rust doc on arrow.apache.org. Let me file a JIRA for that and perhaps you can give us some pointer on how to do that. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=csun",
                        "name": "csun",
                        "key": "csun",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"
                        },
                        "displayName": "Chao Sun",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-06-11T22:05:05.748+0000",
                    "updated": "2019-06-11T22:05:05.748+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/16861631",
                    "id": "16861631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "If it is possible to put prose documentation in the main Sphinx project that would be ideal. Generated API docs are something different and can always be linked at docs/rust/api or something",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-12T00:26:35.020+0000",
                    "updated": "2019-06-12T00:26:35.020+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210623/comment/17076494",
                    "id": "17076494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 6828\n[https://github.com/apache/arrow/pull/6828]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-04-06T17:35:58.739+0000",
                    "updated": "2020-04-06T17:35:58.739+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|yi03ww:",
        "customfield_12314139": null
    }
}