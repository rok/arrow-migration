{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13288490",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490",
    "key": "ARROW-7971",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": 3600,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ksuenobu",
            "name": "ksuenobu",
            "key": "ksuenobu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Ken Suenobu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ksuenobu",
            "name": "ksuenobu",
            "key": "ksuenobu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Ken Suenobu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ksuenobu",
            "name": "ksuenobu",
            "key": "ksuenobu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Ken Suenobu",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7971/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "KenSuenobu commented on issue #6511: ARROW-7971: [Rust] Create rowcount utility in Rust\nURL: https://github.com/apache/arrow/pull/6511#issuecomment-593068859\n \n \n   Admittedly, I'm new to the project.  I hope I didn't screw things up too badly.  \ud83d\ude22 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T08:09:28.154+0000",
                    "updated": "2020-03-01T08:09:28.154+0000",
                    "started": "2020-03-01T08:09:28.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395575",
                    "issueId": "13288490"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6511: ARROW-7971: [Rust] Create rowcount utility in Rust\nURL: https://github.com/apache/arrow/pull/6511#issuecomment-593069434\n \n \n   https://issues.apache.org/jira/browse/ARROW-7971\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T08:16:44.754+0000",
                    "updated": "2020-03-01T08:16:44.754+0000",
                    "started": "2020-03-01T08:16:44.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395577",
                    "issueId": "13288490"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6511: ARROW-7971: [Rust] Create rowcount utility in Rust\nURL: https://github.com/apache/arrow/pull/6511#discussion_r386125210\n \n \n\n ##########\n File path: rust/parquet/src/bin/parquet-rowcount.rs\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Binary file to return the number of rows found from Parquet file(s).\n+//!\n+//! # Install\n+//!\n+//! `parquet-rowcount` can be installed using `cargo`:\n+//! ```\n+//! cargo install parquet\n+//! ```\n+//! After this `parquet-rowcount` should be globally available:\n+//! ```\n+//! parquet-rowcount XYZ.parquet\n+//! ```\n+//!\n+//! The binary can also be built from the source code and run as follows:\n+//! ```\n+//! cargo run --bin parquet-rowcount XYZ.parquet ABC.parquet ZXC.parquet\n+//! ```\n+//!\n+//! # Usage\n+//!\n+//! ```\n+//! parquet-rowcount <file-path> ...\n+//! ```\n+//! where `file-path` is the path to a Parquet file and `...` is any additional number of\n+//! parquet files to count the number of rows from.\n+//!\n+//! Note that `parquet-rowcount` reads full file schema, no projection or filtering is\n+//! applied.\n+\n+extern crate parquet;\n+\n+use std::{env, fs::File, path::Path, process};\n+\n+use parquet::file::reader::{FileReader, SerializedFileReader};\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() < 2 {\n+        println!(\"Usage: parquet-rowcount <file-path> ...\");\n+        process::exit(1);\n+    }\n+\n+    for i in 1..args.len() {\n+        let filename = args[i].clone();\n+        let path = Path::new(&filename);\n+        let file = File::open(&path).unwrap();\n+        let parquet_reader = SerializedFileReader::new(file).unwrap();\n+\n+        // Use full schema as projected schema\n+        let mut iter = parquet_reader.get_row_iter(None).unwrap();\n \n Review comment:\n   A more efficient approach would be to get the row count from the file metadata rather than iterating over every row.\r\n   \r\n   You can get a reference to `ParquetMetaData` from the file and then iterate over the `RowGroupMetaData` entries and get the row count for each one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T17:26:05.450+0000",
                    "updated": "2020-03-01T17:26:05.450+0000",
                    "started": "2020-03-01T17:26:05.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395632",
                    "issueId": "13288490"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6511: ARROW-7971: [Rust] Create rowcount utility in Rust\nURL: https://github.com/apache/arrow/pull/6511#discussion_r386125300\n \n \n\n ##########\n File path: rust/parquet/src/bin/parquet-rowcount.rs\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Binary file to return the number of rows found from Parquet file(s).\n+//!\n+//! # Install\n+//!\n+//! `parquet-rowcount` can be installed using `cargo`:\n+//! ```\n+//! cargo install parquet\n+//! ```\n+//! After this `parquet-rowcount` should be globally available:\n+//! ```\n+//! parquet-rowcount XYZ.parquet\n+//! ```\n+//!\n+//! The binary can also be built from the source code and run as follows:\n+//! ```\n+//! cargo run --bin parquet-rowcount XYZ.parquet ABC.parquet ZXC.parquet\n+//! ```\n+//!\n+//! # Usage\n+//!\n+//! ```\n+//! parquet-rowcount <file-path> ...\n+//! ```\n+//! where `file-path` is the path to a Parquet file and `...` is any additional number of\n+//! parquet files to count the number of rows from.\n+//!\n+//! Note that `parquet-rowcount` reads full file schema, no projection or filtering is\n+//! applied.\n+\n+extern crate parquet;\n+\n+use std::{env, fs::File, path::Path, process};\n+\n+use parquet::file::reader::{FileReader, SerializedFileReader};\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() < 2 {\n+        println!(\"Usage: parquet-rowcount <file-path> ...\");\n+        process::exit(1);\n+    }\n+\n+    for i in 1..args.len() {\n+        let filename = args[i].clone();\n+        let path = Path::new(&filename);\n+        let file = File::open(&path).unwrap();\n+        let parquet_reader = SerializedFileReader::new(file).unwrap();\n+\n+        // Use full schema as projected schema\n+        let mut iter = parquet_reader.get_row_iter(None).unwrap();\n+        let mut end_of_file: bool = false;\n+        let mut counted_rows: u32 = 0;\n+\n+        while !end_of_file {\n \n Review comment:\n   Style suggestion:\r\n   \r\n   ```rust\r\n   while let Some(_) = iter.next() {\r\n     counted_rows += 1;\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T17:27:43.904+0000",
                    "updated": "2020-03-01T17:27:43.904+0000",
                    "started": "2020-03-01T17:27:43.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395634",
                    "issueId": "13288490"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395673",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "KenSuenobu commented on pull request #6511: ARROW-7971: [Rust] Create rowcount utility in Rust\nURL: https://github.com/apache/arrow/pull/6511#discussion_r386137016\n \n \n\n ##########\n File path: rust/parquet/src/bin/parquet-rowcount.rs\n ##########\n @@ -0,0 +1,80 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Binary file to return the number of rows found from Parquet file(s).\n+//!\n+//! # Install\n+//!\n+//! `parquet-rowcount` can be installed using `cargo`:\n+//! ```\n+//! cargo install parquet\n+//! ```\n+//! After this `parquet-rowcount` should be globally available:\n+//! ```\n+//! parquet-rowcount XYZ.parquet\n+//! ```\n+//!\n+//! The binary can also be built from the source code and run as follows:\n+//! ```\n+//! cargo run --bin parquet-rowcount XYZ.parquet ABC.parquet ZXC.parquet\n+//! ```\n+//!\n+//! # Usage\n+//!\n+//! ```\n+//! parquet-rowcount <file-path> ...\n+//! ```\n+//! where `file-path` is the path to a Parquet file and `...` is any additional number of\n+//! parquet files to count the number of rows from.\n+//!\n+//! Note that `parquet-rowcount` reads full file schema, no projection or filtering is\n+//! applied.\n+\n+extern crate parquet;\n+\n+use std::{env, fs::File, path::Path, process};\n+\n+use parquet::file::reader::{FileReader, SerializedFileReader};\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() < 2 {\n+        println!(\"Usage: parquet-rowcount <file-path> ...\");\n+        process::exit(1);\n+    }\n+\n+    for i in 1..args.len() {\n+        let filename = args[i].clone();\n+        let path = Path::new(&filename);\n+        let file = File::open(&path).unwrap();\n+        let parquet_reader = SerializedFileReader::new(file).unwrap();\n+\n+        // Use full schema as projected schema\n+        let mut iter = parquet_reader.get_row_iter(None).unwrap();\n \n Review comment:\n   Great suggestion!  I modified the code to take the `ParquetMetaData` using `metadata()` and grabbed the rows from there.  This should be a far more accurate count of rows in the files.  Checked against the `../../python/pyarrow/tests/data/parquet` data, and all the numbers still matched.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-01T20:15:41.782+0000",
                    "updated": "2020-03-01T20:15:41.782+0000",
                    "started": "2020-03-01T20:15:41.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395673",
                    "issueId": "13288490"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/worklog/395934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6511: ARROW-7971: [Rust] Create rowcount utility\nURL: https://github.com/apache/arrow/pull/6511\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-02T10:02:33.703+0000",
                    "updated": "2020-03-02T10:02:33.703+0000",
                    "started": "2020-03-02T10:02:33.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "395934",
                    "issueId": "13288490"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61c0e89[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4473644[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a9561ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@47dd9dff[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dd16868[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3b69ddb5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6aa2d9be[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@413b8370[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37df2117[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@422ec62c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e3d98fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2300ac4a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 02 10:02:33 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-02T10:02:33.000+0000",
        "workratio": 100,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7971/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-03-01T08:08:15.000+0000",
        "updated": "2020-03-02T10:02:33.000+0000",
        "timeoriginalestimate": 3600,
        "description": "As a developer, I would like the ability to count the number of rows that are present in a Parquet file from the command line.\u00a0 Ideally, this would be something similar to {{parquet-rowcount}} or {{parquet-rows}} to count the number of rows in a Parquet file(s).",
        "customfield_10010": null,
        "timetracking": {
            "originalEstimate": "1h",
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "originalEstimateSeconds": 3600,
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Create rowcount utility",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13288490/comment/17048983",
                    "id": "17048983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6511\n[https://github.com/apache/arrow/pull/6511]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-03-02T10:02:33.575+0000",
                    "updated": "2020-03-02T10:02:33.575+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0c1a0:",
        "customfield_12314139": null
    }
}