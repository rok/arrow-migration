{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13285639",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13285639",
    "key": "ARROW-7866",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=leccine",
            "name": "leccine",
            "key": "leccine",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Istvan Szukacs",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=leccine",
            "name": "leccine",
            "key": "leccine",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Istvan Szukacs",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7866/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@63bc087e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c7ff4e1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4603bad4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25b89609[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b10a433[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3f82e61[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5876f1d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@399f3c09[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7103635[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@45d98b90[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a4e1a8a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6af104be[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 17 16:26:09 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-17T16:26:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7866/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-02-16T19:00:02.000+0000",
        "updated": "2020-02-17T16:26:25.000+0000",
        "timeoriginalestimate": null,
        "description": "Hi,\r\n\r\nI am trying to use the Rust tools and I was running into this interesting behavior.\r\n\r\n{code}\r\n\r\nuse std::sync::Arc;\r\n\r\nextern crate arrow;\r\nextern crate datafusion;\r\n\r\nuse arrow::array::\\{StringArray, UInt32Array};\r\nuse arrow::datatypes::\\{DataType, Field, Schema};\r\n\r\nuse datafusion::error::Result;\r\nuse datafusion::execution::context::ExecutionContext;\r\n\r\nfn main() -> Result<()> {\r\n // create local execution context\r\n let mut ctx = ExecutionContext::new();\r\n\r\n// define schema for data source (csv file)\r\n let schema = Arc::new(Schema::new(vec![\r\n Field::new(\"index\", DataType::UInt32, false),\r\n Field::new(\"tablename\", DataType::Utf8, false),\r\n Field::new(\"datetime\", DataType::Utf8, false),\r\n Field::new(\"partition\", DataType::Utf8, false),\r\n Field::new(\"fileSize\", DataType::UInt32, false),\r\n ]));\r\n\r\n// register csv file with the execution context\r\n ctx.register_csv(\r\n \"awesome_table\",\r\n &format!(\r\n \"../tableMetaData/anon/{}\",\r\n \"013ff3245cc90a3394943da0b6552b9f98313288e0a174f94f8dcb10.csv\"\r\n ),\r\n &schema,\r\n true,\r\n );\r\n\r\nlet sql = \"SELECT COUNT(partition) FROM awesome_table\";\r\n\r\n// create the query plan\r\n let plan = ctx.create_logical_plan(&sql)?;\r\n let plan = ctx.optimize(&plan)?;\r\n let plan = ctx.create_physical_plan(&plan, 1024 * 1024)?;\r\n\r\n// execute the query\r\n let results = ctx.collect(plan.as_ref())?;\r\n\r\n// iterate over the results\r\n results.iter().for_each(|batch| {\r\n println!(\r\n \"RecordBatch has {} rows and {} columns\",\r\n batch.num_rows(),\r\n batch.num_columns()\r\n );\r\n\r\nlet retf1 = batch.column(0).as_any().downcast_ref::<StringArray>();\r\n\r\nmatch retf1 {\r\n Some(_) => println!(\"Some retf1\"),\r\n None => println!(\"None retf1\"),\r\n }\r\n\r\nlet retf2 = batch.column(1).as_any().downcast_ref::<StringArray>();\r\n\r\nmatch retf2 {\r\n Some(_) => println!(\"Some retf2\"),\r\n None => println!(\"None retf2\"),\r\n }\r\n \r\n // for i in 0..batch.num_rows() {\r\n // println!(\"P: {}\", pcnt.value(i));\r\n // }\r\n });\r\n\r\nOk(())\r\n}\r\n\r\n{code}\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n{code}\r\n\r\ncargo build --release && ./target/release/cli\r\nRecordBatch has 1 rows and 1 columns\r\nRecordBatch has 1 rows and 2 columns\r\nNone retf1\r\nNone retf2\r\n\r\n{code}\r\n\r\n\u00a0\r\n\r\nIn case of no aggregation:\r\n\r\n\u00a0\r\n\r\n{code}\r\n\r\nlet sql = \"SELECT index FROM awesome_table\";\r\n\r\n// create the query plan\r\n let plan = ctx.create_logical_plan(&sql)?;\r\n let plan = ctx.optimize(&plan)?;\r\n let plan = ctx.create_physical_plan(&plan, 1024 * 1024)?;\r\n\r\n// execute the query\r\n let results = ctx.collect(plan.as_ref())?;\r\n\r\n// iterate over the results\r\n results.iter().for_each(|batch| {\r\n println!(\r\n \"RecordBatch has {} rows and {} columns\",\r\n batch.num_rows(),\r\n batch.num_columns(),\r\n );\r\n\r\nlet retf1 = batch.column(0).as_any().downcast_ref::<UInt32Array>();\r\n\r\nmatch retf1 {\r\n Some(_) => println!(\"Some retf1\"),\r\n None => println!(\"None retf1\"),\r\n }\r\n\r\n// let retf2 = batch.column(1).as_any().downcast_ref::<UInt32Array>();\r\n\r\n// match retf2 {\r\n // Some(_) => println!(\"Some retf2\"),\r\n // None => println!(\"None retf2\"),\r\n // }\r\n\r\nfor i in 0..batch.num_rows() {\r\n println!(\"P: {}\", retf1.unwrap().value(i));\r\n }\r\n });\r\n\r\nOk(())\r\n}\r\n\r\n{code}\r\n\r\n\u00a0\r\n\r\n{code}\r\n\r\n\u00a0\r\n\r\nP: 126436\r\nP: 126437\r\nP: 126438\r\nP: 126439\r\nP: 126440\r\nP: 126441\r\n\r\n{code}\r\n\r\n\u00a0\u00a0\r\n\r\nIs there a way to access the fields when aggregating?",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] How to handle aggregates with Datafusion?",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z0bjy8:",
        "customfield_12314139": null
    }
}