{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13198362",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362",
    "key": "ARROW-3790",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3790/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques opened a new pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022\n \n \n   - Improves coverage of various type combinations under safe/unsafe\r\n     conditions\r\n   - Fixes proper bound detection at compile time\r\n   - Fixes type traits pattern matching\r\n   \r\n   While reviewing this merge, I noted that python, Ruby/glib and R would use CastOptions differently.\r\n   \r\n   - Python only exposes safe as a single boolean (which flips all options accordingly)\r\n   - Ruby exposes 2 out of 3 of the options (probably due to code rot)\r\n   - R is going to exposes all 3 modes.\r\n   \r\n   What is the purpose of having the 3 options, could we just expose safe versus unsafe?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T18:42:21.998+0000",
                    "updated": "2018-11-23T18:42:21.998+0000",
                    "started": "2018-11-23T18:42:21.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169077",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#issuecomment-441309441\n \n \n   Seems like a spurious failure, how do we restart a build?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T19:46:03.962+0000",
                    "updated": "2018-11-23T19:46:03.962+0000",
                    "started": "2018-11-23T19:46:03.961+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169079",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques edited a comment on issue #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#issuecomment-441309441\n \n \n   Seems like a spurious (AppVeyor) failure, how do we restart a build?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T19:46:29.004+0000",
                    "updated": "2018-11-23T19:46:29.004+0000",
                    "started": "2018-11-23T19:46:29.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169080",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#issuecomment-441309761\n \n \n   Hm, looks like a legit issue to me\r\n   \r\n   ```\r\n   ..\\src\\arrow\\compute\\compute-test.cc(295): error C2220: warning treated as error - no 'object' file generated\r\n   ..\\src\\arrow\\compute\\compute-test.cc(295): warning C4309: 'static_cast': truncation of constant value\r\n   ```\r\n   \r\n   You can retrigger a build by `git commit --amend` followed by force push\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-23T19:49:03.564+0000",
                    "updated": "2018-11-23T19:49:03.564+0000",
                    "started": "2018-11-23T19:49:03.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169081",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#issuecomment-441465180\n \n \n   It now passes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T19:23:05.938+0000",
                    "updated": "2018-11-25T19:23:05.938+0000",
                    "started": "2018-11-25T19:23:05.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169218",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236093174\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -161,23 +163,60 @@ struct CastFunctor<T, BooleanType, enable_if_number<T>> {\n   }\n };\n \n+// Number to Boolean\n+template <typename I>\n+struct CastFunctor<BooleanType, I,\n+                   typename std::enable_if<std::is_base_of<Number, I>::value &&\n+                                           !std::is_same<BooleanType, I>::value>::type> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    auto in_data = input.GetValues<typename I::c_type>(1);\n+    const auto generate = [&in_data]() -> bool { return *in_data++ != 0; };\n+    internal::GenerateBitsUnrolled(output->buffers[1]->mutable_data(), output->offset,\n+                                   input.length, generate);\n+  }\n+};\n+\n // ----------------------------------------------------------------------\n // Integers and Floating Point\n \n+// Conversions pairs (<O, I>) are partitioned in 4 type traits:\n+// - is_number_downcast\n+// - is_integral_signed_to_unsigned\n+// - is_integral_unsigned_to_signed\n+// - is_float_truncate\n+//\n+// Each class has a different way of validation if the conversion is safe\n+// (either with bounded intervals or with explicit C casts)\n+\n+template <typename O, typename I, typename Enable = void>\n+struct is_number_downcast {\n+  static constexpr bool value = false;\n+};\n+\n template <typename O, typename I>\n-struct is_numeric_cast {\n+struct is_number_downcast<\n+    O, I,\n+    typename std::enable_if<std::is_base_of<Number, O>::value &&\n+                            std::is_base_of<Number, I>::value>::type> {\n+  using O_T = typename O::c_type;\n+  using I_T = typename I::c_type;\n+\n   static constexpr bool value =\n-      (std::is_base_of<Number, O>::value && std::is_base_of<Number, I>::value) &&\n-      (!std::is_same<O, I>::value);\n+      ((!std::is_same<O, I>::value) &&\n+       ((std::is_signed<O_T>::value == std::is_signed<I_T>::value) &&\n+        (std::is_floating_point<O_T>::value == std::is_floating_point<I_T>::value)) &&\n \n Review comment:\n   Seems this constexpr clause is only true when both input and output are floating point. Should the previous && be ||?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.718+0000",
                    "updated": "2018-11-25T22:37:29.718+0000",
                    "started": "2018-11-25T22:37:29.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169247",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236092834\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<uint32_t> v2 = {(uint32_t)INT32_MIN, 100, (uint32_t)-1, 0, (uint32_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt32Type, uint32_t>(int32(), v1, is_valid, uint32(), v2,\n+                                                      options);\n+\n+  vector<uint64_t> v3 = {(uint64_t)INT32_MIN, 100, (uint64_t)-1, 0, (uint64_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt64Type, uint64_t>(int32(), v1, is_valid, uint64(), v3,\n+                                                      options);\n+\n+  vector<uint16_t> v4 = {(uint16_t)INT32_MIN, 100, (uint16_t)-1, 0, (uint16_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt16Type, uint16_t>(int32(), v1, is_valid, uint16(), v4,\n+                                                      options);\n \n Review comment:\n   See comment re: testing < vs <= edge case above\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.724+0000",
                    "updated": "2018-11-25T22:37:29.724+0000",
                    "started": "2018-11-25T22:37:29.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169248",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236093700\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -290,7 +392,8 @@ struct CastFunctor<O, I, typename std::enable_if<is_float_truncate<O, I>::value>\n                                                input.length);\n         for (int64_t i = 0; i < input.length; ++i) {\n           auto out_value = static_cast<out_type>(*in_data);\n-          if (ARROW_PREDICT_FALSE(static_cast<in_type>(out_value) != *in_data)) {\n+          if (ARROW_PREDICT_FALSE(is_valid_reader.IsSet() &&\n \n Review comment:\n   This additional check isn't tested, per above, per above\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.726+0000",
                    "updated": "2018-11-25T22:37:29.726+0000",
                    "started": "2018-11-25T22:37:29.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169249",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236092942\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<uint32_t> v2 = {(uint32_t)INT32_MIN, 100, (uint32_t)-1, 0, (uint32_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt32Type, uint32_t>(int32(), v1, is_valid, uint32(), v2,\n+                                                      options);\n+\n+  vector<uint64_t> v3 = {(uint64_t)INT32_MIN, 100, (uint64_t)-1, 0, (uint64_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt64Type, uint64_t>(int32(), v1, is_valid, uint64(), v3,\n+                                                      options);\n+\n+  vector<uint16_t> v4 = {(uint16_t)INT32_MIN, 100, (uint16_t)-1, 0, (uint16_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt16Type, uint16_t>(int32(), v1, is_valid, uint16(), v4,\n+                                                      options);\n+}\n+\n+TEST_F(TestCast, IntegerUnsignedToSigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, true};\n+\n+  vector<uint32_t> v1 = {0, UINT32_MAX};\n+  // Same width\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int32(), options);\n+  // Narrower\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int16(), options);\n \n Review comment:\n   Consider using `std::numeric_limits<int16_t>::max() + 1`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.730+0000",
                    "updated": "2018-11-25T22:37:29.730+0000",
                    "started": "2018-11-25T22:37:29.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169250",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236092706\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<uint32_t> v2 = {(uint32_t)INT32_MIN, 100, (uint32_t)-1, 0, (uint32_t)INT32_MAX};\n \n Review comment:\n   Use `static_cast` instead of C-style casts. Ordinarily cpplint catches this so I'm not sure why it did not here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.734+0000",
                    "updated": "2018-11-25T22:37:29.734+0000",
                    "started": "2018-11-25T22:37:29.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169251",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236093536\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -186,45 +225,92 @@ struct is_integer_downcast<\n \n   static constexpr bool value =\n       ((!std::is_same<O, I>::value) &&\n-\n-       // same size, but unsigned to signed\n-       ((sizeof(O_T) == sizeof(I_T) && std::is_signed<O_T>::value &&\n-         std::is_unsigned<I_T>::value) ||\n-\n-        // Smaller output size\n-        (sizeof(O_T) < sizeof(I_T))));\n+       ((std::is_unsigned<O_T>::value && std::is_signed<I_T>::value)));\n };\n \n template <typename O, typename I, typename Enable = void>\n-struct is_float_truncate {\n+struct is_integral_unsigned_to_signed {\n   static constexpr bool value = false;\n };\n \n template <typename O, typename I>\n-struct is_float_truncate<\n+struct is_integral_unsigned_to_signed<\n     O, I,\n     typename std::enable_if<std::is_base_of<Integer, O>::value &&\n-                            std::is_base_of<FloatingPoint, I>::value>::type> {\n-  static constexpr bool value = true;\n+                            std::is_base_of<Integer, I>::value>::type> {\n+  using O_T = typename O::c_type;\n+  using I_T = typename I::c_type;\n+\n+  static constexpr bool value =\n+      ((!std::is_same<O, I>::value) &&\n+       ((std::is_signed<O_T>::value && std::is_unsigned<I_T>::value)));\n };\n \n+// This set of functions SafeMinimum/SafeMaximum would be simplified with\n+// C++17 and `if constexpr`.\n+\n+// clang-format doesn't handle this construct properly. Thus the macro, but it\n+// also improves readability.\n \n Review comment:\n   I'm OK with the macro, it does improve readability here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.755+0000",
                    "updated": "2018-11-25T22:37:29.755+0000",
                    "started": "2018-11-25T22:37:29.754+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169252",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236093018\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<uint32_t> v2 = {(uint32_t)INT32_MIN, 100, (uint32_t)-1, 0, (uint32_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt32Type, uint32_t>(int32(), v1, is_valid, uint32(), v2,\n+                                                      options);\n+\n+  vector<uint64_t> v3 = {(uint64_t)INT32_MIN, 100, (uint64_t)-1, 0, (uint64_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt64Type, uint64_t>(int32(), v1, is_valid, uint64(), v3,\n+                                                      options);\n+\n+  vector<uint16_t> v4 = {(uint16_t)INT32_MIN, 100, (uint16_t)-1, 0, (uint16_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt16Type, uint16_t>(int32(), v1, is_valid, uint16(), v4,\n+                                                      options);\n+}\n+\n+TEST_F(TestCast, IntegerUnsignedToSigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, true};\n+\n+  vector<uint32_t> v1 = {0, UINT32_MAX};\n+  // Same width\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int32(), options);\n+  // Narrower\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<int32_t> v2 = {0, static_cast<int32_t>(UINT32_MAX)};\n+  CheckCase<UInt32Type, uint32_t, Int32Type, int32_t>(uint32(), v1, is_valid, int32(), v2,\n+                                                      options);\n+\n+  vector<int64_t> v3 = {0, static_cast<int64_t>(UINT32_MAX)};\n+  CheckCase<UInt32Type, uint32_t, Int64Type, int64_t>(uint32(), v1, is_valid, int64(), v3,\n+                                                      options);\n+\n+  vector<int16_t> v4 = {0, static_cast<int16_t>(UINT16_MAX)};\n \n Review comment:\n   INT16_MAX? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.762+0000",
                    "updated": "2018-11-25T22:37:29.762+0000",
                    "started": "2018-11-25T22:37:29.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169253",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236092769\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n \n Review comment:\n   In this case, the negative value `INT32_MIN` would trigger failure before the INT32_MAX overflow. Maybe add an additional test case wher all the values are positive, but there is a large-value overflow? To test for edge cases, you might want to test that `std::numeric_limits<uint16_t>::max()` is ok but  `std::numeric_limits<uint16_t>::max() + 1` is not\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.769+0000",
                    "updated": "2018-11-25T22:37:29.769+0000",
                    "started": "2018-11-25T22:37:29.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169254",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236093038\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -343,6 +402,16 @@ TEST_F(TestCast, FloatingPointToInt) {\n                                                     options);\n }\n \n+TEST_F(TestCast, IntToFloatingPoint) {\n+  auto options = CastOptions::Safe();\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n \n Review comment:\n   is_valid not used. Since you added a null check in the functor, I presume you meant to use this for a test? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-25T22:37:29.770+0000",
                    "updated": "2018-11-25T22:37:29.770+0000",
                    "started": "2018-11-25T22:37:29.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169255",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236281065\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -290,7 +392,8 @@ struct CastFunctor<O, I, typename std::enable_if<is_float_truncate<O, I>::value>\n                                                input.length);\n         for (int64_t i = 0; i < input.length; ++i) {\n           auto out_value = static_cast<out_type>(*in_data);\n-          if (ARROW_PREDICT_FALSE(static_cast<in_type>(out_value) != *in_data)) {\n+          if (ARROW_PREDICT_FALSE(is_valid_reader.IsSet() &&\n \n Review comment:\n   I don't follow. The way I read it, it borks on \"unset\" invalid data.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:44:15.728+0000",
                    "updated": "2018-11-26T14:44:15.728+0000",
                    "started": "2018-11-26T14:44:15.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169346",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236282017\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -161,23 +163,60 @@ struct CastFunctor<T, BooleanType, enable_if_number<T>> {\n   }\n };\n \n+// Number to Boolean\n+template <typename I>\n+struct CastFunctor<BooleanType, I,\n+                   typename std::enable_if<std::is_base_of<Number, I>::value &&\n+                                           !std::is_same<BooleanType, I>::value>::type> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    auto in_data = input.GetValues<typename I::c_type>(1);\n+    const auto generate = [&in_data]() -> bool { return *in_data++ != 0; };\n+    internal::GenerateBitsUnrolled(output->buffers[1]->mutable_data(), output->offset,\n+                                   input.length, generate);\n+  }\n+};\n+\n // ----------------------------------------------------------------------\n // Integers and Floating Point\n \n+// Conversions pairs (<O, I>) are partitioned in 4 type traits:\n+// - is_number_downcast\n+// - is_integral_signed_to_unsigned\n+// - is_integral_unsigned_to_signed\n+// - is_float_truncate\n+//\n+// Each class has a different way of validation if the conversion is safe\n+// (either with bounded intervals or with explicit C casts)\n+\n+template <typename O, typename I, typename Enable = void>\n+struct is_number_downcast {\n+  static constexpr bool value = false;\n+};\n+\n template <typename O, typename I>\n-struct is_numeric_cast {\n+struct is_number_downcast<\n+    O, I,\n+    typename std::enable_if<std::is_base_of<Number, O>::value &&\n+                            std::is_base_of<Number, I>::value>::type> {\n+  using O_T = typename O::c_type;\n+  using I_T = typename I::c_type;\n+\n   static constexpr bool value =\n-      (std::is_base_of<Number, O>::value && std::is_base_of<Number, I>::value) &&\n-      (!std::is_same<O, I>::value);\n+      ((!std::is_same<O, I>::value) &&\n+       ((std::is_signed<O_T>::value == std::is_signed<I_T>::value) &&\n+        (std::is_floating_point<O_T>::value == std::is_floating_point<I_T>::value)) &&\n \n Review comment:\n   It's true when both Input and Output are of the same floating point (i.e. both floating or both integrals), note the use of `==` instead of `&&`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:46:39.895+0000",
                    "updated": "2018-11-26T14:46:39.895+0000",
                    "started": "2018-11-26T14:46:39.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169347",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236282987\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -290,7 +392,8 @@ struct CastFunctor<O, I, typename std::enable_if<is_float_truncate<O, I>::value>\n                                                input.length);\n         for (int64_t i = 0; i < input.length; ++i) {\n           auto out_value = static_cast<out_type>(*in_data);\n-          if (ARROW_PREDICT_FALSE(static_cast<in_type>(out_value) != *in_data)) {\n+          if (ARROW_PREDICT_FALSE(is_valid_reader.IsSet() &&\n \n Review comment:\n   Right, but in the test case in this patch, `IsSet()` is always true. If you removed this change, then the test case would still pass. So I'm proposing to add a test case where there's a bad value in a null slot\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:48:54.012+0000",
                    "updated": "2018-11-26T14:48:54.012+0000",
                    "started": "2018-11-26T14:48:54.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169348",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236283878\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -161,23 +163,60 @@ struct CastFunctor<T, BooleanType, enable_if_number<T>> {\n   }\n };\n \n+// Number to Boolean\n+template <typename I>\n+struct CastFunctor<BooleanType, I,\n+                   typename std::enable_if<std::is_base_of<Number, I>::value &&\n+                                           !std::is_same<BooleanType, I>::value>::type> {\n+  void operator()(FunctionContext* ctx, const CastOptions& options,\n+                  const ArrayData& input, ArrayData* output) {\n+    auto in_data = input.GetValues<typename I::c_type>(1);\n+    const auto generate = [&in_data]() -> bool { return *in_data++ != 0; };\n+    internal::GenerateBitsUnrolled(output->buffers[1]->mutable_data(), output->offset,\n+                                   input.length, generate);\n+  }\n+};\n+\n // ----------------------------------------------------------------------\n // Integers and Floating Point\n \n+// Conversions pairs (<O, I>) are partitioned in 4 type traits:\n+// - is_number_downcast\n+// - is_integral_signed_to_unsigned\n+// - is_integral_unsigned_to_signed\n+// - is_float_truncate\n+//\n+// Each class has a different way of validation if the conversion is safe\n+// (either with bounded intervals or with explicit C casts)\n+\n+template <typename O, typename I, typename Enable = void>\n+struct is_number_downcast {\n+  static constexpr bool value = false;\n+};\n+\n template <typename O, typename I>\n-struct is_numeric_cast {\n+struct is_number_downcast<\n+    O, I,\n+    typename std::enable_if<std::is_base_of<Number, O>::value &&\n+                            std::is_base_of<Number, I>::value>::type> {\n+  using O_T = typename O::c_type;\n+  using I_T = typename I::c_type;\n+\n   static constexpr bool value =\n-      (std::is_base_of<Number, O>::value && std::is_base_of<Number, I>::value) &&\n-      (!std::is_same<O, I>::value);\n+      ((!std::is_same<O, I>::value) &&\n+       ((std::is_signed<O_T>::value == std::is_signed<I_T>::value) &&\n+        (std::is_floating_point<O_T>::value == std::is_floating_point<I_T>::value)) &&\n \n Review comment:\n   Got it, reading again with fresh eyes looks fine =) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T14:51:10.250+0000",
                    "updated": "2018-11-26T14:51:10.250+0000",
                    "started": "2018-11-26T14:51:10.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169349",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236302054\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-test.cc\n ##########\n @@ -236,6 +236,65 @@ TEST_F(TestCast, ToIntDowncastSafe) {\n   // underflow\n   vector<int32_t> v6 = {0, 1000, 2000, -70000, 0};\n   CheckFails<Int32Type>(int32(), v6, is_valid, int16(), options);\n+\n+  vector<int32_t> v7 = {0, 1000, 2000, -70000, 0};\n+  CheckFails<Int32Type>(int32(), v7, is_valid, uint8(), options);\n+}\n+\n+TEST_F(TestCast, IntegerSignedToUnsigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, false, true, true, true};\n+\n+  vector<int32_t> v1 = {INT32_MIN, 100, -1, 0, INT32_MAX};\n+  // Same width\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint32(), options);\n+  // Wider\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint64(), options);\n+  // Narrower\n+  CheckFails<Int32Type>(int32(), v1, is_valid, uint16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<uint32_t> v2 = {(uint32_t)INT32_MIN, 100, (uint32_t)-1, 0, (uint32_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt32Type, uint32_t>(int32(), v1, is_valid, uint32(), v2,\n+                                                      options);\n+\n+  vector<uint64_t> v3 = {(uint64_t)INT32_MIN, 100, (uint64_t)-1, 0, (uint64_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt64Type, uint64_t>(int32(), v1, is_valid, uint64(), v3,\n+                                                      options);\n+\n+  vector<uint16_t> v4 = {(uint16_t)INT32_MIN, 100, (uint16_t)-1, 0, (uint16_t)INT32_MAX};\n+  CheckCase<Int32Type, int32_t, UInt16Type, uint16_t>(int32(), v1, is_valid, uint16(), v4,\n+                                                      options);\n+}\n+\n+TEST_F(TestCast, IntegerUnsignedToSigned) {\n+  CastOptions options;\n+  options.allow_int_overflow = false;\n+\n+  vector<bool> is_valid = {true, true};\n+\n+  vector<uint32_t> v1 = {0, UINT32_MAX};\n+  // Same width\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int32(), options);\n+  // Narrower\n+  CheckFails<UInt32Type>(uint32(), v1, is_valid, int16(), options);\n+\n+  options.allow_int_overflow = true;\n+\n+  vector<int32_t> v2 = {0, static_cast<int32_t>(UINT32_MAX)};\n+  CheckCase<UInt32Type, uint32_t, Int32Type, int32_t>(uint32(), v1, is_valid, int32(), v2,\n+                                                      options);\n+\n+  vector<int64_t> v3 = {0, static_cast<int64_t>(UINT32_MAX)};\n+  CheckCase<UInt32Type, uint32_t, Int64Type, int64_t>(uint32(), v1, is_valid, int64(), v3,\n+                                                      options);\n+\n+  vector<int16_t> v4 = {0, static_cast<int16_t>(UINT16_MAX)};\n \n Review comment:\n   I'll remove this in the next iteration since I create a `UnsafeVectorCast` helper function, but in this specific case I wanted UINT16_MAX explicitly due to the cast of 0xFFFFFFFF would come 0xFFFF which is not INT16MAX.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T15:33:54.612+0000",
                    "updated": "2018-11-26T15:33:54.612+0000",
                    "started": "2018-11-26T15:33:54.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169367",
                    "issueId": "13198362"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/worklog/169380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #3022: ARROW-3790: [C++] Fix erroneous safe casting\nURL: https://github.com/apache/arrow/pull/3022#discussion_r236326169\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -290,7 +392,8 @@ struct CastFunctor<O, I, typename std::enable_if<is_float_truncate<O, I>::value>\n                                                input.length);\n         for (int64_t i = 0; i < input.length; ++i) {\n           auto out_value = static_cast<out_type>(*in_data);\n-          if (ARROW_PREDICT_FALSE(static_cast<in_type>(out_value) != *in_data)) {\n+          if (ARROW_PREDICT_FALSE(is_valid_reader.IsSet() &&\n \n Review comment:\n   Ah the test case, yes I'll update this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T16:27:11.365+0000",
                    "updated": "2018-11-26T16:27:11.365+0000",
                    "started": "2018-11-26T16:27:11.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169380",
                    "issueId": "13198362"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2dfec4f1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@263a1fd8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75599ec4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3eb9b68[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a82d024[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@cdaffd8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@354cef39[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6aa30223[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cceca3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5d33e79d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f54fe25[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d1457f6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 27 22:16:32 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-27T22:16:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3790/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-11-14T15:17:15.000+0000",
        "updated": "2018-11-27T22:21:34.000+0000",
        "timeoriginalestimate": null,
        "description": "In https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/cast.cc#L239, an {{int32_t}} is overflows in \r\n\r\n{code}\r\nconstexpr in_type kMax = static_cast<in_type>(std::numeric_limits<out_type>::max());\r\n{code}\r\n\r\nresulting in safety checks not being correctly performed\r\n\r\n{code}\r\nIn [2]: arr = pa.array([-1, -2, -3], type='int32')\r\n\r\nIn [3]: arr.cast('uint32')\r\nOut[3]: \r\n<pyarrow.lib.UInt32Array object at 0x7f4889457b88>\r\n[\r\n  4294967295,\r\n  4294967294,\r\n  4294967293\r\n]\r\n{code}\r\n\r\nThis would be expected to error when {{safe=True}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Signed to unsigned integer cast yields incorrect results when type sizes are the same",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/comment/16696236",
                    "id": "16696236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm currently working on this, the problem turned out to be a bigger than expected. While the pointed line is indeed wrong, the actual problem lies somewhere else. [~wesmckinn] can you assign this task to me?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-22T20:02:13.753+0000",
                    "updated": "2018-11-22T20:02:13.753+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/comment/16697458",
                    "id": "16697458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Just added you as a contributor, so you can assign yourself issues now",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-23T19:30:04.126+0000",
                    "updated": "2018-11-23T19:30:04.126+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198362/comment/16701118",
                    "id": "16701118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3022\n[https://github.com/apache/arrow/pull/3022]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-27T22:16:32.058+0000",
                    "updated": "2018-11-27T22:16:32.058+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|s00hk8:",
        "customfield_12314139": null
    }
}