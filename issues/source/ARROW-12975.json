{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13382193",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193",
    "key": "ARROW-12975",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12616796",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616796",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13341287",
                    "key": "ARROW-10640",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13341287",
                    "fields": {
                        "summary": "[C++] An \"if_else\" kernel to combine two arrays based on a mask",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
            "name": "niranda",
            "key": "niranda",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Niranda Perera",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
            "name": "niranda",
            "key": "niranda",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Niranda Perera",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
            "name": "niranda",
            "key": "niranda",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Niranda Perera",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12975/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/worklog/608079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera opened a new pull request #10472:\nURL: https://github.com/apache/arrow/pull/10472\n\n\n   Allowing if-else operation for following use cases\r\n   ```python\r\n   >>> pc.if_else([True], [1], [3.5])\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T19:34:36.396+0000",
                    "updated": "2021-06-07T19:34:36.396+0000",
                    "started": "2021-06-07T19:34:36.396+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608079",
                    "issueId": "13382193"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/worklog/608080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10472:\nURL: https://github.com/apache/arrow/pull/10472#issuecomment-856202122\n\n\n   https://issues.apache.org/jira/browse/ARROW-12975\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T19:35:00.935+0000",
                    "updated": "2021-06-07T19:35:00.935+0000",
                    "started": "2021-06-07T19:35:00.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608080",
                    "issueId": "13382193"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/worklog/608087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10472:\nURL: https://github.com/apache/arrow/pull/10472#discussion_r646894778\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -543,7 +543,37 @@ struct ResolveIfElseExec {\n   }\n };\n \n-void AddPrimitiveIfElseKernels(const std::shared_ptr<ScalarFunction>& scalar_function,\n+struct IfElseFunction : ScalarFunction {\n+  using ScalarFunction::ScalarFunction;\n+\n+  Result<const Kernel*> DispatchBest(std::vector<ValueDescr>* values) const override {\n+    RETURN_NOT_OK(CheckArity(*values));\n+\n+    // if-else 0'th descriptor is bool\n+    std::vector<ValueDescr> left_right{(*values)[1], (*values)[2]};\n+\n+    using arrow::compute::detail::DispatchExactImpl;\n+    if (auto kernel = DispatchExactImpl(this, *values)) return kernel;\n+\n+    //    internal::EnsureDictionaryDecoded(values);\n+\n+    if (values->size() == 3) {\n+      internal::ReplaceNullWithOtherType(&left_right);\n+\n+      if (auto type = internal::CommonNumeric(left_right)) {\n+        internal::ReplaceTypes(type, &left_right);\n+      }\n+    }\n+\n+    if (auto kernel =\n+            DispatchExactImpl(this, {(*values)[0], left_right[0], left_right[1]})) {\n+      return kernel;\n+    }\n\nReview comment:\n       ```suggestion\r\n       using arrow::compute::detail::DispatchExactImpl;\r\n       if (auto kernel = DispatchExactImpl(this, *values)) return kernel;\r\n   \r\n       internal::EnsureDictionaryDecoded(values);\r\n   \r\n       // condition argument must be bool\r\n       auto cond_shape = values->at(0).shape();\r\n       values->pop_front();\r\n   \r\n       internal::ReplaceNullWithOtherType(values);\r\n       if (auto type = internal::CommonNumeric(*values)) {\r\n         internal::ReplaceTypes(type, values);\r\n       }\r\n       values->push_front(ValueDescr{boolean(), cond_shape});\r\n   \r\n       if (auto kernel = DispatchExactImpl(this, *values)) {\r\n         return kernel;\r\n       }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T19:52:18.799+0000",
                    "updated": "2021-06-07T19:52:18.799+0000",
                    "started": "2021-06-07T19:52:18.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608087",
                    "issueId": "13382193"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/worklog/608106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10472:\nURL: https://github.com/apache/arrow/pull/10472#discussion_r646926844\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else_test.cc\n##########\n@@ -271,5 +271,40 @@ TEST_F(TestIfElseKernel, IfElseNull) {\n                     ArrayFromJSON(null(), \"[null, null, null, null]\"));\n }\n \n+TEST_F(TestIfElseKernel, IfElseMultiType) {\n+  CheckWithDifferentShapes(ArrayFromJSON(boolean(), \"[true, true, true, false]\"),\n+                           ArrayFromJSON(int32(), \"[1, 2, 3, 4]\"),\n+                           ArrayFromJSON(float32(), \"[5, 6, 7, 8]\"),\n+                           ArrayFromJSON(float32(), \"[1, 2, 3, 8]\"));\n+}\n+\n+TEST_F(TestIfElseKernel, IfElseDispatchBest) {\n+  std::string name = \"if_else\";\n+  CheckDispatchBest(name, {boolean(), int32(), int32()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), null()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), null(), int32()}, {boolean(), int32(), int32()});\n+\n+  CheckDispatchBest(name, {boolean(), int32(), int8()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), int16()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), int32()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), int64()}, {boolean(), int64(), int64()});\n+\n+  CheckDispatchBest(name, {boolean(), int32(), uint8()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), uint16()}, {boolean(), int32(), int32()});\n+  CheckDispatchBest(name, {boolean(), int32(), uint32()}, {boolean(), int64(), int64()});\n+  CheckDispatchBest(name, {boolean(), int32(), uint64()}, {boolean(), int64(), int64()});\n+\n+  CheckDispatchBest(name, {boolean(), uint8(), uint8()}, {boolean(), uint8(), uint8()});\n+  CheckDispatchBest(name, {boolean(), uint8(), uint16()},\n+                    {boolean(), uint16(), uint16()});\n+\n\nReview comment:\n       It'd be nice to support conditions being `null` in alignment with the pattern that \"anything may be cast to from null\"\r\n   ```suggestion\r\n     CheckDispatchBest(name, {null(), uint8(), int8()}, {boolean(), int8(), int8()});\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -543,7 +543,34 @@ struct ResolveIfElseExec {\n   }\n };\n \n-void AddPrimitiveIfElseKernels(const std::shared_ptr<ScalarFunction>& scalar_function,\n+struct IfElseFunction : ScalarFunction {\n+  using ScalarFunction::ScalarFunction;\n+\n+  Result<const Kernel*> DispatchBest(std::vector<ValueDescr>* values) const override {\n+    RETURN_NOT_OK(CheckArity(*values));\n+\n+    // if-else 0'th descriptor is bool, so skip it\n+    std::vector<ValueDescr> values_copy(values->begin() + 1, values->end());\n+\n+    using arrow::compute::detail::DispatchExactImpl;\n+    if (auto kernel = DispatchExactImpl(this, *values)) return kernel;\n+\n+    internal::EnsureDictionaryDecoded(&values_copy);\n+    internal::ReplaceNullWithOtherType(&values_copy);\n+\n+    if (auto type = internal::CommonNumeric(values_copy)) {\n+      internal::ReplaceTypes(type, &values_copy);\n+    }\n+\n+    std::copy(values_copy.begin(), values_copy.end(), values->begin() + 1);\n\nReview comment:\n       ```suggestion\r\n       std::move(values_copy.begin(), values_copy.end(), values->begin() + 1);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_if_else.cc\n##########\n@@ -543,7 +543,34 @@ struct ResolveIfElseExec {\n   }\n };\n \n-void AddPrimitiveIfElseKernels(const std::shared_ptr<ScalarFunction>& scalar_function,\n+struct IfElseFunction : ScalarFunction {\n+  using ScalarFunction::ScalarFunction;\n+\n+  Result<const Kernel*> DispatchBest(std::vector<ValueDescr>* values) const override {\n+    RETURN_NOT_OK(CheckArity(*values));\n+\n+    // if-else 0'th descriptor is bool, so skip it\n+    std::vector<ValueDescr> values_copy(values->begin() + 1, values->end());\n+\n+    using arrow::compute::detail::DispatchExactImpl;\n+    if (auto kernel = DispatchExactImpl(this, *values)) return kernel;\n+\n\nReview comment:\n       If `values` is an exact match for a kernel, there's no need to construct `values_copy`\r\n   ```suggestion\r\n       using arrow::compute::detail::DispatchExactImpl;\r\n       if (auto kernel = DispatchExactImpl(this, *values)) return kernel;\r\n   \r\n       // if-else 0'th descriptor is bool, so skip it\r\n       std::vector<ValueDescr> values_copy(values->begin() + 1, values->end());\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T20:44:45.167+0000",
                    "updated": "2021-06-07T20:44:45.167+0000",
                    "started": "2021-06-07T20:44:45.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608106",
                    "issueId": "13382193"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/worklog/609324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #10472:\nURL: https://github.com/apache/arrow/pull/10472\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-09T18:49:51.730+0000",
                    "updated": "2021-06-09T18:49:51.730+0000",
                    "started": "2021-06-09T18:49:51.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "609324",
                    "issueId": "13382193"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e0702a7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67b7ae86[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40adf212[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1a34a71f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@493d38ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@11cec250[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3edc8f19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@16fcb82[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21356112[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@460eeb26[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1cf000b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@63bceb7e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 09 18:49:50 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-09T18:49:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12975/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-06-04T17:00:37.000+0000",
        "updated": "2021-06-09T18:49:52.000+0000",
        "timeoriginalestimate": null,
        "description": "when using type multiple types for `left` and `right` arrays, `if_else` kernel fails. IMO check casting and dispatching logic for the if_else kernel. \r\n\r\n{code:java}\r\n>>> pc.if_else([True], [1], [3.5])\r\nTraceback (most recent call last):\r\n File \"<stdin>\", line 1, in <module>\r\n File \"<string>\", line 3, in if_else\r\n File \"pyarrow/_compute.pyx\", line 335, in pyarrow._compute.Function.call\r\n result = GetResultValue(self.base_func.Execute(c_args,\r\n File \"pyarrow/error.pxi\", line 141, in pyarrow.lib.pyarrow_internal_check_status\r\n return check_status(status)\r\n File \"pyarrow/error.pxi\", line 118, in pyarrow.lib.check_status\r\n raise ArrowNotImplementedError(message)\r\npyarrow.lib.ArrowNotImplementedError: Function if_else has no kernel matching input types (array[bool], array[int64], array[double])\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python] if_else kernel doesn't support upcasting ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13382193/comment/17360283",
                    "id": "17360283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10472\n[https://github.com/apache/arrow/pull/10472]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-06-09T18:49:50.809+0000",
                    "updated": "2021-06-09T18:49:50.809+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ro80:",
        "customfield_12314139": null
    }
}