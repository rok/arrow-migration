{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13126209",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209",
    "key": "ARROW-1940",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dimaryaz",
            "name": "dimaryaz",
            "key": "dimaryaz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dima Ryazanov",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dimaryaz",
            "name": "dimaryaz",
            "key": "dimaryaz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dima Ryazanov",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1940/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@a7d58ed[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79c014fb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3590820a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4c0e2f8f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50d2f0c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@d104a1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31e05663[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@c2f6587[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60b65e41[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@68cabafa[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b2aaace[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2c5eef71[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 09 04:11:57 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-09T04:11:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1940/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-12-20T08:21:29.000+0000",
        "updated": "2018-03-09T04:11:57.000+0000",
        "timeoriginalestimate": null,
        "description": "We have a unit test that verifies that loading a dataframe from a .parq file and saving it back with no changes produces the same result as the original file. It started failing with pyarrow 0.8.0.\r\n\r\nAfter digging into it, I discovered that after the first conversion from pd.DataFrame to pa.Table, the table contains the following metadata (among other things):\r\n\r\n{code}\r\n\"column_indexes\": [{\"metadata\": null, \"field_name\": null, \"name\": null, \"numpy_type\": \"object\", \"pandas_type\": \"bytes\"}]\r\n{code}\r\n\r\nHowever, after converting it to pd.DataFrame and back into a pa.Table for the second time, the metadata gets an encoding field:\r\n\r\n{code}\r\n\"column_indexes\": [{\"metadata\": {\"encoding\": \"UTF-8\"}, \"field_name\": null, \"name\": null, \"numpy_type\": \"object\", \"pandas_type\": \"unicode\"}]\r\n{code}\r\n\r\nSee the attached file for a test case.\r\n\r\nSo specifically, it appears that dataframe->table->dataframe->table conversion produces a different result from just dataframe->table - which I think is unexpected.\r\n",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12902985",
                "id": "12902985",
                "filename": "fail.py",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=dimaryaz",
                    "name": "dimaryaz",
                    "key": "dimaryaz",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "Dima Ryazanov",
                    "active": true,
                    "timeZone": "America/Los_Angeles"
                },
                "created": "2017-12-20T08:09:12.568+0000",
                "size": 502,
                "mimeType": "text/x-python",
                "content": "https://issues.apache.org/jira/secure/attachment/12902985/fail.py"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Extra metadata gets added after multiple conversions between pd.DataFrame and pa.Table",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16298082",
                    "id": "16298082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dimaryaz",
                        "name": "dimaryaz",
                        "key": "dimaryaz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dima Ryazanov",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "(The attached test case only fails in Python2, though our unit test fails in both 2 and 3. I can come up with a Python3 test case, too, if that helps.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dimaryaz",
                        "name": "dimaryaz",
                        "key": "dimaryaz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dima Ryazanov",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-12-20T08:36:56.757+0000",
                    "updated": "2017-12-20T08:36:56.757+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16300696",
                    "id": "16300696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Marked for 0.9.0 -- we can look into it. I will say that where bytes -> unicode promotions are occurring it may be challenging to preserve a perfect round trip on Python 2 in all cases. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-21T22:56:52.176+0000",
                    "updated": "2017-12-21T22:56:52.176+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16382819",
                    "id": "16382819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Taking a look at this now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
                        "name": "cpcloud",
                        "key": "cpcloud",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
                        },
                        "displayName": "Phillip Cloud",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-01T23:02:26.741+0000",
                    "updated": "2018-03-01T23:02:26.741+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16392375",
                    "id": "16392375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1728: ARROW-1940: [Python] Extra metadata gets added after multiple conversions between pd.DataFrame and pa.Table\nURL: https://github.com/apache/arrow/pull/1728#discussion_r173361703\n \n \n\n ##########\n File path: cpp/src/arrow/python/helpers.cc\n ##########\n @@ -116,7 +116,8 @@ static Status InferDecimalPrecisionAndScale(PyObject* python_decimal, int32_t* p\n   DCHECK_NE(scale, NULLPTR);\n \n   // TODO(phillipc): Make sure we perform PyDecimal_Check(python_decimal) as a DCHECK\n-  OwnedRef as_tuple(PyObject_CallMethod(python_decimal, \"as_tuple\", \"\"));\n+  OwnedRef as_tuple(PyObject_CallMethod(python_decimal, const_cast<char*>(\"as_tuple\"),\n+                                        const_cast<char*>(\"\")));\n \n Review comment:\n   see also the `cpp_PyObject_CallMethod` wrapper for this issue in io.cc\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T04:11:35.640+0000",
                    "updated": "2018-03-09T04:11:35.640+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16392376",
                    "id": "16392376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1728\n[https://github.com/apache/arrow/pull/1728]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-09T04:11:53.106+0000",
                    "updated": "2018-03-09T04:11:53.106+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13126209/comment/16392377",
                    "id": "16392377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1728: ARROW-1940: [Python] Extra metadata gets added after multiple conversions between pd.DataFrame and pa.Table\nURL: https://github.com/apache/arrow/pull/1728\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/helpers.cc b/cpp/src/arrow/python/helpers.cc\nindex 429068dd1..13dcc4661 100644\n--- a/cpp/src/arrow/python/helpers.cc\n+++ b/cpp/src/arrow/python/helpers.cc\n@@ -116,7 +116,8 @@ static Status InferDecimalPrecisionAndScale(PyObject* python_decimal, int32_t* p\n   DCHECK_NE(scale, NULLPTR);\n \n   // TODO(phillipc): Make sure we perform PyDecimal_Check(python_decimal) as a DCHECK\n-  OwnedRef as_tuple(PyObject_CallMethod(python_decimal, \"as_tuple\", \"\"));\n+  OwnedRef as_tuple(PyObject_CallMethod(python_decimal, const_cast<char*>(\"as_tuple\"),\n+                                        const_cast<char*>(\"\")));\n   RETURN_IF_PYERROR();\n   DCHECK(PyTuple_Check(as_tuple.obj()));\n \n@@ -241,7 +242,8 @@ bool PyDecimal_Check(PyObject* obj) {\n \n bool PyDecimal_ISNAN(PyObject* obj) {\n   DCHECK(PyDecimal_Check(obj)) << \"obj is not an instance of decimal.Decimal\";\n-  OwnedRef is_nan(PyObject_CallMethod(obj, \"is_nan\", \"\"));\n+  OwnedRef is_nan(\n+      PyObject_CallMethod(obj, const_cast<char*>(\"is_nan\"), const_cast<char*>(\"\")));\n   return PyObject_IsTrue(is_nan.obj()) == 1;\n }\n \ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 0bc47fc0d..97ea51d7e 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -18,6 +18,7 @@\n import ast\n import collections\n import json\n+import operator\n import re\n \n import pandas.core.internals as _int\n@@ -99,8 +100,8 @@ def get_logical_type(arrow_type):\n     np.float32: 'float32',\n     np.float64: 'float64',\n     'datetime64[D]': 'date',\n-    np.str_: 'unicode',\n-    np.bytes_: 'bytes',\n+    np.unicode_: 'string' if not PY2 else 'unicode',\n+    np.bytes_: 'bytes' if not PY2 else 'string',\n }\n \n \n@@ -615,6 +616,22 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n \n \n def _backwards_compatible_index_name(raw_name, logical_name):\n+    \"\"\"Compute the name of an index column that is compatible with older\n+    versions of :mod:`pyarrow`.\n+\n+    Parameters\n+    ----------\n+    raw_name : str\n+    logical_name : str\n+\n+    Returns\n+    -------\n+    result : str\n+\n+    Notes\n+    -----\n+    * Part of :func:`~pyarrow.pandas_compat.table_to_blockmanager`\n+    \"\"\"\n     # Part of table_to_blockmanager\n     pattern = r'^__index_level_\\d+__$'\n     if raw_name == logical_name and re.match(pattern, raw_name) is not None:\n@@ -623,8 +640,57 @@ def _backwards_compatible_index_name(raw_name, logical_name):\n         return logical_name\n \n \n+_pandas_logical_type_map = {\n+    'date': 'datetime64[D]',\n+    'unicode': np.unicode_,\n+    'bytes': np.bytes_,\n+    'string': np.str_,\n+    'empty': np.object_,\n+    'mixed': np.object_,\n+}\n+\n+\n+def _pandas_type_to_numpy_type(pandas_type):\n+    \"\"\"Get the numpy dtype that corresponds to a pandas type.\n+\n+    Parameters\n+    ----------\n+    pandas_type : str\n+        The result of a call to pandas.lib.infer_dtype.\n+\n+    Returns\n+    -------\n+    dtype : np.dtype\n+        The dtype that corresponds to `pandas_type`.\n+    \"\"\"\n+    try:\n+        return _pandas_logical_type_map[pandas_type]\n+    except KeyError:\n+        return np.dtype(pandas_type)\n+\n+\n def _reconstruct_columns_from_metadata(columns, column_indexes):\n-    # Part of table_to_blockmanager\n+    \"\"\"Construct a pandas MultiIndex from `columns` and column index metadata\n+    in `column_indexes`.\n+\n+    Parameters\n+    ----------\n+    columns : List[pd.Index]\n+        The columns coming from a pyarrow.Table\n+    column_indexes : List[Dict[str, str]]\n+        The column index metadata deserialized from the JSON schema metadata\n+        in a :class:`~pyarrow.Table`.\n+\n+    Returns\n+    -------\n+    result : MultiIndex\n+        The index reconstructed using `column_indexes` metadata with levels of\n+        the correct type.\n+\n+    Notes\n+    -----\n+    * Part of :func:`~pyarrow.pandas_compat.table_to_blockmanager`\n+    \"\"\"\n \n     # Get levels and labels, and provide sane defaults if the index has a\n     # single level to avoid if/else spaghetti.\n@@ -635,21 +701,28 @@ def _reconstruct_columns_from_metadata(columns, column_indexes):\n \n     # Convert each level to the dtype provided in the metadata\n     levels_dtypes = [\n-        (level, col_index.get('numpy_type', level.dtype))\n+        (level, col_index.get('pandas_type', str(level.dtype)))\n         for level, col_index in zip_longest(\n             levels, column_indexes, fillvalue={}\n         )\n     ]\n-    new_levels = [\n-        _level if _level.dtype == _dtype else _level.astype(_dtype)\n-        for _level, _dtype in levels_dtypes\n-    ]\n \n-    return pd.MultiIndex(\n-        levels=new_levels,\n-        labels=labels,\n-        names=columns.names\n-    )\n+    new_levels = []\n+    encoder = operator.methodcaller('encode', 'UTF-8')\n+    for level, pandas_dtype in levels_dtypes:\n+        dtype = _pandas_type_to_numpy_type(pandas_dtype)\n+\n+        # Since our metadata is UTF-8 encoded, Python turns things that were\n+        # bytes into unicode strings when json.loads-ing them. We need to\n+        # convert them back to bytes to preserve metadata.\n+        if dtype == np.bytes_:\n+            level = level.map(encoder)\n+        elif level.dtype != dtype:\n+            level = level.astype(dtype)\n+\n+        new_levels.append(level)\n+\n+    return pd.MultiIndex(levels=new_levels, labels=labels, names=columns.names)\n \n \n def _table_to_blocks(options, block_table, nthreads, memory_pool, categories):\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 5abc026bf..333199ab2 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -305,7 +305,8 @@ def test_mixed_unicode_column_names(self):\n \n     def test_binary_column_name(self):\n         column_data = [u'\u3044']\n-        data = {u'\u3042'.encode('utf8'): column_data}\n+        key = u'\u3042'.encode('utf8')\n+        data = {key: column_data}\n         df = pd.DataFrame(data)\n \n         # we can't use _check_pandas_roundtrip here because our metdata\n@@ -314,7 +315,7 @@ def test_binary_column_name(self):\n         df2 = t.to_pandas()\n         assert df.values[0] == df2.values[0]\n         assert df.index.values[0] == df2.index.values[0]\n-        assert df.columns[0] == df2.columns[0].encode('utf8')\n+        assert df.columns[0] == key\n \n     def test_multiindex_duplicate_values(self):\n         num_rows = 3\n@@ -1728,6 +1729,16 @@ def _fully_loaded_dataframe_example():\n     return pd.DataFrame(data, index=index)\n \n \n+@pytest.mark.parametrize('columns', ([b'foo'], ['foo']))\n+def test_roundtrip_with_bytes_unicode(columns):\n+    df = pd.DataFrame(columns=columns)\n+    table1 = pa.Table.from_pandas(df)\n+    table2 = pa.Table.from_pandas(table1.to_pandas())\n+    assert table1.equals(table2)\n+    assert table1.schema.equals(table2.schema)\n+    assert table1.schema.metadata == table2.schema.metadata\n+\n+\n def _check_serialize_components_roundtrip(df):\n     ctx = pa.default_serialization_context()\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T04:11:57.754+0000",
                    "updated": "2018-03-09T04:11:57.754+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i3o49r:",
        "customfield_12314139": null
    }
}