{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13477475",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475",
    "key": "ARROW-17462",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12650899",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12650899",
                "type": {
                    "id": "12310660",
                    "name": "Completes",
                    "inward": "is fixed by",
                    "outward": "fixes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310660"
                },
                "outwardIssue": {
                    "id": "13495048",
                    "key": "ARROW-18244",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13495048",
                    "fields": {
                        "summary": "[R] `mutate(x2=ifelse(x=='',NA,x))` Error: Function 'if_else' has no kernel matching input types ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12650898",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12650898",
                "type": {
                    "id": "12310660",
                    "name": "Completes",
                    "inward": "is fixed by",
                    "outward": "fixes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310660"
                },
                "outwardIssue": {
                    "id": "13400086",
                    "key": "ARROW-13938",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13400086",
                    "fields": {
                        "summary": "[C++] Date and datetime types should autocast from strings",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17462/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson opened a new pull request, #13985:\nURL: https://github.com/apache/arrow/pull/13985\n\n   Logic is encapsulated in `wrap_scalars()` in expression.R. Most test updating (that is not linting) is changing some printed output types because `int * 2` now stays `int32`, and the printed ExecPlans don't have as many `cast`s in them. The test added in `test-dplyr-query.R` is the explicit test of the feature, and there are a few TODOs left there to explore. \n\n\n",
                    "created": "2022-08-27T21:51:09.071+0000",
                    "updated": "2022-08-27T21:51:09.071+0000",
                    "started": "2022-08-27T21:51:09.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804179",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1229274877\n\n   https://issues.apache.org/jira/browse/ARROW-17462\n\n\n",
                    "created": "2022-08-27T21:51:32.472+0000",
                    "updated": "2022-08-27T21:51:32.472+0000",
                    "started": "2022-08-27T21:51:32.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804180",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957286453\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n\nReview Comment:\n   I'm not sure I like the idea of *another* place to remember to look to figure out the behaviour of a binding. For bindings that require non-standard logic I think it's better to use something like `register_binding(\"%/%\", function(x, y) { ... })`. With @dragosmg's user-defined binding PR it will be easier to re-use bindings within bindings (which is sort of what we use `build_expr()` for).\n\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n+        },\n+        silent = TRUE\n+      )\n+    } else {\n+      # TODO: check if all expression types are the same, and if so, cast to that\n+      # Functions that exercise code that go through here (in our tests):\n+      # * case_when\n+      # * pmin/pmax\n\nReview Comment:\n   I wonder if this would benefit from its own function (maybe `expression_cast_common()` to mirror `vctrs::vec_cast_common()`).\n\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n\nReview Comment:\n   Can/should this be built in to `Expression$cast()`?\n\n\n\n",
                    "created": "2022-08-29T12:59:05.882+0000",
                    "updated": "2022-08-29T12:59:05.882+0000",
                    "started": "2022-08-29T12:59:05.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804346",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957416872\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n\nReview Comment:\n   `x` is not an Expression at this point, it is a Scalar\n\n\n\n",
                    "created": "2022-08-29T14:30:57.641+0000",
                    "updated": "2022-08-29T14:30:57.641+0000",
                    "started": "2022-08-29T14:30:57.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804426",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957417840\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n+        },\n+        silent = TRUE\n+      )\n+    } else {\n+      # TODO: check if all expression types are the same, and if so, cast to that\n+      # Functions that exercise code that go through here (in our tests):\n+      # * case_when\n+      # * pmin/pmax\n\nReview Comment:\n   Possibly, though I'm not trying to cast Expressions here, only non-Expression objects (Scalars).\n\n\n\n",
                    "created": "2022-08-29T14:31:46.395+0000",
                    "updated": "2022-08-29T14:31:46.395+0000",
                    "started": "2022-08-29T14:31:46.395+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804428",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957421070\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n\nReview Comment:\n   Yeah I'll look into that. I considered that for some other cases too but wasn't sure it made sense, and was also unsure of the tradeoffs of handling this at a higher layer. \n\n\n\n",
                    "created": "2022-08-29T14:33:56.620+0000",
                    "updated": "2022-08-29T14:33:56.620+0000",
                    "started": "2022-08-29T14:33:56.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804430",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paleolimbot commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957460067\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n+        },\n+        silent = TRUE\n+      )\n+    } else {\n+      # TODO: check if all expression types are the same, and if so, cast to that\n+      # Functions that exercise code that go through here (in our tests):\n+      # * case_when\n+      # * pmin/pmax\n\nReview Comment:\n   That's a good point...I also didn't consider that a binding looking to do this kind of thing would probably want to cast both.\n\n\n\n",
                    "created": "2022-08-29T15:05:39.864+0000",
                    "updated": "2022-08-29T15:05:39.864+0000",
                    "started": "2022-08-29T15:05:39.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804454",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957463176\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n+  # * %/%: we switch behavior based on int vs. dbl in R (see build_expr) so skip\n+  # * binary_repeat, list_element: 2nd arg must be integer, Acero will handle it\n+  if (any(is_expr) && !(arrow_fun %in% c(\"binary_repeat\", \"list_element\")) && !(FUN %in% \"%/%\")) {\n+    if (sum(is_expr) == 1) {\n+      # Simple case: just one expr so take its type\n+      try(\n+        {\n+          # If the Expression has no Schema embedded, we cannot resolve its\n+          # type here, so this will error, hence the try() wrapping it\n+          to_type <- args[[which(is_expr)]]$type()\n+          # Try casting to this type, but if the cast fails,\n+          # we'll just keep the original\n+          args[!is_expr] <- lapply(args[!is_expr], function(x) x$cast(to_type))\n+        },\n+        silent = TRUE\n+      )\n+    } else {\n+      # TODO: check if all expression types are the same, and if so, cast to that\n+      # Functions that exercise code that go through here (in our tests):\n+      # * case_when\n+      # * pmin/pmax\n\nReview Comment:\n   Any more complex casting calculus I will (continue to) leave to Acero to handle. This PR is just about translating R scalar values to the appropriate Arrow type, to the extent possible, in order to avoid casting all of the data instead, which can be expensive.\n\n\n\n",
                    "created": "2022-08-29T15:08:30.176+0000",
                    "updated": "2022-08-29T15:08:30.176+0000",
                    "started": "2022-08-29T15:08:30.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804455",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/804521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r957727487\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n\nReview Comment:\n   The ideal solution for the division ops should consolidate this logic with the nearly identical version in arrow-datum.R. (Well, the actual ideal solution would be ARROW-12755.)\n\n\n\n",
                    "created": "2022-08-29T19:39:27.744+0000",
                    "updated": "2022-08-29T19:39:27.744+0000",
                    "started": "2022-08-29T19:39:27.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804521",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#discussion_r959703483\n\n\n##########\nr/R/expression.R:\n##########\n@@ -260,6 +255,52 @@ build_expr <- function(FUN,\n   expr\n }\n \n+wrap_scalars <- function(args, FUN) {\n+  arrow_fun <- .array_function_map[[FUN]] %||% FUN\n+  if (arrow_fun == \"if_else\") {\n+    # For if_else, the first arg should be a bool Expression, and we don't\n+    # want to consider that when casting the other args to the same type\n+    args[-1] <- wrap_scalars(args[-1], FUN = \"\")\n+    return(args)\n+  }\n+\n+  is_expr <- map_lgl(args, ~ inherits(., \"Expression\"))\n+  if (all(is_expr)) {\n+    # No wrapping is required\n+    return(args)\n+  }\n+\n+  args[!is_expr] <- lapply(args[!is_expr], Scalar$create)\n+\n+  # Some special casing by function\n\nReview Comment:\n   I created ARROW-17581 to refactor and simplify this. I'd rather not do it here because I don't want to muddy this change, and I fear it will be more invasive than it sounds.\n\n\n\n",
                    "created": "2022-08-31T15:05:53.184+0000",
                    "updated": "2022-08-31T15:05:53.184+0000",
                    "started": "2022-08-31T15:05:53.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805268",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1234543378\n\n   @ursabot help\n\n\n",
                    "created": "2022-09-01T16:57:45.331+0000",
                    "updated": "2022-09-01T16:57:45.331+0000",
                    "started": "2022-09-01T16:57:45.331+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805587",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1234543403\n\n   \n   Supported benchmark command examples:\n   \n   `@ursabot benchmark help`\n   \n   To run all benchmarks:\n   `@ursabot please benchmark`\n   \n   To filter benchmarks by language:\n   `@ursabot please benchmark lang=Python`\n   `@ursabot please benchmark lang=C++`\n   `@ursabot please benchmark lang=R`\n   `@ursabot please benchmark lang=Java`\n   `@ursabot please benchmark lang=JavaScript`\n   \n   To filter Python and R benchmarks by name:\n   `@ursabot please benchmark name=file-write`\n   `@ursabot please benchmark name=file-write lang=Python`\n   `@ursabot please benchmark name=file-.*`\n   \n   To filter C++ benchmarks by archery --suite-filter and --benchmark-filter:\n   `@ursabot please benchmark command=cpp-micro --suite-filter=arrow-compute-vector-selection-benchmark --benchmark-filter=TakeStringRandomIndicesWithNulls/262144/2 --iterations=3`\n   \n   For other `command=cpp-micro` options, please see https://github.com/voltrondata-labs/benchmarks/blob/main/benchmarks/cpp_micro_benchmarks.py\n   \n\n\n",
                    "created": "2022-09-01T16:57:46.732+0000",
                    "updated": "2022-09-01T16:57:46.732+0000",
                    "started": "2022-09-01T16:57:46.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805588",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1234543601\n\n   @ursabot please benchmark lang=R\n\n\n",
                    "created": "2022-09-01T16:57:58.799+0000",
                    "updated": "2022-09-01T16:57:58.799+0000",
                    "started": "2022-09-01T16:57:58.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805589",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1234543696\n\n   Benchmark runs are scheduled for baseline = 80bba299612d2a8a92968fd15e81343f0783e600 and contender = ed6fce67f3fdff5247c4087c6996e8862b804c4d. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/700d24e0211f4bc7bd2c8a2a5ad731e5...b7e07f94299d4713b2d4f256b6427cb5/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/b63464f9d7ee48ebb7024c987d71d202...f79bfb32f7f0477e9df8e4abe05b2018/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/987c8925e9924c84af747eebc791c25a...f0c871554fb0457880618f783b9c741e/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/7357ca3c937b488d93a5faf3978e96b5...9574a747ff1a4ad9bde3be7e36d288cf/)\n   Buildkite builds:\n   [Scheduled] [`ed6fce67` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1423)\n   [Scheduled] [`ed6fce67` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1403)\n   [Finished] [`80bba299` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1376)\n   [Failed] [`80bba299` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1392)\n   [Failed] [`80bba299` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1374)\n   [Finished] [`80bba299` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1391)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-09-01T16:58:04.519+0000",
                    "updated": "2022-09-01T16:58:04.519+0000",
                    "started": "2022-09-01T16:58:04.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805590",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1234641469\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/987c8925e9924c84af747eebc791c25a...f0c871554fb0457880618f783b9c741e/)\n   \n\n\n",
                    "created": "2022-09-01T18:33:54.746+0000",
                    "updated": "2022-09-01T18:33:54.746+0000",
                    "started": "2022-09-01T18:33:54.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805613",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1235746964\n\n   Benchmark regressions, at least the worst of them, are due to ARROW-17601. By keeping the computation on Decimal types instead of casting to double, we hit an expression that by our current logic would need to promote to a scale that can't fit in Decimal128, so the evaluation errors somewhere, and because these are evaluating on Arrow Table, it falls back to pulling all the data into an R data.frame and doing the work there--hence the regression.\r\n   \r\n   I'll see what I can do to mitigate/work around this in this PR. Most extreme case would be to not cast scalars to decimal, i.e. restore the status quo, where most queries on decimal data would end up getting coerced to float. But hopefully we can do better than that.\r\n   \r\n   We have very few tests for queries on decimal types, but they're all over the TPC-H data, so that's why we only observed this in the benchmarks. That should probably get rectified too. \n\n\n",
                    "created": "2022-09-02T17:27:39.530+0000",
                    "updated": "2022-09-02T17:27:39.530+0000",
                    "started": "2022-09-02T17:27:39.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805824",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1236170756\n\n   @ursabot please benchmark lang=R\n\n\n",
                    "created": "2022-09-03T17:44:40.532+0000",
                    "updated": "2022-09-03T17:44:40.532+0000",
                    "started": "2022-09-03T17:44:40.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805965",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1236170769\n\n   Benchmark runs are scheduled for baseline = 80bba299612d2a8a92968fd15e81343f0783e600 and contender = 3d52485d3ea9c95b8e3f68cd27473934eb4facd1. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Skipped :warning: Only ['Python'] langs are supported on ec2-t3-xlarge-us-east-2] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/700d24e0211f4bc7bd2c8a2a5ad731e5...830ad20396804dda8d0339a653566e18/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/b63464f9d7ee48ebb7024c987d71d202...a0e75393fe174c55888289a1bf2a1d2a/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/987c8925e9924c84af747eebc791c25a...01dc15b9d0b24691911ea6c1c9103d1e/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/7357ca3c937b488d93a5faf3978e96b5...433e07d1755747cb86b17108426cdbbb/)\n   Buildkite builds:\n   [Scheduled] [`3d52485d` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1432)\n   [Scheduled] [`3d52485d` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1416)\n   [Finished] [`80bba299` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1376)\n   [Failed] [`80bba299` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1392)\n   [Failed] [`80bba299` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1374)\n   [Finished] [`80bba299` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1391)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-09-03T17:44:45.781+0000",
                    "updated": "2022-09-03T17:44:45.781+0000",
                    "started": "2022-09-03T17:44:45.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805966",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/805969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1236184070\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/987c8925e9924c84af747eebc791c25a...01dc15b9d0b24691911ea6c1c9103d1e/)\n   \n\n\n",
                    "created": "2022-09-03T19:11:43.021+0000",
                    "updated": "2022-09-03T19:11:43.021+0000",
                    "started": "2022-09-03T19:11:43.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805969",
                    "issueId": "13477475"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/worklog/806051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #13985:\nURL: https://github.com/apache/arrow/pull/13985#issuecomment-1236401632\n\n   Some of the remaining benchmark regressions are spurious (file-write, dataframe-to-table, neither of which are affected by this change). The other TPC-H ones are legitimate, but they're on tiny scale factors of data (0.1, 0.01, i.e. 100mb and 10mb), so the extra 10-15ms that the type checking this PR introduces shows up as statistically significant. \r\n   \r\n   IMO the tradeoff is worth it: we preserve the types of the original data better (especially for integers, and after ARROW-17601, decimals), we have more convenient passing of strings for dates/timestamps in expressions, and by avoiding unnecessary casts, we should get performance benefits on some queries. As it turns out, we aren't currently benchmarking queries where the performance benefit would show. I'd like to add a benchmark for the case shown on this issue, but it fails for me locally due to ARROW-17556. \n\n\n",
                    "created": "2022-09-04T19:32:49.731+0000",
                    "updated": "2022-09-04T19:32:49.731+0000",
                    "started": "2022-09-04T19:32:49.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806051",
                    "issueId": "13477475"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@34d664e9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a395332[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43e71c72[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@73f767ff[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fe4dd6f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@35f6eb57[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e097517[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6092bb6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f5f91bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5df17552[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58550236[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@17ced611[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 31 15:24:58 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-10-31T15:24:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17462/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-08-18T18:50:00.000+0000",
        "updated": "2022-11-04T11:54:39.000+0000",
        "timeoriginalestimate": null,
        "description": "After looking at the ExecPlan output of some queries, it jumped out at me how we translate {{ int_field == 5 }} in R as {{ cast(int_field, float64) == 5 }} because 5 is a double in R. \r\n\r\nThis extra work has a noticeable performance impact. Here's a simple query on the taxi dataset, filtering down to 54 out of 1.5 billion rows and selecting a single column. My idea was to make a query that does not much other than evaluate the filter. \r\n\r\n{code}\r\n> system.time(ds |> select(passenger_count) |> filter(passenger_count > 10) |> compute())\r\n   user  system elapsed \r\n  0.391   0.024   0.362 \r\n\r\n> system.time(ds |> select(passenger_count) |> filter(passenger_count > Scalar$create(10, type = int8())) |> compute())\r\n   user  system elapsed \r\n  0.206   0.025   0.179 \r\n{code}\r\n\r\nYou can see the difference in the query plans too:\r\n\r\n{code}\r\n> ds |> select(passenger_count) |> filter(passenger_count > 10) |> explain()\r\nExecPlan with 4 nodes:\r\n3:SinkNode{}\r\n  2:ProjectNode{projection=[passenger_count]}\r\n    1:FilterNode{filter=(cast(passenger_count, {to_type=double, allow_int_overflow=false, allow_time_truncate=false, allow_time_overflow=false, allow_decimal_truncate=false, allow_float_truncate=false, allow_invalid_utf8=false}) > 10)}\r\n      0:SourceNode{}\r\n\r\n> ds |> select(passenger_count) |> filter(passenger_count > Scalar$create(10, type = int8())) |> explain()\r\nExecPlan with 4 nodes:\r\n3:SinkNode{}\r\n  2:ProjectNode{projection=[passenger_count]}\r\n    1:FilterNode{filter=(passenger_count > 10)}\r\n      0:SourceNode{}\r\n{code}\r\n\r\nIdeally Acero would do this more intelligently (cf. ARROW-11402), but we should also be able to do smarter things when assembling the Expression in R.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Cast scalars to type of field in Expression building",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477475/comment/17626646",
                    "id": "17626646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 13985\n[https://github.com/apache/arrow/pull/13985]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-10-31T15:24:58.873+0000",
                    "updated": "2022-10-31T15:24:58.873+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z17vbc:",
        "customfield_12314139": null
    }
}