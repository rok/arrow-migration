{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13170818",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818",
    "key": "ARROW-2814",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rob-dempsey-esure",
            "name": "rob-dempsey-esure",
            "key": "rob-dempsey-esure",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "rob",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rob-dempsey-esure",
            "name": "rob-dempsey-esure",
            "key": "rob-dempsey-esure",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "rob",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2814/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 64,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/130609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366\n \n \n   There is still a lot of work to do on this and 46 broken tests, but the refactor surfaced some issues requiring decisions / feedback so wanted to put this up to get some folks to look at it.\r\n   \r\n   Key points\r\n   \r\n   * All object sequences, including NumPy arrays of objects are being converted in builtin_convert.cc\r\n   * pyarrow.array can now yield chunked output from normal Python input. Before, we could overflow a BinaryBuilder with no recourse\r\n   * Eliminated virtual calls from the inner hot path\r\n   * Eliminated some code duplication in builtin_convert.cc\r\n   * Special-cased mask handling, so masks (`mask=...` in `pyarrow.array`) also work with plain Python sequence now instead of only NumPy arrays\r\n   * Centralized null checking to a single code path, with a compile-time switch between pandas-style and non-pandas null-checking\r\n   \r\n   Some issues I ran into:\r\n   \r\n   * We have tests that make the somewhat heavy-handed promotion of small NumPy scalars to int64 or uint64. I have added more rigid \"type unification\" for dtypes, so that now a sequence of int8 scalars will yield int8 result\r\n   \r\n   * We were implicitly casting integers to double without checking whether the integers are representable as doubles. I think implicit casting is OK (e.g. `pa.array([1.5, 1, None])`) but we should validate that we can't discarding information\r\n   \r\n   There are some other problems that need fixing still / inconsistencies from the two code paths or follow-up issues. I will list these out and create more JIRAs as needed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T20:15:57.817+0000",
                    "updated": "2018-08-02T20:15:57.817+0000",
                    "started": "2018-08-02T20:15:57.816+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130609",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/130794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410218540\n \n \n   Down to 12 failing unit tests. The best place to see the behavior that is changing is to look at the unit test suite. I will summarize all the changes when I'm done (e.g. sequence of datetime.date now yields date32 type instead of date64) to make sure all are in agreement\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-03T10:54:19.536+0000",
                    "updated": "2018-08-03T10:54:19.536+0000",
                    "started": "2018-08-03T10:54:19.536+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130794",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/130918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410296429\n \n \n   I've got all the unit tests passing again on Python 3 at least (will check Py2). I'm going to run through my list of \"hanging chads\" and write some more unit tests.\r\n   \r\n   I also need to do a bunch of benchmarking; some things should be faster, but I want to make sure there aren't any serious regressions\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-03T15:52:48.372+0000",
                    "updated": "2018-08-03T15:52:48.372+0000",
                    "started": "2018-08-03T15:52:48.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130918",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/130923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410299955\n \n \n   The slowness in https://github.com/apache/arrow/pull/2308 is addressed by this, for example:\r\n   \r\n   Before:\r\n   \r\n   ```\r\n   $ python -m timeit -s \"import numpy as np, pyarrow as pa; data = [np.arange(10000)]\" \"pa.array(data)\"\r\n   1000 loops, best of 3: 865 usec per loop\r\n   ```\r\n   \r\n   After:\r\n   \r\n   ```\r\n   $ python -m timeit -s \"import numpy as np, pyarrow as pa; data = [np.arange(10000)]\" \"pa.array(data)\"\r\n   10000 loops, best of 3: 118 usec per loop\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-03T16:04:55.541+0000",
                    "updated": "2018-08-03T16:04:55.541+0000",
                    "started": "2018-08-03T16:04:55.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130923",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/131060",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410366171\n \n \n   ASV benchmarks look mostly fine:\r\n   \r\n   ```\r\n   $ asv compare 7afa4afc 11fbebcf\r\n   \r\n   All benchmarks:\r\n   \r\n          before           after         ratio\r\n        [7afa4afc]       [11fbebcf]\r\n          5.81\u00b10.1ms       5.78\u00b10.2ms     1.00  array_ops.ScalarAccess.time_as_py\r\n          18.5\u00b10.1ms       19.0\u00b10.3ms     1.03  array_ops.ScalarAccess.time_getitem\r\n          24.1\u00b10.2ms       24.9\u00b10.3ms     1.03  convert_builtins.ConvertArrayToPyList.time_convert('ascii')\r\n         17.1\u00b10.09ms       17.1\u00b10.2ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('binary')\r\n          16.5\u00b10.4ms       16.6\u00b10.4ms     1.01  convert_builtins.ConvertArrayToPyList.time_convert('binary10')\r\n         14.5\u00b10.09ms       14.6\u00b10.2ms     1.01  convert_builtins.ConvertArrayToPyList.time_convert('bool')\r\n             109\u00b11ms          111\u00b12ms     1.02  convert_builtins.ConvertArrayToPyList.time_convert('decimal')\r\n         15.1\u00b10.09ms       15.1\u00b10.4ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('float32')\r\n          15.5\u00b10.4ms       15.1\u00b10.2ms     0.98  convert_builtins.ConvertArrayToPyList.time_convert('float64')\r\n          15.2\u00b10.2ms       15.9\u00b10.3ms     1.05  convert_builtins.ConvertArrayToPyList.time_convert('int32')\r\n             183\u00b12ms          173\u00b12ms     0.95  convert_builtins.ConvertArrayToPyList.time_convert('int64 list')\r\n         15.2\u00b10.09ms      15.2\u00b10.06ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('int64')\r\n             264\u00b11ms        260\u00b10.4ms     0.99  convert_builtins.ConvertArrayToPyList.time_convert('struct')\r\n          15.4\u00b10.1ms       15.2\u00b10.2ms     0.98  convert_builtins.ConvertArrayToPyList.time_convert('uint32')\r\n          15.4\u00b10.2ms       15.3\u00b10.1ms     0.99  convert_builtins.ConvertArrayToPyList.time_convert('uint64')\r\n          50.5\u00b10.5ms       50.6\u00b10.5ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('unicode')\r\n          5.84\u00b10.2ms       5.80\u00b10.3ms     0.99  convert_builtins.ConvertPyListToArray.time_convert('ascii')\r\n          5.20\u00b10.1ms         5.08\u00b10ms     0.98  convert_builtins.ConvertPyListToArray.time_convert('binary')\r\n         3.02\u00b10.04ms      3.17\u00b10.03ms     1.05  convert_builtins.ConvertPyListToArray.time_convert('binary10')\r\n   -     1.71\u00b10.01ms      1.55\u00b10.02ms     0.91  convert_builtins.ConvertPyListToArray.time_convert('bool')\r\n            54.3\u00b11ms       50.5\u00b10.4ms     0.93  convert_builtins.ConvertPyListToArray.time_convert('decimal')\r\n         1.29\u00b10.03ms      1.31\u00b10.02ms     1.01  convert_builtins.ConvertPyListToArray.time_convert('float32')\r\n         1.34\u00b10.03ms      1.33\u00b10.03ms     0.99  convert_builtins.ConvertPyListToArray.time_convert('float64')\r\n         3.01\u00b10.03ms      2.88\u00b10.02ms     0.96  convert_builtins.ConvertPyListToArray.time_convert('int32')\r\n          29.2\u00b10.9ms       26.5\u00b10.3ms    ~0.91  convert_builtins.ConvertPyListToArray.time_convert('int64 list')\r\n         3.05\u00b10.06ms      2.99\u00b10.08ms     0.98  convert_builtins.ConvertPyListToArray.time_convert('int64')\r\n          16.4\u00b10.6ms       15.7\u00b10.9ms     0.96  convert_builtins.ConvertPyListToArray.time_convert('struct from tuples')\r\n            16.7\u00b11ms         15.9\u00b11ms     0.95  convert_builtins.ConvertPyListToArray.time_convert('struct')\r\n         2.92\u00b10.01ms      2.73\u00b10.02ms     0.94  convert_builtins.ConvertPyListToArray.time_convert('uint32')\r\n         3.01\u00b10.05ms      2.76\u00b10.05ms     0.92  convert_builtins.ConvertPyListToArray.time_convert('uint64')\r\n            14.0\u00b11ms       10.0\u00b10.2ms    ~0.72  convert_builtins.ConvertPyListToArray.time_convert('unicode')\r\n   -      7.72\u00b10.4ms       6.19\u00b10.2ms     0.80  convert_builtins.InferPyListToArray.time_infer('ascii')\r\n   -      6.49\u00b10.2ms      5.12\u00b10.04ms     0.79  convert_builtins.InferPyListToArray.time_infer('binary')\r\n   -     2.76\u00b10.06ms      1.55\u00b10.02ms     0.56  convert_builtins.InferPyListToArray.time_infer('bool')\r\n             149\u00b12ms          141\u00b11ms     0.95  convert_builtins.InferPyListToArray.time_infer('decimal')\r\n   +     2.33\u00b10.06ms      3.08\u00b10.01ms     1.32  convert_builtins.InferPyListToArray.time_infer('float64')\r\n   +      43.3\u00b10.7ms       48.0\u00b10.5ms     1.11  convert_builtins.InferPyListToArray.time_infer('int64 list')\r\n   +     4.40\u00b10.06ms      5.13\u00b10.07ms     1.16  convert_builtins.InferPyListToArray.time_infer('int64')\r\n            38.6\u00b11ms         43.2\u00b14ms    ~1.12  convert_builtins.InferPyListToArray.time_infer('struct')\r\n          13.1\u00b10.2ms         13.5\u00b11ms     1.03  convert_builtins.InferPyListToArray.time_infer('unicode')\r\n            957\u00b120\u03bcs          944\u00b14\u03bcs     0.99  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'float64')\r\n             949\u00b19\u03bcs          932\u00b13\u03bcs     0.98  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'float64_nans')\r\n             940\u00b16\u03bcs         942\u00b110\u03bcs     1.00  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'int64')\r\n            957\u00b110\u03bcs         970\u00b120\u03bcs     1.01  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'str')\r\n         2.56\u00b10.04ms      2.48\u00b10.03ms     0.97  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'float64')\r\n         3.31\u00b10.02ms      3.38\u00b10.07ms     1.02  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'float64_nans')\r\n         2.46\u00b10.02ms      2.52\u00b10.04ms     1.02  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'int64')\r\n          65.5\u00b10.7ms         65.7\u00b12ms     1.00  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'str')\r\n             316\u00b12\u03bcs          311\u00b16\u03bcs     0.98  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'float64')\r\n             321\u00b16\u03bcs          319\u00b18\u03bcs     0.99  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'float64_nans')\r\n             324\u00b14\u03bcs          315\u00b13\u03bcs     0.97  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'int64')\r\n             328\u00b15\u03bcs          322\u00b17\u03bcs     0.98  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'str')\r\n          5.61\u00b10.1ms         7.04\u00b11ms    ~1.25  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'float64')\r\n          8.11\u00b10.9ms       5.59\u00b10.1ms    ~0.69  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'float64_nans')\r\n          3.17\u00b10.5ms       4.13\u00b10.5ms    ~1.30  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'int64')\r\n   +      44.8\u00b10.4ms       52.4\u00b10.4ms     1.17  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'str')\r\n           158\u00b10.4\u03bcs          158\u00b14\u03bcs     1.00  convert_pandas.ZeroCopyPandasRead.time_deserialize_from_buffer\r\n             155\u00b12\u03bcs          157\u00b13\u03bcs     1.01  convert_pandas.ZeroCopyPandasRead.time_deserialize_from_components\r\n          13.2\u00b10.2ms       13.2\u00b10.6ms     1.00  microbenchmarks.PandasObjectIsNull.time_PandasObjectIsNull('decimal')\r\n            1.18\u00b10ms      1.10\u00b10.01ms     0.93  microbenchmarks.PandasObjectIsNull.time_PandasObjectIsNull('float')\r\n             601\u00b18\u03bcs         559\u00b110\u03bcs     0.93  microbenchmarks.PandasObjectIsNull.time_PandasObjectIsNull('int')\r\n   -     1.14\u00b10.02ms         1.01\u00b10ms     0.89  microbenchmarks.PandasObjectIsNull.time_PandasObjectIsNull('object')\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(10, 'default')\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(10, 1)\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(10, 8)\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(100, 'default')\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(100, 1)\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(100, 8)\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(1000, 'default')\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(1000, 1)\r\n              failed           failed      n/a  parquet.ParquetManifestCreation.time_manifest_creation(1000, 8)\r\n           97.2\u00b110ms          118\u00b12ms    ~1.22  plasma.SimplePlasmaLatency.time_plasma_put\r\n             168\u00b14ms          154\u00b17ms     0.92  plasma.SimplePlasmaLatency.time_plasma_putget\r\n             130\u00b13\u03bcs        131\u00b10.8\u03bcs     1.00  plasma.SimplePlasmaThroughput.time_plasma_put_data(1000)\r\n             186\u00b13\u03bcs          190\u00b13\u03bcs     1.02  plasma.SimplePlasmaThroughput.time_plasma_put_data(100000)\r\n         1.96\u00b10.02ms      1.98\u00b10.02ms     1.01  plasma.SimplePlasmaThroughput.time_plasma_put_data(10000000)\r\n              82.5ms           80.7ms     0.98  streaming.StreamReader.time_read_to_dataframe(16384)\r\n   -      28.3\u00b10.2ms      25.5\u00b10.02ms     0.90  streaming.StreamReader.time_read_to_dataframe(262144)\r\n         25.6\u00b10.07ms       23.7\u00b10.5ms     0.93  streaming.StreamReader.time_read_to_dataframe(8388608)\r\n   ```\r\n   \r\n   The most troubling one is the string conversion. In this benchmark\r\n   \r\n   ```\r\n   import pandas.util.testing as tm\r\n   import pandas as pd\r\n   import numpy as np\r\n   import pyarrow as pa\r\n   \r\n   s = pd.Series([tm.rands(5) for _ in range(10000)] * 1000)\r\n   s[::10] = np.nan\r\n   \r\n   %timeit pa.array(s)\r\n   ```\r\n   \r\n   I'm dropping ~10-15%\r\n   \r\n   ```\r\n   BEFORE\r\n   In [2]: timeit pa.array(s)\r\n   413 ms \u00b1 9.54 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n   \r\n   AFTER\r\n   In [4]: timeit pa.array(s)\r\n   476 ms \u00b1 8.34 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n   ```\r\n   \r\n   Here are the flamegraphs:\r\n   \r\n   [string_flamegraphs.tar.gz](https://github.com/apache/arrow/files/2258728/string_flamegraphs.tar.gz)\r\n   \r\n   \r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-03T20:21:55.822+0000",
                    "updated": "2018-08-03T20:21:55.822+0000",
                    "started": "2018-08-03T20:21:55.822+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "131060",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/131071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: WIP ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410374897\n \n \n   A little bit more tweaking and things looking mostly OK now\r\n   \r\n   ```\r\n          5.81\u00b10.1ms       5.89\u00b10.1ms     1.01  array_ops.ScalarAccess.time_as_py\r\n          18.5\u00b10.1ms         20.1\u00b11ms     1.08  array_ops.ScalarAccess.time_getitem\r\n          24.1\u00b10.2ms       24.5\u00b10.2ms     1.02  convert_builtins.ConvertArrayToPyList.time_convert('ascii')\r\n         17.1\u00b10.09ms       17.9\u00b10.3ms     1.05  convert_builtins.ConvertArrayToPyList.time_convert('binary')\r\n          16.5\u00b10.4ms       16.4\u00b10.3ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('binary10')\r\n         14.5\u00b10.09ms      14.7\u00b10.09ms     1.01  convert_builtins.ConvertArrayToPyList.time_convert('bool')\r\n             109\u00b11ms          112\u00b13ms     1.03  convert_builtins.ConvertArrayToPyList.time_convert('decimal')\r\n         15.1\u00b10.09ms       15.2\u00b10.2ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('float32')\r\n          15.5\u00b10.4ms       15.5\u00b10.5ms     1.00  convert_builtins.ConvertArrayToPyList.time_convert('float64')\r\n          15.2\u00b10.2ms      15.7\u00b10.06ms     1.03  convert_builtins.ConvertArrayToPyList.time_convert('int32')\r\n             183\u00b12ms          169\u00b17ms     0.92  convert_builtins.ConvertArrayToPyList.time_convert('int64 list')\r\n         15.2\u00b10.09ms       15.6\u00b10.1ms     1.02  convert_builtins.ConvertArrayToPyList.time_convert('int64')\r\n             264\u00b11ms          266\u00b12ms     1.01  convert_builtins.ConvertArrayToPyList.time_convert('struct')\r\n          15.4\u00b10.1ms       15.4\u00b10.3ms     0.99  convert_builtins.ConvertArrayToPyList.time_convert('uint32')\r\n          15.4\u00b10.2ms       16.4\u00b10.5ms     1.07  convert_builtins.ConvertArrayToPyList.time_convert('uint64')\r\n          50.5\u00b10.5ms       51.3\u00b10.2ms     1.02  convert_builtins.ConvertArrayToPyList.time_convert('unicode')\r\n          5.84\u00b10.2ms       5.69\u00b10.4ms     0.97  convert_builtins.ConvertPyListToArray.time_convert('ascii')\r\n          5.20\u00b10.1ms       4.35\u00b10.2ms    ~0.84  convert_builtins.ConvertPyListToArray.time_convert('binary')\r\n         3.02\u00b10.04ms      3.32\u00b10.03ms    ~1.10  convert_builtins.ConvertPyListToArray.time_convert('binary10')\r\n   -     1.71\u00b10.01ms         1.53\u00b10ms     0.89  convert_builtins.ConvertPyListToArray.time_convert('bool')\r\n            54.3\u00b11ms       49.9\u00b10.3ms     0.92  convert_builtins.ConvertPyListToArray.time_convert('decimal')\r\n         1.29\u00b10.03ms      1.31\u00b10.01ms     1.02  convert_builtins.ConvertPyListToArray.time_convert('float32')\r\n   -     1.34\u00b10.03ms      1.06\u00b10.02ms     0.79  convert_builtins.ConvertPyListToArray.time_convert('float64')\r\n         3.01\u00b10.03ms      2.82\u00b10.02ms     0.94  convert_builtins.ConvertPyListToArray.time_convert('int32')\r\n          29.2\u00b10.9ms       27.5\u00b10.4ms     0.94  convert_builtins.ConvertPyListToArray.time_convert('int64 list')\r\n         3.05\u00b10.06ms      2.83\u00b10.04ms     0.93  convert_builtins.ConvertPyListToArray.time_convert('int64')\r\n          16.4\u00b10.6ms         14.2\u00b11ms    ~0.87  convert_builtins.ConvertPyListToArray.time_convert('struct from tuples')\r\n            16.7\u00b11ms         14.2\u00b11ms    ~0.85  convert_builtins.ConvertPyListToArray.time_convert('struct')\r\n         2.92\u00b10.01ms      2.81\u00b10.03ms     0.97  convert_builtins.ConvertPyListToArray.time_convert('uint32')\r\n         3.01\u00b10.05ms      2.76\u00b10.03ms     0.92  convert_builtins.ConvertPyListToArray.time_convert('uint64')\r\n            14.0\u00b11ms         13.7\u00b11ms     0.98  convert_builtins.ConvertPyListToArray.time_convert('unicode')\r\n   -      7.72\u00b10.4ms       5.65\u00b10.3ms     0.73  convert_builtins.InferPyListToArray.time_infer('ascii')\r\n   -      6.49\u00b10.2ms       5.27\u00b10.1ms     0.81  convert_builtins.InferPyListToArray.time_infer('binary')\r\n   -     2.76\u00b10.06ms      1.65\u00b10.03ms     0.60  convert_builtins.InferPyListToArray.time_infer('bool')\r\n             149\u00b12ms          143\u00b13ms     0.96  convert_builtins.InferPyListToArray.time_infer('decimal')\r\n   +     2.33\u00b10.06ms      2.91\u00b10.07ms     1.25  convert_builtins.InferPyListToArray.time_infer('float64')\r\n   +      43.3\u00b10.7ms       48.7\u00b10.6ms     1.12  convert_builtins.InferPyListToArray.time_infer('int64 list')\r\n   +     4.40\u00b10.06ms      5.03\u00b10.04ms     1.14  convert_builtins.InferPyListToArray.time_infer('int64')\r\n            38.6\u00b11ms         38.7\u00b12ms     1.00  convert_builtins.InferPyListToArray.time_infer('struct')\r\n          13.1\u00b10.2ms       13.2\u00b10.8ms     1.01  convert_builtins.InferPyListToArray.time_infer('unicode')\r\n            957\u00b120\u03bcs        941\u00b10.6\u03bcs     0.98  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'float64')\r\n             949\u00b19\u03bcs         939\u00b120\u03bcs     0.99  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'float64_nans')\r\n             940\u00b16\u03bcs         947\u00b130\u03bcs     1.01  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'int64')\r\n            957\u00b110\u03bcs         945\u00b150\u03bcs     0.99  convert_pandas.PandasConversionsFromArrow.time_to_series(10, 'str')\r\n         2.56\u00b10.04ms      2.45\u00b10.04ms     0.96  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'float64')\r\n         3.31\u00b10.02ms      3.17\u00b10.07ms     0.96  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'float64_nans')\r\n         2.46\u00b10.02ms      2.47\u00b10.03ms     1.00  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'int64')\r\n          65.5\u00b10.7ms       62.8\u00b10.2ms     0.96  convert_pandas.PandasConversionsFromArrow.time_to_series(1000000, 'str')\r\n             316\u00b12\u03bcs          307\u00b15\u03bcs     0.97  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'float64')\r\n             321\u00b16\u03bcs        306\u00b10.8\u03bcs     0.95  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'float64_nans')\r\n             324\u00b14\u03bcs          305\u00b11\u03bcs     0.94  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'int64')\r\n             328\u00b15\u03bcs          319\u00b14\u03bcs     0.97  convert_pandas.PandasConversionsToArrow.time_from_series(10, 'str')\r\n          5.61\u00b10.1ms      5.70\u00b10.06ms     1.02  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'float64')\r\n          8.11\u00b10.9ms       8.29\u00b10.9ms     1.02  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'float64_nans')\r\n          3.17\u00b10.5ms       3.85\u00b10.5ms    ~1.22  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'int64')\r\n          44.8\u00b10.4ms         41.9\u00b10ms     0.94  convert_pandas.PandasConversionsToArrow.time_from_series(1000000, 'str')\r\n           158\u00b10.4\u03bcs          158\u00b11\u03bcs     1.00  convert_pandas.ZeroCopyPandasRead.time_deserialize_from_buffer\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-03T20:59:48.738+0000",
                    "updated": "2018-08-03T20:59:48.738+0000",
                    "started": "2018-08-03T20:59:48.738+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "131071",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/131201",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410455077\n \n \n   This patch is done / merge-ready pending code review\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-04T14:54:56.522+0000",
                    "updated": "2018-08-04T14:54:56.522+0000",
                    "started": "2018-08-04T14:54:56.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "131201",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/131537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410829624\n \n \n   rebased\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-06T19:43:06.740+0000",
                    "updated": "2018-08-06T19:43:06.740+0000",
                    "started": "2018-08-06T19:43:06.740+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "131537",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/131600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#issuecomment-410857939\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=h1) Report\n   > Merging [#2366](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/551e9cec0f04c91963411c735f744346b1772ae1?src=pr&el=desc) will **increase** coverage by `2.09%`.\n   > The diff coverage is `76.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2366/graphs/tree.svg?src=pr&token=LpTCFbqVT1&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2366      +/-   ##\n   ==========================================\n   + Coverage   84.49%   86.58%   +2.09%     \n   ==========================================\n     Files         293      238      -55     \n     Lines       45318    42417    -2901     \n   ==========================================\n   - Hits        38290    36728    -1562     \n   + Misses       7001     5689    -1312     \n   + Partials       27        0      -27\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/builder.h](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmg=) | `97.26% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type\\_traits.h](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlX3RyYWl0cy5o) | `96.66% <\u00f8> (-3.34%)` | :arrow_down: |\n   | [cpp/src/arrow/python/helpers.h](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5o) | `90% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_convert\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X3BhbmRhcy5weQ==) | `94.96% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/numpy\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vbnVtcHlfdG9fYXJyb3cuY2M=) | `94.11% <100%> (+5.04%)` | :arrow_up: |\n   | [cpp/src/arrow/python/python-test.cc](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uLXRlc3QuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/python\\_to\\_arrow.cc](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3RvX2Fycm93LmNj) | `88.88% <100%> (-0.03%)` | :arrow_down: |\n   | [cpp/src/arrow/python/helpers.cc](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaGVscGVycy5jYw==) | `85.48% <100%> (+3.77%)` | :arrow_up: |\n   | [cpp/src/arrow/python/builtin\\_convert.h](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vYnVpbHRpbl9jb252ZXJ0Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/python/common.h](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vY29tbW9uLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [69 more](https://codecov.io/gh/apache/arrow/pull/2366/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=footer). Last update [551e9ce...8838923](https://codecov.io/gh/apache/arrow/pull/2366?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-06T21:25:36.267+0000",
                    "updated": "2018-08-06T21:25:36.267+0000",
                    "started": "2018-08-06T21:25:36.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "131600",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208624202\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -79,157 +94,159 @@ class TypeInferrer {\n     DCHECK_OK(status);\n   }\n \n-  // Infer value type from a sequence of values\n-  Status VisitSequence(PyObject* obj) {\n-    return internal::VisitSequence(obj, [this](PyObject* value) { return Visit(value); });\n-  }\n-\n-  Status Visit(PyObject* obj) {\n+  Status Visit(PyObject* obj, bool* keep_going) {\n \n Review comment:\n   Could you comment on what `keep_going` means?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:18.493+0000",
                    "updated": "2018-08-08T16:38:18.493+0000",
                    "started": "2018-08-08T16:38:18.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132433",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208624339\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -79,157 +94,159 @@ class TypeInferrer {\n     DCHECK_OK(status);\n   }\n \n-  // Infer value type from a sequence of values\n-  Status VisitSequence(PyObject* obj) {\n-    return internal::VisitSequence(obj, [this](PyObject* value) { return Visit(value); });\n-  }\n-\n-  Status Visit(PyObject* obj) {\n+  Status Visit(PyObject* obj, bool* keep_going) {\n     ++total_count_;\n+\n     if (obj == Py_None || internal::PyFloat_IsNaN(obj)) {\n       ++none_count_;\n     } else if (PyBool_Check(obj)) {\n       ++bool_count_;\n-    } else if (PyFloat_Check(obj)) {\n+      *keep_going = make_unions_ && false;\n \n Review comment:\n   `*keep_going = false`, no?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:18.544+0000",
                    "updated": "2018-08-08T16:38:18.544+0000",
                    "started": "2018-08-08T16:38:18.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132434",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208628069\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -252,30 +269,44 @@ class TypeInferrer {\n       // Get or create visitor for this key\n       auto it = struct_inferrers_.find(key);\n       if (it == struct_inferrers_.end()) {\n-        it = struct_inferrers_.insert(std::make_pair(key, TypeInferrer())).first;\n+        it = struct_inferrers_\n+                 .insert(\n+                     std::make_pair(key, TypeInferrer(validate_interval_, make_unions_)))\n+                 .first;\n       }\n       TypeInferrer* visitor = &it->second;\n-      RETURN_NOT_OK(visitor->Visit(value_obj));\n+\n+      // We ignore termination signals from child visitors\n+      bool keep_going = true;\n+      RETURN_NOT_OK(visitor->Visit(value_obj, &keep_going));\n     }\n+\n+    // We do not terminate visiting dicts (unless one of the struct_inferrers_\n \n Review comment:\n   The comment in parentheses looks wrong, no?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:18.823+0000",
                    "updated": "2018-08-08T16:38:18.823+0000",
                    "started": "2018-08-08T16:38:18.822+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132435",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132436",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208626158\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -39,29 +39,44 @@\n #include \"arrow/python/helpers.h\"\n #include \"arrow/python/iterators.h\"\n #include \"arrow/python/numpy_convert.h\"\n+#include \"arrow/python/type_traits.h\"\n #include \"arrow/python/util/datetime.h\"\n \n namespace arrow {\n namespace py {\n \n-Status InvalidConversion(PyObject* obj, const std::string& expected_types,\n-                         std::ostream* out) {\n-  (*out) << \"Got Python object of type \" << Py_TYPE(obj)->tp_name\n-         << \" but can only handle these types: \" << expected_types;\n-  // XXX streamline this?\n-  return Status::OK();\n+namespace {\n+\n+Status InvalidValue(PyObject* obj, const std::string& why) {\n+  std::stringstream ss;\n+\n+  std::string obj_as_str;\n+  RETURN_NOT_OK(internal::PyObject_StdStringStr(obj, &obj_as_str));\n+  ss << \"Could not convert \" << obj_as_str << \" with type \" << Py_TYPE(obj)->tp_name\n+     << \": \" << why;\n+  return Status::Invalid(ss.str());\n }\n \n+}  // namespace\n+\n class TypeInferrer {\n   // A type inference visitor for Python values\n-\n  public:\n-  TypeInferrer()\n-      : total_count_(0),\n+  // \\param validate_interval the number of elements to observe before checking\n+  // whether the data is mixed type or has other problems. This helps avoid\n+  // excess computation for each element while also making sure we \"bail out\"\n \n Review comment:\n   Is it important to bail out early? I'd say it's the cost of successful calls that matters, especially as validation only catches a small subset of possible errors (for example, mixing strings and integers will only be caught during conversion, not inference).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:18.832+0000",
                    "updated": "2018-08-08T16:38:18.832+0000",
                    "started": "2018-08-08T16:38:18.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132436",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208631727\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -15,7 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n-#include \"arrow/python/platform.h\"\n+#include \"arrow/python/builtin_convert.h\"\n \n Review comment:\n   Side note: since we are reorganizing code in `arrow/python`, how about putting type inference code in a separate `inference.h` and  `inference.cc`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:18.959+0000",
                    "updated": "2018-08-08T16:38:18.959+0000",
                    "started": "2018-08-08T16:38:18.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132437",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208631309\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.h\n ##########\n @@ -68,6 +68,9 @@ ARROW_EXPORT Status NdarrayToTensor(MemoryPool* pool, PyObject* ao,\n ARROW_EXPORT Status TensorToNdarray(const std::shared_ptr<Tensor>& tensor, PyObject* base,\n                                     PyObject** out);\n \n+Status IntegerScalarToDoubleSafe(PyObject* obj, double* result);\n \n Review comment:\n   I think I'd rather see those in `helpers.h`, or perhaps we should have a new `numbers.h` file (together with `numbers.cc`)?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.028+0000",
                    "updated": "2018-08-08T16:38:19.028+0000",
                    "started": "2018-08-08T16:38:19.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132438",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208635125\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -560,143 +691,333 @@ class TimestampConverter\n   TimeUnit::type unit_;\n };\n \n-template <bool from_pandas = true>\n-class Float16Converter\n-    : public TypedConverterVisitor<HalfFloatBuilder, Float16Converter<from_pandas>> {\n- public:\n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    npy_half val;\n-    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n-    return this->typed_builder_->Append(val);\n-  }\n-};\n+// ----------------------------------------------------------------------\n+// Sequence converters for Binary, FixedSizeBinary, String\n \n-template <>\n-class Float16Converter<false>\n-    : public TypedConverterVisitor<HalfFloatBuilder, Float16Converter<false>> {\n- public:\n-  Status AppendSingle(PyObject* obj) override {\n-    return (obj == Py_None) ? this->AppendNull() : this->AppendItem(obj);\n-  }\n+namespace detail {\n \n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    npy_half val;\n-    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n-    return this->typed_builder_->Append(val);\n+template <typename BuilderType, typename AppendFunc>\n+inline Status AppendPyString(BuilderType* builder, const PyBytesView& view, bool* is_full,\n+                             AppendFunc&& append_func) {\n+  int32_t length;\n+  RETURN_NOT_OK(internal::CastSize(view.size, &length));\n+  // Did we reach the builder size limit?\n+  if (ARROW_PREDICT_FALSE(builder->value_data_length() + length > kBinaryMemoryLimit)) {\n+    *is_full = true;\n+    return Status::OK();\n   }\n-};\n+  RETURN_NOT_OK(append_func(view.bytes, length));\n+  *is_full = false;\n+  return Status::OK();\n+}\n \n-template <bool from_pandas = true>\n-class Float32Converter\n-    : public TypedConverterVisitor<FloatBuilder, Float32Converter<true>> {\n- public:\n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    float val = static_cast<float>(PyFloat_AsDouble(obj));\n-    RETURN_IF_PYERROR();\n-    return typed_builder_->Append(val);\n-  }\n-};\n+// if (internal::IsPyBinary(obj)) {\n+//   *have_bytes = true;\n+// }\n+\n+inline Status BuilderAppend(BinaryBuilder* builder, PyObject* obj, bool* is_full) {\n+  PyBytesView view;\n+  // XXX For some reason, we must accept unicode objects here\n \n Review comment:\n   \"must\" because it's tested for?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.193+0000",
                    "updated": "2018-08-08T16:38:19.193+0000",
                    "started": "2018-08-08T16:38:19.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132439",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208634582\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -371,114 +361,246 @@ Status InferArrowTypeAndSize(PyObject* obj, int64_t* size,\n   return Status::OK();\n }\n \n+// ----------------------------------------------------------------------\n+// Sequence converter base and CRTP \"middle\" subclasses\n+\n+class SeqConverter;\n+\n+// Forward-declare converter factory\n+Status GetConverter(const std::shared_ptr<DataType>& type, bool from_pandas,\n+                    bool strict_conversions, std::unique_ptr<SeqConverter>* out);\n+\n // Marshal Python sequence (list, tuple, etc.) to Arrow array\n class SeqConverter {\n  public:\n-  virtual Status Init(ArrayBuilder* builder) {\n-    builder_ = builder;\n-    return Status::OK();\n-  }\n+  virtual ~SeqConverter() = default;\n+\n+  // Initialize the sequence converter with an ArrayBuilder created\n+  // externally. The reason for this interface is that we have\n+  // arrow::MakeBuilder which also creates child builders for nested types, so\n+  // we have to pass in the child builders to child SeqConverter in the case of\n+  // converting Python objects to Arrow nested types\n+  virtual Status Init(ArrayBuilder* builder) = 0;\n \n-  // Append a single (non-sequence) Python datum to the underlying builder\n-  virtual Status AppendSingle(PyObject* obj) = 0;\n+  // Append a single (non-sequence) Python datum to the underlying builder,\n+  // virtual function\n+  virtual Status AppendSingleVirtual(PyObject* obj) = 0;\n \n-  // Append the contents of a Python sequence to the underlying builder\n+  // Append the contents of a Python sequence to the underlying builder,\n+  // virtual version\n   virtual Status AppendMultiple(PyObject* seq, int64_t size) = 0;\n \n-  virtual ~SeqConverter() = default;\n+  // Append the contents of a Python sequence to the underlying builder,\n+  // virtual version\n+  virtual Status AppendMultipleMasked(PyObject* seq, PyObject* mask, int64_t size) = 0;\n+\n+  virtual Status GetResult(std::vector<std::shared_ptr<Array>>* chunks) {\n+    *chunks = chunks_;\n+\n+    // Still some accumulated data in the builder. If there are no chunks, we\n+    // always call Finish to deal with the edge case where a size-0 sequence\n+    // was converted with a specific output type, like array([], type=t)\n+    if (chunks_.size() == 0 || builder_->length() > 0) {\n+      std::shared_ptr<Array> last_chunk;\n+      RETURN_NOT_OK(builder_->Finish(&last_chunk));\n+      chunks->emplace_back(std::move(last_chunk));\n+    }\n+    return Status::OK();\n+  }\n+\n+  ArrayBuilder* builder() const { return builder_; }\n \n  protected:\n   ArrayBuilder* builder_;\n+  bool unfinished_builder_;\n+  std::vector<std::shared_ptr<Array>> chunks_;\n+};\n+\n+enum class NullCoding : char { NONE_ONLY, PANDAS_SENTINELS };\n+\n+template <NullCoding kind>\n+struct NullChecker {};\n+\n+template <>\n+struct NullChecker<NullCoding::NONE_ONLY> {\n+  static inline bool Check(PyObject* obj) { return obj == Py_None; }\n };\n \n-template <typename BuilderType>\n+template <>\n+struct NullChecker<NullCoding::PANDAS_SENTINELS> {\n+  static inline bool Check(PyObject* obj) { return internal::PandasObjectIsNull(obj); }\n+};\n+\n+// ----------------------------------------------------------------------\n+// Helper templates to append PyObject* to builder for each target conversion\n+// type\n+\n+template <typename Type, typename Enable = void>\n+struct Unbox {};\n+\n+template <typename Type>\n+struct Unbox<Type, enable_if_integer<Type>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+  static inline Status Append(BuilderType* builder, PyObject* obj) {\n+    typename Type::c_type value;\n+    RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n+    return builder->Append(value);\n+  }\n+};\n+\n+template <>\n+struct Unbox<HalfFloatType> {\n+  static inline Status Append(HalfFloatBuilder* builder, PyObject* obj) {\n+    npy_half val;\n+    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n+    return builder->Append(val);\n+  }\n+};\n+\n+template <>\n+struct Unbox<FloatType> {\n+  static inline Status Append(FloatBuilder* builder, PyObject* obj) {\n+    if (internal::PyFloatScalar_Check(obj)) {\n+      float val = static_cast<float>(PyFloat_AsDouble(obj));\n+      RETURN_IF_PYERROR();\n+      return builder->Append(val);\n+    } else if (internal::PyIntScalar_Check(obj)) {\n+      float val = 0;\n+      RETURN_NOT_OK(IntegerScalarToFloat32Safe(obj, &val));\n+      return builder->Append(val);\n+    } else {\n+      return InvalidValue(obj, \"tried to convert to float32\");\n+    }\n+  }\n+};\n+\n+template <>\n+struct Unbox<DoubleType> {\n+  static inline Status Append(DoubleBuilder* builder, PyObject* obj) {\n+    if (PyFloat_Check(obj)) {\n+      double val = PyFloat_AS_DOUBLE(obj);\n+      return builder->Append(val);\n+    } else if (internal::PyFloatScalar_Check(obj)) {\n+      // Other kinds of float-y things\n+      double val = PyFloat_AsDouble(obj);\n+      RETURN_IF_PYERROR();\n+      return builder->Append(val);\n+    } else if (internal::PyIntScalar_Check(obj)) {\n+      double val = 0;\n+      RETURN_NOT_OK(IntegerScalarToDoubleSafe(obj, &val));\n+      return builder->Append(val);\n+    } else {\n+      return InvalidValue(obj, \"tried to convert to double\");\n+    }\n+  }\n+};\n+\n+// We use CRTP to avoid virtual calls to the AppendItem(), AppendNull(), and\n+// IsNull() on the hot path\n+template <typename Type, class Derived,\n+          NullCoding null_coding = NullCoding::PANDAS_SENTINELS>\n class TypedConverter : public SeqConverter {\n  public:\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n   Status Init(ArrayBuilder* builder) override {\n-    RETURN_NOT_OK(SeqConverter::Init(builder));\n+    builder_ = builder;\n     DCHECK_NE(builder_, nullptr);\n     typed_builder_ = checked_cast<BuilderType*>(builder);\n-    DCHECK_NE(typed_builder_, nullptr);\n     return Status::OK();\n   }\n \n- protected:\n-  BuilderType* typed_builder_;\n-};\n+  bool CheckNull(PyObject* obj) const { return NullChecker<null_coding>::Check(obj); }\n \n-// We use the CRTP trick here to devirtualize the AppendItem(), AppendNull(), and IsNull()\n-// method calls.\n-template <typename BuilderType, class Derived>\n-class TypedConverterVisitor : public TypedConverter<BuilderType> {\n- public:\n-  Status AppendSingle(PyObject* obj) override {\n+  // Append a missing item (default implementation)\n+  Status AppendNull() { return this->typed_builder_->AppendNull(); }\n+\n+  // This is overridden in several subclasses, but if an Unbox implementation\n+  // is defined, it will be used here\n+  Status AppendItem(PyObject* obj) { return Unbox<Type>::Append(typed_builder_, obj); }\n+\n+  Status AppendSingle(PyObject* obj) {\n     auto self = checked_cast<Derived*>(this);\n-    return self->IsNull(obj) ? self->AppendNull() : self->AppendItem(obj);\n+    return CheckNull(obj) ? self->AppendNull() : self->AppendItem(obj);\n   }\n \n+  Status AppendSingleVirtual(PyObject* obj) override { return AppendSingle(obj); }\n+\n   Status AppendMultiple(PyObject* obj, int64_t size) override {\n     /// Ensure we've allocated enough space\n     RETURN_NOT_OK(this->typed_builder_->Reserve(size));\n     // Iterate over the items adding each one\n     auto self = checked_cast<Derived*>(this);\n-    auto visit = [self](PyObject* item) { return self->AppendSingle(item); };\n-    return internal::VisitSequence(obj, visit);\n+    return internal::VisitSequence(obj,\n+                                   [self](PyObject* item, bool* keep_going /* unused */) {\n+                                     return self->AppendSingle(item);\n+                                   });\n   }\n \n-  // Append a missing item (default implementation)\n-  Status AppendNull() { return this->typed_builder_->AppendNull(); }\n+  Status AppendMultipleMasked(PyObject* obj, PyObject* mask, int64_t size) override {\n+    /// Ensure we've allocated enough space\n+    RETURN_NOT_OK(this->typed_builder_->Reserve(size));\n+    // Iterate over the items adding each one\n+    auto self = checked_cast<Derived*>(this);\n+    return internal::VisitSequenceMasked(\n+        obj, mask, [self](PyObject* item, bool is_masked, bool* keep_going /* unused */) {\n+          if (is_masked) {\n+            return self->AppendNull();\n+          } else {\n+            // This will also apply the null-checking convention in the event\n+            // that the value is not masked\n+            return self->AppendSingle(item);\n+          }\n+        });\n+  }\n \n-  bool IsNull(PyObject* obj) const { return internal::PandasObjectIsNull(obj); }\n+ protected:\n+  BuilderType* typed_builder_;\n };\n \n-class NullConverter : public TypedConverterVisitor<NullBuilder, NullConverter> {\n- public:\n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    return Status::Invalid(\"NullConverter: passed non-None value\");\n-  }\n-};\n+// ----------------------------------------------------------------------\n+// Sequence converter for null type\n \n-class BoolConverter : public TypedConverterVisitor<BooleanBuilder, BoolConverter> {\n+class NullConverter : public TypedConverter<NullType, NullConverter> {\n  public:\n-  // Append a non-missing item\n   Status AppendItem(PyObject* obj) {\n-    return typed_builder_->Append(PyObject_IsTrue(obj) == 1);\n+    return InvalidValue(obj, \"converting to null type\");\n   }\n };\n \n-template <typename IntType, bool from_pandas = true>\n-class TypedIntConverter\n-    : public TypedConverterVisitor<NumericBuilder<IntType>, TypedIntConverter<IntType>> {\n+// ----------------------------------------------------------------------\n+// Sequence converter for boolean type\n+\n+class BoolConverter : public TypedConverter<BooleanType, BoolConverter> {\n  public:\n-  // Append a non-missing item\n   Status AppendItem(PyObject* obj) {\n-    typename IntType::c_type value;\n-    RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n-    return this->typed_builder_->Append(value);\n+    if (obj == Py_True) {\n+      return typed_builder_->Append(true);\n+    } else if (obj == Py_False) {\n+      return typed_builder_->Append(false);\n+    } else {\n+      return InvalidValue(obj, \"tried to convert to boolean\");\n+    }\n   }\n };\n \n-template <typename IntType>\n-class TypedIntConverter<IntType, false>\n-    : public TypedConverterVisitor<NumericBuilder<IntType>,\n-                                   TypedIntConverter<IntType, false>> {\n- public:\n-  Status AppendSingle(PyObject* obj) {\n-    return (obj == Py_None) ? this->AppendNull() : this->AppendItem(obj);\n-  }\n+// ----------------------------------------------------------------------\n+// Sequence converter template for numeric (integer and floating point) types\n \n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    typename IntType::c_type value;\n-    RETURN_NOT_OK(internal::CIntFromPython(obj, &value));\n-    return this->typed_builder_->Append(value);\n-  }\n+template <typename Type, bool from_pandas = true>\n \n Review comment:\n   Why do you use a boolean instead of the `NullCoding` convention here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.218+0000",
                    "updated": "2018-08-08T16:38:19.218+0000",
                    "started": "2018-08-08T16:38:19.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132440",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208634893\n \n \n\n ##########\n File path: cpp/src/arrow/python/builtin_convert.cc\n ##########\n @@ -560,143 +691,333 @@ class TimestampConverter\n   TimeUnit::type unit_;\n };\n \n-template <bool from_pandas = true>\n-class Float16Converter\n-    : public TypedConverterVisitor<HalfFloatBuilder, Float16Converter<from_pandas>> {\n- public:\n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    npy_half val;\n-    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n-    return this->typed_builder_->Append(val);\n-  }\n-};\n+// ----------------------------------------------------------------------\n+// Sequence converters for Binary, FixedSizeBinary, String\n \n-template <>\n-class Float16Converter<false>\n-    : public TypedConverterVisitor<HalfFloatBuilder, Float16Converter<false>> {\n- public:\n-  Status AppendSingle(PyObject* obj) override {\n-    return (obj == Py_None) ? this->AppendNull() : this->AppendItem(obj);\n-  }\n+namespace detail {\n \n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    npy_half val;\n-    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n-    return this->typed_builder_->Append(val);\n+template <typename BuilderType, typename AppendFunc>\n+inline Status AppendPyString(BuilderType* builder, const PyBytesView& view, bool* is_full,\n+                             AppendFunc&& append_func) {\n+  int32_t length;\n+  RETURN_NOT_OK(internal::CastSize(view.size, &length));\n+  // Did we reach the builder size limit?\n+  if (ARROW_PREDICT_FALSE(builder->value_data_length() + length > kBinaryMemoryLimit)) {\n+    *is_full = true;\n+    return Status::OK();\n   }\n-};\n+  RETURN_NOT_OK(append_func(view.bytes, length));\n+  *is_full = false;\n+  return Status::OK();\n+}\n \n-template <bool from_pandas = true>\n-class Float32Converter\n-    : public TypedConverterVisitor<FloatBuilder, Float32Converter<true>> {\n- public:\n-  // Append a non-missing item\n-  Status AppendItem(PyObject* obj) {\n-    float val = static_cast<float>(PyFloat_AsDouble(obj));\n-    RETURN_IF_PYERROR();\n-    return typed_builder_->Append(val);\n-  }\n-};\n+// if (internal::IsPyBinary(obj)) {\n \n Review comment:\n   Did you forget to remove this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.229+0000",
                    "updated": "2018-08-08T16:38:19.229+0000",
                    "started": "2018-08-08T16:38:19.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132441",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208647217\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -1154,20 +1152,21 @@ def test_fixed_offset_timezone(self):\n         _check_pandas_roundtrip(df)\n         _check_serialize_components_roundtrip(df)\n \n+# ----------------------------------------------------------------------\n+# Conversion tests for string and binary types.\n \n-class TestConvertStringLikeTypes(object):\n-    \"\"\"\n-    Conversion tests for string and binary types.\n-    \"\"\"\n \n-    def test_unicode(self):\n-        repeats = 1000\n-        values = [u'foo', None, u'bar', u'ma\u00f1ana', np.nan]\n-        df = pd.DataFrame({'strings': values * repeats})\n-        field = pa.field('strings', pa.string())\n-        schema = pa.schema([field])\n+def test_pandas_unicode():\n \n Review comment:\n   Why not leave this in `TestConvertStringLikeTypes`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.306+0000",
                    "updated": "2018-08-08T16:38:19.306+0000",
                    "started": "2018-08-08T16:38:19.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132442",
                    "issueId": "13170818"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/worklog/132443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2366: ARROW-2814: [Python] Unify conversion paths for sequences of Python objects\nURL: https://github.com/apache/arrow/pull/2366#discussion_r208649951\n \n \n\n ##########\n File path: cpp/src/arrow/python/iterators.h\n ##########\n @@ -27,10 +27,19 @@ namespace arrow {\n namespace py {\n namespace internal {\n \n-// Visit the Python sequence, calling the given callable on each element.\n-// If the callable returns a non-OK status, iteration stops and the status is returned.\n-template <class UnaryFunction>\n-inline Status VisitSequence(PyObject* obj, UnaryFunction&& func) {\n+// Visit the Python sequence, calling the given callable on each element.  If\n+// the callable returns a non-OK status, iteration stops and the status is\n+// returned.\n+//\n+// The call signature for Visitor must be Visit(PyObject*, bool*\n+// keep_going). If keep_going is set to false, the iteration terminates\n+//\n+// The Visitor function  signal that iteration should terminate\n \n Review comment:\n   This line seems redundant with the above (\"If keep_going is set to false, the iteration terminates\").\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-08T16:38:19.311+0000",
                    "updated": "2018-08-08T16:38:19.311+0000",
                    "started": "2018-08-08T16:38:19.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "132443",
                    "issueId": "13170818"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 33600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2d5603bf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32726963[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30edd66c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@11758863[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60e4e45a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1635d4d2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48b52ece[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@753e812b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32bf6de2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@a14ac23[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b3620f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a00c365[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 09 17:31:16 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-09T17:31:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2814/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-07-09T10:26:23.000+0000",
        "updated": "2018-08-09T17:31:24.000+0000",
        "timeoriginalestimate": null,
        "description": "Original issue title: \"Struct type inference and conversion works for lists but not NumPy arrays with dtype object\"\r\n\r\nExample, setup:\r\n\r\n{code}\r\nimport pandas as pd\r\n\r\ns = pd.Series([{'data': {'document_id': None,\r\n  'document_type': None,\r\n  'master_customer_id': None,\r\n  'message': 'User Login Request',\r\n  'policy_id': None,\r\n  'sequence_no': 14,\r\n  'user_name': None},\r\n 'header': {'actor_id': None,\r\n  'actor_type': None,\r\n  'brand_code': 'ES',\r\n  'event_origin': None,\r\n  'event_timestamp': '2018-01-01T18:25:43.511Z',\r\n  'event_type': 'LOGIN',\r\n  'master_customer_id': '14',\r\n  'source': 'CUSTOMER_AUTH_SERVICE',\r\n  'source_id': None,\r\n  'source_version': None},\r\n 'payload_version': '1',\r\n 'status': {'status_code': 100, 'status_message': 'Success'}}])\r\n{code}\r\n\r\nThis works:\r\n\r\n{code}\r\nIn [24]: pa.array(list(s))\r\nOut[24]: \r\n<pyarrow.lib.StructArray object at 0x7f8435b09c28>\r\n[\r\n  {'data': {'document_id': None, 'document_type': None, 'master_customer_id': None, 'message': 'User Login Request', 'policy_id': None, 'sequence_no': 14, 'user_name': None}, 'header': {'actor_id': None, 'actor_type': None, 'brand_code': 'ES', 'event_origin': None, 'event_timestamp': '2018-01-01T18:25:43.511Z', 'event_type': 'LOGIN', 'master_customer_id': '14', 'source': 'CUSTOMER_AUTH_SERVICE', 'source_id': None, 'source_version': None}, 'payload_version': '1', 'status': {'status_code': 100, 'status_message': 'Success'}}\r\n]\r\n{code}\r\n\r\nThis does not:\r\n\r\n{code}\r\nIn [23]: pa.array(s)\r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-23-eba23a1638b7> in <module>()\r\n----> 1 pa.array(s)\r\n\r\n~/code/arrow/python/pyarrow/array.pxi in pyarrow.lib.array()\r\n    175             values, type = pdcompat.get_datetimetz_type(values, obj.dtype,\r\n    176                                                         type)\r\n--> 177             return _ndarray_to_array(values, mask, type, from_pandas, pool)\r\n    178     else:\r\n    179         if mask is not None:\r\n\r\n~/code/arrow/python/pyarrow/array.pxi in pyarrow.lib._ndarray_to_array()\r\n     75 \r\n     76     with nogil:\r\n---> 77         check_status(NdarrayToArrow(pool, values, mask,\r\n     78                                     use_pandas_null_sentinels,\r\n     79                                     c_type, &chunked_out))\r\n\r\n~/code/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n     79         message = frombytes(status.message())\r\n     80         if status.IsInvalid():\r\n---> 81             raise ArrowInvalid(message)\r\n     82         elif status.IsIOError():\r\n     83             raise ArrowIOError(message)\r\n\r\nArrowInvalid: ../src/arrow/python/numpy_to_arrow.cc:1742 code: converter.Convert()\r\nError inferring Arrow type for Python object array. Got Python object of type dict but can only handle these types: string, bool, float, int, date, time, decimal, bytearray, list, array\r\n{code}\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12930818",
                "id": "12930818",
                "filename": "part-00000-8f03690f-736d-43a9-9287-6db9e228d59c.c000.gz.parquet",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=rob-dempsey-esure",
                    "name": "rob-dempsey-esure",
                    "key": "rob-dempsey-esure",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "rob",
                    "active": true,
                    "timeZone": "Etc/UTC"
                },
                "created": "2018-07-09T10:23:41.890+0000",
                "size": 10090,
                "mimeType": "application/octet-stream",
                "content": "https://issues.apache.org/jira/secure/attachment/12930818/part-00000-8f03690f-736d-43a9-9287-6db9e228d59c.c000.gz.parquet"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Unify PyObject* sequence conversion paths for built-in sequences, NumPy arrays",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16537265",
                    "id": "16537265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think this is fixed in master / 0.10.0 but will confirm",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-09T17:03:48.187+0000",
                    "updated": "2018-07-09T17:03:48.187+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16537684",
                    "id": "16537684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks [~rob-dempsey-esure] for the bug report. I just rewrote the issue with a small reproduction of the problem. [~pitrou] do you want to look at this since you have worked on this code more recently? I can take a look also",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-09T22:15:54.727+0000",
                    "updated": "2018-07-09T22:15:54.727+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16538307",
                    "id": "16538307",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "The problem is we have several code paths doing morally the same thing but in different ways... I think I once tried to unify them, but failed. It's a mess.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-10T09:24:15.760+0000",
                    "updated": "2018-07-10T09:24:15.760+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16539022",
                    "id": "16539022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I agree it's a mess. How about I take a look at it since I know you've already done a lot of refactoring on this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-10T17:53:00.710+0000",
                    "updated": "2018-07-10T17:53:00.710+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16558658",
                    "id": "16558658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm going to attempt to split all the {{PyObject*}} conversion code out of {{numpy_to_arrow.cc}} and unify it with the related code in {{builtin_convert.cc}}. Since iteration is already special-cased in {{internal::VisitSequence}} this should allow a fair bit of cleanup. This is a pretty large project... I'm not sure I'll be able to get it done for 0.10.0 but I will try",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-26T17:35:27.199+0000",
                    "updated": "2018-07-26T17:35:27.199+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16560311",
                    "id": "16560311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm working on this in https://github.com/wesm/arrow/tree/ARROW-2814. This is going to be a pretty bloody refactoring because the NumPy array conversion path  supports masks while built-in Python objects do not. This means we probably need to pass a null mask down into the general {{VisitSequence}} and provide lambdas for both the null and non-null cases. I will see what I can do",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-27T20:47:38.801+0000",
                    "updated": "2018-07-27T20:47:38.801+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16560397",
                    "id": "16560397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving this to 0.11. Even if I can get this done in the next 2-3 days, I'd like [~xhochy] and [~pitrou] to spend a good amount of time reviewing (rather than rushing in a patch) so we can get this conversion path into a more maintainable state",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-27T22:07:13.705+0000",
                    "updated": "2018-07-27T22:07:13.705+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16560812",
                    "id": "16560812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Also I think the different strategies currently (one inference path looks at all elements, while the other looks at the first element only) means there is a performance difference.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-28T17:21:50.719+0000",
                    "updated": "2018-07-28T17:21:50.719+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16560906",
                    "id": "16560906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I am implementing short-circuiting logic to address this. I'll implement a number of benchmarks to be able to look at the perf before and after I'm done refactoring",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-28T21:41:47.630+0000",
                    "updated": "2018-07-28T21:41:47.630+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16564546",
                    "id": "16564546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm making progress on this. The refactoring is pretty ugly; it will take some time to review. I'm cleaning up some other things en route to consolidating the conversion paths. Hopefully I'll have a patch to review by early next week (week of August 6)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-08-01T00:23:52.371+0000",
                    "updated": "2018-08-01T00:23:52.371+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170818/comment/16575176",
                    "id": "16575176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2366\n[https://github.com/apache/arrow/pull/2366]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-08-09T17:31:16.512+0000",
                    "updated": "2018-08-09T17:31:16.512+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vo2f:",
        "customfield_12314139": null
    }
}