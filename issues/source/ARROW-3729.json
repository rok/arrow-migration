{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197238",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238",
    "key": "ARROW-3729",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12563539",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12563539",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "outwardIssue": {
                    "id": "13240233",
                    "key": "PARQUET-1603",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240233",
                    "fields": {
                        "summary": "[C++] rename parquet::LogicalType to parquet::ConvertedType",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            },
            {
                "id": "12562869",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12562869",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13127684",
                    "key": "ARROW-1957",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13127684",
                    "fields": {
                        "summary": "[Python] Write nanosecond timestamps using new NANO LogicalType Parquet unit",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12550059",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12550059",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13182442",
                    "key": "PARQUET-1411",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13182442",
                    "fields": {
                        "summary": "[C++] Upgrade to use LogicalType annotations instead of ConvertedType",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tpboudreau",
            "name": "tpboudreau",
            "key": "tpboudreau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "TP Boudreau",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3729/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 48,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on pull request #4421: ARROW-3729: Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421\n \n \n   This PR causes the Arrow Parquet I/O facility to recognize Parquet logical annotations (parquet.thrift LogicalType's) on read and to generate them (rather than converted types) on write.\r\n   \r\n   Since Parquet logical annotations include nanosecond timestamps, this patch satisfies the feature requested in ARROW-3279.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T00:15:22.919+0000",
                    "updated": "2019-05-31T00:15:22.919+0000",
                    "started": "2019-05-31T00:15:22.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251415",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497530360\n \n \n   All suggestions and corrections are obviously welcome.  Most of the changes are straightforward, but let me mention a few places where decisions had to be made:\r\n   \r\n   1. The Parquet TimeAnnotation records whether or not the time value is adjusted to UTC.  The Arrow time32 and time64 types don't carry any timezone/UTC-adjusted information.  In this patch, on write (from Arrow to Parquet), time32/64 types are unconditionally annotated with is_adjusted_to_utc := true -- as Arrow time types assume their values are adjusted (they must, because they're currently written to Parquet as converted type TIME_MILLIS or TIME_MICROS which are assumed to be UTC adjusted).  On read (Parquet to Arrow), if a TimeAnnotation has is_adjusted_to_utc==false, an error is returned (otherwise a simple round-trip thru Arrow would flip the flag).  Please let me know if you think different actions are better.\r\n   \r\n   2. Both the Parquet TimestampAnnotation and the arrow::timestamp type record timezone relate information, but they do it differently: the Arrow timestamp stores a string indicating the timezone, while the Parquet timestamp has a boolean for is_adjusted_to_utc (abusing the word timezone a bit, Parquet allows one to record timezone==UTC or timezone=={all others}).  In this patch:\r\n   \r\n    - On write (Arrow to Parquet), the timezone field is interrogated and if either it is empty (UTC assumed) or it explicitly names UTC (or a synonym*) then the resulting TimestampAnnotation will have is_adjusted_to_utc := true.  Please let me know if this approach is appropriate.\r\n   \r\n   [* - I'm not aware of any Arrow canonical list or format for the timezone string, nor of any validation that takes place on it, so I've assumed that the field can be freeform.  So even if the approach above is adopted the synonym list should be separately considered.] \r\n   \r\n    - On read (Parquet to Arrow), if a TimestampAnnotation has is_adjusted_to_utc == false, the resulting Arrow timestamp type must contain a timezone (to avoid being implicitly UTC), but the original timezone is not available.  In this iteration, I've chosen to record the timezone as \"Local\" in this case.  There doesn't seem to be a perfect choice: \"Local\" conveys that it's not UTC, but perhaps falsely implies that the timezone in the reader's locale is meant; \"Unknown\" implies that it's not UTC (weakly, by its presence in the timestamp type), but might be ignored -- it's intention is not obvious; \"NonUTC\", \"Other\", or something similar is arguably the most accurate, but seems very unusual.  Again, please let me know if the general approach of recording *some* timezone string is acceptable and if so what the string should be.\r\n   \r\n   One last note: there are several Parquet annotations that can not be represented as Arrow types (UUID, JSON, etc.).  We might want to consider using Arrow's extension type mechanism for these so that the annotation is not completely lost.  (Probably that's for another PR.)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T00:16:29.123+0000",
                    "updated": "2019-05-31T00:16:29.123+0000",
                    "started": "2019-05-31T00:16:29.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251416",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497530360\n \n \n   All suggestions and corrections are obviously welcome.  Most of the changes are straightforward, but let me mention a few places where decisions had to be made:\r\n   \r\n   1. The Parquet TimeAnnotation records whether or not the time value is adjusted to UTC.  The Arrow time32 and time64 types don't carry any timezone/UTC-adjusted information.  In this patch, on write (from Arrow to Parquet), time32/64 types are unconditionally annotated with is_adjusted_to_utc := true -- as Arrow time types assume their values are adjusted (they must, because they're currently written to Parquet as converted type TIME_MILLIS or TIME_MICROS which are assumed to be UTC adjusted).  On read (Parquet to Arrow), if a TimeAnnotation has is_adjusted_to_utc==false, an error is returned (otherwise a simple round-trip thru Arrow would flip the flag).  Please let me know if you think different actions are better.\r\n   \r\n   2. Both the Parquet TimestampAnnotation and the arrow::timestamp type record timezone relate information, but they do it differently: the Arrow timestamp stores a string indicating the timezone, while the Parquet timestamp has a boolean for is_adjusted_to_utc (abusing the word timezone a bit, Parquet allows one to record timezone==UTC or timezone=={all others}).  In this patch:\r\n   \r\n    * On write (Arrow to Parquet), the timezone field is interrogated and if either it is empty (UTC assumed) or it explicitly names UTC (or a synonym*) then the resulting TimestampAnnotation will have is_adjusted_to_utc := true.  Please let me know if this approach is appropriate.\r\n   \r\n   > * - I'm not aware of any Arrow canonical list or format for the timezone string, nor of any validation that takes place on it, so I've assumed that the field can be freeform.  So even if the approach above is adopted the synonym list should be separately considered.\r\n   \r\n    * On read (Parquet to Arrow), if a TimestampAnnotation has is_adjusted_to_utc == false, the resulting Arrow timestamp type must contain a timezone (to avoid being implicitly UTC), but the original timezone is not available.  In this iteration, I've chosen to record the timezone as \"Local\" in this case.  There doesn't seem to be a perfect choice: \"Local\" conveys that it's not UTC, but perhaps falsely implies that the timezone in the reader's locale is meant; \"Unknown\" implies that it's not UTC (weakly, by its presence in the timestamp type), but might be ignored -- it's intention is not obvious; \"NonUTC\", \"Other\", or something similar is arguably the most accurate, but seems very unusual.  Again, please let me know if the general approach of recording *some* timezone string is acceptable and if so what the string should be.\r\n   \r\n   One last note: there are several Parquet annotations that can not be represented as Arrow types (UUID, JSON, etc.).  We might want to consider using Arrow's extension type mechanism for these so that the annotation is not completely lost.  (Probably that's for another PR.)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T00:19:53.465+0000",
                    "updated": "2019-05-31T00:19:53.465+0000",
                    "started": "2019-05-31T00:19:53.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251417",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497530360\n \n \n   All suggestions and corrections are obviously welcome.  Most of the changes are straightforward, but let me mention a few places where decisions had to be made:\r\n   \r\n   1. The Parquet TimeAnnotation records whether or not the time value is adjusted to UTC.  The Arrow time32 and time64 types don't carry any timezone/UTC-adjusted information.  In this patch, on write (from Arrow to Parquet), time32/64 types are unconditionally annotated with is_adjusted_to_utc := true -- as Arrow time types assume their values are adjusted (they must, because they're currently written to Parquet as converted type TIME_MILLIS or TIME_MICROS which are assumed to be UTC adjusted).  On read (Parquet to Arrow), if a TimeAnnotation has is_adjusted_to_utc==false, an error is returned (otherwise a simple round-trip thru Arrow would flip the flag).  Please let me know if you think different actions are better.\r\n   \r\n   2. Both the Parquet TimestampAnnotation and the arrow::timestamp type record timezone relate information, but they do it differently: the Arrow timestamp stores a string indicating the timezone, while the Parquet timestamp has a boolean for is_adjusted_to_utc (abusing the word timezone a bit, Parquet allows one to record timezone==UTC or timezone=={all others}).  In this patch:\r\n   \r\n    * On write (Arrow to Parquet), the timezone field is interrogated and if either it is empty (UTC assumed) or it explicitly names UTC (or a synonym*) then the resulting TimestampAnnotation will have is_adjusted_to_utc := true.  Please let me know if this approach is appropriate.\r\n   \r\n   > * - I'm not aware of any Arrow canonical list or format for the timezone string, nor of any validation that takes place on it, so I've assumed that the field can be freeform.  So even if the approach above is adopted the synonym list should be separately considered.\r\n   \r\n    * On read (Parquet to Arrow), if a TimestampAnnotation has is_adjusted_to_utc == false, the resulting Arrow timestamp type must contain a timezone (to avoid being implicitly UTC), but the original timezone is not available.  In this iteration, I've chosen to record the timezone as \"Local\" in this case.  There doesn't seem to be a perfect choice: \"Local\" conveys that it's not UTC, but perhaps falsely implies that the timezone in the reader's locale is meant; \"Unknown\" implies that it's not UTC (weakly, by its presence in the timestamp type), but might be ignored -- its intention is not obvious; \"NonUTC\", \"Other\", or something similar is arguably the most accurate, but seems very unusual.  Again, please let me know if the general approach of recording *some* timezone string is acceptable and if so what the string should be.\r\n   \r\n   One last note: there are several Parquet annotations that can not be represented as Arrow types (UUID, JSON, etc.).  We might want to consider using Arrow's extension type mechanism for these so that the annotation is not completely lost.  (Probably that's for another PR.)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T00:27:31.264+0000",
                    "updated": "2019-05-31T00:27:31.264+0000",
                    "started": "2019-05-31T00:27:31.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251422",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497535905\n \n \n   I can see already (from the Python/pandas CI test failure) that timezone=\"Local\" is not going to work (not surprised).  I haven't done much with the pyarrow code so it's going to take me a bit of time to get set up and dig into that.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T00:50:06.915+0000",
                    "updated": "2019-05-31T00:50:06.915+0000",
                    "started": "2019-05-31T00:50:06.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251426",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/251842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497754194\n \n \n   Marking this as WIP while I sort through a few issues.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T15:34:01.599+0000",
                    "updated": "2019-05-31T15:34:01.599+0000",
                    "started": "2019-05-31T15:34:01.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251842",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/252161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497896999\n \n \n   Please ignore my earlier comment about temporal types and timezone issues.\r\n   \r\n   After reviewing analogous code in parquet-mr, I think I was incorrect in interpreting the fact that Arrow currently translates Arrow timestamps without timezones to Parquet TIMESTAMP_MILLIS/MICROS as implying that the Arrow timestamps were implicitly UTC.  The less attenuated explanation is that Arrow just chose the closest available Parquet type (even though it was lossy), and the Parquet TIMESTAMP_* types probably didn't even imply adjusted to UTC until the parquet.thrift TimestampType LogicalType introduced the concept.\r\n   \r\n   So the type translations are much simpler:\r\n   \r\n   For timestamps:\r\n   \r\n   arrow::timestamp($unit) -> parquet::TimestampAnnotation(false, $unit)\r\n   arrow::timestamp($unit, \"UTC\") -> parquet::TimestampAnnotation(true, $unit)\r\n   arrow::timestamp($unit, \"anything/else\") -> parquet::TimestampAnnotation(false, $unit)\r\n   \r\n   parquet::TimestampAnnotation(false, $unit) -> arrow::timestamp($unit)\r\n   parquet::TimestampAnnotation(true, $unit) -> arrow::timestamp($unit, \"UTC\")\r\n   \r\n   And for times:\r\n   \r\n   arrow::time32/64($unit) -> parquet::TimeAnnotation(false, $unit)\r\n   \r\n   parquet::TimeAnnotation(false, $unit) -> arrow::time32/64($unit)\r\n   parquet::TimeAnnotation(true, $unit) -> arrow::time32/64($unit)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-01T00:32:25.851+0000",
                    "updated": "2019-06-01T00:32:25.851+0000",
                    "started": "2019-06-01T00:32:25.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "252161",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/252860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497530360\n \n \n   EDIT: please **IGNORE** this comment, it is superseded below.\r\n   \r\n   \r\n   All suggestions and corrections are obviously welcome.  Most of the changes are straightforward, but let me mention a few places where decisions had to be made:\r\n   \r\n   1. The Parquet TimeAnnotation records whether or not the time value is adjusted to UTC.  The Arrow time32 and time64 types don't carry any timezone/UTC-adjusted information.  In this patch, on write (from Arrow to Parquet), time32/64 types are unconditionally annotated with is_adjusted_to_utc := true -- as Arrow time types assume their values are adjusted (they must, because they're currently written to Parquet as converted type TIME_MILLIS or TIME_MICROS which are assumed to be UTC adjusted).  On read (Parquet to Arrow), if a TimeAnnotation has is_adjusted_to_utc==false, an error is returned (otherwise a simple round-trip thru Arrow would flip the flag).  Please let me know if you think different actions are better.\r\n   \r\n   2. Both the Parquet TimestampAnnotation and the arrow::timestamp type record timezone relate information, but they do it differently: the Arrow timestamp stores a string indicating the timezone, while the Parquet timestamp has a boolean for is_adjusted_to_utc (abusing the word timezone a bit, Parquet allows one to record timezone==UTC or timezone=={all others}).  In this patch:\r\n   \r\n    * On write (Arrow to Parquet), the timezone field is interrogated and if either it is empty (UTC assumed) or it explicitly names UTC (or a synonym*) then the resulting TimestampAnnotation will have is_adjusted_to_utc := true.  Please let me know if this approach is appropriate.\r\n   \r\n   > * - I'm not aware of any Arrow canonical list or format for the timezone string, nor of any validation that takes place on it, so I've assumed that the field can be freeform.  So even if the approach above is adopted the synonym list should be separately considered.\r\n   \r\n    * On read (Parquet to Arrow), if a TimestampAnnotation has is_adjusted_to_utc == false, the resulting Arrow timestamp type must contain a timezone (to avoid being implicitly UTC), but the original timezone is not available.  In this iteration, I've chosen to record the timezone as \"Local\" in this case.  There doesn't seem to be a perfect choice: \"Local\" conveys that it's not UTC, but perhaps falsely implies that the timezone in the reader's locale is meant; \"Unknown\" implies that it's not UTC (weakly, by its presence in the timestamp type), but might be ignored -- its intention is not obvious; \"NonUTC\", \"Other\", or something similar is arguably the most accurate, but seems very unusual.  Again, please let me know if the general approach of recording *some* timezone string is acceptable and if so what the string should be.\r\n   \r\n   One last note: there are several Parquet annotations that can not be represented as Arrow types (UUID, JSON, etc.).  We might want to consider using Arrow's extension type mechanism for these so that the annotation is not completely lost.  (Probably that's for another PR.)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-02T20:45:21.950+0000",
                    "updated": "2019-06-02T20:45:21.950+0000",
                    "started": "2019-06-02T20:45:21.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "252860",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/252861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-497530360\n \n \n   EDIT: please **IGNORE** this comment, it is superseded below.\r\n   ___\r\n   \r\n   All suggestions and corrections are obviously welcome.  Most of the changes are straightforward, but let me mention a few places where decisions had to be made:\r\n   \r\n   1. The Parquet TimeAnnotation records whether or not the time value is adjusted to UTC.  The Arrow time32 and time64 types don't carry any timezone/UTC-adjusted information.  In this patch, on write (from Arrow to Parquet), time32/64 types are unconditionally annotated with is_adjusted_to_utc := true -- as Arrow time types assume their values are adjusted (they must, because they're currently written to Parquet as converted type TIME_MILLIS or TIME_MICROS which are assumed to be UTC adjusted).  On read (Parquet to Arrow), if a TimeAnnotation has is_adjusted_to_utc==false, an error is returned (otherwise a simple round-trip thru Arrow would flip the flag).  Please let me know if you think different actions are better.\r\n   \r\n   2. Both the Parquet TimestampAnnotation and the arrow::timestamp type record timezone relate information, but they do it differently: the Arrow timestamp stores a string indicating the timezone, while the Parquet timestamp has a boolean for is_adjusted_to_utc (abusing the word timezone a bit, Parquet allows one to record timezone==UTC or timezone=={all others}).  In this patch:\r\n   \r\n    * On write (Arrow to Parquet), the timezone field is interrogated and if either it is empty (UTC assumed) or it explicitly names UTC (or a synonym*) then the resulting TimestampAnnotation will have is_adjusted_to_utc := true.  Please let me know if this approach is appropriate.\r\n   \r\n   > * - I'm not aware of any Arrow canonical list or format for the timezone string, nor of any validation that takes place on it, so I've assumed that the field can be freeform.  So even if the approach above is adopted the synonym list should be separately considered.\r\n   \r\n    * On read (Parquet to Arrow), if a TimestampAnnotation has is_adjusted_to_utc == false, the resulting Arrow timestamp type must contain a timezone (to avoid being implicitly UTC), but the original timezone is not available.  In this iteration, I've chosen to record the timezone as \"Local\" in this case.  There doesn't seem to be a perfect choice: \"Local\" conveys that it's not UTC, but perhaps falsely implies that the timezone in the reader's locale is meant; \"Unknown\" implies that it's not UTC (weakly, by its presence in the timestamp type), but might be ignored -- its intention is not obvious; \"NonUTC\", \"Other\", or something similar is arguably the most accurate, but seems very unusual.  Again, please let me know if the general approach of recording *some* timezone string is acceptable and if so what the string should be.\r\n   \r\n   One last note: there are several Parquet annotations that can not be represented as Arrow types (UUID, JSON, etc.).  We might want to consider using Arrow's extension type mechanism for these so that the annotation is not completely lost.  (Probably that's for another PR.)\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-02T20:45:53.756+0000",
                    "updated": "2019-06-02T20:45:53.756+0000",
                    "started": "2019-06-02T20:45:53.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "252861",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/252862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498064119\n \n \n   This PR is ready for review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-02T20:46:53.918+0000",
                    "updated": "2019-06-02T20:46:53.918+0000",
                    "started": "2019-06-02T20:46:53.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "252862",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498413899\n \n \n   In\r\n   \r\n   ```\r\n   arrow::timestamp($unit, \"UTC\") -> parquet::TimestampAnnotation(true, $unit)\r\n   arrow::timestamp($unit, \"anything/else\") -> parquet::TimestampAnnotation(false, $unit)\r\n   ```\r\n   \r\n   I don't think this is right. If an Arrow timestamp is tz-aware, then it is normalized to UTC. Otherwise isAdjustedToUTC should be false\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T20:28:26.846+0000",
                    "updated": "2019-06-03T20:28:26.846+0000",
                    "started": "2019-06-03T20:28:26.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253330",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498431111\n \n \n   I'll do as you ask, but to me that doesn't seem like the natural interpretation of isAdjustedToUTC.  I took it to mean that the timestamps *were* UTC and, for example, could be safely compared with any other timestamps that show isAdjustedToUTC==true.  Your interpretation would have arrow::timestamp(..., \"CET\") and arrow::timestamp(..., \"EST\") both recorded as parquet::Timestamp(true, ...).\r\n   \r\n   A second practical problem would be that a round trip thru parquet would lose information:  \r\n   arrow::timestamp(..., \"CET\") -> parquet::Timestamp(true, ...) -> arrow::timestamp(..., timezone?).  Either you would lose timezone awaredness (if timezone := \"\") or you'd collapse all timestamps to the same timezone (if, say, timezone := \"UTC\").\r\n   \r\n   But I could certainly be missing something.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T21:21:01.383+0000",
                    "updated": "2019-06-03T21:21:01.383+0000",
                    "started": "2019-06-03T21:21:01.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253377",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498431111\n \n \n   I'll do as you ask, but to me that doesn't seem like the natural interpretation of isAdjustedToUTC.  I took it to mean that the timestamps *were* UTC and, for example, could be safely compared with any other timestamps that show isAdjustedToUTC==true.  Your interpretation would have arrow::timestamp(..., \"CET\") and arrow::timestamp(..., \"EST\") both recorded as parquet::Timestamp(true, ...).\r\n   \r\n   A second practical problem would be that a round trip thru parquet would lose information:  \r\n   arrow::timestamp(..., \"CET\") -> parquet::Timestamp(true, ...) -> arrow::timestamp(..., timezone?).  Either you would lose timezone awaredness (if timezone := \"\") or you'd collapse all timestamps to the same timezone (if, say, timezone := \"UTC\").\r\n   \r\n   But I could certainly be missing something.\r\n   \r\n   EDIT: small correction in the last sentence -- you couldn't lose timezone awaredness (we'd never assign the empty string), but you would lose information by collapsing all original timezones to one timezone string.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T21:36:50.071+0000",
                    "updated": "2019-06-03T21:36:50.071+0000",
                    "started": "2019-06-03T21:36:50.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253381",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498440005\n \n \n   Parquet and Arrow are semantically distinct in this regard. Parquet does not have a \"with timezone\" concept, so if we want to preserve the timezone through Parquet round trip we have to use custom schema metadata.\r\n   \r\n   So Arrow has 3 different cases\r\n   \r\n   * No time zone, no presumption of UTC normalization\r\n   * UTC time zone, values UTC-normalized\r\n   * Some other time zone, values UTC-normalized\r\n   \r\n   I think there is still some value in communicating UTC-normalization in the third case to other Parquet consumers, otherwise they may interpret the data as localtime which is not what we want.  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T21:51:28.641+0000",
                    "updated": "2019-06-03T21:51:28.641+0000",
                    "started": "2019-06-03T21:51:28.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253405",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498440362\n \n \n   cc to @xhochy for additional thoughts. If everyone disagrees with me then I suppose that's OK =) \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T21:52:37.960+0000",
                    "updated": "2019-06-03T21:52:37.960+0000",
                    "started": "2019-06-03T21:52:37.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253407",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498447117\n \n \n   I hadn't considered the possibility of using custom metadata to stash the original timezone -- that's a good idea.  It still seems to me that adjusted to UTC flag should be false in that third case, but I'll gladly set it however you all decide.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T22:17:49.782+0000",
                    "updated": "2019-06-03T22:17:49.782+0000",
                    "started": "2019-06-03T22:17:49.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253432",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498742435\n \n \n   I've looked quickly into stashing Arrow timestamp timezones as key-value metadata and, while I think it's worthwhile, it's not a trivial addition.  So I'm changing this PR back to WIP while I sort thru it.  (I'm not able to work on this immediately.)\r\n   \r\n   My initial plan is to add keys like \"arrow:FIELDNAME.timestamp.timezone\"=\"...\" (with crude namespacing) to the file metadata just before writing parquet files and to strip those keys out of the metadata immediately after use on reading parquet files.  I'd do this to avoid having this user metadata get cluttered with internal, non-application junk and also hopefully to avoid any need to maintain type information in multiple places if, say, field types change, fields are renamed, maybe names reused, etc.\r\n   \r\n   I realize that's a fairly vague sketch, but if anything jumps out as objectionable, please let me know.  Otherwise I'll update the PR when I can.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T16:20:18.501+0000",
                    "updated": "2019-06-04T16:20:18.501+0000",
                    "started": "2019-06-04T16:20:18.500+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253834",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/253839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-498742435\n \n \n   I've looked quickly into stashing Arrow timestamp timezones as key-value metadata and, while I think it's worthwhile, it's not a trivial addition.  So I'm changing this PR back to WIP while I sort thru it.  (I'm not able to work on this immediately.)\r\n   \r\n   My initial plan is to add keys like \"arrow:FIELDNAME.timestamp.timezone\"=\"...\" (with crude namespacing) to the file metadata just before writing parquet files and to strip those keys out of the metadata immediately after use on reading parquet files.  I'd do this to avoid having the user metadata get cluttered with internal, non-application junk and also hopefully to avoid any need to maintain type information in multiple places if, say, field types change, fields are renamed, maybe names reused, etc.\r\n   \r\n   I realize that's a fairly vague sketch, but if anything jumps out as objectionable, please let me know.  Otherwise I'll update the PR when I can.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T16:29:49.266+0000",
                    "updated": "2019-06-04T16:29:49.266+0000",
                    "started": "2019-06-04T16:29:49.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253839",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/256352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tpboudreau commented on issue #4421: WIP: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-500088898\n \n \n   This PR is ready for review (again, sorry).\r\n   \r\n   Two quick notes:\r\n   \r\n   1.  Preserving timezones.  The changes required to preserve Arrow timestamp timezone strings turned out to be imperfect and a bit intrusive:\r\n   - Intrusive because, since Parquet doesn't have per node key-value metadata, the only available option is to store the extra timezone information in the file level metadata.  This required transitively passing a map for accumulating the metadata as the Parquet schema is built on write (and similar for building an Arrow schema on read), and thus slightly altering several internal function signatures and requiring the introduction a new overload for the public ToParquetSchema().\r\n   - Imperfect because, since there is no guarantee that Arrow field names are unique (correct?), the best I could see to do is to use the full column path name for each field/node as part of its metadata key and to stop processing if a key collision was detected.\r\n   \r\n   These timezone preservation changes are in an isolated commit, so they can be reverted if the committers decide not to include this functionality.\r\n   \r\n   2. isAdjustedToUTC flag.  Since I haven't heard any further word on it, for now I've left the code so that, when writing from Arrow to Parquet, the Parquet timestamp's isAdjustedToUTC flag is set to true only for Arrow timestamps that have a \"UTC\" timezone (and false if any other timezone or no timezone is present).  I continue to think that's the correct action (otherwise any Parquet reader other than the Arrow reader could see timestamps that might originally have had several different timezones all uniformly showing isAdjustedToUTC==true, which IMHO would be misleading).  But this decision is above my pay-grade, so I'll make any necessary changes you all decide.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T03:10:39.059+0000",
                    "updated": "2019-06-08T03:10:39.059+0000",
                    "started": "2019-06-08T03:10:39.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256352",
                    "issueId": "13197238"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/worklog/256866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4421: ARROW-3729: [C++][Parquet] Use logical annotations in Arrow Parquet reader/writer\nURL: https://github.com/apache/arrow/pull/4421#issuecomment-500433708\n \n \n   Thanks @tpboudreau -- I will review this and get you some feedback. The time zone issue is annoying, we might want to develop a codified solution for serializing Arrow time zones in the schema (so other Parquet producers can produce the same metadata)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T14:19:03.227+0000",
                    "updated": "2019-06-10T14:19:03.227+0000",
                    "started": "2019-06-10T14:19:03.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256866",
                    "issueId": "13197238"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@48782b02[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e526c39[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3af841bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4736d17f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7525d69c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4caa526a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34a707eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@456b8529[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e213a2e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@60282[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c12c536[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15c95b50[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 19 21:15:33 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-19T21:15:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3729/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-11-08T21:21:19.000+0000",
        "updated": "2019-06-19T21:15:44.000+0000",
        "timeoriginalestimate": null,
        "description": "This was brought up on the mailing list.\r\n\r\nWe also will need to do corresponding work in the parquet-cpp library to opt in to writing nanosecond timestamps instead of casting to micro- or millisecond.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Support for writing TIMESTAMP_NANOS Parquet metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/comment/16849240",
                    "id": "16849240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tpboudreau",
                        "name": "tpboudreau",
                        "key": "tpboudreau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "TP Boudreau",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Could someone please assign this issue to me? I don't seem to be able to claim it myself. Thanks.\r\n\r\nThe enhancement I'm contemplating (and have largely completed) involves\u00a0switching over to using\u00a0(that is, generating on write, recognizing on read) the new parquet.thrift\u00a0LogicalType (aka \"annotation\") metadata recently introduced into parquet-cpp (see PARQUET-1411).\u00a0 Thus the patch will be broader than just adding nanosecond units to timestamps, but will include that.\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tpboudreau",
                        "name": "tpboudreau",
                        "key": "tpboudreau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "TP Boudreau",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-05-27T22:22:43.386+0000",
                    "updated": "2019-05-27T22:22:43.386+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/comment/16849415",
                    "id": "16849415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "[~tpboudreau] assigned to you and also gave you the permissions so that you can do it by yourself.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2019-05-28T07:26:55.141+0000",
                    "updated": "2019-05-28T07:26:55.141+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197238/comment/16868013",
                    "id": "16868013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4421\n[https://github.com/apache/arrow/pull/4421]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-19T21:15:33.310+0000",
                    "updated": "2019-06-19T21:15:33.310+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|s00an4:",
        "customfield_12314139": null
    }
}