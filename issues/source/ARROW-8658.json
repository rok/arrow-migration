{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13302187",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187",
    "key": "ARROW-8658",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12610120",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12610120",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13360956",
                    "key": "ARROW-11781",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360956",
                    "fields": {
                        "summary": "[Python] Reading small amount of files from a partitioned dataset is unexpectedly slow",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18600,
            "total": 18600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8658/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/563842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670\n\n\n   TODO:\r\n   - [ ] Add benchmarks to be sure this provides an advantage\r\n   - [ ] Move Forest to dataset_internal.h or so, since it is not used anywhere else\r\n   - [ ] Unit test SubtreeImpl, add more comments\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T15:50:38.227+0000",
                    "updated": "2021-03-10T15:50:38.227+0000",
                    "started": "2021-03-10T15:50:38.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563842",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/563866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-795687724\n\n\n   https://issues.apache.org/jira/browse/ARROW-8658\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T16:25:42.694+0000",
                    "updated": "2021-03-10T16:25:42.694+0000",
                    "started": "2021-03-10T16:25:42.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563866",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/563874",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r591666392\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       I guess it's to work with std::basic_string, but then I'm curious why you're favoring that over std::vector.\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       nit: any particular reason for char32_t over say uint32_t or size_t (since it is a vector index)? And in any case, it doesn't match the static_cast below on line 176.\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       Ah - to get the lexicographic sort down below. I think future readers might appreciate a note about that since it's not immediately obvious + is an unusual choice of types otherwise.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T16:33:49.443+0000",
                    "updated": "2021-03-10T16:33:49.443+0000",
                    "started": "2021-03-10T16:33:49.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563874",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r591894657\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       Also: basic_string has the short string approximation in most standard libraries (so a string with as many as 4 `expression_code`s will probably be stored without allocation) and supports hashing out of the box\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T21:45:04.478+0000",
                    "updated": "2021-03-10T21:45:04.478+0000",
                    "started": "2021-03-10T21:45:04.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564069",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r591895955\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       Ideally this hack would be replaced by a single buffer of expression codes indexed into by `SubtreeImpl::Encoded::partition_expression` and friends\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T21:47:26.054+0000",
                    "updated": "2021-03-10T21:47:26.054+0000",
                    "started": "2021-03-10T21:47:26.054+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564073",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r591895955\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +132,174 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+namespace {\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  using expression_code = char32_t;\n\nReview comment:\n       Ideally this hack would be replaced by a single buffer of expression codes indexed into by `SubtreeImpl::Encoded::partition_expression` and friends. This would give us a guarantee that even \"deep\" partitionings would not require lots of small buffers at the cost of complicating hashing and comparison\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T21:50:11.724+0000",
                    "updated": "2021-03-10T21:50:11.724+0000",
                    "started": "2021-03-10T21:50:11.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564077",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796201473\n\n\n   On a quick benchmark, this is a two orders of magnitude speedup! Though I'm also going to test some other scenarios + add unit tests.\r\n   \r\n   Before:\r\n   \r\n   ```\r\n   ---------------------------------------------------------------\r\n   Benchmark                     Time             CPU   Iterations\r\n   ---------------------------------------------------------------\r\n   GetAllFragments        83434318 ns     83433416 ns           17\r\n   GetFilteredFragments  502654017 ns    502651704 ns            3\r\n   ```\r\n   \r\n   After:\r\n   \r\n   ```\r\n   ---------------------------------------------------------------\r\n   Benchmark                     Time             CPU   Iterations\r\n   ---------------------------------------------------------------\r\n   GetAllFragments        72942933 ns     72941992 ns           19\r\n   GetFilteredFragments    5630666 ns      5630548 ns          250\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T22:06:16.787+0000",
                    "updated": "2021-03-10T22:06:16.787+0000",
                    "started": "2021-03-10T22:06:16.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564088",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796324009\n\n\n   Before:\r\n   ```\r\n   ---------------------------------------------------------------------------\r\n   Benchmark                                 Time             CPU   Iterations\r\n   ---------------------------------------------------------------------------\r\n   GetAllFragments                    77918155 ns     77914414 ns           18\r\n   GetFilteredFragments/single_dir   504830505 ns    504788164 ns            3\r\n   GetFilteredFragments/single_file 1135530755 ns   1135494963 ns            1\r\n   GetFilteredFragments/range        509878962 ns    509855374 ns            3\r\n   ```\r\n   \r\n   After:\r\n   ```\r\n   ---------------------------------------------------------------------------\r\n   Benchmark                                 Time             CPU   Iterations\r\n   ---------------------------------------------------------------------------\r\n   GetAllFragments                    67112654 ns     67106684 ns           21\r\n   GetFilteredFragments/single_dir     5564513 ns      5564443 ns          246\r\n   GetFilteredFragments/single_file   12560697 ns     12560479 ns          111\r\n   GetFilteredFragments/range         71451702 ns     71449949 ns           19\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T00:35:18.070+0000",
                    "updated": "2021-03-11T00:35:18.070+0000",
                    "started": "2021-03-11T00:35:18.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564179",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592351160\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +130,69 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+void FileSystemDataset::SetupSubtreePruning() {\n+  SubtreeImpl impl;\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+  auto encoded = impl.EncodeFragments(fragments_);\n+\n+  std::sort(encoded.begin(), encoded.end(),\n+            [](const SubtreeImpl::Encoded& l, const SubtreeImpl::Encoded& r) {\n+              return l.partition_expression < r.partition_expression;\n+            });\n+\n+  for (const auto& e : encoded) {\n+    if (e.fragment_index) {\n+      fragments_and_subtrees_.emplace_back(*e.fragment_index);\n+    } else {\n+      fragments_and_subtrees_.emplace_back(impl.GetSubtreeExpression(e));\n+    }\n+  }\n+\n+  forest_ = Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n+    if (encoded[l].fragment_index) {\n+      // Fragment: not an ancestor.\n+      return false;\n+    }\n+\n+    const auto& ancestor = encoded[l].partition_expression;\n+    const auto& descendant = encoded[r].partition_expression;\n+\n+    if (descendant.size() >= ancestor.size()) {\n+      return std::equal(ancestor.begin(), ancestor.end(), descendant.begin());\n     }\n+    return false;\n+  });\n+}\n+\n+Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n\nReview comment:\n       Probably a worthwhile special case:\r\n   ```suggestion\r\n   Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\r\n     FragmentVector fragments;\r\n     if (predicate == literal(true)) {\r\n       fragments.resize(fragments_.size());\r\n       std::copy(fragments_.begin(), fragments_.end(), fragments.begin());\r\n       return MakeVectorIterator(std::move(fragments));\r\n     }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:17:17.247+0000",
                    "updated": "2021-03-11T13:17:17.247+0000",
                    "started": "2021-03-11T13:17:17.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564589",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592351160\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +130,69 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+void FileSystemDataset::SetupSubtreePruning() {\n+  SubtreeImpl impl;\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+  auto encoded = impl.EncodeFragments(fragments_);\n+\n+  std::sort(encoded.begin(), encoded.end(),\n+            [](const SubtreeImpl::Encoded& l, const SubtreeImpl::Encoded& r) {\n+              return l.partition_expression < r.partition_expression;\n+            });\n+\n+  for (const auto& e : encoded) {\n+    if (e.fragment_index) {\n+      fragments_and_subtrees_.emplace_back(*e.fragment_index);\n+    } else {\n+      fragments_and_subtrees_.emplace_back(impl.GetSubtreeExpression(e));\n+    }\n+  }\n+\n+  forest_ = Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n+    if (encoded[l].fragment_index) {\n+      // Fragment: not an ancestor.\n+      return false;\n+    }\n+\n+    const auto& ancestor = encoded[l].partition_expression;\n+    const auto& descendant = encoded[r].partition_expression;\n+\n+    if (descendant.size() >= ancestor.size()) {\n+      return std::equal(ancestor.begin(), ancestor.end(), descendant.begin());\n     }\n+    return false;\n+  });\n+}\n+\n+Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n\nReview comment:\n       Probably a worthwhile special case:\r\n   ```suggestion\r\n   Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\r\n     if (predicate == literal(true)) {\r\n       return MakeVectorIterator(FragmentVector(fragments_.begin(), fragments_.end()));\r\n     }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:18:54.602+0000",
                    "updated": "2021-03-11T13:18:54.602+0000",
                    "started": "2021-03-11T13:18:54.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564590",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592351160\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +130,69 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+void FileSystemDataset::SetupSubtreePruning() {\n+  SubtreeImpl impl;\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+  auto encoded = impl.EncodeFragments(fragments_);\n+\n+  std::sort(encoded.begin(), encoded.end(),\n+            [](const SubtreeImpl::Encoded& l, const SubtreeImpl::Encoded& r) {\n+              return l.partition_expression < r.partition_expression;\n+            });\n+\n+  for (const auto& e : encoded) {\n+    if (e.fragment_index) {\n+      fragments_and_subtrees_.emplace_back(*e.fragment_index);\n+    } else {\n+      fragments_and_subtrees_.emplace_back(impl.GetSubtreeExpression(e));\n+    }\n+  }\n+\n+  forest_ = Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n+    if (encoded[l].fragment_index) {\n+      // Fragment: not an ancestor.\n+      return false;\n+    }\n+\n+    const auto& ancestor = encoded[l].partition_expression;\n+    const auto& descendant = encoded[r].partition_expression;\n+\n+    if (descendant.size() >= ancestor.size()) {\n+      return std::equal(ancestor.begin(), ancestor.end(), descendant.begin());\n     }\n+    return false;\n+  });\n+}\n+\n+Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n\nReview comment:\n       Probably a worthwhile special case:\r\n   ```suggestion\r\n   Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\r\n     if (predicate == literal(true)) {\r\n       // trivial predicate; skip subtree pruning\r\n       return MakeVectorIterator(FragmentVector(fragments_.begin(), fragments_.end()));\r\n     }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:19:29.796+0000",
                    "updated": "2021-03-11T13:19:29.796+0000",
                    "started": "2021-03-11T13:19:29.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564591",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592354257\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.h\n##########\n@@ -234,16 +234,24 @@ class ARROW_DS_EXPORT FileSystemDataset : public Dataset {\n   std::string ToString() const;\n \n  protected:\n+  explicit FileSystemDataset(std::shared_ptr<Schema> schema)\n+      : Dataset(std::move(schema)) {}\n+\n+  FileSystemDataset(std::shared_ptr<Schema> schema, Expression partition_expression)\n+      : Dataset(std::move(schema), partition_expression) {}\n+\n   Result<FragmentIterator> GetFragmentsImpl(Expression predicate) override;\n \n-  FileSystemDataset(std::shared_ptr<Schema> schema, Expression root_partition,\n-                    std::shared_ptr<FileFormat> format,\n-                    std::shared_ptr<fs::FileSystem> filesystem,\n-                    std::vector<std::shared_ptr<FileFragment>> fragments);\n+  void SetupSubtreePruning();\n \n   std::shared_ptr<FileFormat> format_;\n   std::shared_ptr<fs::FileSystem> filesystem_;\n   std::vector<std::shared_ptr<FileFragment>> fragments_;\n+\n+  // Forest for skipping fragments based on extracted subtree expressions\n+  Forest forest_;\n+  // fragment indices and subtree expressions in forest order\n+  std::vector<util::Variant<int, Expression>> fragments_and_subtrees_;\n\nReview comment:\n       We might prefer to wrap these in a pimpl so that Forest can be made internal\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:21:48.783+0000",
                    "updated": "2021-03-11T13:21:48.783+0000",
                    "started": "2021-03-11T13:21:48.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564593",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592357682\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -137,16 +130,69 @@ std::string FileSystemDataset::ToString() const {\n   return repr;\n }\n \n-Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n-  FragmentVector fragments;\n+void FileSystemDataset::SetupSubtreePruning() {\n+  SubtreeImpl impl;\n \n-  for (const auto& fragment : fragments_) {\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto simplified,\n-        SimplifyWithGuarantee(predicate, fragment->partition_expression()));\n-    if (simplified.IsSatisfiable()) {\n-      fragments.push_back(fragment);\n+  auto encoded = impl.EncodeFragments(fragments_);\n+\n+  std::sort(encoded.begin(), encoded.end(),\n+            [](const SubtreeImpl::Encoded& l, const SubtreeImpl::Encoded& r) {\n+              return l.partition_expression < r.partition_expression;\n+            });\n+\n+  for (const auto& e : encoded) {\n+    if (e.fragment_index) {\n+      fragments_and_subtrees_.emplace_back(*e.fragment_index);\n+    } else {\n+      fragments_and_subtrees_.emplace_back(impl.GetSubtreeExpression(e));\n+    }\n+  }\n+\n+  forest_ = Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n+    if (encoded[l].fragment_index) {\n+      // Fragment: not an ancestor.\n+      return false;\n+    }\n+\n+    const auto& ancestor = encoded[l].partition_expression;\n+    const auto& descendant = encoded[r].partition_expression;\n+\n+    if (descendant.size() >= ancestor.size()) {\n+      return std::equal(ancestor.begin(), ancestor.end(), descendant.begin());\n     }\n+    return false;\n+  });\n+}\n+\n+Result<FragmentIterator> FileSystemDataset::GetFragmentsImpl(Expression predicate) {\n+  std::vector<int> fragment_indices;\n+\n+  std::vector<Expression> predicates{predicate};\n+  RETURN_NOT_OK(forest_.Visit(\n+      [&](Forest::Ref ref) -> Result<bool> {\n+        if (auto fragment_index = util::get_if<int>(&fragments_and_subtrees_[ref.i])) {\n+          fragment_indices.push_back(*fragment_index);\n+          return false;\n+        }\n+\n+        const auto& subtree_expr = util::get<Expression>(fragments_and_subtrees_[ref.i]);\n+        ARROW_ASSIGN_OR_RAISE(auto simplified,\n+                              SimplifyWithGuarantee(predicates.back(), subtree_expr));\n+\n+        if (!simplified.IsSatisfiable()) {\n+          return false;\n+        }\n+\n+        predicates.push_back(std::move(simplified));\n+        return true;\n+      },\n+      [&](Forest::Ref ref) { predicates.pop_back(); }));\n+\n+  std::sort(fragment_indices.begin(), fragment_indices.end());\n+\n+  FragmentVector fragments;\n+  for (int i : fragment_indices) {\n+    fragments.push_back(fragments_[i]);\n   }\n\nReview comment:\n       ```suggestion\r\n     FragmentVector fragments(fragment_indices.size());\r\n     std::transform(fragment_indices.begin(), fragment_indices.end(), fragments.begin(), [](int i) {\r\n       return fragments_[i];\r\n     });\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:26:49.728+0000",
                    "updated": "2021-03-11T13:26:49.728+0000",
                    "started": "2021-03-11T13:26:49.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564596",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592361075\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_benchmark.cc\n##########\n@@ -0,0 +1,85 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/dataset/discovery.h\"\n+#include \"arrow/dataset/expression.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/file_ipc.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/filesystem/mockfs.h\"\n+#include \"arrow/filesystem/test_util.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+static std::shared_ptr<Dataset> GetDataset() {\n+  std::vector<fs::FileInfo> files;\n+  std::vector<std::string> paths;\n+  for (int a = 0; a < 100; a++) {\n+    for (int b = 0; b < 100; b++) {\n+      auto path = \"a=\" + std::to_string(a) + \"/b=\" + std::to_string(b) + \"/data.feather\";\n+      files.push_back(fs::File(path));\n+      paths.push_back(path);\n+    }\n+  }\n+  EXPECT_OK_AND_ASSIGN(auto fs,\n+                       arrow::fs::internal::MockFileSystem::Make(fs::kNoTime, files));\n+  auto format = std::make_shared<IpcFileFormat>();\n+  FileSystemFactoryOptions options;\n+  options.partitioning = HivePartitioning::MakeFactory();\n+  EXPECT_OK_AND_ASSIGN(auto factory,\n+                       FileSystemDatasetFactory::Make(fs, paths, format, options));\n+  FinishOptions finish_options;\n+  finish_options.inspect_options.fragments = 0;\n+  EXPECT_OK_AND_ASSIGN(auto dataset, factory->Finish(finish_options));\n+  return dataset;\n+}\n+\n+// A benchmark of filtering fragments in a dataset.\n+static void GetAllFragments(benchmark::State& state) {\n+  auto dataset = GetDataset();\n+  for (auto _ : state) {\n+    ASSERT_OK_AND_ASSIGN(auto fragments, dataset->GetFragments());\n+    ABORT_NOT_OK(fragments.Visit([](std::shared_ptr<Fragment>) { return Status::OK(); }));\n+  }\n+}\n+\n+static void GetFilteredFragments(benchmark::State& state, Expression filter) {\n+  auto dataset = GetDataset();\n+  ASSERT_OK_AND_ASSIGN(filter, filter.Bind(*dataset->schema()));\n+  for (auto _ : state) {\n+    ASSERT_OK_AND_ASSIGN(auto fragments, dataset->GetFragments(filter));\n+    ABORT_NOT_OK(fragments.Visit([](std::shared_ptr<Fragment>) { return Status::OK(); }));\n+  }\n+}\n+\n+BENCHMARK(GetAllFragments);\n+// Drill down to a subtree.\n+BENCHMARK_CAPTURE(GetFilteredFragments, single_dir, equal(field_ref(\"a\"), literal(90)));\n\nReview comment:\n       ```suggestion\r\n   // Drill down to a subtree.\r\n   BENCHMARK_CAPTURE(GetFilteredFragments, single_dir, equal(field_ref(\"a\"), literal(90)));\r\n   // Drill down but not to a subtree\r\n   BENCHMARK_CAPTURE(GetFilteredFragments, single_dir, equal(field_ref(\"b\"), literal(90)));\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:31:31.681+0000",
                    "updated": "2021-03-11T13:31:31.681+0000",
                    "started": "2021-03-11T13:31:31.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564600",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#discussion_r592376231\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_benchmark.cc\n##########\n@@ -0,0 +1,85 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/dataset/discovery.h\"\n+#include \"arrow/dataset/expression.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/file_ipc.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/filesystem/mockfs.h\"\n+#include \"arrow/filesystem/test_util.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+static std::shared_ptr<Dataset> GetDataset() {\n+  std::vector<fs::FileInfo> files;\n+  std::vector<std::string> paths;\n+  for (int a = 0; a < 100; a++) {\n+    for (int b = 0; b < 100; b++) {\n+      auto path = \"a=\" + std::to_string(a) + \"/b=\" + std::to_string(b) + \"/data.feather\";\n+      files.push_back(fs::File(path));\n+      paths.push_back(path);\n+    }\n+  }\n+  EXPECT_OK_AND_ASSIGN(auto fs,\n+                       arrow::fs::internal::MockFileSystem::Make(fs::kNoTime, files));\n+  auto format = std::make_shared<IpcFileFormat>();\n+  FileSystemFactoryOptions options;\n+  options.partitioning = HivePartitioning::MakeFactory();\n+  EXPECT_OK_AND_ASSIGN(auto factory,\n+                       FileSystemDatasetFactory::Make(fs, paths, format, options));\n+  FinishOptions finish_options;\n+  finish_options.inspect_options.fragments = 0;\n+  EXPECT_OK_AND_ASSIGN(auto dataset, factory->Finish(finish_options));\n+  return dataset;\n+}\n+\n+// A benchmark of filtering fragments in a dataset.\n+static void GetAllFragments(benchmark::State& state) {\n+  auto dataset = GetDataset();\n+  for (auto _ : state) {\n+    ASSERT_OK_AND_ASSIGN(auto fragments, dataset->GetFragments());\n+    ABORT_NOT_OK(fragments.Visit([](std::shared_ptr<Fragment>) { return Status::OK(); }));\n+  }\n+}\n+\n+static void GetFilteredFragments(benchmark::State& state, Expression filter) {\n+  auto dataset = GetDataset();\n+  ASSERT_OK_AND_ASSIGN(filter, filter.Bind(*dataset->schema()));\n+  for (auto _ : state) {\n+    ASSERT_OK_AND_ASSIGN(auto fragments, dataset->GetFragments(filter));\n+    ABORT_NOT_OK(fragments.Visit([](std::shared_ptr<Fragment>) { return Status::OK(); }));\n+  }\n+}\n+\n+BENCHMARK(GetAllFragments);\n+// Drill down to a subtree.\n+BENCHMARK_CAPTURE(GetFilteredFragments, single_dir, equal(field_ref(\"a\"), literal(90)));\n\nReview comment:\n       ```\r\n   ---------------------------------------------------------------------------\r\n   Benchmark                                 Time             CPU   Iterations\r\n   ---------------------------------------------------------------------------\r\n   Before:\r\n   GetAllFragments                    77956704 ns     77958109 ns           18\r\n   GetFilteredFragments/single_dir   504208733 ns    504213184 ns            3\r\n   GetFilteredFragments/multi_dir    501361456 ns    501370822 ns            3\r\n   GetFilteredFragments/single_file 1135849271 ns   1135862409 ns            1\r\n   GetFilteredFragments/range        507525698 ns    507533638 ns            3\r\n   After:\r\n   GetAllFragments                     4821049 ns      4821404 ns          264\r\n   GetFilteredFragments/single_dir     5360703 ns      5361104 ns          252\r\n   GetFilteredFragments/multi_dir    406617239 ns    406644158 ns            3\r\n   GetFilteredFragments/single_file   11986866 ns     11987648 ns          116\r\n   GetFilteredFragments/range         68938442 ns     68942840 ns           20\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T13:52:23.621+0000",
                    "updated": "2021-03-11T13:52:23.621+0000",
                    "started": "2021-03-11T13:52:23.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564610",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796852557\n\n\n   @ursabot please benchmark\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T16:13:16.355+0000",
                    "updated": "2021-03-11T16:13:16.355+0000",
                    "started": "2021-03-11T16:13:16.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564702",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796852627\n\n\n   Benchmark runs are scheduled for baseline = 2d140c3eeecca3ff7823edc8c9562ebd6a1c336a and contender = b58b6f09150d7334884999557e48053ac7d2f047. Results will be available as each benchmark for each run completes: \n   [Scheduled] ursa-dgx1: https://conbench.ursa.dev/compare/runs/95a13932-219e-476f-8e59-e294dcbd043a...cf33179f-4a93-49f0-a69b-75bc00d529af/\n   [Scheduled] ursa-i9-9960x: https://conbench.ursa.dev/compare/runs/05118d70-8b4e-4b89-98ab-b7a429795df7...abae6596-e181-4a39-8047-7920eb1e2d07/\n   [Scheduled] ec2-t3-large-us-east-2: https://conbench.ursa.dev/compare/runs/3424e2a0-2ae2-42a3-a0e6-b96d4fff1cf1...fd7d3c23-3dfd-417d-977a-11f5ff7990c1/\n   [Scheduled] ec2-t3-xlarge-us-east-2: https://conbench.ursa.dev/compare/runs/896988eb-8712-40fd-a2d9-f3f28e2e57ee...469fa6ab-e8de-4e06-b0c0-b887dd79ca77/\n   If you have Ursa Computing Inc's Buildkite access, you can also view benchmark runs logs using these links: \n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks/builds/1208\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-large/builds/51\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-xlarge/builds/53\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-xlarge/builds/52\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-dgx/builds/702\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks/builds/1209\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-dgx/builds/703\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-large/builds/52\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T16:13:35.145+0000",
                    "updated": "2021-03-11T16:13:35.145+0000",
                    "started": "2021-03-11T16:13:35.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564703",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564715",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796852627\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T16:24:09.352+0000",
                    "updated": "2021-03-11T16:24:09.352+0000",
                    "started": "2021-03-11T16:24:09.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564715",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796852627\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T16:31:04.846+0000",
                    "updated": "2021-03-11T16:31:04.846+0000",
                    "started": "2021-03-11T16:31:04.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564721",
                    "issueId": "13302187"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/worklog/564773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #9670:\nURL: https://github.com/apache/arrow/pull/9670#issuecomment-796852627\n\n\n   Benchmark runs are scheduled for baseline = 2d140c3eeecca3ff7823edc8c9562ebd6a1c336a and contender = b58b6f09150d7334884999557e48053ac7d2f047. Results will be available as each benchmark for each run completes: \n   [Scheduled] ursa-dgx1: https://conbench.ursa.dev/compare/runs/95a13932-219e-476f-8e59-e294dcbd043a...cf33179f-4a93-49f0-a69b-75bc00d529af/\n   [Scheduled] ursa-i9-9960x: https://conbench.ursa.dev/compare/runs/05118d70-8b4e-4b89-98ab-b7a429795df7...abae6596-e181-4a39-8047-7920eb1e2d07/\n   [Finished] ec2-t3-large-us-east-2: https://conbench.ursa.dev/compare/runs/3424e2a0-2ae2-42a3-a0e6-b96d4fff1cf1...fd7d3c23-3dfd-417d-977a-11f5ff7990c1/\n   [Finished] ec2-t3-xlarge-us-east-2: https://conbench.ursa.dev/compare/runs/896988eb-8712-40fd-a2d9-f3f28e2e57ee...469fa6ab-e8de-4e06-b0c0-b887dd79ca77/\n   If you have Ursa Computing Inc's Buildkite access, you can also view benchmark runs logs using these links: \n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks/builds/1208\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-large/builds/51\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-xlarge/builds/53\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-xlarge/builds/52\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-dgx/builds/702\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks/builds/1209\n   [Scheduled] https://buildkite.com/ursa-computing/arrow-run-benchmarks-dgx/builds/703\n   [Finished] https://buildkite.com/ursa-computing/arrow-run-benchmarks-ec2-t3-large/builds/52\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-11T17:35:37.680+0000",
                    "updated": "2021-03-11T17:35:37.680+0000",
                    "started": "2021-03-11T17:35:37.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "564773",
                    "issueId": "13302187"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 18600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7e1abd0a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36803ed1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ae0f494[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@d2123af[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@689ee964[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@36335e7a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bca587c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@ff23ef1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@103823a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cd46f51[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6584d90f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7b1f66f8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 12 15:57:39 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-12T15:57:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8658/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-04-30T19:02:33.000+0000",
        "updated": "2021-03-12T15:57:56.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a very handy optimization for large datasets with multiple partition fields. For example, given a hive-style directory {{$base_dir/a=3/}} and a filter {{\"a\"_ == 2}} none of its files or subdirectories need be examined.\r\n\r\nAfter ARROW-8318 FileSystemDataset stores only files so subtree pruning (whose implementation depended on the presence of directories to represent subtrees) was disabled. It should be possible to reintroduce this without reference to directories by examining partition expressions directly and extracting a tree structure from their subexpressions.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Implement subtree pruning for FileSystemDataset::GetFragments",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/comment/17297685",
                    "id": "17297685",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "After looking through things here, I have a few thoughts:\r\n * Doing this with arbitrary expressions is expensive; we need a way to determine whether one is an 'ancestor' of another. Presumably, A is an ancestor of B if !A => !B, but evaluating that is the expensive operation we're hoping to avoid in the first place!\u00a0If recovering a tree from expressions involves at least O(|fragments|) expression evaluations anyways, any gains you might get would be erased, especially in the case of ARROW-11781, where we'd do all that work, query it once, and then throw it all away.\u00a0\r\n * With arbitrary user-provided expressions, there may not be any tree structure worth recovering anyways.\r\n\r\n\u00a0Given that, it might be worth only implementing for the case of a KeyValuePartitioning, where we can define a sorting and ancestry test on vector<Key> and cheaply construct the tree. Datasets built by other means would continue to use a simple vector of fragments as they have been. Or we could try converting each expression back into a vector<Key>, and give up on any expression that doesn't fit - but there are potentially lots of cases to consider and it would be easy to accidentally make the conversion from Key to Expression and back lossy.\r\n\r\nAlso, fs::PathForest is now completely unused, so we can just refactor it into a \"KeyVector\"Forest and save some work. And since the internal representation of a *Forest is just a vector, we can easily interpret it either way as appropriate.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-03-08T20:27:56.419+0000",
                    "updated": "2021-03-08T20:27:56.419+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13302187/comment/17300396",
                    "id": "17300396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9670\n[https://github.com/apache/arrow/pull/9670]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-03-12T15:57:39.788+0000",
                    "updated": "2021-03-12T15:57:39.788+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0e9y0:",
        "customfield_12314139": null
    }
}