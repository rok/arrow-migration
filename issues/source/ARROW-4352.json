{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13211447",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447",
    "key": "ARROW-4352",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4352/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469\n \n \n   Google Test is installed in /usr/lib/x86_64-linux-gnu on Debian.\r\n   \r\n   Google Test is installed as shared library on MSYS2.\r\n   \r\n   This change includes some fixes to build tests with MinGW. They are\r\n   just for building some tests. They aren't completed changes yet. We\r\n   need more works to run all tests with MinGW build.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T03:48:58.289+0000",
                    "updated": "2019-01-24T03:48:58.289+0000",
                    "started": "2019-01-24T03:48:58.288+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189295",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250607889\n \n \n\n ##########\n File path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n ##########\n @@ -634,16 +634,28 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n   endif()\n \n   message(STATUS \"GTest include dir: ${GTEST_INCLUDE_DIR}\")\n-  message(STATUS \"GTest static library: ${GTEST_STATIC_LIB}\")\n   include_directories(SYSTEM ${GTEST_INCLUDE_DIR})\n-  ADD_THIRDPARTY_LIB(gtest\n-    STATIC_LIB ${GTEST_STATIC_LIB})\n-  ADD_THIRDPARTY_LIB(gtest_main\n-    STATIC_LIB ${GTEST_MAIN_STATIC_LIB})\n+  if(GTEST_STATIC_LIB)\n \n Review comment:\n   By the way, is there a reason to prefer the static lib over the shared lib? Is it for Windows?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T13:41:48.444+0000",
                    "updated": "2019-01-24T13:41:48.444+0000",
                    "started": "2019-01-24T13:41:48.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189473",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250607459\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n+  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n+    PATHS ${_gtest_roots} NO_DEFAULT_PATH\n+    PATH_SUFFIXES \"include\")\n+  set(lib_dirs\n+    \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\"\n+    \"lib64\"\n+    \"lib\")\n \n Review comment:\n   Is there an already-defined variable for this? It seems weird to have to hardcode such search paths for each system library.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T13:41:48.446+0000",
                    "updated": "2019-01-24T13:41:48.446+0000",
                    "started": "2019-01-24T13:41:48.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189474",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250607218\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n \n Review comment:\n   We should standardize on a CMake indentation rule, and ideally (but not sure it's possible) enforce it. Apparently there's [cmake_format](https://github.com/cheshirekow/cmake_format).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T13:41:48.447+0000",
                    "updated": "2019-01-24T13:41:48.447+0000",
                    "started": "2019-01-24T13:41:48.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189475",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250610703\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n \n Review comment:\n   @pitrou Can you make a JIRA for that? Then we can implement that.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T13:48:16.415+0000",
                    "updated": "2019-01-24T13:48:16.415+0000",
                    "started": "2019-01-24T13:48:16.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189479",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250611714\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n \n Review comment:\n   See https://issues.apache.org/jira/browse/ARROW-4363\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-24T13:51:03.047+0000",
                    "updated": "2019-01-24T13:51:03.047+0000",
                    "started": "2019-01-24T13:51:03.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189482",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250862542\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n+  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n+    PATHS ${_gtest_roots} NO_DEFAULT_PATH\n+    PATH_SUFFIXES \"include\")\n+  set(lib_dirs\n+    \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\"\n+    \"lib64\"\n+    \"lib\")\n \n Review comment:\n   We have similar variable in `FindProtobuf.cmake`: https://github.com/apache/arrow/blob/master/cpp/cmake_modules/FindProtobuf.cmake#L39\r\n   (I added it.)\r\n   \r\n   We can remove it by removing `NO_DEFAULT_PATH` from our `find_library()` calls.\r\n   \r\n   To be honest, I want to remove all our custom find codes. For example:\r\n   \r\n   ```diff\r\n   index c7496c6a..20cb55cf 100644\r\n   --- a/cpp/cmake_modules/FindGTest.cmake\r\n   +++ b/cpp/cmake_modules/FindGTest.cmake\r\n   @@ -33,13 +33,6 @@\r\n    #  GTEST_SHARED_MAIN_LIB, path to libgtest_main's shared library\r\n    #  GTEST_FOUND, whether gtest has been found\r\n    \r\n   -if( NOT \"${GTEST_HOME}\" STREQUAL \"\")\r\n   -    file( TO_CMAKE_PATH \"${GTEST_HOME}\" _native_path )\r\n   -    list( APPEND _gtest_roots ${_native_path} )\r\n   -elseif ( GTest_HOME )\r\n   -    list( APPEND _gtest_roots ${GTest_HOME} )\r\n   -endif()\r\n   -\r\n    set(GTEST_STATIC_LIB_NAME\r\n      ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\r\n    set(GTEST_MAIN_STATIC_LIB_NAME\r\n   @@ -49,35 +42,11 @@ set(GTEST_SHARED_LIB_NAME\r\n    set(GTEST_MAIN_SHARED_LIB_NAME\r\n      ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\r\n    \r\n   -# Try the parameterized roots, if they exist\r\n   -if(_gtest_roots)\r\n   -  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h\r\n   -    PATHS ${_gtest_roots} NO_DEFAULT_PATH\r\n   -    PATH_SUFFIXES \"include\")\r\n   -  set(lib_dirs\r\n   -    \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\"\r\n   -    \"lib64\"\r\n   -    \"lib\")\r\n   -  find_library(GTEST_STATIC_LIB NAMES ${GTEST_STATIC_LIB_NAME}\r\n   -    PATHS ${_gtest_roots} NO_DEFAULT_PATH\r\n   -    PATH_SUFFIXES ${lib_dirs})\r\n   -  find_library(GTEST_MAIN_STATIC_LIB NAMES ${GTEST_MAIN_STATIC_LIB_NAME}\r\n   -    PATHS ${_gtest_roots} NO_DEFAULT_PATH\r\n   -    PATH_SUFFIXES ${lib_dirs})\r\n   -  find_library(GTEST_SHARED_LIB NAMES ${GTEST_SHARED_LIB_NAME}\r\n   -    PATHS ${_gtest_roots} NO_DEFAULT_PATH\r\n   -    PATH_SUFFIXES ${lib_dirs})\r\n   -  find_library(GTEST_MAIN_SHARED_LIB NAMES ${GTEST_MAIN_SHARED_LIB_NAME}\r\n   -    PATHS ${_gtest_roots} NO_DEFAULT_PATH\r\n   -    PATH_SUFFIXES ${lib_dirs})\r\n   -else()\r\n   -  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h)\r\n   -  find_library(GTEST_STATIC_LIB NAMES ${GTEST_STATIC_LIB_NAME})\r\n   -  find_library(GTEST_MAIN_STATIC_LIB NAMES ${GTEST_MAIN_STATIC_LIB_NAME})\r\n   -  find_library(GTEST_SHARED_LIB NAMES ${GTEST_SHARED_LIB_NAME})\r\n   -  find_library(GTEST_MAIN_SHARED_LIB NAMES ${GTEST_MAIN_SHARED_LIB_NAME})\r\n   -endif()\r\n   -\r\n   +find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h)\r\n   +find_library(GTEST_STATIC_LIB NAMES ${GTEST_STATIC_LIB_NAME})\r\n   +find_library(GTEST_MAIN_STATIC_LIB NAMES ${GTEST_MAIN_STATIC_LIB_NAME})\r\n   +find_library(GTEST_SHARED_LIB NAMES ${GTEST_SHARED_LIB_NAME})\r\n   +find_library(GTEST_MAIN_SHARED_LIB NAMES ${GTEST_MAIN_SHARED_LIB_NAME})\r\n    \r\n    if(GTEST_INCLUDE_DIR AND\r\n        (GTEST_STATIC_LIB AND GTEST_MAIN_STATIC_LIB) OR\r\n   diff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake\r\n   index 5a75a9b0..50fe37a1 100644\r\n   --- a/cpp/cmake_modules/ThirdpartyToolchain.cmake\r\n   +++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake\r\n   @@ -29,35 +29,7 @@ set(ARROW_RE2_LINKAGE \"static\" CACHE STRING\r\n    set(THIRDPARTY_DIR \"${arrow_SOURCE_DIR}/thirdparty\")\r\n    \r\n    if (NOT \"$ENV{ARROW_BUILD_TOOLCHAIN}\" STREQUAL \"\")\r\n   -  set(BROTLI_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(BZ2_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(CARES_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(DOUBLE_CONVERSION_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(FLATBUFFERS_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(GFLAGS_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(GLOG_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(GRPC_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  # Using gtest from the toolchain breaks AppVeyor builds\r\n   -  if (NOT MSVC)\r\n   -    set(GTEST_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  endif()\r\n   -  set(JEMALLOC_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(LZ4_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  # orc disabled as it's not in conda-forge (but in Anaconda with an incompatible ABI)\r\n   -  # set(ORC_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(PROTOBUF_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(RAPIDJSON_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(RE2_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(SNAPPY_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(THRIFT_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(ZLIB_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  set(ZSTD_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -\r\n   -  if (NOT DEFINED ENV{BOOST_ROOT})\r\n   -    # Since we have to set this in the environment, we check whether\r\n   -    # $BOOST_ROOT is defined inside here\r\n   -    set(ENV{BOOST_ROOT} \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n   -  endif()\r\n   +  list(INSERT CMAKE_PREFIX_PATH 0 \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\r\n    endif()\r\n    \r\n    # Home path for each third-party lib can be overriden with env vars\r\n   @@ -600,7 +572,10 @@ endif()\r\n    # Google gtest\r\n    \r\n    if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\r\n   -  if(\"${GTEST_HOME}\" STREQUAL \"\")\r\n   +  find_package(GTest)\r\n   +  if(GTest_FOUND)\r\n   +    set(GTEST_VENDORED 0)\r\n   +  else()\r\n        if(APPLE)\r\n          set(GTEST_CMAKE_CXX_FLAGS \"-fPIC -DGTEST_USE_OWN_TR1_TUPLE=1 -Wno-unused-value -Wno-ignored-attributes\")\r\n        elseif(NOT MSVC)\r\n   @@ -628,9 +603,6 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\r\n          BUILD_BYPRODUCTS ${GTEST_STATIC_LIB} ${GTEST_MAIN_STATIC_LIB}\r\n          CMAKE_ARGS ${GTEST_CMAKE_ARGS}\r\n          ${EP_LOG_OPTIONS})\r\n   -  else()\r\n   -    find_package(GTest REQUIRED)\r\n   -    set(GTEST_VENDORED 0)\r\n      endif()\r\n    \r\n      message(STATUS \"GTest include dir: ${GTEST_INCLUDE_DIR}\")\r\n   ```\r\n   \r\n   Users can change package search path by [`CMAKE_PREFIX_PATH`](https://cmake.org/cmake/help/v3.13/variable/CMAKE_PREFIX_PATH.html#variable:CMAKE_PREFIX_PATH). Users can also use `<PackageName>_ROOT` (`GTest_Root` for this case) CMake variable and environment variable for each package since CMake 3.12: https://cmake.org/cmake/help/v3.12/command/find_library.html\r\n   \r\n   > If called from within a find module loaded by `find_package(<PackageName>)`, search prefixes unique to the current package being found. Specifically look in the `<PackageName>_ROOT` CMake variable and the `<PackageName>_ROOT` environment variable. The package root variables are maintained as a stack so if called from nested find modules, root paths from the parent\u2019s find module will be searched after paths from the current module, i.e. `<CurrentPackage>_ROOT`, `ENV{<CurrentPackage>_ROOT}`, `<ParentPackage>_ROOT`, `ENV{<ParentPackage>_ROOT}`, etc.\r\n   \r\n   Our custom find code uses `<PackageName>_HOME` for this propose.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-25T04:23:32.462+0000",
                    "updated": "2019-01-25T04:23:32.462+0000",
                    "started": "2019-01-25T04:23:32.461+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189841",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250863484\n \n \n\n ##########\n File path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n ##########\n @@ -634,16 +634,28 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n   endif()\n \n   message(STATUS \"GTest include dir: ${GTEST_INCLUDE_DIR}\")\n-  message(STATUS \"GTest static library: ${GTEST_STATIC_LIB}\")\n   include_directories(SYSTEM ${GTEST_INCLUDE_DIR})\n-  ADD_THIRDPARTY_LIB(gtest\n-    STATIC_LIB ${GTEST_STATIC_LIB})\n-  ADD_THIRDPARTY_LIB(gtest_main\n-    STATIC_LIB ${GTEST_MAIN_STATIC_LIB})\n+  if(GTEST_STATIC_LIB)\n \n Review comment:\n   No, there isn't.\r\n   I just choose the static library because we used the static library before this change.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-25T04:25:56.552+0000",
                    "updated": "2019-01-25T04:25:56.552+0000",
                    "started": "2019-01-25T04:25:56.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189842",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/189843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r250863554\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n \n Review comment:\n   >We should standardize on a CMake indentation rule\r\n   \r\n   I think so too.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-25T04:26:36.598+0000",
                    "updated": "2019-01-25T04:26:36.598+0000",
                    "started": "2019-01-25T04:26:36.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "189843",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/190221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r251149946\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n+  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n+    PATHS ${_gtest_roots} NO_DEFAULT_PATH\n+    PATH_SUFFIXES \"include\")\n+  set(lib_dirs\n+    \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\"\n+    \"lib64\"\n+    \"lib\")\n \n Review comment:\n   Perhaps open a JIRA for that?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-25T21:59:28.481+0000",
                    "updated": "2019-01-25T21:59:28.481+0000",
                    "started": "2019-01-25T21:59:28.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190221",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/190472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469#discussion_r251215364\n \n \n\n ##########\n File path: cpp/cmake_modules/FindGTest.cmake\n ##########\n @@ -38,34 +40,60 @@ elseif ( GTest_HOME )\n     list( APPEND _gtest_roots ${GTest_HOME} )\n endif()\n \n+set(GTEST_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_STATIC_LIB_NAME\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}gtest_main${CMAKE_STATIC_LIBRARY_SUFFIX})\n+set(GTEST_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest${CMAKE_SHARED_LIBRARY_SUFFIX})\n+set(GTEST_MAIN_SHARED_LIB_NAME\n+  ${CMAKE_SHARED_LIBRARY_PREFIX}gtest_main${CMAKE_SHARED_LIBRARY_SUFFIX})\n+\n # Try the parameterized roots, if they exist\n-if ( _gtest_roots )\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"include\" )\n-    find_library( GTEST_LIBRARIES NAMES gtest gtest_main\n-        PATHS ${_gtest_roots} NO_DEFAULT_PATH\n-        PATH_SUFFIXES \"lib\" )\n-else ()\n-    find_path( GTEST_INCLUDE_DIR NAMES gtest/gtest.h )\n-    find_library( GTEST_LIBRARIES NAMES gtest )\n-endif ()\n+if(_gtest_roots)\n+  find_path(GTEST_INCLUDE_DIR NAMES gtest/gtest.h\n+    PATHS ${_gtest_roots} NO_DEFAULT_PATH\n+    PATH_SUFFIXES \"include\")\n+  set(lib_dirs\n+    \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\"\n+    \"lib64\"\n+    \"lib\")\n \n Review comment:\n   Created: https://issues.apache.org/jira/browse/ARROW-4383\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-26T22:48:03.664+0000",
                    "updated": "2019-01-26T22:48:03.664+0000",
                    "started": "2019-01-26T22:48:03.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190472",
                    "issueId": "13211447"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/worklog/190589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #3469: ARROW-4352: [C++] Add support for system Google Test\nURL: https://github.com/apache/arrow/pull/3469\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-27T16:55:32.926+0000",
                    "updated": "2019-01-27T16:55:32.926+0000",
                    "started": "2019-01-27T16:55:32.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190589",
                    "issueId": "13211447"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@73116f9d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1614f1ad[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6329b7d6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5281ab87[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@795570c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@e5a0d1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2edc301c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@71de6bd3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@235ff66e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@e9139fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4182b4e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4380cff2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jan 27 16:56:34 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-01-27T16:56:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4352/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-24T03:44:48.000+0000",
        "updated": "2019-01-27T16:56:34.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add support for system Google Test",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13211447/comment/16753474",
                    "id": "16753474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3469\n[https://github.com/apache/arrow/pull/3469]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-01-27T16:56:34.766+0000",
                    "updated": "2019-01-27T16:56:34.766+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|yi08zk:",
        "customfield_12314139": null
    }
}