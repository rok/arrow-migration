{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13286340",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340",
    "key": "ARROW-7891",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7891/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830\n \n \n   It seems empirically that having `check_metadata = true` as the default can be a nuisance, and checking the metadata will take place in fewer cases than checking the field names, types, and nullability for equality.\r\n   \r\n   I carried through these changes in Python and R, and added bindings for RecordBatch::Equals with the check_metadata argument\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:32:23.674+0000",
                    "updated": "2020-04-03T22:32:23.674+0000",
                    "started": "2020-04-03T22:32:23.674+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415790",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403368816\n \n \n\n ##########\n File path: c_glib/test/test-record-batch.rb\n ##########\n @@ -67,19 +68,35 @@ def setup\n                                              columns)\n     end\n \n-    def test_equal\n-      fields = [\n-        Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n-        Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n-      ]\n-      schema = Arrow::Schema.new(fields)\n-      columns = [\n-        build_boolean_array([true, false, true, false, true]),\n-        build_boolean_array([false, true, false, true, false]),\n-      ]\n-      other_record_batch = Arrow::RecordBatch.new(schema, 5, columns)\n-      assert_equal(@record_batch,\n-                   other_record_batch)\n+    sub_test_case(\"#equal\") do\n+      def setup\n+        require_gi_bindings(3, 4, 2)\n+\n+        @fields = [\n+          Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n+          Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n+        ]\n+        @schema = Arrow::Schema.new(fields)\n+        @columns = [\n+          build_boolean_array([true, false, true, false, true]),\n+          build_boolean_array([false, true, false, true, false]),\n+        ]\n+        @record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+      end\n+\n+      def test_equal\n+        other_record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+        assert_equal(@record_batch, other_record_batch)\n+      end\n+\n+      def test_equal_metadata\n+        schema_with_meta = @schema.with_metadata(\"key\" => \"value\")\n+        other_record_batch = Arrow::RecordBatch.new(schema_with_meta, 5, @columns)\n+\n+        assert @record_batch.equal_metadata(other_record_batch, false)\n \n Review comment:\n   ```suggestion\r\n           assert do\r\n             @record_batch.equal_metadata(other_record_batch, false)\r\n           end\r\n   ```\r\n   \r\n   This style shows more useful message on error.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:42:18.125+0000",
                    "updated": "2020-04-03T22:42:18.125+0000",
                    "started": "2020-04-03T22:42:18.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415792",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403368924\n \n \n\n ##########\n File path: c_glib/test/test-record-batch.rb\n ##########\n @@ -67,19 +68,35 @@ def setup\n                                              columns)\n     end\n \n-    def test_equal\n-      fields = [\n-        Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n-        Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n-      ]\n-      schema = Arrow::Schema.new(fields)\n-      columns = [\n-        build_boolean_array([true, false, true, false, true]),\n-        build_boolean_array([false, true, false, true, false]),\n-      ]\n-      other_record_batch = Arrow::RecordBatch.new(schema, 5, columns)\n-      assert_equal(@record_batch,\n-                   other_record_batch)\n+    sub_test_case(\"#equal\") do\n+      def setup\n+        require_gi_bindings(3, 4, 2)\n+\n+        @fields = [\n+          Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n+          Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n+        ]\n+        @schema = Arrow::Schema.new(fields)\n+        @columns = [\n+          build_boolean_array([true, false, true, false, true]),\n+          build_boolean_array([false, true, false, true, false]),\n+        ]\n+        @record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+      end\n+\n+      def test_equal\n+        other_record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+        assert_equal(@record_batch, other_record_batch)\n+      end\n+\n+      def test_equal_metadata\n+        schema_with_meta = @schema.with_metadata(\"key\" => \"value\")\n+        other_record_batch = Arrow::RecordBatch.new(schema_with_meta, 5, @columns)\n+\n+        assert @record_batch.equal_metadata(other_record_batch, false)\n+        assert !@record_batch.equal_metadata(other_record_batch, true)\n \n Review comment:\n   ```suggestion\r\n           assert do\r\n             not @record_batch.equal_metadata(other_record_batch, true)\r\n           end\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:42:18.144+0000",
                    "updated": "2020-04-03T22:42:18.144+0000",
                    "started": "2020-04-03T22:42:18.144+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415793",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403369294\n \n \n\n ##########\n File path: c_glib/test/test-record-batch.rb\n ##########\n @@ -67,19 +68,35 @@ def setup\n                                              columns)\n     end\n \n-    def test_equal\n-      fields = [\n-        Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n-        Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n-      ]\n-      schema = Arrow::Schema.new(fields)\n-      columns = [\n-        build_boolean_array([true, false, true, false, true]),\n-        build_boolean_array([false, true, false, true, false]),\n-      ]\n-      other_record_batch = Arrow::RecordBatch.new(schema, 5, columns)\n-      assert_equal(@record_batch,\n-                   other_record_batch)\n+    sub_test_case(\"#equal\") do\n+      def setup\n+        require_gi_bindings(3, 4, 2)\n+\n+        @fields = [\n+          Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n+          Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n+        ]\n+        @schema = Arrow::Schema.new(fields)\n+        @columns = [\n+          build_boolean_array([true, false, true, false, true]),\n+          build_boolean_array([false, true, false, true, false]),\n+        ]\n+        @record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+      end\n+\n+      def test_equal\n+        other_record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+        assert_equal(@record_batch, other_record_batch)\n+      end\n+\n+      def test_equal_metadata\n+        schema_with_meta = @schema.with_metadata(\"key\" => \"value\")\n+        other_record_batch = Arrow::RecordBatch.new(schema_with_meta, 5, @columns)\n+\n+        assert @record_batch.equal_metadata(other_record_batch, false)\n+        assert !@record_batch.equal_metadata(other_record_batch, true)\n+      end\n+\n \n Review comment:\n   Could you remove this empty line?\r\n   We don't put an empty line for continuous `end`s.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:42:18.392+0000",
                    "updated": "2020-04-03T22:42:18.392+0000",
                    "started": "2020-04-03T22:42:18.391+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415794",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403369944\n \n \n\n ##########\n File path: c_glib/arrow-glib/record-batch.cpp\n ##########\n @@ -191,6 +191,27 @@ garrow_record_batch_equal(GArrowRecordBatch *record_batch,\n   return arrow_record_batch->Equals(*arrow_other_record_batch);\n }\n \n+/**\n+ * garrow_record_batch_equal_metadata:\n+ * @record_batch: A #GArrowRecordBatch.\n+ * @other_record_batch: A #GArrowRecordBatch to be compared.\n+ * @check_metadata: Whether to compare metadata.\n+ *\n+ * Returns: %TRUE if both of them have the same data, %FALSE\n+ *   otherwise.\n+ *\n+ * Since: 0.17.0\n+ */\n+gboolean\n+garrow_record_batch_equal_metadata(GArrowRecordBatch *record_batch,\n+                                   GArrowRecordBatch *other_record_batch,\n+                                   gboolean check_metadata)\n \n Review comment:\n   Could you also add the following prototype declaration to `record-batch.h`?\r\n   \r\n   ```c\r\n   GARROW_AVAILABLE_IN_0_17\r\n   gboolean\r\n   garrow_record_batch_equal_metadata(GArrowRecordBatch *record_batch,\r\n                                      GArrowRecordBatch *other_record_batch,\r\n                                      gboolean check_metadata);\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:42:18.492+0000",
                    "updated": "2020-04-03T22:42:18.492+0000",
                    "started": "2020-04-03T22:42:18.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415795",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#issuecomment-608751431\n \n \n   https://issues.apache.org/jira/browse/ARROW-7891\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T22:46:31.842+0000",
                    "updated": "2020-04-03T22:46:31.842+0000",
                    "started": "2020-04-03T22:46:31.842+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415796",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403377556\n \n \n\n ##########\n File path: c_glib/arrow-glib/record-batch.cpp\n ##########\n @@ -191,6 +191,27 @@ garrow_record_batch_equal(GArrowRecordBatch *record_batch,\n   return arrow_record_batch->Equals(*arrow_other_record_batch);\n }\n \n+/**\n+ * garrow_record_batch_equal_metadata:\n+ * @record_batch: A #GArrowRecordBatch.\n+ * @other_record_batch: A #GArrowRecordBatch to be compared.\n+ * @check_metadata: Whether to compare metadata.\n+ *\n+ * Returns: %TRUE if both of them have the same data, %FALSE\n+ *   otherwise.\n+ *\n+ * Since: 0.17.0\n+ */\n+gboolean\n+garrow_record_batch_equal_metadata(GArrowRecordBatch *record_batch,\n+                                   GArrowRecordBatch *other_record_batch,\n+                                   gboolean check_metadata)\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T23:08:24.510+0000",
                    "updated": "2020-04-03T23:08:24.510+0000",
                    "started": "2020-04-03T23:08:24.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415812",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403377575\n \n \n\n ##########\n File path: c_glib/test/test-record-batch.rb\n ##########\n @@ -67,19 +68,35 @@ def setup\n                                              columns)\n     end\n \n-    def test_equal\n-      fields = [\n-        Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n-        Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n-      ]\n-      schema = Arrow::Schema.new(fields)\n-      columns = [\n-        build_boolean_array([true, false, true, false, true]),\n-        build_boolean_array([false, true, false, true, false]),\n-      ]\n-      other_record_batch = Arrow::RecordBatch.new(schema, 5, columns)\n-      assert_equal(@record_batch,\n-                   other_record_batch)\n+    sub_test_case(\"#equal\") do\n+      def setup\n+        require_gi_bindings(3, 4, 2)\n+\n+        @fields = [\n+          Arrow::Field.new(\"visible\", Arrow::BooleanDataType.new),\n+          Arrow::Field.new(\"valid\", Arrow::BooleanDataType.new),\n+        ]\n+        @schema = Arrow::Schema.new(fields)\n+        @columns = [\n+          build_boolean_array([true, false, true, false, true]),\n+          build_boolean_array([false, true, false, true, false]),\n+        ]\n+        @record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+      end\n+\n+      def test_equal\n+        other_record_batch = Arrow::RecordBatch.new(@schema, 5, @columns)\n+        assert_equal(@record_batch, other_record_batch)\n+      end\n+\n+      def test_equal_metadata\n+        schema_with_meta = @schema.with_metadata(\"key\" => \"value\")\n+        other_record_batch = Arrow::RecordBatch.new(schema_with_meta, 5, @columns)\n+\n+        assert @record_batch.equal_metadata(other_record_batch, false)\n+        assert !@record_batch.equal_metadata(other_record_batch, true)\n+      end\n+\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T23:08:27.950+0000",
                    "updated": "2020-04-03T23:08:27.950+0000",
                    "started": "2020-04-03T23:08:27.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415813",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/415814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#issuecomment-608784226\n \n \n   @kou I noticed you have a number of `GARROW_AVAILABLE_IN_1_0` and `1.0.0` in places, may want to bulk edit these for 0.16.0 since we have not been able to release 1.0.0 yet\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-03T23:09:04.906+0000",
                    "updated": "2020-04-03T23:09:04.906+0000",
                    "started": "2020-04-03T23:09:04.906+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415814",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#issuecomment-609095171\n \n \n   > @kou I noticed you have a number of `GARROW_AVAILABLE_IN_1_0` and `1.0.0` in places, may want to bulk edit these for 0.16.0 since we have not been able to release 1.0.0 yet\r\n   \r\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:04:26.949+0000",
                    "updated": "2020-04-04T22:04:26.949+0000",
                    "started": "2020-04-04T22:04:26.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416032",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403539414\n \n \n\n ##########\n File path: r/tests/testthat/test-Table.R\n ##########\n @@ -288,20 +288,20 @@ test_that(\"==.Table\", {\n test_that(\"Table$Equals(check_metadata)\", {\n   tab1 <- Table$create(x = 1:2, y = c(\"a\", \"b\"))\n   tab2 <- Table$create(x = 1:2, y = c(\"a\", \"b\"),\n-    schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n+                       schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n \n   expect_is(tab1, \"Table\")\n   expect_is(tab2, \"Table\")\n   expect_false(tab1$schema$HasMetadata)\n   expect_true(tab2$schema$HasMetadata)\n   expect_match(tab2$schema$metadata, \"some: metadata\", fixed = TRUE)\n \n-  expect_false(tab1 == tab2)\n-  expect_false(tab1$Equals(tab2))\n-  expect_true(tab1$Equals(tab2, check_metadata = FALSE))\n+  expect_true(tab1 == tab2)\n+  expect_true(tab1$Equals(tab2))\n+  expect_false(tab1$Equals(tab2, check_metadata = TRUE))\n \n-  expect_failure(expect_equal(tab1, tab2)) # expect_equal does check_metadata\n-  expect_equivalent(tab1, tab2)            # expect_equivalent does not\n+  expect_equal(tab1, tab2)       # expect_equal does not check_metadata\n \n Review comment:\n   I think that `expect_equal` still should check metadata, for consistency with the regular behavior of that assertion, and I'm not sure why your change is affecting this because the method that it calls is explicitly setting `check_metadata` and not relying on the `$Equals` method default value.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:14:33.283+0000",
                    "updated": "2020-04-04T22:14:33.283+0000",
                    "started": "2020-04-04T22:14:33.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416053",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403551828\n \n \n\n ##########\n File path: r/tests/testthat/test-Table.R\n ##########\n @@ -288,20 +288,20 @@ test_that(\"==.Table\", {\n test_that(\"Table$Equals(check_metadata)\", {\n   tab1 <- Table$create(x = 1:2, y = c(\"a\", \"b\"))\n   tab2 <- Table$create(x = 1:2, y = c(\"a\", \"b\"),\n-    schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n+                       schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n \n   expect_is(tab1, \"Table\")\n   expect_is(tab2, \"Table\")\n   expect_false(tab1$schema$HasMetadata)\n   expect_true(tab2$schema$HasMetadata)\n   expect_match(tab2$schema$metadata, \"some: metadata\", fixed = TRUE)\n \n-  expect_false(tab1 == tab2)\n-  expect_false(tab1$Equals(tab2))\n-  expect_true(tab1$Equals(tab2, check_metadata = FALSE))\n+  expect_true(tab1 == tab2)\n+  expect_true(tab1$Equals(tab2))\n+  expect_false(tab1$Equals(tab2, check_metadata = TRUE))\n \n-  expect_failure(expect_equal(tab1, tab2)) # expect_equal does check_metadata\n-  expect_equivalent(tab1, tab2)            # expect_equivalent does not\n+  expect_equal(tab1, tab2)       # expect_equal does not check_metadata\n \n Review comment:\n   I'm fine to revert that change. The idea was for the default notion of equality to exclude metadata comparison. If the semantics of `expect_equal` is generally to also check e.g. data.frame attributions then that makes sense to me\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:42:05.596+0000",
                    "updated": "2020-04-04T22:42:05.596+0000",
                    "started": "2020-04-04T22:42:05.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416071",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403552917\n \n \n\n ##########\n File path: r/tests/testthat/test-Table.R\n ##########\n @@ -288,20 +288,20 @@ test_that(\"==.Table\", {\n test_that(\"Table$Equals(check_metadata)\", {\n   tab1 <- Table$create(x = 1:2, y = c(\"a\", \"b\"))\n   tab2 <- Table$create(x = 1:2, y = c(\"a\", \"b\"),\n-    schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n+                       schema = tab1$schema$WithMetadata(list(some=\"metadata\")))\n \n   expect_is(tab1, \"Table\")\n   expect_is(tab2, \"Table\")\n   expect_false(tab1$schema$HasMetadata)\n   expect_true(tab2$schema$HasMetadata)\n   expect_match(tab2$schema$metadata, \"some: metadata\", fixed = TRUE)\n \n-  expect_false(tab1 == tab2)\n-  expect_false(tab1$Equals(tab2))\n-  expect_true(tab1$Equals(tab2, check_metadata = FALSE))\n+  expect_true(tab1 == tab2)\n+  expect_true(tab1$Equals(tab2))\n+  expect_false(tab1$Equals(tab2, check_metadata = TRUE))\n \n-  expect_failure(expect_equal(tab1, tab2)) # expect_equal does check_metadata\n-  expect_equivalent(tab1, tab2)            # expect_equivalent does not\n+  expect_equal(tab1, tab2)       # expect_equal does not check_metadata\n \n Review comment:\n   Reverting, give me a minute\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:44:31.691+0000",
                    "updated": "2020-04-04T22:44:31.691+0000",
                    "started": "2020-04-04T22:44:31.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416072",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#discussion_r403552971\n \n \n\n ##########\n File path: r/R/arrow-package.R\n ##########\n @@ -108,7 +108,7 @@ ArrowObject <- R6Class(\"ArrowObject\",\n }\n \n #' @export\n-all.equal.ArrowObject <- function(target, current, ..., check.attributes = TRUE) {\n+all.equal.ArrowObject <- function(target, current, ..., check.attributes = FALSE) {\n \n Review comment:\n   Ah, I see, you did change this, I missed that. Yeah I'd revert this. `all.equal` isn't typically called directly by a human.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:44:41.551+0000",
                    "updated": "2020-04-04T22:44:41.551+0000",
                    "started": "2020-04-04T22:44:41.551+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416073",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#issuecomment-609100300\n \n \n   I'll wait a little while on this for C++ and Python contributors to take a look\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-04T22:54:30.398+0000",
                    "updated": "2020-04-04T22:54:30.398+0000",
                    "started": "2020-04-04T22:54:30.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416075",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830#issuecomment-609867748\n \n \n   The glib/ruby failure is \r\n   \r\n   ```\r\n   Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/lib/pkgconfig'\r\n   Run-time dependency gobject-2.0 found: YES 2.64.1\r\n   Run-time dependency gio-2.0 found: NO (tried framework and cmake)\r\n   \r\n   c_glib/arrow-glib/meson.build:210:0: ERROR: Could not generate cargs for gio-2.0:\r\n   Package zlib was not found in the pkg-config search path.\r\n   Perhaps you should add the directory containing `zlib.pc'\r\n   to the PKG_CONFIG_PATH environment variable\r\n   Package 'zlib', required by 'gio-2.0', not found\r\n   \r\n   \r\n   A full log can be found at /Users/runner/runners/2.168.0/work/arrow/arrow/build/c_glib/meson-logs/meson-log.txt\r\n   ```\r\n   \r\n   This is also failing on master. I made https://issues.apache.org/jira/browse/ARROW-8346 for it. \r\n   \r\n   I'll merge now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T15:33:46.653+0000",
                    "updated": "2020-04-06T15:33:46.653+0000",
                    "started": "2020-04-06T15:33:46.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416689",
                    "issueId": "13286340"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/worklog/416691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6830: ARROW-7891: [C++][GLib][Python][R] Make uniform use of check_metadata=false default. Add Py/R/GLib bindings for RecordBatch::Equals with check_metadata\nURL: https://github.com/apache/arrow/pull/6830\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-06T15:34:38.968+0000",
                    "updated": "2020-04-06T15:34:38.968+0000",
                    "started": "2020-04-06T15:34:38.968+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "416691",
                    "issueId": "13286340"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@60b4aa11[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c5808d2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69e725f8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25b5ae8e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59efbbc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1ef171b2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e695f71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@462049ec[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3491098f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2178924e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25eec3c7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@614591bf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 06 15:34:40 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-06T15:34:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7891/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-02-19T22:16:48.000+0000",
        "updated": "2020-04-06T15:34:40.000+0000",
        "timeoriginalestimate": null,
        "description": "Followup to ARROW-7720 and ARROW-7786. Table and Schema both have it, so it stands to reason that RecordBatch should too.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] RecordBatch->Equals should also have a check_metadata argument",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/comment/17064924",
                    "id": "17064924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This is partially implemented in ARROW-7979. A follow up patch will be required to fully expose this in Python and R",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-23T16:24:11.806+0000",
                    "updated": "2020-03-23T16:24:11.806+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13286340/comment/17076414",
                    "id": "17076414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6830\n[https://github.com/apache/arrow/pull/6830]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-04-06T15:34:40.340+0000",
                    "updated": "2020-04-06T15:34:40.340+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0boa0:",
        "customfield_12314139": null
    }
}