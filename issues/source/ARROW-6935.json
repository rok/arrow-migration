{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13263099",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099",
    "key": "ARROW-6935",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/2",
            "id": "2",
            "description": "The problem described is an issue which will never be fixed.",
            "name": "Won't Fix"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6935/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/330485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694\n \n \n   Implement methods to compare data word by word, instead of byte by byte.\r\n   Benchmarks shows that there is a 4.5x performance improvement:\r\n   \r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals avgt 5 437.504 \u00b1 1.120 ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals avgt 5 97.700 \u00b1 0.178 ns/op\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T12:58:01.573+0000",
                    "updated": "2019-10-18T12:58:01.573+0000",
                    "started": "2019-10-18T12:58:01.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330485",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/330487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-543732803\n \n \n   https://issues.apache.org/jira/browse/ARROW-6935\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T13:03:15.642+0000",
                    "updated": "2019-10-18T13:03:15.642+0000",
                    "started": "2019-10-18T13:03:15.641+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330487",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/331128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-544305126\n \n \n   I'm surprised this yielded such a big improvement, I would think `Array.equals` would be vectorized.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T23:46:22.487+0000",
                    "updated": "2019-10-20T23:46:22.487+0000",
                    "started": "2019-10-20T23:46:22.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331128",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/331161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-544332767\n \n \n   > I'm surprised this yielded such a big improvement, I would think `Array.equals` would be vectorized.\r\n   \r\n   @TheNeuralBit Thanks for your comment.\r\n   The benchmarks ran on a machine with vectorization capability:\r\n   \r\n   Intel(R) Xeon(R) CPU E5-2682 v4 @ 2.50GHz\r\n   \r\n   However, Java has only limited support for SIMD. For this particular case, processing of different data is not independent (note that there is a if branch in the for loop of Arrays.equals), so JIT does not vectorize it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T03:16:41.507+0000",
                    "updated": "2019-10-21T03:16:41.507+0000",
                    "started": "2019-10-21T03:16:41.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331161",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/331162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#discussion_r336825664\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightDescriptor.java\n ##########\n @@ -160,7 +161,8 @@ public boolean equals(Object obj) {\n       if (other.cmd != null) {\n         return false;\n       }\n-    } else if (!Arrays.equals(cmd, other.cmd)) {\n+    } else if (ByteFunctionHelpers.equal(\n \n Review comment:\n   This isn't performance sensitive. Please don't use non-idiomatic code for performance purposes where performance doesn't matter.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T03:17:24.926+0000",
                    "updated": "2019-10-21T03:17:24.926+0000",
                    "started": "2019-10-21T03:17:24.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331162",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/331373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#discussion_r336974161\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/FlightDescriptor.java\n ##########\n @@ -160,7 +161,8 @@ public boolean equals(Object obj) {\n       if (other.cmd != null) {\n         return false;\n       }\n-    } else if (!Arrays.equals(cmd, other.cmd)) {\n+    } else if (ByteFunctionHelpers.equal(\n \n Review comment:\n   Reverted. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T11:54:26.535+0000",
                    "updated": "2019-10-21T11:54:26.535+0000",
                    "started": "2019-10-21T11:54:26.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331373",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/331374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-544481120\n \n \n   > I'm struggling with this change. It seems like an optimization for a piece of code which isn't expected to be done often. In general, these heap structures aren't main path for algorithms. Why are you making this change?\r\n   \r\n   I agree with you that the optimization is not on the main path of Arrow. \r\n   There is one scenario that makes use of this optimization: the value of a VarCharVector can be loaded as a Text object, and comparing Text objects involves this optimization. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T11:57:29.310+0000",
                    "updated": "2019-10-21T11:57:29.310+0000",
                    "started": "2019-10-21T11:57:29.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331374",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332027",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-544990281\n \n \n   > However, Java has only limited support for SIMD. For this particular case, processing of different data is not independent (note that there is a if branch in the for loop of Arrays.equals), so JIT does not vectorize it.\r\n   \r\n   What java version are you using? It looks like OpenJDK ends up using some hand-written vectorized assembly in jdk 9 ([`vectorizedMismatch`](http://hg.openjdk.java.net/jdk9/jdk9/jdk/file/1edd10226c97/src/java.base/share/classes/java/util/ArraysSupport.java#l280)) but Array.equals is just a simple loop that JIT can't vectorize in jdk 8 ([link](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/Arrays.java#l2680))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-22T14:28:22.206+0000",
                    "updated": "2019-10-22T14:28:22.206+0000",
                    "started": "2019-10-22T14:28:22.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332027",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545019843\n \n \n   If someone is using getObect to get the Text objects, they are already on the slow path...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-22T15:30:44.441+0000",
                    "updated": "2019-10-22T15:30:44.441+0000",
                    "started": "2019-10-22T15:30:44.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332047",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545263742\n \n \n   > > However, Java has only limited support for SIMD. For this particular case, processing of different data is not independent (note that there is a if branch in the for loop of Arrays.equals), so JIT does not vectorize it.\r\n   > \r\n   > What java version are you using? It looks like OpenJDK ends up using some hand-written vectorized assembly in jdk 9 ([`vectorizedMismatch`](http://hg.openjdk.java.net/jdk9/jdk9/jdk/file/1edd10226c97/src/java.base/share/classes/java/util/ArraysSupport.java#l280)) but Array.equals is just a simple loop that JIT can't vectorize in jdk 8 ([link](https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/Arrays.java#l2680))\r\n   \r\n   @TheNeuralBit Thanks a lot for the additional information.\r\n   I tried jdk 9, and it really worked. The performance is even better than our improved version. \r\n   \r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  37.814 \u00b1 0.167  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  93.859 \u00b1 0.361  ns/op\r\n   \r\n   To make use of vectorization in our improved version, we have changed the while loop to a for loop (please see the new commit). There are some improvements, but the performance is still not as good:\r\n   \r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals  avgt    5  71.725 \u00b1 1.766  ns/op\r\n   \r\n   This can be explained as: vectorizing bytes is more efficient than vectorizing longs, because the latter reduces the potential parallelism?\r\n   \r\n   Another problem is that not all CPUs support vectorization. \r\n   \r\n   What do you think?\r\n   \r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T04:44:40.511+0000",
                    "updated": "2019-10-23T04:44:40.511+0000",
                    "started": "2019-10-23T04:44:40.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332414",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545263945\n \n \n   > If someone is using getObect to get the Text objects, they are already on the slow path...\r\n   \r\n   Agree with you. So this PR is not so important. \r\n   Fortunately, we have found some interesting problems in it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T04:45:45.671+0000",
                    "updated": "2019-10-23T04:45:45.671+0000",
                    "started": "2019-10-23T04:45:45.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332418",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545468973\n \n \n   > This can be explained as: vectorizing bytes is more efficient than vectorizing longs, because the latter reduces the potential parallelism?\r\n   \r\n   There's also a larger standard deviation in your modified benchmark (1.766 vs. 0.361 and 0.167 in the others). Maybe there's a slower initial run? It would be interesting to see what happens with a larger sample size.\r\n   \r\n   > Another problem is that not all CPUs support vectorization. What do you think?\r\n   \r\n   True, but I don't know that it's worth maintaining another code path for that case unless someone starts doing it, I think it will be pretty rare.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T14:24:02.241+0000",
                    "updated": "2019-10-23T14:24:02.241+0000",
                    "started": "2019-10-23T14:24:02.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332599",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/332611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545477082\n \n \n   > If someone is using getObect to get the Text objects, they are already on the slow path...\r\n   \r\n   We are also thinking about using Arrow in Beam, which has a similar computational model to Flink that is entirely element-wise. It would be easier for us to support arrow over time by first processing elements that are views into the underlying arrow buffer, and then starting to provide batched versions of expensive/common transforms. So it would be nice if the \"slow path\" got a little love, since we may be on it for a while.\r\n   \r\n   That being said I agree that we'd be better off just relying on Java >9 and `vectorizedMismatch` for this particular path, I just don't want to discourage optimizing the element-wise path entirely.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T14:41:09.990+0000",
                    "updated": "2019-10-23T14:41:09.990+0000",
                    "started": "2019-10-23T14:41:09.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332611",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/333011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545720379\n \n \n   > There's also a larger standard deviation in your modified benchmark (1.766 vs. 0.361 and 0.167 in the others). Maybe there's a slower initial run? It would be interesting to see what happens with a larger sample size.\r\n   \r\n   I rerun the benchmark with a larger sample size (1024 * 1024, the original was 1024). The results are consistent with your expectation: for loop is not faster than while loop:\r\n   \r\n   while loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  67789.274 \u00b1 5436.789  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  90008.613 \u00b1  400.723  ns/op\r\n   \r\n   for loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  68210.532 \u00b1  71.264  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  88928.010 \u00b1 439.912  ns/op\r\n   \r\n   So it seems that java 9 could not vectorized the code of our improved version. (I have not managed to see the assembly for jdk9, the hsdis-amd64.so seems not loadable).\r\n   \r\n   Now we have:\r\n   1. for jdk8, our improved version is 4+x times faster\r\n   2. for jdk9, the built-in version (Arrays.equal) is 2+ times faster.\r\n   \r\n   What is your suggestion?\r\n   \r\n   > \r\n   > > Another problem is that not all CPUs support vectorization. What do you think?\r\n   > \r\n   > True, but I don't know that it's worth maintaining another code path for that case unless someone starts doing it, I think it will be pretty rare.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T02:59:30.426+0000",
                    "updated": "2019-10-24T02:59:30.426+0000",
                    "started": "2019-10-24T02:59:30.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333011",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/333013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545720379\n \n \n   > There's also a larger standard deviation in your modified benchmark (1.766 vs. 0.361 and 0.167 in the others). Maybe there's a slower initial run? It would be interesting to see what happens with a larger sample size.\r\n   \r\n   I rerun the benchmark with a larger sample size (1024 * 1024, the original was 1024). The results are consistent with your expectation: for loop is not faster than while loop:\r\n   \r\n   while loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  67789.274 \u00b1 5436.789  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  90008.613 \u00b1  400.723  ns/op\r\n   \r\n   for loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  68210.532 \u00b1  71.264  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  88928.010 \u00b1 439.912  ns/op\r\n   \r\n   So it seems that java 9 could not vectorized the code of our improved version. (I have not managed to see the assembly for jdk9, the hsdis-amd64.so seems not loadable).\r\n   \r\n   Now we have:\r\n   1. for jdk8, our improved version is 4+x times faster\r\n   2. for jdk9, the built-in version (Arrays.equal) is 2+ times faster.\r\n   \r\n   What is your suggestion?\r\n   \r\n   > True, but I don't know that it's worth maintaining another code path for that case unless someone starts doing it, I think it will be pretty rare.\r\n   \r\n   I agree with you that most CPU supports SIMD. I am just curious what the performance would be like in a typical working environement for Arrow. Our environment is a high performance computer with strong SIMD capability (Intel AVX2).\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T03:04:32.784+0000",
                    "updated": "2019-10-24T03:04:32.784+0000",
                    "started": "2019-10-24T03:04:32.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333013",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/333015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545722026\n \n \n   > > If someone is using getObect to get the Text objects, they are already on the slow path...\r\n   > \r\n   > We are also thinking about using Arrow in Beam, which has a similar computational model to Flink that is entirely element-wise. It would be easier for us to support arrow over time by first processing elements that are views into the underlying arrow buffer, and then starting to provide batched versions of expensive/common transforms. So it would be nice if the \"slow path\" got a little love, since we may be on it for a while.\r\n   > \r\n   > That being said I agree that we'd be better off just relying on Java >9 and `vectorizedMismatch` for this particular path, I just don't want to discourage optimizing the element-wise path entirely.\r\n   \r\n   Cool. Thanks for sharing the good news. \r\n   Hope you will successfully incorporate Arrow to Beam, and make Beam better. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T03:07:18.916+0000",
                    "updated": "2019-10-24T03:07:18.916+0000",
                    "started": "2019-10-24T03:07:18.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333015",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/333017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-545720379\n \n \n   > There's also a larger standard deviation in your modified benchmark (1.766 vs. 0.361 and 0.167 in the others). Maybe there's a slower initial run? It would be interesting to see what happens with a larger sample size.\r\n   \r\n   I rerun the benchmark with a larger sample size (1024 * 1024, the original was 1024). The results are consistent with your expectation: for loop is not faster than while loop:\r\n   \r\n   while loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  67789.274 \u00b1 5436.789  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  90008.613 \u00b1  400.723  ns/op\r\n   \r\n   for loop\r\n   ByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  68210.532 \u00b1  71.264  ns/op\r\n   ByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5  88928.010 \u00b1 439.912  ns/op\r\n   \r\n   So it seems that java 9 could not vectorized the code of our improved version. (I have not managed to see the assembly for jdk9, the hsdis-amd64.so seems not loadable). That means, off-heap data has an inherent performance disadvantage compared to on-heap data, for jdk 9 and higer version?\r\n   \r\n   Now we have:\r\n   1. for jdk8, our improved version is 4+x times faster\r\n   2. for jdk9, the built-in version (Arrays.equal) is 2+ times faster.\r\n   \r\n   What is your suggestion?\r\n   \r\n   > True, but I don't know that it's worth maintaining another code path for that case unless someone starts doing it, I think it will be pretty rare.\r\n   \r\n   I agree with you that most CPU supports SIMD. I am just curious what the performance would be like in a typical working environement for Arrow. Our environment is a high performance computer with strong SIMD capability (Intel AVX2).\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T03:09:37.046+0000",
                    "updated": "2019-10-24T03:09:37.046+0000",
                    "started": "2019-10-24T03:09:37.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333017",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/334190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-546388920\n \n \n   > What is your suggestion?\r\n   \r\n   I agree with @jacques-n that it's not worth introducing the complexity for this improvement. Particularly when users can get a more significant speedup just by using a more recent version of Java. I think we should encourage that instead.\r\n   \r\n   > I agree with you that most CPU supports SIMD. I am just curious what the performance would be like in a typical working environement for Arrow. Our environment is a high performance computer with strong SIMD capability (Intel AVX2).\r\n   \r\n   I think a high performance computer with strong SIMD support is the target working environment for Arrow :) \r\n   \r\n   I think AVX and AVX2 are pretty [ubiquitous](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#CPUs_with_AVX2) now anyway. I looked around to see if I had a machine at my disposal that doesn't support AVX or AVX2 that I could try running some benchmarks on but I can't find one, even my i3-4130T (from Q3 2013) supports both. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T14:58:52.530+0000",
                    "updated": "2019-10-25T14:58:52.530+0000",
                    "started": "2019-10-25T14:58:52.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334190",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/334681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-546764907\n \n \n   > > What is your suggestion?\r\n   > \r\n   > I agree with @jacques-n that it's not worth introducing the complexity for this improvement. Particularly when users can get a more significant speedup just by using a more recent version of Java. I think we should encourage that instead.\r\n   > \r\n   > > I agree with you that most CPU supports SIMD. I am just curious what the performance would be like in a typical working environement for Arrow. Our environment is a high performance computer with strong SIMD capability (Intel AVX2).\r\n   > \r\n   > I think a high performance computer with strong SIMD support is the target working environment for Arrow :)\r\n   > \r\n   > I think AVX and AVX2 are pretty [ubiquitous](https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#CPUs_with_AVX2) now anyway. I looked around to see if I had a machine at my disposal that doesn't support AVX or AVX2 that I could try running some benchmarks on but I can't find one, even my i3-4130T (from Q3 2013) supports both.\r\n   \r\n   @TheNeuralBit Thanks a lot for your valuable feedback.\r\n   \r\n   Given the current comments, I don't think this PR deserves to be merged. \r\n   However, the discussions are really interesting and helpful. So I will leave it open for a few days, and if there is no more discussion, I will close it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-28T02:13:58.126+0000",
                    "updated": "2019-10-28T02:13:58.126+0000",
                    "started": "2019-10-28T02:13:58.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "334681",
                    "issueId": "13263099"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263099/worklog/338030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5694: ARROW-6935: [Java] Improve the performance of comparing two blocks of heap data\nURL: https://github.com/apache/arrow/pull/5694#issuecomment-549262142\n \n \n   Closing this. Thanks a lot for your valuable comments. @TheNeuralBit @jacques-n \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-04T08:43:26.706+0000",
                    "updated": "2019-11-04T08:43:26.706+0000",
                    "started": "2019-11-04T08:43:26.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "338030",
                    "issueId": "13263099"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7438d8f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2df25ebb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58818bd3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@67b901fe[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@585709ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3145485f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65ce82b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ad7c901[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a2d9ba1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3131290b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20fbcea0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5410947f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "2019-10-18 12:54:01.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-11-04T08:43:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6935/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-10-18T12:54:01.000+0000",
        "updated": "2019-11-04T08:43:48.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement methods to compare data word by word, instead of byte by byte.\r\nBenchmarks shows that there is a 4.5x performance improvement:\r\n\r\nByteFunctionHelpersBenchmarks.builtInByteArrayEquals  avgt    5  437.504 \u00b1 1.120  ns/op\r\nByteFunctionHelpersBenchmarks.byteArrayEquals         avgt    5   97.700 \u00b1 0.178  ns/op",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Improve the performance of comparing two blocks of heap data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z07qcg:",
        "customfield_12314139": null
    }
}