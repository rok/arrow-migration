{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13184198",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198",
    "key": "ARROW-3212",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3212/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/146922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615\n \n \n   The detail of whether an `InputStream` or `OutputStream` is aligned to 8- or 64-byte boundary had contaminated a number of IPC functions, causing generated metadata (plus padding, if any) to be non-deterministic. This introduces a new `ipc::AlignStream` function and the desired use is to align the stream at the highest level possible. I've implemented the changes in the Python tensor serialization code paths. I removed various cruft where alignment issues leaked into the API\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T00:35:15.293+0000",
                    "updated": "2018-09-24T00:35:15.293+0000",
                    "started": "2018-09-24T00:35:15.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146922",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/146923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423859807\n \n \n   cc @robertnishihara @pcmoritz for your review. I think this should have the same behavior as before, but the stream alignment is handled in exactly one place in the serialize and deserialize paths, respectively\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T00:36:26.958+0000",
                    "updated": "2018-09-24T00:36:26.958+0000",
                    "started": "2018-09-24T00:36:26.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146923",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/146970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423894535\n \n \n   I need to write some more tests and fix some things with `Message::SerializeTo`. I also plan to address ARROW-1996 as this deals with the underlying cause there I believe\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T07:30:21.423+0000",
                    "updated": "2018-09-24T07:30:21.423+0000",
                    "started": "2018-09-24T07:30:21.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146970",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/146983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423903174\n \n \n   OK, I'm done with this modulo getting the build the pass\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T08:15:47.999+0000",
                    "updated": "2018-09-24T08:15:47.999+0000",
                    "started": "2018-09-24T08:15:47.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146983",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/146989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423911408\n \n \n   @kou I had to update glib because of an API change with `ipc::ReadTensor`, please have a look\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T08:53:15.889+0000",
                    "updated": "2018-09-24T08:53:15.889+0000",
                    "started": "2018-09-24T08:53:15.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146989",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423969175\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=h1) Report\n   > Merging [#2615](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/391516df8ce084c279e854cf52c8beb4a4fc444a?src=pr&el=desc) will **increase** coverage by `0.97%`.\n   > The diff coverage is `96.47%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2615/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2615      +/-   ##\n   ==========================================\n   + Coverage   87.24%   88.21%   +0.97%     \n   ==========================================\n     Files         380      319      -61     \n     Lines       59033    55393    -3640     \n   ==========================================\n   - Hits        51505    48867    -2638     \n   + Misses       7456     6526     -930     \n   + Partials       72        0      -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/interfaces.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pbnRlcmZhY2VzLmg=) | `90% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuaA==) | `95.95% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/io/memory.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/message.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWVzc2FnZS5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/writer.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvd3JpdGVyLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/serialize.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vc2VyaWFsaXplLmNj) | `89.64% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/metadata-internal.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGEtaW50ZXJuYWwuaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/python/deserialize.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZGVzZXJpYWxpemUuY2M=) | `91.2% <100%> (+0.09%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_serialization.py](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zZXJpYWxpemF0aW9uLnB5) | `90.31% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/arrow/io/memory.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuY2M=) | `88.66% <100%> (+0.15%)` | :arrow_up: |\n   | ... and [75 more](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=footer). Last update [391516d...f3fe30d](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T13:11:21.506+0000",
                    "updated": "2018-09-24T13:11:21.506+0000",
                    "started": "2018-09-24T13:11:21.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147106",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219855656\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -86,6 +87,52 @@ TEST(TestMessage, Equals) {\n   ASSERT_FALSE(msg5.Equals(msg1));\n }\n \n+TEST(TestMessage, SerializeTo) {\n+  const int64_t body_length = 64;\n+\n+  flatbuffers::FlatBufferBuilder fbb;\n+  fbb.Finish(flatbuf::CreateMessage(fbb, internal::kCurrentMetadataVersion,\n+                                    flatbuf::MessageHeader_RecordBatch, 0 /* header */,\n+                                    body_length));\n+\n+  std::shared_ptr<Buffer> metadata;\n+  ASSERT_OK(internal::WriteFlatbufferBuilder(fbb, &metadata));\n+\n+  std::string body = \"abcdef\";\n+\n+  std::unique_ptr<Message> message;\n+  ASSERT_OK(Message::Open(metadata, std::make_shared<Buffer>(body), &message));\n+\n+  int64_t output_length = 0;\n+  int64_t position = 0;\n+\n+  std::shared_ptr<io::BufferOutputStream> stream;\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 8, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 8) + body_length, output_length);\n+    ASSERT_EQ(output_length, position);\n+  }\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 64, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 64) + body_length, output_length);\n \n Review comment:\n   Adding a comment here would be nice here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:32:02.398+0000",
                    "updated": "2018-09-24T14:32:02.398+0000",
                    "started": "2018-09-24T14:32:02.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147132",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219855550\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -86,6 +87,52 @@ TEST(TestMessage, Equals) {\n   ASSERT_FALSE(msg5.Equals(msg1));\n }\n \n+TEST(TestMessage, SerializeTo) {\n+  const int64_t body_length = 64;\n+\n+  flatbuffers::FlatBufferBuilder fbb;\n+  fbb.Finish(flatbuf::CreateMessage(fbb, internal::kCurrentMetadataVersion,\n+                                    flatbuf::MessageHeader_RecordBatch, 0 /* header */,\n+                                    body_length));\n+\n+  std::shared_ptr<Buffer> metadata;\n+  ASSERT_OK(internal::WriteFlatbufferBuilder(fbb, &metadata));\n+\n+  std::string body = \"abcdef\";\n+\n+  std::unique_ptr<Message> message;\n+  ASSERT_OK(Message::Open(metadata, std::make_shared<Buffer>(body), &message));\n+\n+  int64_t output_length = 0;\n+  int64_t position = 0;\n+\n+  std::shared_ptr<io::BufferOutputStream> stream;\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 8, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 8) + body_length, output_length);\n \n Review comment:\n   It would be nice to add a comment explaining this test. Is something 8-padded?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:32:02.405+0000",
                    "updated": "2018-09-24T14:32:02.405+0000",
                    "started": "2018-09-24T14:32:02.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147134",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219855210\n \n \n\n ##########\n File path: cpp/src/arrow/io/memory.h\n ##########\n @@ -40,6 +40,17 @@ class ARROW_EXPORT BufferOutputStream : public OutputStream {\n  public:\n   explicit BufferOutputStream(const std::shared_ptr<ResizableBuffer>& buffer);\n \n+  /// \\brief Create in-memory output stream with a default capacity of 1K using\n \n Review comment:\n   Hmm... I'm not sure why this API is useful? Why 1K specifically?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:32:02.405+0000",
                    "updated": "2018-09-24T14:32:02.405+0000",
                    "started": "2018-09-24T14:32:02.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147133",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219856039\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -725,12 +772,24 @@ class TestTensorRoundTrip : public ::testing::Test, public IpcTestFixture {\n     int32_t metadata_length;\n     int64_t body_length;\n \n+    const auto& type = checked_cast<const FixedWidthType&>(*tensor.type());\n+    const int elem_size = type.bit_width() / 8;\n+\n     ASSERT_OK(mmap_->Seek(0));\n \n     ASSERT_OK(WriteTensor(tensor, mmap_.get(), &metadata_length, &body_length));\n \n+    const int64_t expected_body_length = elem_size * tensor.size();\n+\n+    // Body padded\n+    ASSERT_EQ(expected_body_length, body_length);\n \n Review comment:\n   I'm probably misunderstanding this test, but wouldn't you have to call `mmap_.Tell` if you wanted to check the padding?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:32:02.421+0000",
                    "updated": "2018-09-24T14:32:02.421+0000",
                    "started": "2018-09-24T14:32:02.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147135",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-423969175\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=h1) Report\n   > Merging [#2615](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/391516df8ce084c279e854cf52c8beb4a4fc444a?src=pr&el=desc) will **increase** coverage by `0.97%`.\n   > The diff coverage is `96.47%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2615/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2615      +/-   ##\n   ==========================================\n   + Coverage   87.24%   88.21%   +0.97%     \n   ==========================================\n     Files         380      319      -61     \n     Lines       59033    55393    -3640     \n   ==========================================\n   - Hits        51505    48867    -2638     \n   + Misses       7456     6526     -930     \n   + Partials       72        0      -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/interfaces.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pbnRlcmZhY2VzLmg=) | `90% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuaA==) | `95.95% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/io/memory.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/message.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWVzc2FnZS5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/writer.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvd3JpdGVyLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/serialize.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vc2VyaWFsaXplLmNj) | `89.64% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/metadata-internal.h](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGEtaW50ZXJuYWwuaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/python/deserialize.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZGVzZXJpYWxpemUuY2M=) | `91.2% <100%> (+0.09%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_serialization.py](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zZXJpYWxpemF0aW9uLnB5) | `90.31% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/arrow/io/memory.cc](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuY2M=) | `88.66% <100%> (+0.15%)` | :arrow_up: |\n   | ... and [75 more](https://codecov.io/gh/apache/arrow/pull/2615/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=footer). Last update [391516d...672ba9a](https://codecov.io/gh/apache/arrow/pull/2615?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:44:17.868+0000",
                    "updated": "2018-09-24T14:44:17.868+0000",
                    "started": "2018-09-24T14:44:17.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147138",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219866688\n \n \n\n ##########\n File path: cpp/src/arrow/io/memory.h\n ##########\n @@ -40,6 +40,17 @@ class ARROW_EXPORT BufferOutputStream : public OutputStream {\n  public:\n   explicit BufferOutputStream(const std::shared_ptr<ResizableBuffer>& buffer);\n \n+  /// \\brief Create in-memory output stream with a default capacity of 1K using\n \n Review comment:\n   It's more convenient than writing `BufferOutputStream::Create(1024, default_memory_pool(), &stream)`. It's nice to have a simple default along with a more customizable version. I can remove it, too.\r\n   \r\n   1K is arbitrary. It could easily be 4K\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:52:46.932+0000",
                    "updated": "2018-09-24T14:52:46.932+0000",
                    "started": "2018-09-24T14:52:46.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147142",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219866963\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -86,6 +87,52 @@ TEST(TestMessage, Equals) {\n   ASSERT_FALSE(msg5.Equals(msg1));\n }\n \n+TEST(TestMessage, SerializeTo) {\n+  const int64_t body_length = 64;\n+\n+  flatbuffers::FlatBufferBuilder fbb;\n+  fbb.Finish(flatbuf::CreateMessage(fbb, internal::kCurrentMetadataVersion,\n+                                    flatbuf::MessageHeader_RecordBatch, 0 /* header */,\n+                                    body_length));\n+\n+  std::shared_ptr<Buffer> metadata;\n+  ASSERT_OK(internal::WriteFlatbufferBuilder(fbb, &metadata));\n+\n+  std::string body = \"abcdef\";\n+\n+  std::unique_ptr<Message> message;\n+  ASSERT_OK(Message::Open(metadata, std::make_shared<Buffer>(body), &message));\n+\n+  int64_t output_length = 0;\n+  int64_t position = 0;\n+\n+  std::shared_ptr<io::BufferOutputStream> stream;\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 8, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 8) + body_length, output_length);\n \n Review comment:\n   I'll add a comment. The metadata padding is the second argument to `SerializeTo`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:53:27.571+0000",
                    "updated": "2018-09-24T14:53:27.571+0000",
                    "started": "2018-09-24T14:53:27.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147143",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219867030\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -86,6 +87,52 @@ TEST(TestMessage, Equals) {\n   ASSERT_FALSE(msg5.Equals(msg1));\n }\n \n+TEST(TestMessage, SerializeTo) {\n+  const int64_t body_length = 64;\n+\n+  flatbuffers::FlatBufferBuilder fbb;\n+  fbb.Finish(flatbuf::CreateMessage(fbb, internal::kCurrentMetadataVersion,\n+                                    flatbuf::MessageHeader_RecordBatch, 0 /* header */,\n+                                    body_length));\n+\n+  std::shared_ptr<Buffer> metadata;\n+  ASSERT_OK(internal::WriteFlatbufferBuilder(fbb, &metadata));\n+\n+  std::string body = \"abcdef\";\n+\n+  std::unique_ptr<Message> message;\n+  ASSERT_OK(Message::Open(metadata, std::make_shared<Buffer>(body), &message));\n+\n+  int64_t output_length = 0;\n+  int64_t position = 0;\n+\n+  std::shared_ptr<io::BufferOutputStream> stream;\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 8, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 8) + body_length, output_length);\n+    ASSERT_EQ(output_length, position);\n+  }\n+\n+  {\n+    ASSERT_OK(io::BufferOutputStream::Create(&stream));\n+    ASSERT_OK(message->SerializeTo(stream.get(), 64, &output_length));\n+    ASSERT_OK(stream->Tell(&position));\n+    ASSERT_EQ(BitUtil::RoundUp(metadata->size() + 4, 64) + body_length, output_length);\n \n Review comment:\n   Same as above. I'll add a comment\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:53:37.837+0000",
                    "updated": "2018-09-24T14:53:37.837+0000",
                    "started": "2018-09-24T14:53:37.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147144",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-424004170\n \n \n   > On the principle ISTM that we should write padded messages, not worry about stream alignment since the latter doesn't always make sense\r\n   \r\n   I would agree with you. In the event that we write to a socket stream, we would probably want to keep track of how many bytes have been written, even though there is no inherent \"position\".\r\n   \r\n   This patch digs us out of the hole we were in where various functions were manipulating the position of the stream, and the written metadata was non-deterministic. So now whether the stream is aligned or not, the content of the IPC payload is the same\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:55:31.560+0000",
                    "updated": "2018-09-24T14:55:31.560+0000",
                    "started": "2018-09-24T14:55:31.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147145",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219868450\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/ipc-read-write-test.cc\n ##########\n @@ -725,12 +772,24 @@ class TestTensorRoundTrip : public ::testing::Test, public IpcTestFixture {\n     int32_t metadata_length;\n     int64_t body_length;\n \n+    const auto& type = checked_cast<const FixedWidthType&>(*tensor.type());\n+    const int elem_size = type.bit_width() / 8;\n+\n     ASSERT_OK(mmap_->Seek(0));\n \n     ASSERT_OK(WriteTensor(tensor, mmap_.get(), &metadata_length, &body_length));\n \n+    const int64_t expected_body_length = elem_size * tensor.size();\n+\n+    // Body padded\n+    ASSERT_EQ(expected_body_length, body_length);\n \n Review comment:\n   The comment is incorrect. `WriteTensor` does not pad the tensor body at the moment -- this turned out to be a huge can of worms (I tried to add padding) because of the way the TensorFlow ops work. We might return and add padding later, but it was too much work for right now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:57:08.512+0000",
                    "updated": "2018-09-24T14:57:08.512+0000",
                    "started": "2018-09-24T14:57:08.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147146",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219869058\n \n \n\n ##########\n File path: cpp/src/arrow/io/memory.h\n ##########\n @@ -40,6 +40,17 @@ class ARROW_EXPORT BufferOutputStream : public OutputStream {\n  public:\n   explicit BufferOutputStream(const std::shared_ptr<ResizableBuffer>& buffer);\n \n+  /// \\brief Create in-memory output stream with a default capacity of 1K using\n \n Review comment:\n   FWIW, 1K seems to be a popular number for initializing in-memory buffers\r\n   \r\n   * https://github.com/apache/impala/blob/64e6719870db5602a6fa85014bc6c264080b9414/be/src/rpc/thrift-util.h#L48\r\n   \r\n   * https://github.com/apache/arrow/blob/master/cpp/src/parquet/util/memory.h#L50\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T14:58:26.672+0000",
                    "updated": "2018-09-24T14:58:26.672+0000",
                    "started": "2018-09-24T14:58:26.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147149",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r219873299\n \n \n\n ##########\n File path: cpp/src/arrow/io/memory.h\n ##########\n @@ -40,6 +40,17 @@ class ARROW_EXPORT BufferOutputStream : public OutputStream {\n  public:\n   explicit BufferOutputStream(const std::shared_ptr<ResizableBuffer>& buffer);\n \n+  /// \\brief Create in-memory output stream with a default capacity of 1K using\n \n Review comment:\n   I see. Sounds fine to me then.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T15:09:08.595+0000",
                    "updated": "2018-09-24T15:09:08.595+0000",
                    "started": "2018-09-24T15:09:08.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147154",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#issuecomment-424151923\n \n \n   I just tried out Ray using this PR and the numpy array alignment behavior seems to work correctly.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T22:54:06.062+0000",
                    "updated": "2018-09-24T22:54:06.062+0000",
                    "started": "2018-09-24T22:54:06.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147365",
                    "issueId": "13184198"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/worklog/147366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2615: ARROW-3212: [C++] Make IPC metadata deterministic, regardless of current stream position. Clean up stream / tensor alignment logic\nURL: https://github.com/apache/arrow/pull/2615#discussion_r220014592\n \n \n\n ##########\n File path: cpp/src/arrow/python/serialize.cc\n ##########\n @@ -760,10 +761,14 @@ Status SerializedPyObject::WriteTo(io::OutputStream* dst) {\n       dst->Write(reinterpret_cast<const uint8_t*>(&num_buffers), sizeof(int32_t)));\n   RETURN_NOT_OK(ipc::WriteRecordBatchStream({this->batch}, dst));\n \n+  // Align stream to 64-byte offset so tensor bodies are 64-byte aligned\n+  RETURN_NOT_OK(ipc::AlignStream(dst, 64));\n \n Review comment:\n   Should these two `64`s be `ipc::kTensorAlignment`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-24T22:56:58.430+0000",
                    "updated": "2018-09-24T22:56:58.430+0000",
                    "started": "2018-09-24T22:56:58.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "147366",
                    "issueId": "13184198"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6a3d61ea[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@580f982d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@95f6dbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2d355248[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58a6277b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@33da0428[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@411abd70[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46ba0009[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fce6a5a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4c56c0cf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58331508[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4e1fec4f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 25 08:16:46 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-25T08:16:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3212/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-11T00:48:02.000+0000",
        "updated": "2018-09-25T08:16:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the amount of padding bytes written after the IPC metadata header depends on the current position of the {{OutputStream}} passed. So if the message begins on an unaligned (not multiple of 8) offset, then the content of the metadata will be different than if it did. This seems like a leaky abstraction -- aligning the stream should probably be handled separately from writing the IPC protocol.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create deterministic IPC metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13184198/comment/16626977",
                    "id": "16626977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2615\n[https://github.com/apache/arrow/pull/2615]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-25T08:16:46.245+0000",
                    "updated": "2018-09-25T08:16:46.245+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3xxsn:",
        "customfield_12314139": null
    }
}