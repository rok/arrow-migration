{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13301865",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865",
    "key": "ARROW-8628",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12587219",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12587219",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13290645",
                    "key": "ARROW-8046",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290645",
                    "fields": {
                        "summary": "[Developer][Integration] Makefile.docker's target names are broken",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333244",
                "id": "12333244",
                "name": "Continuous Integration"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8628/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 74,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621347949\n\n\n   https://issues.apache.org/jira/browse/ARROW-8628\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-29T17:17:14.329+0000",
                    "updated": "2020-04-29T17:17:14.329+0000",
                    "started": "2020-04-29T17:17:14.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428669",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621349417\n\n\n   @github-actions crossbow submit test-conda-python-3.7-pandas-latest test-debian-10-cpp test-conda-python-3.7\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-29T17:19:53.337+0000",
                    "updated": "2020-04-29T17:19:53.337+0000",
                    "started": "2020-04-29T17:19:53.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428671",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621356894\n\n\n   Revision: 719a93477453133902369cbad5a979a9eb8c4b04\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-176](https://github.com/ursa-labs/crossbow/branches/all?query=actions-176)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-python-3.7|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-176-azure-test-conda-python-3.7)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-176-azure-test-conda-python-3.7)|\n   |test-conda-python-3.7-pandas-latest|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-176-circle-test-conda-python-3.7-pandas-latest.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-176-circle-test-conda-python-3.7-pandas-latest)|\n   |test-debian-10-cpp|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-176-github-test-debian-10-cpp)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-176-github-test-debian-10-cpp)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-29T17:34:10.432+0000",
                    "updated": "2020-04-29T17:34:10.432+0000",
                    "started": "2020-04-29T17:34:10.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428675",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621696833\n\n\n   @github-actions crossbow submit test-conda-python-3.7-pandas-latest test-debian-10-cpp test-conda-python-3.7\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T08:39:07.381+0000",
                    "updated": "2020-04-30T08:39:07.381+0000",
                    "started": "2020-04-30T08:39:07.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428927",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621697556\n\n\n   Revision: c01d30dc0e423e7dd201044f580b1434d670d4f4\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-180](https://github.com/ursa-labs/crossbow/branches/all?query=actions-180)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-python-3.7|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-180-azure-test-conda-python-3.7)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-180-azure-test-conda-python-3.7)|\n   |test-conda-python-3.7-pandas-latest|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-180-circle-test-conda-python-3.7-pandas-latest.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-180-circle-test-conda-python-3.7-pandas-latest)|\n   |test-debian-10-cpp|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-180-github-test-debian-10-cpp)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-180-github-test-debian-10-cpp)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T08:40:34.137+0000",
                    "updated": "2020-04-30T08:40:34.137+0000",
                    "started": "2020-04-30T08:40:34.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428929",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621759490\n\n\n   @github-actions crossbow submit test-debian-10-cpp test-debian-10-go-1.12 test-conda-python-3.7\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T10:52:33.193+0000",
                    "updated": "2020-04-30T10:52:33.193+0000",
                    "started": "2020-04-30T10:52:33.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428997",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/428998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621760055\n\n\n   Revision: d84d408146463c6418d2d2c8901894daf6b816c3\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-182](https://github.com/ursa-labs/crossbow/branches/all?query=actions-182)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-python-3.7|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-182-azure-test-conda-python-3.7)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-182-azure-test-conda-python-3.7)|\n   |test-debian-10-cpp|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-182-github-test-debian-10-cpp)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-182-github-test-debian-10-cpp)|\n   |test-debian-10-go-1.12|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-182-circle-test-debian-10-go-1.12.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-182-circle-test-debian-10-go-1.12)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T10:54:00.521+0000",
                    "updated": "2020-04-30T10:54:00.521+0000",
                    "started": "2020-04-30T10:54:00.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "428998",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621883711\n\n\n   @github-actions crossbow submit test-debian-10-cpp test-debian-10-go-1.12 test-conda-python-3.7\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T14:20:44.223+0000",
                    "updated": "2020-04-30T14:20:44.223+0000",
                    "started": "2020-04-30T14:20:44.222+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429050",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621884756\n\n\n   Revision: 5c0b02dd7947e1e61da701169cc5fafb9135a6e5\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-183](https://github.com/ursa-labs/crossbow/branches/all?query=actions-183)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-python-3.7|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-183-github-test-conda-python-3.7)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-183-github-test-conda-python-3.7)|\n   |test-debian-10-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-183-circle-test-debian-10-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-183-circle-test-debian-10-cpp)|\n   |test-debian-10-go-1.12|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-183-azure-test-debian-10-go-1.12)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-183-azure-test-debian-10-go-1.12)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T14:22:18.431+0000",
                    "updated": "2020-04-30T14:22:18.431+0000",
                    "started": "2020-04-30T14:22:18.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429051",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621946996\n\n\n   @github-actions crossbow submit test-debian-10-cpp \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:02:50.659+0000",
                    "updated": "2020-04-30T16:02:50.659+0000",
                    "started": "2020-04-30T16:02:50.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429113",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621947873\n\n\n   Revision: 0d768d6948627f165819cbb4542fca1503a340b1\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-184](https://github.com/ursa-labs/crossbow/branches/all?query=actions-184)\n   \n   |Task|Status|\n   |----|------|\n   |test-debian-10-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-184-circle-test-debian-10-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-184-circle-test-debian-10-cpp)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:04:16.434+0000",
                    "updated": "2020-04-30T16:04:16.434+0000",
                    "started": "2020-04-30T16:04:16.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429114",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621957531\n\n\n   @github-actions crossbow submit test-debian-10-cpp\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:21:05.948+0000",
                    "updated": "2020-04-30T16:21:05.948+0000",
                    "started": "2020-04-30T16:21:05.948+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429117",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-621958397\n\n\n   Revision: 0b532b06da2ffab64d34d4420790eee3e4f64ca3\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-185](https://github.com/ursa-labs/crossbow/branches/all?query=actions-185)\n   \n   |Task|Status|\n   |----|------|\n   |test-debian-10-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-185-circle-test-debian-10-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-185-circle-test-debian-10-cpp)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T16:22:31.015+0000",
                    "updated": "2020-04-30T16:22:31.015+0000",
                    "started": "2020-04-30T16:22:31.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429118",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-622057148\n\n\n   @github-actions crossbow submit -g test\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T19:27:55.447+0000",
                    "updated": "2020-04-30T19:27:55.447+0000",
                    "started": "2020-04-30T19:27:55.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429210",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-622062939\n\n\n   Revision: 3cd96ea48a2116322b2fec06207fb1d624e0f969\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-189](https://github.com/ursa-labs/crossbow/branches/all?query=actions-189)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-cpp|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-cpp)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-cpp)|\n   |test-conda-cpp-valgrind|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-cpp-valgrind)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-cpp-valgrind)|\n   |test-conda-python-3.6|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.6)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.6)|\n   |test-conda-python-3.6-pandas-0.23|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.6-pandas-0.23)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.6-pandas-0.23)|\n   |test-conda-python-3.7|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7)|\n   |test-conda-python-3.7-dask-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-dask-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-dask-latest)|\n   |test-conda-python-3.7-hdfs-2.9.2|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-hdfs-2.9.2)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-hdfs-2.9.2)|\n   |test-conda-python-3.7-kartothek-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-kartothek-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-kartothek-latest)|\n   |test-conda-python-3.7-kartothek-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-kartothek-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-kartothek-master)|\n   |test-conda-python-3.7-pandas-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-pandas-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-pandas-latest)|\n   |test-conda-python-3.7-pandas-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-pandas-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-pandas-master)|\n   |test-conda-python-3.7-spark-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-spark-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-spark-master)|\n   |test-conda-python-3.7-turbodbc-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-turbodbc-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-turbodbc-latest)|\n   |test-conda-python-3.7-turbodbc-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.7-turbodbc-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.7-turbodbc-master)|\n   |test-conda-python-3.8|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.8)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.8)|\n   |test-conda-python-3.8-dask-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.8-dask-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.8-dask-master)|\n   |test-conda-python-3.8-jpype|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.8-jpype)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.8-jpype)|\n   |test-conda-python-3.8-pandas-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-python-3.8-pandas-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-python-3.8-pandas-latest)|\n   |test-conda-r-3.6|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-conda-r-3.6)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-conda-r-3.6)|\n   |test-debian-10-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-debian-10-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-debian-10-cpp)|\n   |test-debian-10-go-1.12|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-debian-10-go-1.12)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-debian-10-go-1.12)|\n   |test-debian-10-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-debian-10-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-debian-10-python-3)|\n   |test-debian-c-glib|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-debian-c-glib.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-debian-c-glib)|\n   |test-debian-ruby|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-debian-ruby.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-debian-ruby)|\n   |test-fedora-30-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-fedora-30-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-fedora-30-cpp)|\n   |test-fedora-30-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-fedora-30-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-fedora-30-python-3)|\n   |test-r-linux-as-cran|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-189-github-test-r-linux-as-cran)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-189-github-test-r-linux-as-cran)|\n   |test-r-rhub-ubuntu-gcc-release|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rhub-ubuntu-gcc-release)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rhub-ubuntu-gcc-release)|\n   |test-r-rocker-r-base-latest|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rocker-r-base-latest)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rocker-r-base-latest)|\n   |test-r-rstudio-r-base-3.6-bionic|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rstudio-r-base-3.6-bionic)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rstudio-r-base-3.6-bionic)|\n   |test-r-rstudio-r-base-3.6-centos6|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rstudio-r-base-3.6-centos6)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rstudio-r-base-3.6-centos6)|\n   |test-r-rstudio-r-base-3.6-opensuse15|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rstudio-r-base-3.6-opensuse15)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rstudio-r-base-3.6-opensuse15)|\n   |test-r-rstudio-r-base-3.6-opensuse42|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-r-rstudio-r-base-3.6-opensuse42)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-r-rstudio-r-base-3.6-opensuse42)|\n   |test-ubuntu-16.04-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-16.04-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-16.04-cpp)|\n   |test-ubuntu-18.04-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-18.04-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-18.04-cpp)|\n   |test-ubuntu-18.04-cpp-cmake32|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-18.04-cpp-cmake32.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-18.04-cpp-cmake32)|\n   |test-ubuntu-18.04-cpp-release|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-18.04-cpp-release.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-18.04-cpp-release)|\n   |test-ubuntu-18.04-cpp-static|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-18.04-cpp-static.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-18.04-cpp-static)|\n   |test-ubuntu-18.04-docs|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-ubuntu-18.04-docs)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-ubuntu-18.04-docs)|\n   |test-ubuntu-18.04-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-ubuntu-18.04-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-ubuntu-18.04-python-3)|\n   |test-ubuntu-18.04-r-3.6|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-ubuntu-18.04-r-3.6)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-ubuntu-18.04-r-3.6)|\n   |test-ubuntu-18.04-r-sanitizer|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-ubuntu-18.04-r-sanitizer)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-ubuntu-18.04-r-sanitizer)|\n   |test-ubuntu-c-glib|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-189-circle-test-ubuntu-c-glib.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-189-circle-test-ubuntu-c-glib)|\n   |test-ubuntu-ruby|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-189-azure-test-ubuntu-ruby)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-189-azure-test-ubuntu-ruby)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-30T19:38:00.037+0000",
                    "updated": "2020-04-30T19:38:00.037+0000",
                    "started": "2020-04-30T19:38:00.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429219",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-622320430\n\n\n   @github-actions crossbow submit -g test\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T09:37:04.290+0000",
                    "updated": "2020-05-01T09:37:04.290+0000",
                    "started": "2020-05-01T09:37:04.290+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429417",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#issuecomment-622320787\n\n\n   Revision: f3fe79f4e89811a0e24b240d1b306315cdce95ee\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-192](https://github.com/ursa-labs/crossbow/branches/all?query=actions-192)\n   \n   |Task|Status|\n   |----|------|\n   |test-conda-cpp|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-cpp)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-cpp)|\n   |test-conda-cpp-valgrind|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-cpp-valgrind)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-cpp-valgrind)|\n   |test-conda-python-3.6|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.6)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.6)|\n   |test-conda-python-3.6-pandas-0.23|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.6-pandas-0.23)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.6-pandas-0.23)|\n   |test-conda-python-3.7|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7)|\n   |test-conda-python-3.7-dask-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-dask-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-dask-latest)|\n   |test-conda-python-3.7-hdfs-2.9.2|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-hdfs-2.9.2)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-hdfs-2.9.2)|\n   |test-conda-python-3.7-kartothek-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-kartothek-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-kartothek-latest)|\n   |test-conda-python-3.7-kartothek-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-kartothek-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-kartothek-master)|\n   |test-conda-python-3.7-pandas-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-pandas-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-pandas-latest)|\n   |test-conda-python-3.7-pandas-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-pandas-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-pandas-master)|\n   |test-conda-python-3.7-spark-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-spark-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-spark-master)|\n   |test-conda-python-3.7-turbodbc-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-turbodbc-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-turbodbc-latest)|\n   |test-conda-python-3.7-turbodbc-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.7-turbodbc-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.7-turbodbc-master)|\n   |test-conda-python-3.8|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.8)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.8)|\n   |test-conda-python-3.8-dask-master|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.8-dask-master)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.8-dask-master)|\n   |test-conda-python-3.8-jpype|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.8-jpype)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.8-jpype)|\n   |test-conda-python-3.8-pandas-latest|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-python-3.8-pandas-latest)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-python-3.8-pandas-latest)|\n   |test-conda-r-3.6|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-conda-r-3.6)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-conda-r-3.6)|\n   |test-debian-10-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-debian-10-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-debian-10-cpp)|\n   |test-debian-10-go-1.12|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-debian-10-go-1.12)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-debian-10-go-1.12)|\n   |test-debian-10-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-debian-10-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-debian-10-python-3)|\n   |test-debian-c-glib|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-debian-c-glib.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-debian-c-glib)|\n   |test-debian-ruby|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-debian-ruby.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-debian-ruby)|\n   |test-fedora-30-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-fedora-30-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-fedora-30-cpp)|\n   |test-fedora-30-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-fedora-30-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-fedora-30-python-3)|\n   |test-r-linux-as-cran|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-192-github-test-r-linux-as-cran)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-192-github-test-r-linux-as-cran)|\n   |test-r-rhub-ubuntu-gcc-release|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rhub-ubuntu-gcc-release)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rhub-ubuntu-gcc-release)|\n   |test-r-rocker-r-base-latest|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rocker-r-base-latest)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rocker-r-base-latest)|\n   |test-r-rstudio-r-base-3.6-bionic|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rstudio-r-base-3.6-bionic)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rstudio-r-base-3.6-bionic)|\n   |test-r-rstudio-r-base-3.6-centos6|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rstudio-r-base-3.6-centos6)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rstudio-r-base-3.6-centos6)|\n   |test-r-rstudio-r-base-3.6-opensuse15|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rstudio-r-base-3.6-opensuse15)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rstudio-r-base-3.6-opensuse15)|\n   |test-r-rstudio-r-base-3.6-opensuse42|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-r-rstudio-r-base-3.6-opensuse42)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-r-rstudio-r-base-3.6-opensuse42)|\n   |test-ubuntu-16.04-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-16.04-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-16.04-cpp)|\n   |test-ubuntu-18.04-cpp|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-18.04-cpp.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-18.04-cpp)|\n   |test-ubuntu-18.04-cpp-cmake32|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-18.04-cpp-cmake32.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-18.04-cpp-cmake32)|\n   |test-ubuntu-18.04-cpp-release|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-18.04-cpp-release.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-18.04-cpp-release)|\n   |test-ubuntu-18.04-cpp-static|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-18.04-cpp-static.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-18.04-cpp-static)|\n   |test-ubuntu-18.04-docs|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-ubuntu-18.04-docs)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-ubuntu-18.04-docs)|\n   |test-ubuntu-18.04-python-3|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-ubuntu-18.04-python-3)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-ubuntu-18.04-python-3)|\n   |test-ubuntu-18.04-r-3.6|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-ubuntu-18.04-r-3.6)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-ubuntu-18.04-r-3.6)|\n   |test-ubuntu-18.04-r-sanitizer|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-ubuntu-18.04-r-sanitizer)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-ubuntu-18.04-r-sanitizer)|\n   |test-ubuntu-c-glib|[![CircleCI](https://img.shields.io/circleci/build/github/ursa-labs/crossbow/actions-192-circle-test-ubuntu-c-glib.svg)](https://circleci.com/gh/ursa-labs/crossbow/tree/actions-192-circle-test-ubuntu-c-glib)|\n   |test-ubuntu-ruby|[![Azure](https://dev.azure.com/ursa-labs/crossbow/_apis/build/status/ursa-labs.crossbow?branchName=actions-192-azure-test-ubuntu-ruby)](https://dev.azure.com/ursa-labs/crossbow/_build/latest?definitionId=1&branchName=actions-192-azure-test-ubuntu-ruby)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T09:38:38.474+0000",
                    "updated": "2020-05-01T09:38:38.474+0000",
                    "started": "2020-05-01T09:38:38.474+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429418",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#discussion_r418596433\n\n\n\n##########\nFile path: .github/workflows/archery.yml\n##########\n@@ -51,10 +53,12 @@ jobs:\n           python-version: '3.7'\n       - name: Install\n         working-directory: dev/archery\n-        run: pip install pytest responses ruamel.yaml toolz jinja2 -e .\n+        run: pip install pytest python-dotenv responses ruamel.yaml toolz jinja2 -e .\n\nReview comment:\n       Why not use pip install -e to ensure that requirements are up to date?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T15:37:53.267+0000",
                    "updated": "2020-05-01T15:37:53.267+0000",
                    "started": "2020-05-01T15:37:53.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429527",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#discussion_r418622281\n\n\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n\nReview comment:\n       Can this link to the main Archery docs? (*Are there Archery docs?*)\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n\nReview comment:\n       ```suggestion\r\n   There are multiple ways to execute the docker based builds. The recommended is\r\n   ```\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n\nReview comment:\n       Can I run these docker-compose commands myself?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n\nReview comment:\n       Would I ever call `archery docker` and not immediately put `run` next? If not, why not just `archery run conda-python`?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n\nReview comment:\n       Among the questions I'd have for the archery docs specifically right here:\r\n   \r\n   * What is archery?\r\n   * What system requirements does it have? (like, python version?)\r\n   * What do I do if the simple instructions don't work?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n\nReview comment:\n       What's a leaf image?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n\nReview comment:\n       Is there `archery docker --help` or something that tell me all of the flags like this?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n\nReview comment:\n       This needs more explanation, particularly to distinguish build-time parameters from environment variables\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n+\n+The parametrization is done through environment variables with sane defaults to\n+keep the build configurations declerative. Note that these parameters are\n+different from the ones described previously, these are affecting the runtime\n+behaviour of the builds scripts within the containers.\n+\n+A good example is cpp_build.sh build script which forwards environment\n+variables as CMake options - so the same scripts can be invoked in various\n+configurations without the necessity of chaning it. For examples see how the\n\nReview comment:\n       chaning?\n\n##########\nFile path: docs/source/developers/integration.rst\n##########\n@@ -62,9 +62,9 @@ simplify this, we provide a Makefile.\n .. code-block:: shell\n \n    # Build and run manually\n-   docker-compose build cpp\n-   docker-compose build python\n-   docker-compose run python\n+   docker-compose build conda-cpp\n+   docker-compose build conda-python\n+   docker-compose run conda-python\n \n-   # Using the makefile with proper image dependency resolution\n-   make -f Makefile.docker python\n+   # Using the archery with proper image dependency resolution\n\nReview comment:\n       ```suggestion\r\n      # Using archery with proper image dependency resolution\r\n   ```\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n\nReview comment:\n       That's what `-e` means?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n\nReview comment:\n       For C++, can I pass all cmake flags that way?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n+\n+The parametrization is done through environment variables with sane defaults to\n+keep the build configurations declerative. Note that these parameters are\n+different from the ones described previously, these are affecting the runtime\n+behaviour of the builds scripts within the containers.\n+\n+A good example is cpp_build.sh build script which forwards environment\n+variables as CMake options - so the same scripts can be invoked in various\n+configurations without the necessity of chaning it. For examples see how the\n+environment variables are passed in the docker-compose.yml's C++ images.\n+\n+Adding New Images\n+~~~~~~~~~~~~~~~~~\n+\n+See more in the docker-compose.yml\n\nReview comment:\n       I don't understand\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n\nReview comment:\n       ```suggestion\r\n   possible to be responsible for only a subset of tasks.\r\n   ```\r\n   \r\n   What subset? Why minimal?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n\nReview comment:\n       Ok, these are the build parameters. Can you link to this section where you mention that above?\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n+\n+The parametrization is done through environment variables with sane defaults to\n\nReview comment:\n       ```suggestion\r\n   The parametrization is done through environment variables with useful defaults to\r\n   ```\r\n   \r\n   What parametrization? \n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n+\n+The parametrization is done through environment variables with sane defaults to\n+keep the build configurations declerative. Note that these parameters are\n\nReview comment:\n       ```suggestion\r\n   keep the build configurations declarative. Note that these parameters are\r\n   ```\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n\nReview comment:\n       ... by doing what? (Please be explicit so I don't have to diff the examples to figure out what to do)\n\n##########\nFile path: docs/source/developers/docker.rst\n##########\n@@ -0,0 +1,143 @@\n+.. raw:: html\n+\n+   <!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+   -->\n+\n+Running Docker Builds\n+=====================\n+\n+Most of our Linux based continuous integration tasks are decoupled from public\n+CI services using docker and docker-compose. Keeping the CI configuration\n+minimal makes local reproducibility possible.\n+\n+Usage\n+-----\n+\n+There are multiple ways to execute the docker based builds. The recommented is\n+to use the archery tool:\n+\n+Installation:\n+\n+.. code:: bash\n+\n+    pip install -e dev/archery[docker]\n+\n+Execute a build:\n+\n+.. code::bash\n+\n+    archery docker run conda-python\n+\n+Archery calls the following docker-compose commands:\n+\n+.. code::bash\n+\n+    docker-compose pull --ignore-pull-failures conda-cpp\n+    docker-compose build conda-cpp\n+    docker-compose pull --ignore-pull-failures conda-python\n+    docker-compose build conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the image pulling:\n+\n+.. code::bash\n+\n+    archery docker run --no-cache conda-python\n+\n+Which translates to:\n+\n+.. code::bash\n+\n+    docker-compose build --no-cache conda-cpp\n+    docker-compose build --no-cache conda-python\n+    docker-compose run --rm conda-python\n+\n+To disable the cache only for the leaf image - useful to force building the\n+development version of a dependency:\n+\n+.. code::bash\n+\n+    PANDAS=master archery docker run --no-cache-leaf conda-python\n+\n+``PANDAS`` is a build time parameter, see the defaults in the .env file.\n+\n+To entirely skip building the image:\n+\n+.. code::bash\n+\n+    archery docker run --no-build conda-python\n+\n+In order to alter the runtime parameters pass environment variables to the\n+container in execution time:\n+\n+.. code::bash\n+\n+    archery docker run -e CMAKE_BUILD_TYPE=release ubuntu-cpp\n+\n+Starting an interactive bash session for debugging:\n+\n+.. code::bash\n+\n+    archery docker run ubuntu-cpp bash\n+\n+Development\n+-----------\n+\n+The docker-compose configuration is tuned towards reusable development\n+containers using hierarchical images. For example multiple language bindings\n+are dependent on the C++ implementation, so instead of redefining the\n+C++ environment multiple Dockerfiles, we can reuse the exact same base C++\n+image when building Glib, Ruby, R and Python bindings.\n+This helps reducing duplications and preventing a series of maintenance, but\n+makes the docker-compose configuration more complicated.\n+\n+Docker Build Parameters\n+~~~~~~~~~~~~~~~~~~~~~~~\n+\n+The build time parameters are pushed down to the [dockerfiles] to make the\n+image building more flexible. These are usually called docker build args.\n+The docker-compose.yml uses these build args extensively for:\n+\n+- defining the docker registry used for caching\n+- platform architectures\n+- operation systems and versions\n+- defining various versions if dependencies\n+\n+The default values are stored in the top level .env file. For examples see the\n+docker-compose.yml\n+\n+Build Scripts\n+~~~~~~~~~~~~~\n+\n+The scripts maintainted under ci/scripts directory should be kept as minimal as\n+possible to be responsible only a subset of tasks.\n+\n+The parametrization is done through environment variables with sane defaults to\n+keep the build configurations declerative. Note that these parameters are\n+different from the ones described previously, these are affecting the runtime\n+behaviour of the builds scripts within the containers.\n\nReview comment:\n       ```suggestion\r\n   behavior of the builds scripts within the containers.\r\n   ```\r\n   \r\n   Also this sentence is not clear to me.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T16:56:30.436+0000",
                    "updated": "2020-05-01T16:56:30.436+0000",
                    "started": "2020-05-01T16:56:30.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429561",
                    "issueId": "13301865"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/worklog/429566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7021:\nURL: https://github.com/apache/arrow/pull/7021#discussion_r418599653\n\n\n\n##########\nFile path: .github/workflows/java.yml\n##########\n@@ -38,6 +38,8 @@ on:\n env:\n   DOCKER_BUILDKIT: 0\n   COMPOSE_DOCKER_CLI_BUILD: 1\n+  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_TOKEN }}\n+  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_USER }}\n\nReview comment:\n       No refactor for the debian java entry?\n\n##########\nFile path: .github/workflows/python_cron.yml\n##########\n@@ -31,180 +31,71 @@ on:\n env:\n   DOCKER_BUILDKIT: 0\n   COMPOSE_DOCKER_CLI_BUILD: 1\n+  ARCHERY_DOCKER_USER: ${{ secrets.DOCKERHUB_TOKEN }}\n+  ARCHERY_DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_USER }}\n \n jobs:\n \n-  debian:\n-    name: AMD64 Debian ${{ matrix.debian }} Python 3\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') && github.repository == 'apache/arrow' }}\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        debian: [10]\n-    env:\n-      DEBIAN: ${{ matrix.debian }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 0\n-      - name: Fetch Submodules and Tags\n-        shell: bash\n-        run: ci/scripts/util_checkout.sh\n-      - name: Free Up Disk Space\n-        shell: bash\n-        run: ci/scripts/util_cleanup.sh\n-      - name: Docker Pull\n-        shell: bash\n-        run: |\n-          docker-compose pull --ignore-pull-failures debian-cpp\n-          docker-compose pull --ignore-pull-failures debian-python\n-      - name: Docker Build\n-        shell: bash\n-        run: |\n-          docker-compose build debian-cpp\n-          docker-compose build debian-python\n-      - name: Docker Run\n-        shell: bash\n-        run: docker-compose run debian-python\n-      - name: Docker Push\n-        if: success() && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        shell: bash\n-        run: |\n-          docker login -u ${{ secrets.DOCKERHUB_USER }} \\\n-                       -p ${{ secrets.DOCKERHUB_TOKEN }}\n-          docker-compose push debian-python\n-\n-  ubuntu:\n-    name: AMD64 Ubuntu ${{ matrix.ubuntu }} Python 3\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') && github.repository == 'apache/arrow' }}\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        ubuntu: [18.04]\n-    env:\n-      UBUNTU: ${{ matrix.ubuntu }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 0\n-      - name: Fetch Submodules and Tags\n-        shell: bash\n-        run: ci/scripts/util_checkout.sh\n-      - name: Free Up Disk Space\n-        shell: bash\n-        run: ci/scripts/util_cleanup.sh\n-      - name: Docker Pull\n-        shell: bash\n-        run: |\n-          docker-compose pull --ignore-pull-failures ubuntu-cpp\n-          docker-compose pull --ignore-pull-failures ubuntu-python\n-      - name: Docker Build\n-        shell: bash\n-        run: |\n-          docker-compose build ubuntu-cpp\n-          docker-compose build ubuntu-python\n-      - name: Docker Run\n-        shell: bash\n-        run: docker-compose run ubuntu-python\n-      - name: Docker Push\n-        if: success() && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        shell: bash\n-        run: |\n-          docker login -u ${{ secrets.DOCKERHUB_USER }} \\\n-                       -p ${{ secrets.DOCKERHUB_TOKEN }}\n-          docker-compose push ubuntu-python\n-\n-  fedora:\n-    name: AMD64 Fedora ${{ matrix.fedora }} Python 3\n-    runs-on: ubuntu-latest\n-    if: ${{ !contains(github.event.pull_request.title, 'WIP') && github.repository == 'apache/arrow' }}\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        fedora: [30]\n-    env:\n-      FEDORA: ${{ matrix.fedora }}\n-    steps:\n-      - name: Checkout Arrow\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 0\n-      - name: Fetch Submodules and Tags\n-        shell: bash\n-        run: ci/scripts/util_checkout.sh\n-      - name: Free Up Disk Space\n-        shell: bash\n-        run: ci/scripts/util_cleanup.sh\n-      - name: Docker Pull\n-        shell: bash\n-        run: |\n-          docker-compose pull --ignore-pull-failures fedora-cpp\n-          docker-compose pull --ignore-pull-failures fedora-python\n-      - name: Docker Build\n-        shell: bash\n-        run: |\n-          docker-compose build fedora-cpp\n-          docker-compose build fedora-python\n-      - name: Docker Run\n-        shell: bash\n-        run: docker-compose run fedora-python\n-      - name: Docker Push\n-        if: success() && github.repository == 'apache/arrow'\n-        continue-on-error: true\n-        shell: bash\n-        run: |\n-          docker login -u ${{ secrets.DOCKERHUB_USER }} \\\n-                       -p ${{ secrets.DOCKERHUB_TOKEN }}\n-          docker-compose push fedora-python\n-\n-  downstream:\n-    name: AMD64 Conda Python 3.7 ${{ matrix.title }}\n+  docker:\n+    name: ${{ matrix.title }}\n     runs-on: ubuntu-latest\n     if: ${{ !contains(github.event.pull_request.title, 'WIP') && github.repository == 'apache/arrow' }}\n     strategy:\n       fail-fast: false\n       matrix:\n         name:\n-          - dask-latest\n-          - hdfs-2.9.2\n-          - turbodbc-latest\n-          - kartothek-latest\n-          - pandas-master\n-          - pandas-0.24\n+          - debian-10-python-3\n\nReview comment:\n       That's the type of diff I like to see.\n\n##########\nFile path: .github/workflows/r.yml\n##########\n@@ -62,35 +65,24 @@ jobs:\n         with:\n           fetch-depth: 0\n       - name: Fetch Submodules and Tags\n-        shell: bash\n         run: ci/scripts/util_checkout.sh\n       - name: Free Up Disk Space\n-        shell: bash\n         run: ci/scripts/util_cleanup.sh\n-      - name: Docker Pull\n-        shell: bash\n-        run: |\n-          docker-compose pull --ignore-pull-failures ubuntu-cpp\n-          docker-compose pull --ignore-pull-failures ubuntu-r\n-      - name: Docker Build\n-        shell: bash\n+      - name: Setup Python\n+        uses: actions/setup-python@v1\n+        with:\n+          python-version: 3.8\n+      - name: Setup Archery\n+        run: pip install -e dev/archery[docker]\n+      - name: Execute Docker Build\n         run: |\n-          docker-compose build ubuntu-cpp\n-          docker-compose build ubuntu-r\n-      - name: Docker Run\n-        shell: bash\n-        run: docker-compose run ubuntu-r\n-      - name: Dump install logs on failure\n\nReview comment:\n       Dumping failures is useful for debugging.\n\n##########\nFile path: docs/source/developers/documentation.rst\n##########\n@@ -92,10 +92,10 @@ you made.\n Building with Docker\n --------------------\n \n-You can use Docker to build the documentation:\n+You can use Archery to build the documentation within a docker container:\n\nReview comment:\n       Also comment/link to installation.\n\n##########\nFile path: docs/source/developers/integration.rst\n##########\n@@ -62,9 +62,9 @@ simplify this, we provide a Makefile.\n .. code-block:: shell\n \n    # Build and run manually\n-   docker-compose build cpp\n-   docker-compose build python\n-   docker-compose run python\n+   docker-compose build conda-cpp\n+   docker-compose build conda-python\n+   docker-compose run conda-python\n \n-   # Using the makefile with proper image dependency resolution\n-   make -f Makefile.docker python\n+   # Using the archery with proper image dependency resolution\n\nReview comment:\n       Add a comment/link on how to install.\n\n##########\nFile path: dev/tasks/tasks.yml\n##########\n@@ -1914,286 +1744,165 @@ tasks:\n       not_cran: \"TRUE\"\n \n   test-ubuntu-18.04-r-3.6:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: azure\n+    template: docker-tests/azure.linux.yml\n     params:\n       env:\n         UBUNTU: 18.04\n         R: 3.6\n-      build:\n-        - ubuntu-cpp\n-        - ubuntu-r\n-      run:\n-        - ubuntu-r\n+      run: ubuntu-r\n \n   test-conda-r-3.6:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         R: 3.6\n-      build:\n-        - conda-cpp\n-        - conda-r\n-      run:\n-        - conda-r\n+      run: conda-r\n \n   test-ubuntu-18.04-r-sanitizer:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: azure\n+    template: docker-tests/azure.linux.yml\n     params:\n-      build:\n-        - ubuntu-r-sanitizer\n-      run:\n-        - ubuntu-r-sanitizer\n+      run: ubuntu-r-sanitizer\n \n   test-debian-10-go-1.12:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: azure\n+    template: docker-tests/azure.linux.yml\n     params:\n       env:\n         GO: 1.12\n-      build:\n-        - debian-go\n-      run:\n-        - debian-go\n+      run: debian-go\n \n   test-ubuntu-18.04-docs:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: azure\n+    template: docker-tests/azure.linux.yml\n     params:\n       env:\n         UBUNTU: 18.04\n-      build:\n-        - ubuntu-cpp\n-        - ubuntu-python\n-        - ubuntu-docs\n-      run:\n-        - ubuntu-docs\n+      run: ubuntu-docs\n \n   ############################## Integration tests ############################\n \n   test-conda-python-3.7-pandas-latest:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.7\n         PANDAS: latest\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-pandas\n-      run:\n-        - conda-python-pandas\n+      run: conda-python-pandas\n \n   test-conda-python-3.8-pandas-latest:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.8\n         PANDAS: latest\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-pandas\n-      run:\n-        - conda-python-pandas\n+      run: conda-python-pandas\n \n   test-conda-python-3.7-pandas-master:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.7\n         PANDAS: master\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-pandas\n-      run:\n-        - conda-python-pandas\n+      run: --no-cache-leaf conda-python-pandas\n \n   test-conda-python-3.6-pandas-0.23:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.6\n         PANDAS: 0.23\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-pandas\n-      run:\n-        - conda-python-pandas\n+      run: conda-python-pandas\n \n   test-conda-python-3.7-dask-latest:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.7\n         DASK: latest\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-dask\n-      run:\n-        - conda-python-dask\n+      run: conda-python-dask\n \n   test-conda-python-3.8-dask-master:\n-    ci: circle\n-    platform: linux\n-    template: docker-tests/circle.linux.yml\n+    ci: github\n+    template: docker-tests/github.linux.yml\n     params:\n       env:\n         PYTHON: 3.8\n         DASK: latest\n-      build:\n-        - conda-cpp\n-        - conda-python\n-      nocache:\n-        - conda-python-dask\n-      run:\n-        - conda-python-dask\n+      run: --no-cache-leaf conda-python-dask\n\nReview comment:\n       Why `--no-cache-leaf` for this one, but not for `3.7`.\n\n##########\nFile path: docker-compose.yml\n##########\n@@ -79,6 +79,52 @@ x-ccache: &ccache\n   CCACHE_MAXSIZE: 500M\n   CCACHE_DIR: /build/ccache\n \n+x-hierarchy:\n\nReview comment:\n       Since this is highly custom, add a paragraph documenting this, and some basic introductions on how to add a new target.\n\n##########\nFile path: dev/archery/archery/tests/test_docker.py\n##########\n@@ -0,0 +1,168 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+from unittest import mock\n+from pathlib import Path\n+\n+import pytest\n+\n+from archery.docker import DockerCompose\n+\n+\n+example_missing_service = \"\"\"\n+x-hierarchy:\n+  - foo:\n+    - sub-foo:\n+      - sub-sub-foo\n+      - another-sub-sub-foo\n+  - bar:\n+    - sub-bar\n+  - baz\n+\n+services:\n+  foo:\n+  sub-sub-foo:\n+  another-sub-sub-foo:\n+  bar:\n+  sub-bar:\n+  baz:\n+\"\"\"\n+\n+example_missing_node = \"\"\"\n+x-hierarchy:\n+  - foo:\n+    - sub-foo:\n+      - sub-sub-foo\n+      - another-sub-sub-foo\n+  - bar\n+  - baz\n+\n+services:\n+  foo:\n+  sub-foo:\n+  sub-sub-foo:\n+  another-sub-sub-foo:\n+  bar:\n+  sub-bar:\n+  baz:\n+\"\"\"\n+\n+example_ok = \"\"\"\n+x-hierarchy:\n+  - foo:\n+    - sub-foo:\n+      - sub-sub-foo\n+      - another-sub-sub-foo\n+  - bar:\n+    - sub-bar\n+  - baz\n+\n+services:\n+  foo:\n+  sub-foo:\n+  sub-sub-foo:\n+  another-sub-sub-foo:\n+  bar:\n+  sub-bar:\n+  baz:\n+\"\"\"\n+\n+\n+def create_config(tmpdir, yml_content):\n+    config_path = tmpdir / 'docker-compose.yml'\n+    with config_path.open('w') as fp:\n+        fp.write(yml_content)\n+    return DockerCompose(config_path)\n+\n+\n+def test_config_validation(tmpdir):\n+    compose = create_config(tmpdir, example_missing_service)\n+    msg = \"`sub-foo` is defined in `x-hierarchy` bot not in `services`\"\n+    with pytest.raises(ValueError, match=msg):\n+        compose.validate()\n+\n+    compose = create_config(tmpdir, example_missing_node)\n+    msg = \"`sub-bar` is defined in `services` but not in `x-hierarchy`\"\n+    with pytest.raises(ValueError, match=msg):\n+        compose.validate()\n+\n+    compose = create_config(tmpdir, example_ok)\n+    compose.validate()\n+\n+\n+def test_executed_docker_commands(tmpdir):\n+    arrow_config = Path(__file__).parents[4] / 'docker-compose.yml'\n\nReview comment:\n       Also use ArrowSource here.\n\n##########\nFile path: dev/archery/archery/docker.py\n##########\n@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+from pathlib import Path\n+import subprocess\n+\n+from dotenv import dotenv_values\n+from ruamel.yaml import YAML\n+\n+from .utils.command import Command, default_bin\n+\n+\n+def flatten(node, parents=None):\n+    parents = list(parents or [])\n+    if isinstance(node, str):\n+        yield (node, parents)\n+    elif isinstance(node, list):\n+        for value in node:\n+            yield from flatten(value, parents=parents)\n+    elif isinstance(node, dict):\n+        for key, value in node.items():\n+            yield (key, parents)\n+            yield from flatten(value, parents=parents + [key])\n+    else:\n+        raise TypeError(node)\n+\n+\n+class UndefinedImage(Exception):\n+    pass\n+\n+\n+class Docker(Command):\n+\n+    def __init__(self, docker_bin=None):\n+        self.bin = default_bin(docker_bin, \"docker\")\n+\n+\n+class DockerCompose(Command):\n+\n+    def __init__(self, config_path, dotenv_path=None, compose_bin=None):\n+        self.config_path = Path(config_path)\n+        if dotenv_path:\n+            self.dotenv_path = Path(dotenv_path)\n+        else:\n+            self.dotenv_path = self.config_path.parent / '.env'\n+\n+        yaml = YAML()\n+        with self.config_path.open() as fp:\n+            self.config = yaml.load(fp)\n+\n+        self.nodes = dict(flatten(self.config['x-hierarchy']))\n+        self.dotenv = dotenv_values(self.dotenv_path)\n+        self.bin = default_bin(compose_bin, \"docker-compose\")\n+\n+    def validate(self):\n+        services = self.config['services'].keys()\n+        nodes = self.nodes.keys()\n+        errors = []\n+\n+        for name in nodes - services:\n+            errors.append(\n+                'Service `{}` is defined in `x-hierarchy` bot not in '\n+                '`services`'.format(name)\n+            )\n+        for name in services - nodes:\n+            errors.append(\n+                'Service `{}` is defined in `services` but not in '\n+                '`x-hierarchy`'.format(name)\n+            )\n+\n+        # trigger docker-compose's own validation\n+        result = self._execute('ps', check=False, stderr=subprocess.PIPE,\n+                               stdout=subprocess.PIPE)\n+\n+        if result.returncode != 0:\n+            # strip the intro line of docker-compose errors\n+            errors += result.stderr.decode().splitlines()[1:]\n+\n+        if errors:\n+            msg = '\\n'.join([' - {}'.format(msg) for msg in errors])\n+            raise ValueError(\n+                'Found errors with docker-compose:\\n{}'.format(msg)\n+            )\n+\n+    def _compose_env(self):\n+        return dict(os.environ, **self.dotenv)\n\nReview comment:\n       The order effectively means that all build arguments are _always_ taken from the `.env` file and never from the process' environment because they're always set in the .env. That requires a unit test because this is a serious silent bug.\r\n   \r\n   Confirmed:\r\n   ```\r\n   $ UBUNTU=16.04 archery docker run ubuntu-cpp\r\n   Pulling ubuntu-cpp ... done\r\n   Building ubuntu-cpp\r\n   Step 1/9 : ARG arch=amd64\r\n   Step 2/9 : FROM ${arch}/ubuntu:18.04\r\n    ---> 775349758637\r\n   Step 3/9 : SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\r\n    ---> Running in 164f1875b0b7\r\n   Removing intermediate container 164f1875b0b7\r\n    ---> 49d5bb057b74\r\n   Step 4/9 : ENV DEBIAN_FRONTEND=noninteractive\r\n    ---> Running in e53c37c30d7c\r\n   Removing intermediate container e53c37c30d7c\r\n    ---> a0409634a89f\r\n   Step 5/9 : ARG clang_tools\r\n    ---> Running in b6eae4abe7fd\r\n   Removing intermediate container b6eae4abe7fd\r\n    ---> 36b3f9d7c94b\r\n   Step 6/9 : ARG llvm\r\n    ---> Running in abbaf989a65c\r\n   ```\n\n##########\nFile path: dev/archery/archery/docker.py\n##########\n@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+from pathlib import Path\n+import subprocess\n+\n+from dotenv import dotenv_values\n+from ruamel.yaml import YAML\n+\n+from .utils.command import Command, default_bin\n+\n+\n+def flatten(node, parents=None):\n+    parents = list(parents or [])\n+    if isinstance(node, str):\n+        yield (node, parents)\n+    elif isinstance(node, list):\n+        for value in node:\n+            yield from flatten(value, parents=parents)\n+    elif isinstance(node, dict):\n+        for key, value in node.items():\n+            yield (key, parents)\n+            yield from flatten(value, parents=parents + [key])\n+    else:\n+        raise TypeError(node)\n+\n+\n+class UndefinedImage(Exception):\n+    pass\n+\n+\n+class Docker(Command):\n+\n+    def __init__(self, docker_bin=None):\n+        self.bin = default_bin(docker_bin, \"docker\")\n+\n+\n+class DockerCompose(Command):\n+\n+    def __init__(self, config_path, dotenv_path=None, compose_bin=None):\n+        self.config_path = Path(config_path)\n+        if dotenv_path:\n+            self.dotenv_path = Path(dotenv_path)\n+        else:\n+            self.dotenv_path = self.config_path.parent / '.env'\n+\n+        yaml = YAML()\n+        with self.config_path.open() as fp:\n+            self.config = yaml.load(fp)\n+\n+        self.nodes = dict(flatten(self.config['x-hierarchy']))\n+        self.dotenv = dotenv_values(self.dotenv_path)\n+        self.bin = default_bin(compose_bin, \"docker-compose\")\n+\n+    def validate(self):\n+        services = self.config['services'].keys()\n+        nodes = self.nodes.keys()\n+        errors = []\n+\n+        for name in nodes - services:\n+            errors.append(\n+                'Service `{}` is defined in `x-hierarchy` bot not in '\n+                '`services`'.format(name)\n+            )\n+        for name in services - nodes:\n+            errors.append(\n+                'Service `{}` is defined in `services` but not in '\n+                '`x-hierarchy`'.format(name)\n+            )\n+\n+        # trigger docker-compose's own validation\n+        result = self._execute('ps', check=False, stderr=subprocess.PIPE,\n+                               stdout=subprocess.PIPE)\n+\n+        if result.returncode != 0:\n+            # strip the intro line of docker-compose errors\n+            errors += result.stderr.decode().splitlines()[1:]\n+\n+        if errors:\n+            msg = '\\n'.join([' - {}'.format(msg) for msg in errors])\n+            raise ValueError(\n+                'Found errors with docker-compose:\\n{}'.format(msg)\n+            )\n+\n+    def _compose_env(self):\n+        return dict(os.environ, **self.dotenv)\n+\n+    def _validate_image(self, name):\n+        if name not in self.nodes:\n+            raise UndefinedImage(name)\n+\n+    def _execute(self, *args, **kwargs):\n+        # set default arguments for docker-compose\n+        return super().run('--file', str(self.config_path), *args, **kwargs)\n+\n+    def build(self, image, cache=True, cache_leaf=True):\n+        self._validate_image(image)\n+        env = self._compose_env()\n+\n+        # build all parents\n+        for parent in self.nodes[image]:\n\nReview comment:\n       Small nit, when the tree has depth > 1, we say ancestors.\n\n##########\nFile path: dev/archery/archery/docker.py\n##########\n@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+from pathlib import Path\n+import subprocess\n+\n+from dotenv import dotenv_values\n+from ruamel.yaml import YAML\n+\n+from .utils.command import Command, default_bin\n+\n+\n+def flatten(node, parents=None):\n+    parents = list(parents or [])\n+    if isinstance(node, str):\n+        yield (node, parents)\n+    elif isinstance(node, list):\n+        for value in node:\n+            yield from flatten(value, parents=parents)\n+    elif isinstance(node, dict):\n+        for key, value in node.items():\n+            yield (key, parents)\n+            yield from flatten(value, parents=parents + [key])\n+    else:\n+        raise TypeError(node)\n+\n+\n+class UndefinedImage(Exception):\n+    pass\n+\n+\n+class Docker(Command):\n+\n+    def __init__(self, docker_bin=None):\n+        self.bin = default_bin(docker_bin, \"docker\")\n+\n+\n+class DockerCompose(Command):\n+\n+    def __init__(self, config_path, dotenv_path=None, compose_bin=None):\n+        self.config_path = Path(config_path)\n+        if dotenv_path:\n+            self.dotenv_path = Path(dotenv_path)\n+        else:\n+            self.dotenv_path = self.config_path.parent / '.env'\n+\n+        yaml = YAML()\n+        with self.config_path.open() as fp:\n+            self.config = yaml.load(fp)\n+\n+        self.nodes = dict(flatten(self.config['x-hierarchy']))\n+        self.dotenv = dotenv_values(self.dotenv_path)\n+        self.bin = default_bin(compose_bin, \"docker-compose\")\n+\n+    def validate(self):\n+        services = self.config['services'].keys()\n+        nodes = self.nodes.keys()\n+        errors = []\n+\n+        for name in nodes - services:\n+            errors.append(\n+                'Service `{}` is defined in `x-hierarchy` bot not in '\n+                '`services`'.format(name)\n+            )\n+        for name in services - nodes:\n+            errors.append(\n+                'Service `{}` is defined in `services` but not in '\n+                '`x-hierarchy`'.format(name)\n+            )\n+\n+        # trigger docker-compose's own validation\n+        result = self._execute('ps', check=False, stderr=subprocess.PIPE,\n+                               stdout=subprocess.PIPE)\n+\n+        if result.returncode != 0:\n+            # strip the intro line of docker-compose errors\n+            errors += result.stderr.decode().splitlines()[1:]\n+\n+        if errors:\n+            msg = '\\n'.join([' - {}'.format(msg) for msg in errors])\n+            raise ValueError(\n+                'Found errors with docker-compose:\\n{}'.format(msg)\n+            )\n+\n+    def _compose_env(self):\n+        return dict(os.environ, **self.dotenv)\n+\n+    def _validate_image(self, name):\n+        if name not in self.nodes:\n+            raise UndefinedImage(name)\n+\n+    def _execute(self, *args, **kwargs):\n+        # set default arguments for docker-compose\n+        return super().run('--file', str(self.config_path), *args, **kwargs)\n+\n+    def build(self, image, cache=True, cache_leaf=True):\n+        self._validate_image(image)\n+        env = self._compose_env()\n+\n+        # build all parents\n+        for parent in self.nodes[image]:\n+            if cache:\n+                self._execute('pull', '--ignore-pull-failures', parent,\n\nReview comment:\n       Refactor into a small local function\r\n   ```python\r\n   def build_target(target, cond, env):\r\n     if cond:\r\n       self._execute('pull', '--ignore-pull-failures', target, env=env)\r\n       self._execute('build', target, env=env)\r\n     else:\r\n       self._execute('build', '--no-cache', target, env=env)\r\n   \r\n   ```\n\n##########\nFile path: dev/archery/archery/docker.py\n##########\n@@ -0,0 +1,152 @@\n+#!/usr/bin/env python3\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+from pathlib import Path\n+import subprocess\n+\n+from dotenv import dotenv_values\n+from ruamel.yaml import YAML\n+\n+from .utils.command import Command, default_bin\n+\n+\n+def flatten(node, parents=None):\n+    parents = list(parents or [])\n+    if isinstance(node, str):\n+        yield (node, parents)\n+    elif isinstance(node, list):\n+        for value in node:\n+            yield from flatten(value, parents=parents)\n+    elif isinstance(node, dict):\n+        for key, value in node.items():\n+            yield (key, parents)\n+            yield from flatten(value, parents=parents + [key])\n+    else:\n+        raise TypeError(node)\n+\n+\n+class UndefinedImage(Exception):\n+    pass\n+\n+\n+class Docker(Command):\n+\n+    def __init__(self, docker_bin=None):\n+        self.bin = default_bin(docker_bin, \"docker\")\n+\n+\n+class DockerCompose(Command):\n+\n+    def __init__(self, config_path, dotenv_path=None, compose_bin=None):\n+        self.config_path = Path(config_path)\n+        if dotenv_path:\n+            self.dotenv_path = Path(dotenv_path)\n+        else:\n+            self.dotenv_path = self.config_path.parent / '.env'\n+\n+        yaml = YAML()\n+        with self.config_path.open() as fp:\n+            self.config = yaml.load(fp)\n+\n+        self.nodes = dict(flatten(self.config['x-hierarchy']))\n+        self.dotenv = dotenv_values(self.dotenv_path)\n+        self.bin = default_bin(compose_bin, \"docker-compose\")\n+\n+    def validate(self):\n+        services = self.config['services'].keys()\n+        nodes = self.nodes.keys()\n+        errors = []\n+\n+        for name in nodes - services:\n+            errors.append(\n+                'Service `{}` is defined in `x-hierarchy` bot not in '\n+                '`services`'.format(name)\n+            )\n+        for name in services - nodes:\n+            errors.append(\n+                'Service `{}` is defined in `services` but not in '\n+                '`x-hierarchy`'.format(name)\n+            )\n+\n+        # trigger docker-compose's own validation\n+        result = self._execute('ps', check=False, stderr=subprocess.PIPE,\n+                               stdout=subprocess.PIPE)\n+\n+        if result.returncode != 0:\n+            # strip the intro line of docker-compose errors\n+            errors += result.stderr.decode().splitlines()[1:]\n+\n+        if errors:\n+            msg = '\\n'.join([' - {}'.format(msg) for msg in errors])\n+            raise ValueError(\n+                'Found errors with docker-compose:\\n{}'.format(msg)\n+            )\n+\n+    def _compose_env(self):\n+        return dict(os.environ, **self.dotenv)\n+\n+    def _validate_image(self, name):\n+        if name not in self.nodes:\n+            raise UndefinedImage(name)\n+\n+    def _execute(self, *args, **kwargs):\n+        # set default arguments for docker-compose\n+        return super().run('--file', str(self.config_path), *args, **kwargs)\n+\n+    def build(self, image, cache=True, cache_leaf=True):\n+        self._validate_image(image)\n+        env = self._compose_env()\n+\n+        # build all parents\n+        for parent in self.nodes[image]:\n+            if cache:\n+                self._execute('pull', '--ignore-pull-failures', parent,\n+                              env=env)\n+                self._execute('build', parent, env=env)\n+            else:\n+                self._execute('build', '--no-cache', parent, env=env)\n+\n+        # build the image at last\n+        if cache and cache_leaf:\n+            self._execute('pull', '--ignore-pull-failures', image, env=env)\n+            self._execute('build', image, env=env)\n+        else:\n+            self._execute('build', '--no-cache', image, env=env)\n+\n+    def run(self, image, command=None, env=None):\n+        self._validate_image(image)\n+        args = []\n+        if env is not None:\n+            for k, v in env.items():\n+                args.extend(['-e', '{}={}'.format(k, v)])\n+        args.append(image)\n+        if command is not None:\n+            args.append(command)\n+        self._execute('run', '--rm', *args, env=self._compose_env())\n+\n+    def push(self, image, user, password):\n+        try:\n+            Docker().run('login', '-u', user, '-p', password)\n\nReview comment:\n       Use `--password-stdin`, otherwise they'll leak in the process argv via ps/top/etc and you won't need the next exception re-raising.\n\n##########\nFile path: dev/archery/archery/cli.py\n##########\n@@ -643,5 +647,78 @@ def trigger_bot(event_name, event_payload, arrow_token, crossbow_token):\n     bot.handle(event_name, event_payload)\n \n \n+@archery.group('docker')\n+@click.option('--config', '-c', type=click.Path(exists=True),\n\nReview comment:\n       Use `--src` like the other commands. See [archery/utils/source.py,](https://github.com/apache/arrow/blob/master/dev/archery/archery/utils/source.py) you may want to add a `docker_compose` property.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-01T17:16:56.382+0000",
                    "updated": "2020-05-01T17:16:56.382+0000",
                    "started": "2020-05-01T17:16:56.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "429566",
                    "issueId": "13301865"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 44400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@378995fc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ce3aa3c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39fb9832[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@8f8677b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e3baa4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@a76375d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fa91429[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@24216518[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ebd208[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c1cd177[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b339281[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34152d5a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 44400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 05 17:02:32 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-05T17:02:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8628/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-04-29T17:10:14.000+0000",
        "updated": "2020-05-05T17:02:51.000+0000",
        "timeoriginalestimate": null,
        "description": "Build the image hierarchy automatically.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 44400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[CI][Dev] Wrap docker-compose commands with archery",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13301865/comment/17100080",
                    "id": "17100080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 7021\n[https://github.com/apache/arrow/pull/7021]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-05-05T17:02:32.690+0000",
                    "updated": "2020-05-05T17:02:32.690+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0e7yg:",
        "customfield_12314139": null
    }
}