{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13240633",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633",
    "key": "ARROW-5666",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset-parquet-read",
            "parquet"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12566957",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12566957",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13248488",
                    "key": "ARROW-6114",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13248488",
                    "fields": {
                        "summary": "[Python] Datatypes not preserved for partition fields in roundtrip to partitioned parquet dataset",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12583375",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12583375",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "outwardIssue": {
                    "id": "13290584",
                    "key": "ARROW-8039",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290584",
                    "fields": {
                        "summary": "[Python][Dataset] Support using dataset API in pyarrow.parquet with a minimal ParquetDataset shim",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                            "id": "7",
                            "description": "The sub-task of the issue",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                            "name": "Sub-task",
                            "subtask": true,
                            "avatarId": 21146
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
            "name": "jrderuiter",
            "key": "jrderuiter",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Julian de Ruiter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
            "name": "jrderuiter",
            "key": "jrderuiter",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Julian de Ruiter",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5666/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5145eb12[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@479d0564[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33d9374f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1c40a275[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4493199f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5bf22fcc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@216b08b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@382145e0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64a2ec9a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2ee4238d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5733807b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@658fc138[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 04 23:43:50 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-05-04T23:43:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5666/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-06-20T11:48:36.000+0000",
        "updated": "2020-05-04T23:43:50.000+0000",
        "timeoriginalestimate": null,
        "description": "When reading a partitioned dataset, in which the partition column contains string values with underscores, pyarrow seems to be ignoring the underscores in the resulting values.\r\n\r\nFor example if I write and then read a dataset as follows:\r\n{code:java}\r\nimport pyarrow as pa\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame({\r\n\u00a0\u00a0\u00a0 \"year_week\": [\"2019_2\", \"2019_3\"],\r\n\u00a0\u00a0\u00a0 \"value\": [1, 2]\r\n})\r\n\r\ntable = pa.Table.from_pandas(df.head())\r\npq.write_to_dataset(table, 'test', partition_cols=[\"year_week\"])\r\n\r\ntable2 = pq.ParquetDataset('test').read()\r\n{code}\r\nThe resulting 'year_week' column in table 2 has lost the underscores:\r\n{code:java}\r\ntable2[1] # Gives:\r\n\r\n<Column name='year_week' type=DictionaryType(dictionary<values=int64, indices=int32, ordered=0>)>\r\n[\r\n\r\n\u00a0 -- dictionary:\r\n\u00a0\u00a0\u00a0 [\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 20192,\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 20193\r\n\u00a0\u00a0\u00a0 ]\r\n\u00a0 -- indices:\r\n\u00a0\u00a0\u00a0 [\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 0\r\n\u00a0\u00a0\u00a0 ],\r\n\r\n\u00a0 -- dictionary:\r\n\u00a0\u00a0\u00a0 [\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 20192,\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 20193\r\n\u00a0\u00a0\u00a0 ]\r\n\u00a0 -- indices:\r\n\u00a0\u00a0\u00a0 [\r\n\u00a0\u00a0\u00a0\u00a0\u00a0 1\r\n\u00a0\u00a0\u00a0 ]\r\n]\r\n{code}\r\nIs this intentional behaviour or is this a bug in arrow?",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Underscores in partition (string) values are dropped when reading dataset",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16868583",
                    "id": "16868583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Thanks for the report!\r\n\r\nThe problem is that we try to convert the keys to integer, and if that fails just preserve them as strings. \r\nThat is done here https://github.com/apache/arrow/blob/961927af56b83d0dbca91132c3f07aa06d69fc63/python/pyarrow/parquet.py#L659-L663\r\n\r\n{code}\r\n        # Only integer and string partition types are supported right now\r\n        try:\r\n            integer_keys = [int(x) for x in self.keys]\r\n            dictionary = lib.array(integer_keys)\r\n        except ValueError:\r\n            dictionary = lib.array(self.keys)\r\n{code}\r\n\r\nand apparently, Python will convert a string with an underscore to an integer ...\r\n\r\n{code}\r\nIn [3]: int(\"2019_1\")                                                                                                                                                                                              \r\nOut[3]: 20191\r\n{code}\r\n\r\nI think this is because in recent Python versions underscores are allowed in integer literals (eg to separate thousands). \r\nWe could special case this and first check if there is an underscore in the string before trying to convert to integers, but that's a big ugly.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2019-06-20T14:43:18.880+0000",
                    "updated": "2019-06-20T14:43:18.880+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16868924",
                    "id": "16868924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kaaveland",
                        "name": "kaaveland",
                        "key": "kaaveland",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robin K\u00e5veland",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "body": "Maybe it's an option to check {{all(key.isdigit() for key in self.keys)}} ? Might also be ugly, but apparently:\r\n\r\n\u00a0\r\n{code:java}\r\n>>> '1231_2'.isdigit()\r\nFalse\r\n>>> int('123_2')\r\n1232\r\n>>> '1231'.isdigit()\r\nTrue{code}\r\n\u00a0\r\n\r\nThis breaks stuff like base 16 partition keys, but at least the original data is still unchanged, so the user can coerce themselves.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kaaveland",
                        "name": "kaaveland",
                        "key": "kaaveland",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robin K\u00e5veland",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "created": "2019-06-20T20:44:41.460+0000",
                    "updated": "2019-06-20T20:44:41.460+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16869341",
                    "id": "16869341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I think isdigit might be a good solution, it would also guard against silently casting (for example) floats to integers. It also less ugly than explicitly testing for an underscore.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-21T09:36:01.639+0000",
                    "updated": "2019-06-21T09:38:19.147+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16869345",
                    "id": "16869345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "What about negative values though? isdigit returns false for '-10' for example, whilst int('-10') returns an int.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-21T09:40:18.267+0000",
                    "updated": "2019-06-21T09:40:36.616+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16870952",
                    "id": "16870952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kaaveland",
                        "name": "kaaveland",
                        "key": "kaaveland",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robin K\u00e5veland",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "body": "That's just a slight modification to the expression above:\r\n{code:java}\r\nall(key.isdigit() or (key.startswith('-') and key[1:].isdigit()) for key in self.keys){code}\r\nBut it's starting to feel like a bad idea to attempt to do this coercing at all. Maybe it's better to force the user to deal with what type the partition key should have? If it were to be interpreted as something that looks a bit like {{pd.Categorical}}, it would be relatively cheap to read it into memory and deal with it after the user has read the file?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kaaveland",
                        "name": "kaaveland",
                        "key": "kaaveland",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robin K\u00e5veland",
                        "active": true,
                        "timeZone": "Europe/Oslo"
                    },
                    "created": "2019-06-24T08:41:29.876+0000",
                    "updated": "2019-06-24T08:41:29.876+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/16872692",
                    "id": "16872692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ideally you would want to preserve the data type of the partition columns, but that's going to be hard to do properly if you also want to include other types such as dates, etc. Maybe it would be most consistent to just read partitioned columns as a categorical type and let the user handle the details, as this makes the code less magic than what happens now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jrderuiter",
                        "name": "jrderuiter",
                        "key": "jrderuiter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Julian de Ruiter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-25T20:27:56.383+0000",
                    "updated": "2019-06-25T20:27:56.383+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/17060975",
                    "id": "17060975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "This now works with the new Datasets API:\r\n\r\n{code}\r\nIn [2]: import pyarrow.dataset as ds\r\n\r\nIn [3]: dataset = ds.dataset(\"test/\", format=\"parquet\", partitioning=\"hive\")                                                                                                           \r\n\r\nIn [4]: dataset.schema                                                                                                                                                                                             \r\nOut[4]: \r\nvalue: int64\r\nyear_week: string\r\n\r\nIn [5]: dataset.to_table().to_pandas()                                                                                                                                                                             \r\nOut[5]: \r\n   value year_week\r\n0      1    2019_2\r\n1      2    2019_3\r\n{code}\r\n\r\nSo once we start using this new code in the parquet module (ARROW-8039), this issue should get resolved.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-03-17T14:57:40.439+0000",
                    "updated": "2020-03-17T14:57:40.439+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/17060980",
                    "id": "17060980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "With the new API, you can also specify the exact schema of the partition keys in case the default inference is not what you want (eg specify string in case it looks like integers but you want to keep it as string)\r\n\r\nFor example:\r\n\r\n{code}\r\npart = ds.partitioning(pa.schema([(\"year_week\", pa.int64())]), flavor=\"hive\")   \r\ndataset = ds.dataset(\"test\", format=\"parquet\", partitioning=part)      \r\n{code}\r\n\r\n(for the actual example code this doesn't work, because \"2019_2\" is no longer parsable as int now, and then it gives all nulls instead of raising an error, going to open a separate issue about that)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-03-17T15:03:28.094+0000",
                    "updated": "2020-03-17T15:03:28.094+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240633/comment/17099423",
                    "id": "17099423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Test added in https://github.com/apache/arrow/commit/57b50823d6d35a8169dc2f92ae68448a293a89e9",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-05-04T23:43:50.890+0000",
                    "updated": "2020-05-04T23:43:50.890+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|z03xrs:",
        "customfield_12314139": null
    }
}