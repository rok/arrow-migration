{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13255024",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024",
    "key": "ARROW-6466",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6466/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 42,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600\n \n \n   I am forcing the integration tests to run in Travis CI so we can get a green build.\r\n   \r\n   I pushed the Docker image to arrowdev on DockerHub but Travis seems to be rebuilding it, @kszucs or @fsaintjacques do you know what might be causing that to happen?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T22:26:46.762+0000",
                    "updated": "2019-10-07T22:26:46.762+0000",
                    "started": "2019-10-07T22:26:46.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324664",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332265163\n \n \n\n ##########\n File path: dev/release/verify-release-candidate.sh\n ##########\n @@ -452,9 +452,12 @@ test_integration() {\n   # Flight integration test executable have runtime dependency on\n   # release/libgtest.so\n   LD_LIBRARY_PATH=$ARROW_CPP_EXE_PATH:$LD_LIBRARY_PATH \\\n-      python integration_test.py $INTEGRATION_TEST_ARGS\n-\n-  popd\n+      archery integration \\\n+              --enable-cpp=${TEST_INTEGRATION_CPP} \\\n+              --enable-java=${TEST_INTEGRATION_JAVA} \\\n+              --enable-js=${TEST_INTEGRATION_JS} \\\n+              --enable-go=${TEST_INTEGRATION_GO} \\\n+              $INTEGRATION_TEST_ARGS\n \n Review comment:\n   I still need to test this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T22:27:37.761+0000",
                    "updated": "2019-10-07T22:27:37.761+0000",
                    "started": "2019-10-07T22:27:37.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324666",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539231578\n \n \n   https://issues.apache.org/jira/browse/ARROW-6466\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T22:30:42.417+0000",
                    "updated": "2019-10-07T22:30:42.417+0000",
                    "started": "2019-10-07T22:30:42.417+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324668",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539246856\n \n \n   Ah based on https://github.com/docker/compose/issues/6483 it seems that `docker-compose build --pull` only pulls the base image. Can't say I like that\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T23:26:09.616+0000",
                    "updated": "2019-10-07T23:26:09.616+0000",
                    "started": "2019-10-07T23:26:09.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324693",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539252917\n \n \n   Here's the latest build: https://travis-ci.org/wesm/arrow/jobs/594857571. Aside from code review this is merge-ready. I'm going to uncomment the check whether to skip the integration tests in Travis CI\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T23:52:23.352+0000",
                    "updated": "2019-10-07T23:52:23.352+0000",
                    "started": "2019-10-07T23:52:23.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324756",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539253662\n \n \n   @kszucs this might conflict with your docker-compose refactor, please advise\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-07T23:56:08.195+0000",
                    "updated": "2019-10-07T23:56:08.195+0000",
                    "started": "2019-10-07T23:56:08.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324769",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539312352\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=h1) Report\n   > Merging [#5600](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/fe3ac85454c7343097b4bbc05b88549316649809?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5600/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5600      +/-   ##\n   ==========================================\n   + Coverage   88.82%   88.82%   +<.01%     \n   ==========================================\n     Files         983      983              \n     Lines      132499   132523      +24     \n     Branches     1501     1501              \n   ==========================================\n   + Hits       117689   117712      +23     \n   - Misses      14445    14446       +1     \n     Partials      365      365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `95.91% <0%> (-0.32%)` | :arrow_down: |\n   | [cpp/src/arrow/ipc/reader.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZGVyLmNj) | `90.15% <0%> (-0.03%)` | :arrow_down: |\n   | [cpp/src/arrow/record\\_batch.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZWNvcmRfYmF0Y2guY2M=) | `94.07% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/hashing.h](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2hhc2hpbmcuaA==) | `99.67% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXJfdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/read\\_write\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZF93cml0ZV90ZXN0LmNj) | `99.87% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGxhc21hLnB5) | `60.27% <0%> (+1.36%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=footer). Last update [fe3ac85...afa727e](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T04:21:13.607+0000",
                    "updated": "2019-10-08T04:21:13.607+0000",
                    "started": "2019-10-08T04:21:13.606+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324848",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324849",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539312352\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=h1) Report\n   > Merging [#5600](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/fe3ac85454c7343097b4bbc05b88549316649809?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5600/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5600      +/-   ##\n   ==========================================\n   + Coverage   88.82%   88.82%   +<.01%     \n   ==========================================\n     Files         983      983              \n     Lines      132499   132523      +24     \n     Branches     1501     1501              \n   ==========================================\n   + Hits       117689   117712      +23     \n   - Misses      14445    14446       +1     \n     Partials      365      365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `95.91% <0%> (-0.32%)` | :arrow_down: |\n   | [cpp/src/arrow/ipc/reader.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZGVyLmNj) | `90.15% <0%> (-0.03%)` | :arrow_down: |\n   | [cpp/src/arrow/record\\_batch.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZWNvcmRfYmF0Y2guY2M=) | `94.07% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/hashing.h](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2hhc2hpbmcuaA==) | `99.67% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXJfdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/read\\_write\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZF93cml0ZV90ZXN0LmNj) | `99.87% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGxhc21hLnB5) | `60.27% <0%> (+1.36%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=footer). Last update [fe3ac85...afa727e](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T04:21:20.939+0000",
                    "updated": "2019-10-08T04:21:20.939+0000",
                    "started": "2019-10-08T04:21:20.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324849",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/324850",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#issuecomment-539312352\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=h1) Report\n   > Merging [#5600](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/fe3ac85454c7343097b4bbc05b88549316649809?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5600/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5600      +/-   ##\n   ==========================================\n   + Coverage   88.82%   88.82%   +<.01%     \n   ==========================================\n     Files         983      983              \n     Lines      132499   132523      +24     \n     Branches     1501     1501              \n   ==========================================\n   + Hits       117689   117712      +23     \n   - Misses      14445    14446       +1     \n     Partials      365      365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wbGFzbWEucHk=) | `95.91% <0%> (-0.32%)` | :arrow_down: |\n   | [cpp/src/arrow/ipc/reader.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZGVyLmNj) | `90.15% <0%> (-0.03%)` | :arrow_down: |\n   | [cpp/src/arrow/record\\_batch.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9yZWNvcmRfYmF0Y2guY2M=) | `94.07% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/hashing.h](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2hhc2hpbmcuaA==) | `99.67% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXJfdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/read\\_write\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvcmVhZF93cml0ZV90ZXN0LmNj) | `99.87% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/plasma.py](https://codecov.io/gh/apache/arrow/pull/5600/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGxhc21hLnB5) | `60.27% <0%> (+1.36%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=footer). Last update [fe3ac85...afa727e](https://codecov.io/gh/apache/arrow/pull/5600?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T04:21:28.079+0000",
                    "updated": "2019-10-08T04:21:28.079+0000",
                    "started": "2019-10-08T04:21:28.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "324850",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332484485\n \n \n\n ##########\n File path: ci/docker_integration.sh\n ##########\n @@ -0,0 +1,137 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+set -eu\n+\n+BIN_DIR=/bin\n \n Review comment:\n   Why is this required?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:10.629+0000",
                    "updated": "2019-10-08T13:53:10.629+0000",
                    "started": "2019-10-08T13:53:10.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325079",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332486960\n \n \n\n ##########\n File path: dev/archery/archery/cli.py\n ##########\n @@ -18,11 +18,15 @@\n \n import click\n from contextlib import contextmanager\n+import errno\n import json\n import logging\n+import os\n import sys\n from tempfile import mkdtemp, TemporaryDirectory\n \n+import numpy as np\n \n Review comment:\n   I yanked pandas/numpy in #5580 to ease usage/installation. Can we specify optional dependencies in setup.py and defer import in the invocation of `integration`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.417+0000",
                    "updated": "2019-10-08T13:53:11.417+0000",
                    "started": "2019-10-08T13:53:11.417+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325080",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325081",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332489869\n \n \n\n ##########\n File path: dev/archery/archery/cli.py\n ##########\n @@ -402,5 +410,71 @@ def benchmark_diff(ctx, src, preserve, output, cmake_extras,\n             output.write(\"\\n\")\n \n \n+# ----------------------------------------------------------------------\n+# Integration testing\n+\n+def _set_default(opt, default):\n+    if opt is None:\n+        return default\n+    return opt\n+\n+\n+@archery.command(short_help=\"Execute protocol and Flight integration tests\")\n+@click.option('--enable-all', is_flag=True, default=False,\n+              help=('Include all known lanauges by default '\n+                    ' in integration tests'))\n+@click.option('--enable-cpp', default=None,\n \n Review comment:\n   For sake of consistency with similar options of other sub-commands, I'd go with `--with-X`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.420+0000",
                    "updated": "2019-10-08T13:53:11.420+0000",
                    "started": "2019-10-08T13:53:11.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325081",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332489517\n \n \n\n ##########\n File path: dev/archery/archery/cli.py\n ##########\n @@ -402,5 +410,71 @@ def benchmark_diff(ctx, src, preserve, output, cmake_extras,\n             output.write(\"\\n\")\n \n \n+# ----------------------------------------------------------------------\n+# Integration testing\n+\n+def _set_default(opt, default):\n+    if opt is None:\n+        return default\n+    return opt\n+\n+\n+@archery.command(short_help=\"Execute protocol and Flight integration tests\")\n+@click.option('--enable-all', is_flag=True, default=False,\n+              help=('Include all known lanauges by default '\n+                    ' in integration tests'))\n+@click.option('--enable-cpp', default=None,\n+              help='Include C++ in integration tests')\n+@click.option('--enable-java', default=None,\n+              help='Include Java in integration tests')\n+@click.option('--enable-js', default=None,\n+              help='Include JavaScript in integration tests')\n+@click.option('--enable-go', default=None,\n+              help='Include Go in integration tests')\n+@click.option('--write_generated_json', default=False,\n+              help='Generate test JSON to indicated path')\n+@click.option('--run_flight', is_flag=True, default=False,\n+              help='Run Flight integration tests')\n+@click.option('--debug', type=bool, default=False,\n+              help='Run executables in debug mode as relevant')\n+@click.option('--tempdir', default=None,\n+              help=('Directory to use for writing '\n+                    'integration test temporary files'))\n+@click.option('stop_on_error', '-x', '--stop-on-error',\n+              is_flag=True, default=False,\n+              help='Stop on first error')\n+@click.option('--gold_dirs', multiple=True,\n+              help=\"gold integration test file paths\")\n+def integration(enable_all=False, **args):\n+    from .integration.runner import write_js_test_json, run_all_tests\n+\n+    gen_path = args['write_generated_json']\n+\n+    languages = ['cpp', 'java', 'js', 'go']\n+\n+    enabled_languages = 0\n+    for lang in languages:\n+        param = 'enable_{}'.format(lang)\n+        if args[param] is None:\n+            args[param] = enable_all\n+        else:\n+            args[param] = bool(int(args[param]))\n \n Review comment:\n   See https://github.com/apache/arrow/pull/5580/files#diff-7a8805436a6884ddf74fe3eaec697e71R37-R56, it should accept values \"0\", \"1\", \"true\"', \"false\", \"on\", \"off\". Click boolean type should support \"0/1/true/false\", all you need to do is specify `type=bool`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.493+0000",
                    "updated": "2019-10-08T13:53:11.493+0000",
                    "started": "2019-10-08T13:53:11.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325082",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332520742\n \n \n\n ##########\n File path: dev/archery/archery/cli.py\n ##########\n @@ -402,5 +410,71 @@ def benchmark_diff(ctx, src, preserve, output, cmake_extras,\n             output.write(\"\\n\")\n \n \n+# ----------------------------------------------------------------------\n+# Integration testing\n+\n+def _set_default(opt, default):\n+    if opt is None:\n+        return default\n+    return opt\n+\n+\n+@archery.command(short_help=\"Execute protocol and Flight integration tests\")\n+@click.option('--enable-all', is_flag=True, default=False,\n+              help=('Include all known lanauges by default '\n+                    ' in integration tests'))\n+@click.option('--enable-cpp', default=None,\n \n Review comment:\n   Add an option to pass the cmake build directory instead of hardcoding the path.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.675+0000",
                    "updated": "2019-10-08T13:53:11.675+0000",
                    "started": "2019-10-08T13:53:11.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325083",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332487314\n \n \n\n ##########\n File path: dev/archery/archery/cli.py\n ##########\n @@ -402,5 +410,71 @@ def benchmark_diff(ctx, src, preserve, output, cmake_extras,\n             output.write(\"\\n\")\n \n \n+# ----------------------------------------------------------------------\n+# Integration testing\n+\n+def _set_default(opt, default):\n+    if opt is None:\n+        return default\n+    return opt\n+\n+\n+@archery.command(short_help=\"Execute protocol and Flight integration tests\")\n+@click.option('--enable-all', is_flag=True, default=False,\n+              help=('Include all known lanauges by default '\n+                    ' in integration tests'))\n+@click.option('--enable-cpp', default=None,\n+              help='Include C++ in integration tests')\n+@click.option('--enable-java', default=None,\n+              help='Include Java in integration tests')\n+@click.option('--enable-js', default=None,\n+              help='Include JavaScript in integration tests')\n+@click.option('--enable-go', default=None,\n+              help='Include Go in integration tests')\n+@click.option('--write_generated_json', default=False,\n+              help='Generate test JSON to indicated path')\n+@click.option('--run_flight', is_flag=True, default=False,\n+              help='Run Flight integration tests')\n+@click.option('--debug', type=bool, default=False,\n \n Review comment:\n   This is already part of the top-level archery command, you might want to extract it from `ctx`. You'd call it with `archery --debug integration ...`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.741+0000",
                    "updated": "2019-10-08T13:53:11.741+0000",
                    "started": "2019-10-08T13:53:11.741+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325084",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332509987\n \n \n\n ##########\n File path: dev/archery/archery/integration/tester_cpp.py\n ##########\n @@ -0,0 +1,105 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import contextlib\n+import os\n+import subprocess\n+\n+from .tester import Tester\n+from .util import run_cmd, ARROW_ROOT_DEFAULT\n+\n+\n+class CPPTester(Tester):\n+    PRODUCER = True\n+    CONSUMER = True\n+    FLIGHT_SERVER = True\n+    FLIGHT_CLIENT = True\n+\n+    EXE_PATH = os.environ.get(\n \n Review comment:\n   You might want to pass a [CMakeBuild](https://github.com/apache/arrow/blob/master/dev/archery/archery/utils/cmake.py#L120) instance here, it accomplishes what you want with `CMakeBuild.binaries_dir()`. You could extend and implement `CMakeBuild.binary(exe_name)` which would return a proper instance of util.Command with path taken care of.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.920+0000",
                    "updated": "2019-10-08T13:53:11.920+0000",
                    "started": "2019-10-08T13:53:11.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325085",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332501551\n \n \n\n ##########\n File path: dev/archery/archery/integration/util.py\n ##########\n @@ -0,0 +1,81 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import os\n+import six\n+import string\n+import subprocess\n+import uuid\n+\n+import numpy as np\n+\n+\n+def guid():\n+    return uuid.uuid4().hex\n+\n+\n+RANDS_CHARS = np.array(list(string.ascii_letters + string.digits),\n+                       dtype=(np.str_, 1))\n+\n+# SKIP categories\n+SKIP_ARROW = 'arrow'\n+SKIP_FLIGHT = 'flight'\n+\n+ARROW_ROOT_DEFAULT = os.environ.get(\n \n Review comment:\n   Yank `ARROW_ROOT_DEFAULT` and pass an instance of ArrowSources around, see also https://github.com/apache/arrow/blob/master/dev/archery/archery/utils/source.py#L112-L144. Note that other archery sub-commands provide an `--src` option for this specifically, e.g. allowing the caller to specify the sources path.\r\n   \r\n   Usage can be customized like this\r\n   ```\r\n   # ArrowSources would be interfered from archery path.\r\n   archery integration\r\n   # ArrowSources points to /tmp/my-local-arrow-copy\r\n   archery integration --src=/tmp/my-local-arrow-copy\r\n   # ArrowSources points to /tmp/my-local-arrow-copy\r\n   ARROW_SRC=/tmp/my-local-arrow-copy archery integration\r\n   ```\r\n   \r\n   Thus the calling integration script can just copy the sources then export ARROW_SRC.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:11.933+0000",
                    "updated": "2019-10-08T13:53:11.933+0000",
                    "started": "2019-10-08T13:53:11.933+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325086",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332485113\n \n \n\n ##########\n File path: ci/docker_integration.sh\n ##########\n @@ -0,0 +1,137 @@\n+#!/usr/bin/env bash\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+set -eu\n+\n+BIN_DIR=/bin\n+CPP_DIR=/build/cpp\n+JAVA_DIR=/build/java\n+JS_DIR=/build/js\n+\n+# Copy various stuff into our Docker build directory\n+pushd /arrow\n+rsync -r \\\n+      LICENSE.txt NOTICE.txt \\\n+      header java js format integration testing /build\n+popd\n+\n+mkdir -p $BIN_DIR\n+mkdir -p $CPP_DIR\n+\n+# Install archery tool, require writable -e install\n+cp -r /arrow/dev/archery /archery\n+pip install -e /archery\n+\n+# Archery integration test environment variables\n+export ARROW_ROOT=/build\n+export ARROW_TEST_DATA=/arrow/testing/data\n+\n+# Make a minimal C++ build for running integration tests\n \n Review comment:\n   See `archery build` so we stop repeating cmake builds defs.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:12.094+0000",
                    "updated": "2019-10-08T13:53:12.094+0000",
                    "started": "2019-10-08T13:53:12.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325087",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332491844\n \n \n\n ##########\n File path: dev/archery/archery/integration/runner.py\n ##########\n @@ -0,0 +1,303 @@\n+# licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import glob\n+import gzip\n+import itertools\n+import os\n+import sys\n+import tempfile\n+import traceback\n+\n+from .tester_cpp import CPPTester\n+from .tester_go import GoTester\n+from .tester_java import JavaTester\n+from .tester_js import JSTester\n+from .util import ARROW_ROOT_DEFAULT, guid, SKIP_ARROW, SKIP_FLIGHT\n+from . import datagen\n+\n+\n+class IntegrationRunner(object):\n+\n+    def __init__(self, json_files, testers, tempdir=None, debug=False,\n+                 stop_on_error=True, gold_dirs=None, **unused_kwargs):\n+        self.json_files = json_files\n+        self.testers = testers\n+        self.temp_dir = tempdir or tempfile.mkdtemp()\n+        self.debug = debug\n+        self.stop_on_error = stop_on_error\n+        self.gold_dirs = gold_dirs\n+\n+    def run(self):\n+        failures = []\n+\n+        for producer, consumer in itertools.product(\n+                filter(lambda t: t.PRODUCER, self.testers),\n+                filter(lambda t: t.CONSUMER, self.testers)):\n+            for failure in self._compare_implementations(\n+              producer, consumer, self._produce_consume, self.json_files):\n+                failures.append(failure)\n+        if self.gold_dirs:\n+            for gold_dir, consumer in itertools.product(\n+                    self.gold_dirs,\n+                    filter(lambda t: t.CONSUMER, self.testers)):\n+                print('\\n\\n\\n\\n')\n \n Review comment:\n   Replace all print statements with utils.logger (which is affected by the `--debug` option).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:12.097+0000",
                    "updated": "2019-10-08T13:53:12.097+0000",
                    "started": "2019-10-08T13:53:12.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325088",
                    "issueId": "13255024"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/worklog/325089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5600: ARROW-6466: [Integration][CI] Move integration test code to `archery integration` command. Dockerize integration tests\nURL: https://github.com/apache/arrow/pull/5600#discussion_r332505552\n \n \n\n ##########\n File path: dev/archery/archery/integration/runner.py\n ##########\n @@ -0,0 +1,303 @@\n+# licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import glob\n+import gzip\n+import itertools\n+import os\n+import sys\n+import tempfile\n+import traceback\n+\n+from .tester_cpp import CPPTester\n+from .tester_go import GoTester\n+from .tester_java import JavaTester\n+from .tester_js import JSTester\n+from .util import ARROW_ROOT_DEFAULT, guid, SKIP_ARROW, SKIP_FLIGHT\n+from . import datagen\n+\n+\n+class IntegrationRunner(object):\n+\n+    def __init__(self, json_files, testers, tempdir=None, debug=False,\n+                 stop_on_error=True, gold_dirs=None, **unused_kwargs):\n+        self.json_files = json_files\n+        self.testers = testers\n+        self.temp_dir = tempdir or tempfile.mkdtemp()\n+        self.debug = debug\n+        self.stop_on_error = stop_on_error\n+        self.gold_dirs = gold_dirs\n+\n+    def run(self):\n+        failures = []\n+\n+        for producer, consumer in itertools.product(\n+                filter(lambda t: t.PRODUCER, self.testers),\n+                filter(lambda t: t.CONSUMER, self.testers)):\n+            for failure in self._compare_implementations(\n+              producer, consumer, self._produce_consume, self.json_files):\n+                failures.append(failure)\n+        if self.gold_dirs:\n+            for gold_dir, consumer in itertools.product(\n+                    self.gold_dirs,\n+                    filter(lambda t: t.CONSUMER, self.testers)):\n+                print('\\n\\n\\n\\n')\n+                print('******************************************************')\n+                print('Tests against golden files in {}'.format(gold_dir))\n+                print('******************************************************')\n+\n+                def run_gold(producer, consumer, test_case):\n+                    self._run_gold(gold_dir, producer, consumer, test_case)\n+                for failure in self._compare_implementations(\n+                  consumer, consumer,  run_gold, self._gold_tests(gold_dir)):\n+                    failures.append(failure)\n+\n+        return failures\n+\n+    def run_flight(self):\n+        failures = []\n+        servers = filter(lambda t: t.FLIGHT_SERVER, self.testers)\n+        clients = filter(lambda t: (t.FLIGHT_CLIENT and t.CONSUMER),\n+                         self.testers)\n+        for server, client in itertools.product(servers, clients):\n+            for failure in self._compare_flight_implementations(server,\n+                                                                client):\n+                failures.append(failure)\n+        return failures\n+\n+    def _gold_tests(self, gold_dir):\n+        prefix = os.path.basename(os.path.normpath(gold_dir))\n+        SUFFIX = \".json.gz\"\n+        golds = [jf for jf in os.listdir(gold_dir) if jf.endswith(SUFFIX)]\n+        for json_path in golds:\n+            name = json_path[json_path.index('_')+1: -len(SUFFIX)]\n+            base_name = prefix + \"_\" + name + \".gold.json\"\n+            out_path = os.path.join(self.temp_dir, base_name)\n+            with gzip.open(os.path.join(gold_dir, json_path)) as i:\n+                with open(out_path, \"wb\") as out:\n+                    out.write(i.read())\n+\n+            try:\n+                skip = next(f for f in self.json_files\n+                            if f.name == name).skip\n+            except StopIteration:\n+                skip = set()\n+            yield datagen.JsonFile(name, None, None, skip=skip, path=out_path)\n+\n+    def _compare_implementations(\n+            self, producer, consumer, run_binaries, test_cases):\n+        print('##########################################################')\n+        print(\n+            '{0} producing, {1} consuming'.format(producer.name, consumer.name)\n+        )\n+        print('##########################################################')\n+\n+        for test_case in test_cases:\n+            json_path = test_case.path\n+            print('==========================================================')\n+            print('Testing file {0}'.format(json_path))\n+            print('==========================================================')\n+\n+            if producer.name in test_case.skip:\n+                print('-- Skipping test because producer {0} does '\n+                      'not support'.format(producer.name))\n+                continue\n+\n+            if consumer.name in test_case.skip:\n+                print('-- Skipping test because consumer {0} does '\n+                      'not support'.format(consumer.name))\n+                continue\n+\n+            if SKIP_ARROW in test_case.skip:\n+                print('-- Skipping test')\n+                continue\n+\n+            try:\n+                run_binaries(producer, consumer, test_case)\n+            except Exception:\n+                traceback.print_exc()\n+                yield (test_case, producer, consumer, sys.exc_info())\n+                if self.stop_on_error:\n+                    break\n+                else:\n+                    continue\n+\n+    def _produce_consume(self, producer, consumer, test_case):\n+        # Make the random access file\n+        json_path = test_case.path\n+        file_id = guid()[:8]\n+        name = os.path.splitext(os.path.basename(json_path))[0]\n+\n+        producer_file_path = os.path.join(self.temp_dir, file_id + '_' +\n+                                          name + '.json_as_file')\n+        producer_stream_path = os.path.join(self.temp_dir, file_id + '_' +\n+                                            name + '.producer_file_as_stream')\n+        consumer_file_path = os.path.join(self.temp_dir, file_id + '_' +\n+                                          name + '.consumer_stream_as_file')\n+\n+        print('-- Creating binary inputs')\n+        producer.json_to_file(json_path, producer_file_path)\n+\n+        # Validate the file\n+        print('-- Validating file')\n+        consumer.validate(json_path, producer_file_path)\n+\n+        print('-- Validating stream')\n+        producer.file_to_stream(producer_file_path, producer_stream_path)\n+        consumer.stream_to_file(producer_stream_path, consumer_file_path)\n+        consumer.validate(json_path, consumer_file_path)\n+\n+    def _run_gold(self, gold_dir, producer, consumer, test_case):\n+        json_path = test_case.path\n+\n+        # Validate the file\n+        print('-- Validating file')\n+        producer_file_path = os.path.join(\n+            gold_dir, \"generated_\" + test_case.name + \".arrow_file\")\n+        consumer.validate(json_path, producer_file_path)\n+\n+        print('-- Validating stream')\n+        consumer_stream_path = os.path.join(\n+            gold_dir, \"generated_\" + test_case.name + \".stream\")\n+        file_id = guid()[:8]\n+        name = os.path.splitext(os.path.basename(json_path))[0]\n+\n+        consumer_file_path = os.path.join(self.temp_dir, file_id + '_' +\n+                                          name + '.consumer_stream_as_file')\n+\n+        consumer.stream_to_file(consumer_stream_path, consumer_file_path)\n+        consumer.validate(json_path, consumer_file_path)\n+\n+    def _compare_flight_implementations(self, producer, consumer):\n+        print('##########################################################')\n+        print(\n+            '{0} serving, {1} requesting'.format(producer.name, consumer.name)\n+        )\n+        print('##########################################################')\n+\n+        for test_case in self.json_files:\n+            json_path = test_case.path\n+            print('=' * 58)\n+            print('Testing file {0}'.format(json_path))\n+            print('=' * 58)\n+\n+            if ('Java' in (producer.name, consumer.name) and\n+               \"map\" in test_case.name):\n+                print('TODO(ARROW-1279): Enable map tests ' +\n+                      ' for Java and JS once Java supports them and JS\\'' +\n+                      ' are unbroken')\n+                continue\n+\n+            if SKIP_FLIGHT in test_case.skip:\n+                print('-- Skipping test')\n+                continue\n+\n+            try:\n+                with producer.flight_server():\n+                    # Have the client upload the file, then download and\n+                    # compare\n+                    consumer.flight_request(producer.FLIGHT_PORT, json_path)\n+            except Exception:\n+                traceback.print_exc()\n+                yield (test_case, producer, consumer, sys.exc_info())\n+                continue\n+\n+\n+def get_static_json_files():\n+    glob_pattern = os.path.join(ARROW_ROOT_DEFAULT,\n+                                'integration', 'data', '*.json')\n+    return [\n+        datagen.JsonFile(name=os.path.basename(p), path=p, skip=set(),\n+                         schema=None, batches=None)\n+        for p in glob.glob(glob_pattern)\n+    ]\n+\n+\n+def run_all_tests(enable_cpp=True, enable_java=True, enable_js=True,\n+                  enable_go=True, run_flight=False,\n+                  tempdir=None, **kwargs):\n+    tempdir = tempdir or tempfile.mkdtemp()\n \n Review comment:\n   mkdtemp should be cleaned up.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-08T13:53:12.113+0000",
                    "updated": "2019-10-08T13:53:12.113+0000",
                    "started": "2019-10-08T13:53:12.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "325089",
                    "issueId": "13255024"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6c85a561[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1654b53f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@343ae7de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f4512b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6660cf46[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c3ae988[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fddedc6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7a05921f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a7f68e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7162a488[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4161d4bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@172223e6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 09 11:47:38 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-09T11:47:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6466/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-09-05T14:51:03.000+0000",
        "updated": "2019-10-09T13:59:32.000+0000",
        "timeoriginalestimate": null,
        "description": "This could also facilitate writing unit tests for the integration tests.\r\n\r\nMaybe this could be a part of archery?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Developer] Refactor integration/integration_test.py into a proper Python package",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/comment/16930139",
                    "id": "16930139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Been thinking more about this and I think that putting this code in {{archery.integration}} would be a good plan",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-15T22:20:14.224+0000",
                    "updated": "2019-09-15T22:20:14.224+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/comment/16942082",
                    "id": "16942082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Do we feel like this needs to be done before ARROW-5875 (Flight RPC integration tests)? I don't want to hack in support for non-file-based tests if it would complicate refactoring later/it feels like adding support could be a major refactoring anyways.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-01T15:40:13.911+0000",
                    "updated": "2019-10-01T15:40:13.911+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/comment/16945944",
                    "id": "16945944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I just started working on this, shouldn't be too long til I have a PR",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-07T14:57:04.413+0000",
                    "updated": "2019-10-07T14:57:04.413+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13255024/comment/16947588",
                    "id": "16947588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5600\n[https://github.com/apache/arrow/pull/5600]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-09T11:47:38.839+0000",
                    "updated": "2019-10-09T11:47:38.839+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z06cxk:",
        "customfield_12314139": null
    }
}