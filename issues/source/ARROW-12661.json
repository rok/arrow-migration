{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13376866",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866",
    "key": "ARROW-12661",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "csv",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=neworld",
            "name": "neworld",
            "key": "neworld",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=neworld&avatarId=46652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=neworld&avatarId=46652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=neworld&avatarId=46652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=neworld&avatarId=46652"
            },
            "displayName": "Nate Clark",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=neworld",
            "name": "neworld",
            "key": "neworld",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=neworld&avatarId=46652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=neworld&avatarId=46652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=neworld&avatarId=46652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=neworld&avatarId=46652"
            },
            "displayName": "Nate Clark",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=neworld",
            "name": "neworld",
            "key": "neworld",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=neworld&avatarId=46652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=neworld&avatarId=46652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=neworld&avatarId=46652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=neworld&avatarId=46652"
            },
            "displayName": "Nate Clark",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12661/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 33,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/593960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r629351629\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       These options are currently tested on the Python side, so I would appreciate if you wrote your tests in Python instead (also, they'll be easier to write :-)). This implies that you need to expose the new option in Python as well. If that is difficult for you, please say so and we can help.\r\n   \r\n   See https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_csv.py#L286\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-10T13:20:35.307+0000",
                    "updated": "2021-05-10T13:20:35.307+0000",
                    "started": "2021-05-10T13:20:35.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593960",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/593984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r629383462\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       I can look into writing them in python. I just wrote the test in C++ because I implemented the feature in C++.\r\n   Right now I am actually not working on this because after the above discussions I was under the impression that the desired implementation would be to have skip_rows be a list of ranges of row indexes to skip. With that in mind I actually started to work on https://issues.apache.org/jira/browse/ARROW-12675 so that the parser could know what absolute line number it was parsing and could skip the line.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-10T13:58:51.271+0000",
                    "updated": "2021-05-10T13:58:51.271+0000",
                    "started": "2021-05-10T13:58:51.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593984",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/593994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r629390150\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       IMHO a list of ranges would be overkill. `skip_rows_after_names` seems ok to me.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-10T14:07:27.658+0000",
                    "updated": "2021-05-10T14:07:27.658+0000",
                    "started": "2021-05-10T14:07:27.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593994",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/594127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r629540920\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       OK. I think the skip still needs to be moved to the parser though so that escaped or quoted new lines are properly handled. Also, should it be an error to provide `skip_rows` and  `skip_rows_after_names` at the same time if names are not being parsed from the csv? There is no reason they both cannot be provided it just seems strange to use both and might indicate a lack of understanding by the user.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-10T17:26:42.515+0000",
                    "updated": "2021-05-10T17:26:42.515+0000",
                    "started": "2021-05-10T17:26:42.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594127",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/594430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r629977397\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       I don't really understand why the skip needs to be moved to the parser? Currently, `skip_rows` is handled in the reader. I see no reason why `skip_rows_after_names` should be different.\r\n   (also, it sounds ok to me to provide both at the same time)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T08:52:38.808+0000",
                    "updated": "2021-05-11T08:52:38.808+0000",
                    "started": "2021-05-11T08:52:38.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594430",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/594520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r630155517\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       Actually after looking at it a bit more it doesn't have to be moved out of the reader but I don't think it can use SkipRows. SkipRows is very simple in its implementation it doesn't actually skip rows but lines in the file. I make the distinction here because a row can contain values with new lines. If any of the rows contain a quoted or escaped new line skip rows will consider that two lines and not one.\r\n   \r\n   I was thinking it might be better to add add a FirstN method to Chunker to be able to get the Nth occurrence of the line endings. I was thinking this could be integrated into the BlockReader implementations to be able to skip over rows even beyond the first block. This could also solve ARROW-8527.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T13:14:40.945+0000",
                    "updated": "2021-05-11T13:14:40.945+0000",
                    "started": "2021-05-11T13:14:40.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594520",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/594521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r630155517\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       Actually after looking at it a bit more it doesn't have to be moved out of the reader but I don't think it can use SkipRows. SkipRows is very simple in its implementation it doesn't actually skip rows but lines in the file. I make the distinction here because a row can contain values with new lines. If any of the rows contain a quoted or escaped new line skip rows will consider that two lines and not one.\r\n   \r\n   I was thinking it might be better to add add a FirstN method to BoundaryFind to be able to get the Nth occurrence of the line endings and use that in Chunker. I was thinking this could be integrated into the BlockReader implementations to be able to skip over rows even beyond the first block. This could also solve ARROW-8527.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T13:15:56.121+0000",
                    "updated": "2021-05-11T13:15:56.121+0000",
                    "started": "2021-05-11T13:15:56.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594521",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/595264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r630994114\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       The fact that SkipRows is a bit dumb is a separate concern. We don't seem to have had any user complaints about it, so no need to complicate it for now, IMHO.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T12:28:28.569+0000",
                    "updated": "2021-05-12T12:28:28.569+0000",
                    "started": "2021-05-12T12:28:28.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595264",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/595352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r631076862\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       My guess is that the reason it is simple is because of the comment that it is intended to skip corrupt rows so for that it probably has to be a bit brute force.\r\n   \r\n   While adding a more csv aware skip does add some more complexity that parsing knowledge is already contained in the BoundryFinder implementations, so it already exists. Also, as a user specifying the number of rows to skip I would expect that csv rows would be skipped and not file lines.\r\n   \r\n   If it sways your opinion any, I did get the implementation working that uses the BlockReaders, Chunker and BoundryFinders to skip over the lines and the parser and everything downstream are unaware. Also, it can skip lines beyond a single block, satisfying ARROW-8527.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:09:25.504+0000",
                    "updated": "2021-05-12T14:09:25.504+0000",
                    "started": "2021-05-12T14:09:25.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595352",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/595442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r631184057\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       Well, if it's not too much code and you want to do it, then why not :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T16:03:47.560+0000",
                    "updated": "2021-05-12T16:03:47.560+0000",
                    "started": "2021-05-12T16:03:47.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595442",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/602989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r640631129\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader_test.cc\n##########\n@@ -216,5 +216,83 @@ TEST(StreamingReaderTests, NestedParallelism) {\n   TestNestedParallelism(thread_pool, table_factory);\n }\n \n+TEST(ReaderOptionsTests, SkipRowsAfterNames) {\n\nReview comment:\n       I updated the PR with a version which uses the BoundryFinder and can skip rows in more than one block\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T13:37:08.996+0000",
                    "updated": "2021-05-27T13:37:08.996+0000",
                    "started": "2021-05-27T13:37:08.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "602989",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/603126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world closed pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:14:57.545+0000",
                    "updated": "2021-05-27T16:14:57.545+0000",
                    "started": "2021-05-27T16:14:57.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603126",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/603128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world opened a new pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255\n\n\n   Add a new csv reader option which allows the reader to skip rows after reading the column names from the csv.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:17:20.791+0000",
                    "updated": "2021-05-27T16:17:20.791+0000",
                    "started": "2021-05-27T16:17:20.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603128",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/603129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#issuecomment-849764577\n\n\n   Sorry meant to delete my other branch but accidentally deleted this one.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:17:24.020+0000",
                    "updated": "2021-05-27T16:17:24.020+0000",
                    "started": "2021-05-27T16:17:24.019+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603129",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/604462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r643030430\n\n\n\n##########\nFile path: cpp/src/arrow/util/delimiting.h\n##########\n@@ -138,6 +153,26 @@ class ARROW_EXPORT Chunker {\n   Status ProcessFinal(std::shared_ptr<Buffer> partial, std::shared_ptr<Buffer> block,\n                       std::shared_ptr<Buffer>* completion, std::shared_ptr<Buffer>* rest);\n \n+  /// \\brief Skip count number of rows\n+  /// Pre-conditions:\n+  /// - `partial` is the start of a valid block of delimited data\n+  ///   (i.e. starts just after a delimiter)\n+  /// - `block` follows `partial` in file order\n+  ///\n+  /// Post-conditions:\n+  /// - Count is updated to indicate the number of rows that still need to be skipped\n\nReview comment:\n       Nit, but can you quote variable names as above: e.g. ``` `count` ```, etc.\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -71,6 +71,36 @@ class BaseChunkerTest : public ::testing::TestWithParam<bool> {\n \n   void MakeChunker() { chunker_ = ::arrow::csv::MakeChunker(options_); }\n \n+  void AssertSkip(const std::string& str, const uint64_t count, const uint64_t rem_count,\n+                  const int64_t rest_size) {\n+    MakeChunker();\n+\n+    {\n+      auto test_count = count;\n+      auto partial = std::make_shared<Buffer>(\"\");\n+      auto block = std::make_shared<Buffer>(reinterpret_cast<const uint8_t*>(str.data()),\n+                                            static_cast<int64_t>(str.size()));\n+      std::shared_ptr<Buffer> rest;\n+      ASSERT_OK(chunker_->ProcessSkip(partial, block, true, &test_count, &rest));\n+      ASSERT_EQ(rem_count, test_count);\n+      ASSERT_EQ(rest_size, rest->size());\n\nReview comment:\n       Can you also check the contents of `rest`?\n\n##########\nFile path: cpp/src/arrow/csv/reader.cc\n##########\n@@ -166,14 +166,17 @@ namespace {\n // iterator APIs (e.g. Visit)) even though an empty optional is never used in this code.\n class BlockReader {\n  public:\n-  BlockReader(std::unique_ptr<Chunker> chunker, std::shared_ptr<Buffer> first_buffer)\n+  BlockReader(std::unique_ptr<Chunker> chunker, std::shared_ptr<Buffer> first_buffer,\n+              uint64_t skip)\n\nReview comment:\n       Can you use a more precise name? Is it `skip_rows`?\n\n##########\nFile path: python/pyarrow/tests/test_csv.py\n##########\n@@ -319,6 +321,79 @@ def test_header_skip_rows(self):\n             \"kl\": [\"op\"],\n         }\n \n+    def test_skip_rows_after_names(self):\n\nReview comment:\n       Can you perhaps add a test with both `skip_rows` and `skip_rows_after_names`?\n\n##########\nFile path: cpp/src/arrow/csv/reader.cc\n##########\n@@ -254,22 +271,12 @@ class ThreadedBlockReader : public BlockReader {\n  public:\n   using BlockReader::BlockReader;\n \n-  static Iterator<CSVBlock> MakeIterator(\n\nReview comment:\n       I presume this was unused?\n\n##########\nFile path: cpp/src/arrow/util/delimiting.h\n##########\n@@ -53,6 +54,20 @@ class ARROW_EXPORT BoundaryFinder {\n   /// `out_pos` will be -1 if no delimiter is found.\n   virtual Status FindLast(util::string_view block, int64_t* out_pos) = 0;\n \n+  /// \\brief Find the position of the Nth delimiter inside the block\n+  ///\n+  /// `partial` is taken to be the beginning of the block, and `block`\n+  /// its continuation.  Also, `partial` doesn't contain a delimiter.\n+  ///\n+  /// The returned `out_pos` is relative to `block`'s start and should point\n+  /// to the first character after the first delimiter.\n+  /// `out_pos` will be -1 if no delimiter is found.\n+  /// \\return the number of delimiters found\n+  virtual Result<uint64_t> FindN(util::string_view partial, util::string_view block,\n+                                 uint64_t count, int64_t* out_pos) {\n+    return Status::NotImplemented(\"BoundaryFinder::FindN\");\n\nReview comment:\n       Suggestions:\r\n   * call this `FindNth`\r\n   * make this a pure virtual method\r\n   * either use two out-parameters, or return the two values as a result, e.g.:\r\n   ```c++\r\n   struct FindNthResult {\r\n     int64_t num_found;\r\n     int64_t pos;\r\n   };\r\n   virtual Result<FindNthResult> FindNth(...) = 0;\r\n   ```\n\n##########\nFile path: python/pyarrow/_csv.pyx\n##########\n@@ -72,6 +72,13 @@ cdef class ReadOptions(_Weakrefable):\n     encoding: str, optional (default 'utf8')\n         The character encoding of the CSV data.  Columns that cannot\n         decode using this encoding can still be read as Binary.\n+    skip_rows_after_names: int, optional (default 0)\n\nReview comment:\n       Can you move this up just after `skip_rows`?\n\n##########\nFile path: cpp/src/arrow/util/delimiting.cc\n##########\n@@ -138,4 +167,25 @@ Status Chunker::ProcessFinal(std::shared_ptr<Buffer> partial,\n   return Status::OK();\n }\n \n+Status Chunker::ProcessSkip(std::shared_ptr<Buffer> partial,\n+                            std::shared_ptr<Buffer> block, bool final, uint64_t* count,\n+                            std::shared_ptr<Buffer>* rest) {\n+  DCHECK_GT(*count, 0);\n+  int64_t pos;\n+  ARROW_ASSIGN_OR_RAISE(auto skipped,\n+                        boundary_finder_->FindN(util::string_view(*partial),\n+                                                util::string_view(*block), *count, &pos));\n+  if (pos == BoundaryFinder::kNoDelimiterFound) {\n+    return StraddlingTooLarge();\n+  }\n+  if (ARROW_PREDICT_FALSE(final && *count > skipped && block->size() != pos)) {\n+    ++skipped;\n\nReview comment:\n       Why? Can you add a comment?\n\n##########\nFile path: cpp/src/arrow/csv/chunker.cc\n##########\n@@ -234,6 +235,38 @@ class LexingBoundaryFinder : public BoundaryFinder {\n     return Status::OK();\n   }\n \n+  Result<uint64_t> FindN(util::string_view partial, util::string_view block,\n+                         uint64_t count, int64_t* out_pos) override {\n+    Lexer<quoting, escaping> lexer(options_);\n+    uint64_t found = 0;\n+    const char* data = block.data();\n+    const char* const data_end = block.data() + block.size();\n+\n+    const char* line_end;\n+    if (partial.size()) {\n\nReview comment:\n       Is this conditional useful?\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -261,5 +291,43 @@ TEST_P(BaseChunkerTest, EscapingNewline) {\n   }\n }\n \n+TEST_P(BaseChunkerTest, ParseSkip) {\n+  {\n+    auto csv = MakeCSVData({\"ab,c,\\n\", \"def,,gh\\n\", \",ij,kl\\n\"});\n+    ASSERT_NO_FATAL_FAILURE(AssertSkip(csv, 1, 0, 15));\n\nReview comment:\n       I don't think `ASSERT_NO_FATAL_FAILURE` is useful, but we can keep it if you want.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T12:12:24.352+0000",
                    "updated": "2021-06-01T12:12:24.352+0000",
                    "started": "2021-06-01T12:12:24.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604462",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/604572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r643231248\n\n\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -261,5 +291,43 @@ TEST_P(BaseChunkerTest, EscapingNewline) {\n   }\n }\n \n+TEST_P(BaseChunkerTest, ParseSkip) {\n+  {\n+    auto csv = MakeCSVData({\"ab,c,\\n\", \"def,,gh\\n\", \",ij,kl\\n\"});\n+    ASSERT_NO_FATAL_FAILURE(AssertSkip(csv, 1, 0, 15));\n\nReview comment:\n       Without ASSERT_NO_FATAL_FAILURE the test will continue to execute even if AssertSkip fails.\r\n   \r\n   With gtest assert failures in called functions do not cause the test to exit unless it is wrapped by ASSERT_NO_FATAL_FAILURE\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T15:49:55.548+0000",
                    "updated": "2021-06-01T15:49:55.548+0000",
                    "started": "2021-06-01T15:49:55.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604572",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/604574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r643232930\n\n\n\n##########\nFile path: cpp/src/arrow/csv/reader.cc\n##########\n@@ -254,22 +271,12 @@ class ThreadedBlockReader : public BlockReader {\n  public:\n   using BlockReader::BlockReader;\n \n-  static Iterator<CSVBlock> MakeIterator(\n\nReview comment:\n       Yes. I think it was in just for symmetry with BlockReader\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T15:51:52.260+0000",
                    "updated": "2021-06-01T15:51:52.260+0000",
                    "started": "2021-06-01T15:51:52.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604574",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/604581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r643237969\n\n\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -261,5 +291,43 @@ TEST_P(BaseChunkerTest, EscapingNewline) {\n   }\n }\n \n+TEST_P(BaseChunkerTest, ParseSkip) {\n+  {\n+    auto csv = MakeCSVData({\"ab,c,\\n\", \"def,,gh\\n\", \",ij,kl\\n\"});\n+    ASSERT_NO_FATAL_FAILURE(AssertSkip(csv, 1, 0, 15));\n\nReview comment:\n       Ok, but how is that a problem? It would just accumulate failures instead of stopping at the first one.\r\n   Regardless, this is not important :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T15:57:41.463+0000",
                    "updated": "2021-06-01T15:57:41.463+0000",
                    "started": "2021-06-01T15:57:41.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604581",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/605651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r644463979\n\n\n\n##########\nFile path: cpp/src/arrow/csv/chunker.cc\n##########\n@@ -234,6 +235,38 @@ class LexingBoundaryFinder : public BoundaryFinder {\n     return Status::OK();\n   }\n \n+  Result<uint64_t> FindN(util::string_view partial, util::string_view block,\n+                         uint64_t count, int64_t* out_pos) override {\n+    Lexer<quoting, escaping> lexer(options_);\n+    uint64_t found = 0;\n+    const char* data = block.data();\n+    const char* const data_end = block.data() + block.size();\n+\n+    const char* line_end;\n+    if (partial.size()) {\n\nReview comment:\n       Yes because the lexer cannot be called with an empty block of data. It asserts that it is passed data and doesn't handle when `data == data_end`\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -261,5 +291,43 @@ TEST_P(BaseChunkerTest, EscapingNewline) {\n   }\n }\n \n+TEST_P(BaseChunkerTest, ParseSkip) {\n+  {\n+    auto csv = MakeCSVData({\"ab,c,\\n\", \"def,,gh\\n\", \",ij,kl\\n\"});\n+    ASSERT_NO_FATAL_FAILURE(AssertSkip(csv, 1, 0, 15));\n\nReview comment:\n       It can be a problem for some tests which might cause a segfault or have bad behavior if test execution fails after an ASSERT fails, I know this is not one of those types of tests. Normally ASSERT failures halt test execution for non halting checks it is standard to use the `EXPECT_` macros\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-03T03:59:46.377+0000",
                    "updated": "2021-06-03T03:59:46.377+0000",
                    "started": "2021-06-03T03:59:46.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605651",
                    "issueId": "13376866"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/worklog/606737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "n3world commented on a change in pull request #10255:\nURL: https://github.com/apache/arrow/pull/10255#discussion_r644463979\n\n\n\n##########\nFile path: cpp/src/arrow/csv/chunker.cc\n##########\n@@ -234,6 +235,38 @@ class LexingBoundaryFinder : public BoundaryFinder {\n     return Status::OK();\n   }\n \n+  Result<uint64_t> FindN(util::string_view partial, util::string_view block,\n+                         uint64_t count, int64_t* out_pos) override {\n+    Lexer<quoting, escaping> lexer(options_);\n+    uint64_t found = 0;\n+    const char* data = block.data();\n+    const char* const data_end = block.data() + block.size();\n+\n+    const char* line_end;\n+    if (partial.size()) {\n\nReview comment:\n       Yes because the lexer cannot be called with an empty block of data. It asserts that it is passed data and doesn't handle when `data == data_end`\n\n##########\nFile path: cpp/src/arrow/csv/chunker_test.cc\n##########\n@@ -261,5 +291,43 @@ TEST_P(BaseChunkerTest, EscapingNewline) {\n   }\n }\n \n+TEST_P(BaseChunkerTest, ParseSkip) {\n+  {\n+    auto csv = MakeCSVData({\"ab,c,\\n\", \"def,,gh\\n\", \",ij,kl\\n\"});\n+    ASSERT_NO_FATAL_FAILURE(AssertSkip(csv, 1, 0, 15));\n\nReview comment:\n       It can be a problem for some tests which might cause a segfault or have bad behavior if test execution fails after an ASSERT fails, I know this is not one of those types of tests. Normally ASSERT failures halt test execution for non halting checks it is standard to use the `EXPECT_` macros\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-04T08:18:47.774+0000",
                    "updated": "2021-06-04T08:18:47.774+0000",
                    "started": "2021-06-04T08:18:47.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "606737",
                    "issueId": "13376866"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@282002a5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a6503f4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45bda98a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@77f5686a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68194ad0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@c9941[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28d58133[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@743f1a7b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56d281e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@32f0dcec[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36280f98[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3ac837e4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 07 15:51:53 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-07T15:51:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12661/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-05-05T20:08:27.000+0000",
        "updated": "2021-06-07T15:52:12.000+0000",
        "timeoriginalestimate": null,
        "description": "Some programs generate csv files with additional descriptive information about the columns on a row after the names. For files like this it would be nice to have an option which reads the first row as column names and then can skip those rows after the names.\r\n\r\nThis could probably be implemented easily as either another option parallel ReadOptions::skip_rows or a boolean which indicates if skipping should occur before or after the column names are read.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] CSV add skip rows after column names",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/comment/17341871",
                    "id": "17341871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Some general comments about potential ways to provide this functionality (using the pandas.read_csv API as reference):\r\n\r\n- Pandas by default skips empty lines (Arrow does the same, but is more strict: a single white space is already considered as non-empty) and also has a {{comments}} keyword with which you can define a character and if your row starts with this character, it is skipped. Both might already cover part of the use cases where one want to skip rows after the header.\r\n- In pandas.read_csv, the {{skiprows}} keyword can either take an integer (number of rows from start of the file) or a list of integers (exact list of 0-based indices of rows to skip). This way, you can skip rows after the header with a single, flexible keyword (and also with a single keyword skip rows both before and after the header, eg with {{[0, 2]}} if the header is on the second row).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-10T12:18:52.790+0000",
                    "updated": "2021-05-10T12:21:07.685+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/comment/17341873",
                    "id": "17341873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "cc [~apitrou]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-10T12:21:43.965+0000",
                    "updated": "2021-05-10T12:21:43.965+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/comment/17341876",
                    "id": "17341876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I think an additional option {{ReadOptions::skip_rows_after_header}} (or similarly named) would be reasonable.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-05-10T12:24:08.475+0000",
                    "updated": "2021-05-10T12:24:08.475+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/comment/17341933",
                    "id": "17341933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=neworld",
                        "name": "neworld",
                        "key": "neworld",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=neworld&avatarId=46652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=neworld&avatarId=46652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=neworld&avatarId=46652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=neworld&avatarId=46652"
                        },
                        "displayName": "Nate Clark",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sorry, I wrote this in the PR first, so repeating it here.\r\n\r\nIs the preferred solution the current implementation of {{ReadOptions::skip_rows_after_header or the more flexible approach of turning skip_rows into a vector of indexes to skip. While the first does fulfill the original request of this ticket I do like the flexibility offered by the row ranges to skip. If the ranges is preferred I think it makes sense for me to work on ARROW-12675 so that the absolute row is known throughout the parser layers}}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=neworld",
                        "name": "neworld",
                        "key": "neworld",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=neworld&avatarId=46652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=neworld&avatarId=46652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=neworld&avatarId=46652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=neworld&avatarId=46652"
                        },
                        "displayName": "Nate Clark",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-10T14:20:35.731+0000",
                    "updated": "2021-05-10T14:20:35.731+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376866/comment/17358679",
                    "id": "17358679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10255\n[https://github.com/apache/arrow/pull/10255]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-07T15:51:53.715+0000",
                    "updated": "2021-06-07T15:51:53.715+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qrfk:",
        "customfield_12314139": null
    }
}