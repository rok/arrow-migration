{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13435446",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446",
    "key": "ARROW-16014",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sanjibansg",
            "name": "sanjibansg",
            "key": "JIRAUSER282926",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Sanjiban Sengupta",
            "active": true,
            "timeZone": "Asia/Kolkata"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16014/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 42,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750023",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg opened a new pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755\n\n\n   This PR adds an Expression Execution benchmark in `arrow-compute` which uses the batch size as a parameter and measures the bytes per second for the executing the scalar expression.\r\n   \r\n   ```\r\n   Running ./arrow-compute-expression-execution-benchmark\r\n   Run on (10 X 24.1213 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 64 KiB (x10)\r\n     L1 Instruction 128 KiB (x10)\r\n     L2 Unified 4096 KiB (x5)\r\n   Load Average: 2.19, 2.04, 2.08\r\n   -----------------------------------------------------------------------------\r\n   Benchmark                   Time             CPU   Iterations UserCounters...\r\n   -----------------------------------------------------------------------------\r\n   Execution/1           4919345 ns      4919150 ns          140 bytes_per_second=15.1461G/s\r\n   Execution/10          4835820 ns      4835814 ns          145 bytes_per_second=1.54071G/s\r\n   Execution/100         5074145 ns      5073754 ns          138 bytes_per_second=150.37M/s\r\n   Execution/1000        7421182 ns      7420883 ns           94 bytes_per_second=10.281M/s\r\n   Execution/10000      29646953 ns     29645130 ns           23 bytes_per_second=263.534k/s\r\n   Execution/100000    252627153 ns    252615333 ns            3 bytes_per_second=3.09265k/s\r\n   Execution/1000000  2478820334 ns   2478711000 ns            1 bytes_per_second=32.2748/s\r\n   Execution/10000000 24733585625 ns   24730194000 ns            1 bytes_per_second=0.323491/s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T11:27:40.328+0000",
                    "updated": "2022-03-30T11:27:40.328+0000",
                    "started": "2022-03-30T11:27:40.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750023",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#issuecomment-1083035417\n\n\n   https://issues.apache.org/jira/browse/ARROW-16014\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T11:42:27.937+0000",
                    "updated": "2022-03-30T11:42:27.937+0000",
                    "started": "2022-03-30T11:42:27.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750033",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838542907\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       Bytes-per-second is not really a measure of overhead, is it?\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n\nReview comment:\n       Why this expression in particular?\r\n   If we want to measure evaluation overhead, we should use a trivial expression, such as a cast from date64 to int64 (which is effectively zero-copy).\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n\nReview comment:\n       I don't understand what the point of `array_batches` is here. You're having a pure repetition loop inside another pure repetition loop :-)\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n\nReview comment:\n       Same question here.\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n\nReview comment:\n       Is this include file required?\n\n##########\nFile path: cpp/src/arrow/compute/exec/CMakeLists.txt\n##########\n@@ -36,6 +36,7 @@ add_arrow_compute_test(union_node_test PREFIX \"arrow-compute\")\n add_arrow_compute_test(util_test PREFIX \"arrow-compute\")\n \n add_arrow_benchmark(expression_benchmark PREFIX \"arrow-compute\")\n+add_arrow_benchmark(expression_execution_benchmark PREFIX \"arrow-compute\")\n\nReview comment:\n       I'm not sure it's useful to create a separate executable for this. Simply add the benchmark to the existing expression benchmark file?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T13:31:04.917+0000",
                    "updated": "2022-03-30T13:31:04.917+0000",
                    "started": "2022-03-30T13:31:04.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750099",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838547675\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       At least this would be more informative as items-per-second, because the byte size of the data is irrelevant here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T13:31:49.287+0000",
                    "updated": "2022-03-30T13:31:49.287+0000",
                    "started": "2022-03-30T13:31:49.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750100",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838565356\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       This is probably my fault as I asked for bytes-per-second in the JIRA issue.  I think items per second is a good compromise.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T13:47:12.614+0000",
                    "updated": "2022-03-30T13:47:12.614+0000",
                    "started": "2022-03-30T13:47:12.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750116",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838571535\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       Also, I think this would need to be `state.iterations() * 8 * array_size * array_batches`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T13:52:51.237+0000",
                    "updated": "2022-03-30T13:52:51.237+0000",
                    "started": "2022-03-30T13:52:51.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750124",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838574799\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n\nReview comment:\n       It makes it so that each iteration is processing 10 million elements.  Then the CPU/Time column is meaningful because it shows the time required to do the exact same amount of \"work\" at different batch sizes.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T13:55:36.680+0000",
                    "updated": "2022-03-30T13:55:36.680+0000",
                    "started": "2022-03-30T13:55:36.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750129",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838679395\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n\nReview comment:\n       I think this is a good idea though it might be nice to do both.  My original thinking was to purely measure overhead and this suggestion will improve that.\r\n   \r\n   However, looking at the numbers we are getting, it is interesting to see that there is a switching point between 100 & 1000 where the bottleneck switches from kernel execution to kernel overhead.  I think this is helpful context and my goal is to drive that down just a little further so we can keep that 5mil ns performance all the way to 1000 or 10000.  So it might be nice still to have both a \"zero copy\" benchmark and a \"simple operation that needs to copy\" benchmark.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T15:25:50.571+0000",
                    "updated": "2022-03-30T15:25:50.571+0000",
                    "started": "2022-03-30T15:25:50.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750192",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838738104\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       If the items are homogenous types, then I think bytes per second and items per second are interchangeable, especially for simple data types.\r\n   \r\n   I think that if this benchmark is expanded it would be useful to see both, for benchmarking heterogenous types or complex types.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T16:22:56.715+0000",
                    "updated": "2022-03-30T16:22:56.715+0000",
                    "started": "2022-03-30T16:22:56.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750233",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838741993\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       unless I'm misunderstanding what the bytes processed is counting? I see a single array being processed, so I think items and bytes are directly related.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T16:27:01.347+0000",
                    "updated": "2022-03-30T16:27:01.347+0000",
                    "started": "2022-03-30T16:27:01.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750235",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838761964\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       They are directly related and yes, interchangeable, but I think I agree with @pitrou that items/second is probably more likely to be all we need.  It also makes it clearer to the reader what is being tested.  The code we are testing here (kernel dispatch) never actually operates on the arrays themselves.  It is only responsible for passing the arrays to the appropriate kernels.  So the size (or byte width) of the array shouldn't matter too much.\r\n   \r\n   The kernel benchmarks themselves are a different story.  And you will notice that in `compare_benchmark.cc` for example we test the kernel on a wide variety of data types.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T16:49:30.041+0000",
                    "updated": "2022-03-30T16:49:30.041+0000",
                    "started": "2022-03-30T16:49:30.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750257",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/750381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drin commented on a change in pull request #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r838882448\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_execution_benchmark.cc\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview comment:\n       Ah, thanks for the clarification; that makes a lot of sense.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-30T19:13:48.912+0000",
                    "updated": "2022-03-30T19:13:48.912+0000",
                    "started": "2022-03-30T19:13:48.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "750381",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/752071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r841298365\n\n\n##########\ncpp/src/arrow/compute/exec/expression_execution_benchmark.cc:\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n\nReview Comment:\n   For a zero-copy benchmark, now I am trying to return the values as is, does this work?\n\n\n\n",
                    "created": "2022-04-04T00:03:35.896+0000",
                    "updated": "2022-04-04T00:03:35.896+0000",
                    "started": "2022-04-04T00:03:35.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752071",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/752072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r841298493\n\n\n##########\ncpp/src/arrow/compute/exec/expression_execution_benchmark.cc:\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n+#include \"arrow/type.h\"\n+\n+namespace arrow {\n+namespace compute {\n+\n+auto expression =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+static void Execution(benchmark::State& state) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expression.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetBytesProcessed(state.iterations() * 8 * array_size);\n\nReview Comment:\n   Made the change, now we are using `items per second`\n\n\n\n",
                    "created": "2022-04-04T00:04:30.236+0000",
                    "updated": "2022-04-04T00:04:30.236+0000",
                    "started": "2022-04-04T00:04:30.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752072",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/752073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r841298550\n\n\n##########\ncpp/src/arrow/compute/exec/expression_execution_benchmark.cc:\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n\nReview Comment:\n   Removed the file and moved the benchmark to the expression benchmark file.\n\n\n\n",
                    "created": "2022-04-04T00:05:00.410+0000",
                    "updated": "2022-04-04T00:05:00.410+0000",
                    "started": "2022-04-04T00:05:00.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752073",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/752074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r841298581\n\n\n##########\ncpp/src/arrow/compute/exec/expression_execution_benchmark.cc:\n##########\n@@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/compute/cast.h\"\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/dataset/partition.h\"\n+#include \"arrow/testing/generator.h\"\n+#include \"arrow/testing/gtest_util.h\"\n\nReview Comment:\n   Removed the file and moved the benchmark to the expression benchmark file.\n\n\n\n##########\ncpp/src/arrow/compute/exec/CMakeLists.txt:\n##########\n@@ -36,6 +36,7 @@ add_arrow_compute_test(union_node_test PREFIX \"arrow-compute\")\n add_arrow_compute_test(util_test PREFIX \"arrow-compute\")\n \n add_arrow_benchmark(expression_benchmark PREFIX \"arrow-compute\")\n+add_arrow_benchmark(expression_execution_benchmark PREFIX \"arrow-compute\")\n\nReview Comment:\n   Removed the file and moved the benchmark to the expression benchmark file.\n\n\n\n",
                    "created": "2022-04-04T00:05:15.346+0000",
                    "updated": "2022-04-04T00:05:15.346+0000",
                    "started": "2022-04-04T00:05:15.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752074",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/752558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r842194217\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -69,6 +70,25 @@ static void SimplifyFilterWithGuarantee(benchmark::State& state, Expression filt\n   }\n }\n \n+static void BatchedExecution(benchmark::State& state, Expression expr) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expr.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetItemsProcessed(state.iterations() * array_size * array_batches);\n\nReview Comment:\n   Let's put a comment somewhere that we are measuring `rows per second` (my first thought when I saw \"items\" was \"ExecuteScalarExpression calls per second\").  Or ideally we can use a custom counter and call the column \"rows_per_second\".\n\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -92,6 +112,11 @@ auto guarantee = and_(equal(field_ref(\"a\"), literal(int64_t(99))),\n auto guarantee_dictionary = and_(equal(field_ref(\"a\"), literal(ninety_nine_dict)),\n                                  equal(field_ref(\"b\"), literal(ninety_nine_dict)));\n \n+auto expression_with_copy =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+auto expression_without_copy = field_ref(\"x\");\n\nReview Comment:\n   `field_ref(\"x\")` is maybe a little too easy of an expression, based on the results.\r\n   \r\n   Let's test the following:\r\n   \r\n   ```\r\n   auto complex_expression =\r\n       and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\r\n   auto simple_expression = call(\"negate\", {field_ref(\"x\")});\r\n   auto zero_copy_expression =\r\n       call(\"cast\", {field_ref(\"x\")}, compute::CastOptions::Safe(timestamp(TimeUnit::NANO)));\r\n   auto ref_only_expression = field_ref(\"x\");\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -119,6 +144,11 @@ BENCHMARK_CAPTURE(BindAndEvaluate, nested_array,\n                   field_ref(FieldRef(\"struct_arr\", \"float\")));\n BENCHMARK_CAPTURE(BindAndEvaluate, nested_scalar,\n                   field_ref(FieldRef(\"struct_scalar\", \"float\")));\n-\n+BENCHMARK_CAPTURE(BatchedExecution, execution_with_copy, expression_with_copy)\n+    ->RangeMultiplier(10)\n+    ->Range(1, 10000000);\n\nReview Comment:\n   Right now this parameter is \"number of batches\".  Can we make the parameter \"rows per batch\" (and give the parameter a name too).  We will have to invert the math a little but I think it will be much more readable.\r\n   \r\n   Also, let's make the minimum \"10 rows per batch\".  Testing \"1 row per batch\" takes too long on my system and isn't adding any value.\n\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -69,6 +70,25 @@ static void SimplifyFilterWithGuarantee(benchmark::State& state, Expression filt\n   }\n }\n \n+static void BatchedExecution(benchmark::State& state, Expression expr) {\n\nReview Comment:\n   We are measuring the overhead of `ExecuteScalarExpression`.  This is important to enable batched execution but it is not directly related and so this benchmark should probably be named `ExecuteScalarExpressionOverhead` or something like that.\n\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -119,6 +144,11 @@ BENCHMARK_CAPTURE(BindAndEvaluate, nested_array,\n                   field_ref(FieldRef(\"struct_arr\", \"float\")));\n BENCHMARK_CAPTURE(BindAndEvaluate, nested_scalar,\n                   field_ref(FieldRef(\"struct_scalar\", \"float\")));\n-\n+BENCHMARK_CAPTURE(BatchedExecution, execution_with_copy, expression_with_copy)\n+    ->RangeMultiplier(10)\n+    ->Range(1, 10000000);\n+BENCHMARK_CAPTURE(BatchedExecution, execution_without_copy, expression_without_copy)\n+    ->RangeMultiplier(10)\n+    ->Range(1, 10000000);\n\nReview Comment:\n   Add `->DenseThreadRange(1, std::thread::hardware_concurrency(), std::thread::hardware_concurrency())` to all of these benchmarks.\n\n\n\n",
                    "created": "2022-04-04T23:29:19.160+0000",
                    "updated": "2022-04-04T23:29:19.160+0000",
                    "started": "2022-04-04T23:29:19.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "752558",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/753213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r843536229\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -69,6 +70,25 @@ static void SimplifyFilterWithGuarantee(benchmark::State& state, Expression filt\n   }\n }\n \n+static void BatchedExecution(benchmark::State& state, Expression expr) {\n+  const auto array_batches = static_cast<int32_t>(state.range(0));\n+  const auto array_size = 10000000 / array_batches;\n+\n+  ExecContext ctx;\n+  auto dataset_schema = schema({\n+      field(\"x\", int64()),\n+  });\n+  ExecBatch input({Datum(ConstantArrayGenerator::Int64(array_size, 5))},\n+                  /*length=*/1);\n+\n+  ASSIGN_OR_ABORT(auto bound, expr.Bind(*dataset_schema));\n+  for (auto _ : state) {\n+    for (int it = 0; it < array_batches; ++it)\n+      ABORT_NOT_OK(ExecuteScalarExpression(bound, input, &ctx).status());\n+  }\n+  state.SetItemsProcessed(state.iterations() * array_size * array_batches);\n\nReview Comment:\n   Made the change.\n\n\n\n",
                    "created": "2022-04-06T06:53:47.696+0000",
                    "updated": "2022-04-06T06:53:47.696+0000",
                    "started": "2022-04-06T06:53:47.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "753213",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/753214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r843536538\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -69,6 +70,25 @@ static void SimplifyFilterWithGuarantee(benchmark::State& state, Expression filt\n   }\n }\n \n+static void BatchedExecution(benchmark::State& state, Expression expr) {\n\nReview Comment:\n   Made the change.\n\n\n\n",
                    "created": "2022-04-06T06:54:02.725+0000",
                    "updated": "2022-04-06T06:54:02.725+0000",
                    "started": "2022-04-06T06:54:02.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "753214",
                    "issueId": "13435446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/worklog/753215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sanjibansg commented on code in PR #12755:\nURL: https://github.com/apache/arrow/pull/12755#discussion_r843536959\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -92,6 +112,11 @@ auto guarantee = and_(equal(field_ref(\"a\"), literal(int64_t(99))),\n auto guarantee_dictionary = and_(equal(field_ref(\"a\"), literal(ninety_nine_dict)),\n                                  equal(field_ref(\"b\"), literal(ninety_nine_dict)));\n \n+auto expression_with_copy =\n+    and_(less(field_ref(\"x\"), literal(20)), greater(field_ref(\"x\"), literal(0)));\n+\n+auto expression_without_copy = field_ref(\"x\");\n\nReview Comment:\n   Added the other expressions. Thanks!\n\n\n\n##########\ncpp/src/arrow/compute/exec/expression_benchmark.cc:\n##########\n@@ -119,6 +144,11 @@ BENCHMARK_CAPTURE(BindAndEvaluate, nested_array,\n                   field_ref(FieldRef(\"struct_arr\", \"float\")));\n BENCHMARK_CAPTURE(BindAndEvaluate, nested_scalar,\n                   field_ref(FieldRef(\"struct_scalar\", \"float\")));\n-\n+BENCHMARK_CAPTURE(BatchedExecution, execution_with_copy, expression_with_copy)\n+    ->RangeMultiplier(10)\n+    ->Range(1, 10000000);\n+BENCHMARK_CAPTURE(BatchedExecution, execution_without_copy, expression_without_copy)\n+    ->RangeMultiplier(10)\n+    ->Range(1, 10000000);\n\nReview Comment:\n   Made the change.\n\n\n\n",
                    "created": "2022-04-06T06:54:17.795+0000",
                    "updated": "2022-04-06T06:54:17.795+0000",
                    "started": "2022-04-06T06:54:17.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "753215",
                    "issueId": "13435446"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 25200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@55367a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6127f9dc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e86e67d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@b10d68[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67dd3c78[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5f6c91b3[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3630212d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3e62a0ce[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30d26586[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b089b26[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c06fa23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@174959bd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 25200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 20 13:35:37 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-20T13:35:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16014/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-03-23T21:50:44.000+0000",
        "updated": "2022-04-26T22:23:38.000+0000",
        "timeoriginalestimate": null,
        "description": "We have a lot of great benchmarks on individual kernels but I don't know if we have enough benchmarks on the function & expression evaluation itself.\r\n\r\nThere are some benchmarks (function_benchmark.cc) which measure this but I would like to get a better sense of a \"bytes per second\" number from the function system for a trivial function (e.g. an identity function that simply returns the values as is).\r\n\r\nIn addition, we should measure overhead for common tasks like preallocation, etc.\r\n\r\nI would also like these benchmarks to be parameterized by batch size.  Being able to run on small batches enables (in theory) better cache utilization.  I suspect that the overhead here may start to become a bottleneck.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 25200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create more benchmarks for measuring expression evaluation overhead",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/comment/17512510",
                    "id": "17512510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I wanted to consolidate a few references here as well from the user@ mailing list.\r\n\r\n\u00a0\r\n\r\nI originally thought that some of the compute API functions were leveraging parallelism when \"enough data\" was present. I posted on the user@ mailing list about this, with a relevant repository for reproducing the performance I was seeing [1].\r\n\r\n\u00a0\r\n\r\nIn Weston's response, he noted another post from Wes on the dev@ mailing list that seemed highly relevant [2]. This post references a PR for ARROW-8928\u00a0[3].\r\n\r\n\u00a0\r\n\r\n[1]: [https://lists.apache.org/thread/blckonozxbtq0p4t9kvf087llsvvzsxq]\r\n\r\n[2]: [https://lists.apache.org/thread/mp68ofm2hnvs2v2oz276rvw7y5kwqoyd]\r\n\r\n[3]: https://github.com/apache/arrow/pull/9280",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-03-25T17:50:50.401+0000",
                    "updated": "2022-03-25T17:57:52.645+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13435446/comment/17524996",
                    "id": "17524996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12755\n[https://github.com/apache/arrow/pull/12755]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-04-20T13:35:37.022+0000",
                    "updated": "2022-04-20T13:35:37.022+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z10rk8:",
        "customfield_12314139": null
    }
}