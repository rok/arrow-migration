{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13134251",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13134251",
    "key": "ARROW-2046",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vmuriart",
            "name": "vmuriart",
            "key": "vmuriart",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10438",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"
            },
            "displayName": "Victor Uriarte",
            "active": true,
            "timeZone": "America/Phoenix"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vmuriart",
            "name": "vmuriart",
            "key": "vmuriart",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10438",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"
            },
            "displayName": "Victor Uriarte",
            "active": true,
            "timeZone": "America/Phoenix"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2046/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@28e58ea0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2680eba2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cd35002[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5d2f69c1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ee57ced[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5ce9d064[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3adcc8bb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1c1bcf40[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29acca3a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3bd4559b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6791db4a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@25b26937[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 28 19:49:54 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-28T19:49:51.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2046/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-01-27T22:31:26.000+0000",
        "updated": "2018-02-28T19:49:54.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently `pyarrow` doesn't seem to support reading from `pathlib.Path` or similar objects. [PEP519|https://www.python.org/dev/peps/pep-0519/] introduced `__fspath__` which could be used to transform any `Path` like object to a string.\r\n\r\n[Pandas|https://github.com/pandas-dev/pandas/blob/a9d8e04ab68f688f899b4164bfa1ac868c9c1c64/pandas/io/common.py#L120-L160] has a sample implementation, though I think a simpler implementation of it could be used.\r\n\r\n\u00a0\r\n{code:java}\r\nimport pathlib\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\ndf = pd.DataFrame({\r\n 'Foo': ['A', 'A', 'B', 'B', 'C'],\r\n 'Bar': ['A1', 'A2', 'B2', 'D3', ''],\r\n})\r\n\r\ntest_dir = pathlib.Path(__file__).parent / 'test'\r\ntest_dir.mkdir(parents=True, exist_ok=True)\r\ntable = pa.Table.from_pandas(df)\r\npath = test_dir / 'file1.parquet'\r\n\r\n# Doesn't work\r\npq.write_table(table, path)\r\n\r\n# Works\r\npq.write_table(table, str(path))\r\n{code}\r\n\u00a0\r\n\r\n[https://github.com/apache/arrow/issues/1522]\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add support for PEP519 - pathlib and similar objects",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13134251/comment/16378600",
                    "id": "16378600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1675: ARROW-2046: [Python] Support path-like objects\nURL: https://github.com/apache/arrow/pull/1675\n \n \n   IO functions accepting string filenames should also accept PEP 519 path objects such as pathlib.Path (on Python 3.6 and later).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-27T13:41:42.868+0000",
                    "updated": "2018-02-27T13:41:42.868+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13134251/comment/16380944",
                    "id": "16380944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1675\n[https://github.com/apache/arrow/pull/1675]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-28T19:49:51.970+0000",
                    "updated": "2018-02-28T19:49:51.970+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13134251/comment/16380945",
                    "id": "16380945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1675: ARROW-2046: [Python] Support path-like objects\nURL: https://github.com/apache/arrow/pull/1675\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/_parquet.pyx b/python/pyarrow/_parquet.pyx\nindex 9061ed53d..e513e1d92 100644\n--- a/python/pyarrow/_parquet.pyx\n+++ b/python/pyarrow/_parquet.pyx\n@@ -31,7 +31,7 @@ from pyarrow.lib cimport (Array, Schema,\n                           NativeFile, get_reader, get_writer)\n \n from pyarrow.compat import tobytes, frombytes\n-from pyarrow.lib import ArrowException, NativeFile\n+from pyarrow.lib import ArrowException, NativeFile, _stringify_path\n \n import six\n \n@@ -825,15 +825,17 @@ cdef class ParquetWriter:\n             c_string c_where\n             CMemoryPool* pool\n \n-        if isinstance(where, six.string_types):\n+        try:\n+            where = _stringify_path(where)\n+        except TypeError:\n+            get_writer(where, &self.sink)\n+            self.own_sink = False\n+        else:\n             c_where = tobytes(where)\n             with nogil:\n                 check_status(FileOutputStream.Open(c_where,\n                                                    &self.sink))\n             self.own_sink = True\n-        else:\n-            get_writer(where, &self.sink)\n-            self.own_sink = False\n \n         self.use_dictionary = use_dictionary\n         self.compression = compression\ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex 8b364dc71..ad6d2d66a 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -38,6 +38,18 @@ cdef extern from \"Python.h\":\n         char *v, Py_ssize_t len) except NULL\n \n \n+def _stringify_path(path):\n+    \"\"\"\n+    Convert *path* to a string or unicode path if possible.\n+    \"\"\"\n+    if isinstance(path, six.string_types):\n+        return path\n+    try:\n+        return path.__fspath__()\n+    except AttributeError:\n+        raise TypeError(\"not a path-like object\")\n+\n+\n cdef class NativeFile:\n     def __cinit__(self):\n         self.closed = True\n@@ -822,13 +834,16 @@ def frombuffer(object obj):\n cdef get_reader(object source, shared_ptr[RandomAccessFile]* reader):\n     cdef NativeFile nf\n \n-    if isinstance(source, six.string_types):\n-        source = memory_map(source, mode='r')\n-    elif isinstance(source, Buffer):\n-        source = BufferReader(source)\n-    elif not isinstance(source, NativeFile) and hasattr(source, 'read'):\n-        # Optimistically hope this is file-like\n-        source = PythonFile(source, mode='r')\n+    try:\n+        source_path = _stringify_path(source)\n+    except TypeError:\n+        if isinstance(source, Buffer):\n+            source = BufferReader(source)\n+        elif not isinstance(source, NativeFile) and hasattr(source, 'read'):\n+            # Optimistically hope this is file-like\n+            source = PythonFile(source, mode='r')\n+    else:\n+        source = memory_map(source_path, mode='r')\n \n     if isinstance(source, NativeFile):\n         nf = source\n@@ -846,11 +861,14 @@ cdef get_reader(object source, shared_ptr[RandomAccessFile]* reader):\n cdef get_writer(object source, shared_ptr[OutputStream]* writer):\n     cdef NativeFile nf\n \n-    if isinstance(source, six.string_types):\n-        source = OSFile(source, mode='w')\n-    elif not isinstance(source, NativeFile) and hasattr(source, 'write'):\n-        # Optimistically hope this is file-like\n-        source = PythonFile(source, mode='w')\n+    try:\n+        source_path = _stringify_path(source)\n+    except TypeError:\n+        if not isinstance(source, NativeFile) and hasattr(source, 'write'):\n+            # Optimistically hope this is file-like\n+            source = PythonFile(source, mode='w')\n+    else:\n+        source = OSFile(source_path, mode='w')\n \n     if isinstance(source, NativeFile):\n         nf = source\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex bd76feb2e..187971fb8 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -22,6 +22,7 @@\n import io\n import json\n import os\n+import sys\n \n import pytest\n \n@@ -264,6 +265,19 @@ def test_pandas_parquet_1_0_rountrip(tmpdir):\n     tm.assert_frame_equal(df, df_read)\n \n \n+@parquet\n+@pytest.mark.skipif(sys.version_info < (3, 6), reason=\"need Python 3.6\")\n+def test_path_objects(tmpdir):\n+    # Test compatibility with PEP 519 path-like objects\n+    import pathlib\n+    p = pathlib.Path(tmpdir) / 'zzz.parquet'\n+    df = pd.DataFrame({'x': np.arange(10, dtype=np.int64)})\n+    _write_table(df, p)\n+    table_read = _read_table(p)\n+    df_read = table_read.to_pandas()\n+    tm.assert_frame_equal(df, df_read)\n+\n+\n @parquet\n def test_pandas_column_selection(tmpdir):\n     size = 10000\ndiff --git a/python/pyarrow/tests/test_serialization.py b/python/pyarrow/tests/test_serialization.py\nindex feccebbde..3ee02cb8c 100644\n--- a/python/pyarrow/tests/test_serialization.py\n+++ b/python/pyarrow/tests/test_serialization.py\n@@ -584,15 +584,11 @@ def _get_modified_env_with_pythonpath():\n     # Prepend pyarrow root directory to PYTHONPATH\n     env = os.environ.copy()\n     existing_pythonpath = env.get('PYTHONPATH', '')\n-    if sys.platform == 'win32':\n-        sep = ';'\n-    else:\n-        sep = ':'\n \n     module_path = os.path.abspath(\n         os.path.dirname(os.path.dirname(pa.__file__)))\n \n-    env['PYTHONPATH'] = sep.join((module_path, existing_pythonpath))\n+    env['PYTHONPATH'] = os.pathsep.join((module_path, existing_pythonpath))\n     return env\n \n \n@@ -650,3 +646,14 @@ def loads2(serialized_obj):\n     serialized = pa.serialize(test_object, context=context).to_buffer()\n     deserialized = pa.deserialize(serialized.to_pybytes(), context=context)\n     assert deserialized == b'custom serialization 2'\n+\n+\n+@pytest.mark.skipif(sys.version_info < (3, 6), reason=\"need Python 3.6\")\n+def test_path_objects(tmpdir):\n+    # Test compatibility with PEP 519 path-like objects\n+    import pathlib\n+    p = pathlib.Path(tmpdir) / 'zzz.bin'\n+    obj = 1234\n+    pa.serialize_to(obj, p)\n+    res = pa.deserialize_from(p, None)\n+    assert res == obj\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-28T19:49:54.776+0000",
                    "updated": "2018-02-28T19:49:54.776+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3pgbz:",
        "customfield_12314139": null
    }
}