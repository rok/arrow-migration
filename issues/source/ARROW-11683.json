{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13359172",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172",
    "key": "ARROW-11683",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12609604",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12609604",
                "type": {
                    "id": "12310660",
                    "name": "Completes",
                    "inward": "is fixed by",
                    "outward": "fixes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310660"
                },
                "outwardIssue": {
                    "id": "13352748",
                    "key": "ARROW-11284",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13352748",
                    "fields": {
                        "summary": "[R] Support dplyr verb transmute()",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12608873",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12608873",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13359708",
                    "key": "ARROW-11704",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359708",
                    "fields": {
                        "summary": "[R] Wire up dplyr::mutate() for datasets",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 25800,
            "total": 25800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 25800,
            "total": 25800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11683/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 43,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/554024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson opened a new pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521\n\n\n   First steps: \r\n   \r\n   * Rework `selected_columns` to hold field_refs instead of string column names\r\n   * Create an `array_ref` pseudo-function to do the same for `array_expressions`\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-18T01:48:54.317+0000",
                    "updated": "2021-02-18T01:48:54.317+0000",
                    "started": "2021-02-18T01:48:54.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554024",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/554026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#issuecomment-780980529\n\n\n   https://issues.apache.org/jira/browse/ARROW-11683\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-18T01:49:39.980+0000",
                    "updated": "2021-02-18T01:49:39.980+0000",
                    "started": "2021-02-18T01:49:39.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554026",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581372997\n\n\n\n##########\nFile path: r/tests/testthat/helper-expectation.R\n##########\n@@ -59,3 +59,66 @@ verify_output <- function(...) {\n   }\n   testthat::verify_output(...)\n }\n+\n+expect_dplyr_equal <- function(expr, # A dplyr pipeline with `input` as its start\n+                               tbl,  # A tbl/df as reference, will make RB/Table with\n+                               skip_record_batch = NULL, # Msg, if should skip RB test\n+                               skip_table = NULL,        # Msg, if should skip Table test\n+                               ...) {\n+  expr <- rlang::enquo(expr)\n+  expected <- rlang::eval_tidy(expr, rlang::new_data_mask(rlang::env(input = tbl)))\n+\n+  skip_msg <- NULL\n+\n+  if (is.null(skip_record_batch)) {\n+    via_batch <- rlang::eval_tidy(\n+      expr,\n+      rlang::new_data_mask(rlang::env(input = record_batch(tbl)))\n+    )\n+    expect_equivalent(via_batch, expected, ...)\n+  } else {\n+    skip_msg <- c(skip_msg, skip_record_batch)\n+  }\n+\n+  if (is.null(skip_table)) {\n+    via_table <- rlang::eval_tidy(\n+      expr,\n+      rlang::new_data_mask(rlang::env(input = Table$create(tbl)))\n+    )\n+    expect_equivalent(via_table, expected, ...)\n+  } else {\n+    skip_msg <- c(skip_msg, skip_table)\n+  }\n+\n+  if (!is.null(skip_msg)) {\n+    skip(paste(skip_msg, collpase = \"\\n\"))\n+  }\n+}\n+\n+expect_dplyr_error <- function(expr, # A dplyr pipeline with `input` as its start\n+                               tbl,  # A tbl/df as reference, will make RB/Table with\n+                               ...) {\n+  expr <- rlang::enquo(expr)\n+  msg <- tryCatch(\n+    rlang::eval_tidy(expr, rlang::new_data_mask(rlang::env(input = tbl))),\n+    error = function (e) conditionMessage(e)\n+  )\n+  expect_is(msg, \"character\", label = \"dplyr on data.frame did not error\")\n\nReview comment:\n       This isn't absolutely necessary, but will be more work in the future if/when we move to testthat 3e, `expect_is()` is deprecated. Could we use `expect_type()` here? \n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -73,6 +80,22 @@ print.arrow_dplyr_query <- function(x, ...) {\n   invisible(x)\n }\n \n+get_field_names <- function(selected_cols) {\n+  if (inherits(selected_cols, \"arrow_dplyr_query\")) {\n+    selected_cols <- selected_cols$selected_columns\n+  }\n+  map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \"\")\n\nReview comment:\n       `.$field_name %||% .$args$field_name %||% \"\"`\r\n   \r\n   Ends up to be `.$field_name`, if `.$field_name` is `NULL` then `.$args$field_name` if `.$args$field_name` is *also* `NULL` then \"\", yeah? Maybe a comment would be good to make that super clear / easier to read?\r\n   \n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n     tab <- Scanner$create(x)$ToTable()\n   } else {\n-    # This is a Table/RecordBatch. See record-batch.R for the [ method\n-    tab <- x$.data[x$filtered_rows, x$selected_columns, keep_na = FALSE]\n+    # This is a Table or RecordBatch\n+\n+    # Filter and select the data referenced in selected columns\n+    if (isTRUE(x$filtered_rows)) {\n+      filter <- TRUE\n+    } else {\n+      filter <- eval_array_expression(x$filtered_rows, x$.data)\n+    }\n+    # TODO: shortcut if identical(names(x$.data), find_array_refs(x$selected_columns))?\n+    tab <- x$.data[filter, find_array_refs(x$selected_columns), keep_na = FALSE]\n+    # Now evaluate those expressions on the filtered table\n+    cols <- lapply(x$selected_columns, eval_array_expression, data = tab)\n+    if (length(cols) == 0) {\n+      tab <- tab[, integer(0)]\n\nReview comment:\n       Would this resolve https://issues.apache.org/jira/browse/ARROW-11328 ?\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n\nReview comment:\n       This should be obvious, but I wonder if we should add something like \"remove the grouping with `ungroup()` or remove `group_by()` from your pipeline first\" to help folks know what to do if they get this error\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n\nReview comment:\n       `expect_is()` > `expect_s3_class()` here? As odd as the naming is this is the approved method it appears https://github.com/r-lib/testthat/issues/1271\n\n##########\nFile path: r/tests/testthat/test-RecordBatch.R\n##########\n@@ -416,6 +416,14 @@ test_that(\"record_batch() handles null type (ARROW-7064)\", {\n   expect_equivalent(batch$schema,  schema(a = int32(), n = null()))\n })\n \n+test_that(\"record_batch() scalar recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       ```suggestion\r\n     skip(\"Not implemented (ARROW-11705)\")\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:04:17.733+0000",
                    "updated": "2021-02-23T22:04:17.733+0000",
                    "started": "2021-02-23T22:04:17.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556576",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581423955\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -73,6 +80,22 @@ print.arrow_dplyr_query <- function(x, ...) {\n   invisible(x)\n }\n \n+get_field_names <- function(selected_cols) {\n+  if (inherits(selected_cols, \"arrow_dplyr_query\")) {\n+    selected_cols <- selected_cols$selected_columns\n+  }\n+  map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \"\")\n\nReview comment:\n       I can comment, though FWIW I'm pretty sure this will crash once dataset expressions might not be field_refs (in the next PR) so it's likely to be rewritten.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:06:44.006+0000",
                    "updated": "2021-02-23T22:06:44.006+0000",
                    "started": "2021-02-23T22:06:44.006+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556578",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581424395\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n     tab <- Scanner$create(x)$ToTable()\n   } else {\n-    # This is a Table/RecordBatch. See record-batch.R for the [ method\n-    tab <- x$.data[x$filtered_rows, x$selected_columns, keep_na = FALSE]\n+    # This is a Table or RecordBatch\n+\n+    # Filter and select the data referenced in selected columns\n+    if (isTRUE(x$filtered_rows)) {\n+      filter <- TRUE\n+    } else {\n+      filter <- eval_array_expression(x$filtered_rows, x$.data)\n+    }\n+    # TODO: shortcut if identical(names(x$.data), find_array_refs(x$selected_columns))?\n+    tab <- x$.data[filter, find_array_refs(x$selected_columns), keep_na = FALSE]\n+    # Now evaluate those expressions on the filtered table\n+    cols <- lapply(x$selected_columns, eval_array_expression, data = tab)\n+    if (length(cols) == 0) {\n+      tab <- tab[, integer(0)]\n\nReview comment:\n       No, this is in the \"else\" case, Datasets are handled on L345\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:07:18.981+0000",
                    "updated": "2021-02-23T22:07:18.981+0000",
                    "started": "2021-02-23T22:07:18.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556580",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581425493\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n\nReview comment:\n       That won't always be a solution though. `dplyr::mutate()` behaves differently on a grouped dataset: it will do grouped transformations and aggregations. \r\n   \r\n   FWIW for Table/RecordBatch, this won't error: it warns and then pulls data into R and proceeds with the regular dplyr methods.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:09:01.192+0000",
                    "updated": "2021-02-23T22:09:01.192+0000",
                    "started": "2021-02-23T22:09:01.192+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556583",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581427567\n\n\n\n##########\nFile path: r/tests/testthat/helper-expectation.R\n##########\n@@ -59,3 +59,66 @@ verify_output <- function(...) {\n   }\n   testthat::verify_output(...)\n }\n+\n+expect_dplyr_equal <- function(expr, # A dplyr pipeline with `input` as its start\n+                               tbl,  # A tbl/df as reference, will make RB/Table with\n+                               skip_record_batch = NULL, # Msg, if should skip RB test\n+                               skip_table = NULL,        # Msg, if should skip Table test\n+                               ...) {\n+  expr <- rlang::enquo(expr)\n+  expected <- rlang::eval_tidy(expr, rlang::new_data_mask(rlang::env(input = tbl)))\n+\n+  skip_msg <- NULL\n+\n+  if (is.null(skip_record_batch)) {\n+    via_batch <- rlang::eval_tidy(\n+      expr,\n+      rlang::new_data_mask(rlang::env(input = record_batch(tbl)))\n+    )\n+    expect_equivalent(via_batch, expected, ...)\n+  } else {\n+    skip_msg <- c(skip_msg, skip_record_batch)\n+  }\n+\n+  if (is.null(skip_table)) {\n+    via_table <- rlang::eval_tidy(\n+      expr,\n+      rlang::new_data_mask(rlang::env(input = Table$create(tbl)))\n+    )\n+    expect_equivalent(via_table, expected, ...)\n+  } else {\n+    skip_msg <- c(skip_msg, skip_table)\n+  }\n+\n+  if (!is.null(skip_msg)) {\n+    skip(paste(skip_msg, collpase = \"\\n\"))\n+  }\n+}\n+\n+expect_dplyr_error <- function(expr, # A dplyr pipeline with `input` as its start\n+                               tbl,  # A tbl/df as reference, will make RB/Table with\n+                               ...) {\n+  expr <- rlang::enquo(expr)\n+  msg <- tryCatch(\n+    rlang::eval_tidy(expr, rlang::new_data_mask(rlang::env(input = tbl))),\n+    error = function (e) conditionMessage(e)\n+  )\n+  expect_is(msg, \"character\", label = \"dplyr on data.frame did not error\")\n\nReview comment:\n       Good call. I made ARROW-11752 for that. I found 177 instances of `expect_is()` so this is a bigger task I'd rather not take up here.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:12:59.136+0000",
                    "updated": "2021-02-23T22:12:59.136+0000",
                    "started": "2021-02-23T22:12:59.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556585",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581367505\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       I think it would be cleaner and more dplyr-like to define a `compute()` method and put all the code for forcing computation of lazy ops there. Then we could reserve `collect()` as strictly for the `as_data_frame = TRUE` case. Unfortunately `dplyr::compute()` has a required `name` argument that I think might throw a wrench in that?\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       The error happening here is different than what's happening in the examples in ARROW-11705\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:14:47.432+0000",
                    "updated": "2021-02-23T22:14:47.432+0000",
                    "started": "2021-02-23T22:14:47.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556586",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581431268\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       Per https://dplyr.tidyverse.org/reference/compute.html, `compute() stores results in a remote temporary table.` I'm not sure that's appropriate here (though I'm not sure it's not). I would think in our context that would entail something like\r\n   \r\n   ```\r\n   compute.arrow_dplyr_query <- function(x, name, ...) assign(name, collect.arrow_dplyr_query(x, as_data_frame = FALSE))\r\n   ```\r\n   \r\n   which I'm not opposed to having, but I don't think that's a replacement for this functionality.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:19:45.698+0000",
                    "updated": "2021-02-23T22:19:45.698+0000",
                    "started": "2021-02-23T22:19:45.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556592",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581432453\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       Are you sure? It looks the same to me, e.g. \r\n   \r\n   ```\r\n   > mtcars %>% record_batch() %>% mutate(a=1) %>% collect()\r\n   Error: Invalid: All arrays must have the same length\r\n   ```\r\n   \r\n   Logically in the code it makes sense that it would be the same because of how the resulting RecordBatch or Table is assembled.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:22:01.986+0000",
                    "updated": "2021-02-23T22:22:01.986+0000",
                    "started": "2021-02-23T22:22:01.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556594",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581437454\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n+  } else if (!all(nzchar(names(exprs)))) {\n+    # This is either user error or a function that returns a data.frame\n+    # e.g. across() that dplyr::mutate() will autosplice\n+    # TODO(ARROW-16999)\n+    msg <- 'all ... expressions must be named: autosplicing multi-column results not supported in Arrow'\n+    return(abandon_ship(call, .data, msg))\n\nReview comment:\n       I think this warning message will bewilder folks. Can we separate these two cases and give different error messages? Something like this would work\r\n   ```r\r\n   if (length(exprs[[1]]) > 1 && identical(typeof(exprs[[1]][[2]]), \"language\") {\r\n     msg <- \"Autosplicing functions in mutate() are not yet supported in Arrow\"\r\n   } else {\r\n     msg <- \"Unnamed expressions in mutate() are not yet supported in Arrow\"\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:31:22.459+0000",
                    "updated": "2021-02-23T22:31:22.459+0000",
                    "started": "2021-02-23T22:31:22.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556598",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581448403\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n+  } else if (!all(nzchar(names(exprs)))) {\n+    # This is either user error or a function that returns a data.frame\n+    # e.g. across() that dplyr::mutate() will autosplice\n+    # TODO(ARROW-16999)\n+    msg <- 'all ... expressions must be named: autosplicing multi-column results not supported in Arrow'\n+    return(abandon_ship(call, .data, msg))\n\nReview comment:\n       Fair point, I'll try a few things\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:52:46.231+0000",
                    "updated": "2021-02-23T22:52:46.231+0000",
                    "started": "2021-02-23T22:52:46.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556614",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581449337\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       I made ARROW-11754 to consider this\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T22:54:56.752+0000",
                    "updated": "2021-02-23T22:54:56.752+0000",
                    "started": "2021-02-23T22:54:56.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556616",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556621",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581452621\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n+  } else if (!all(nzchar(names(exprs)))) {\n+    # This is either user error or a function that returns a data.frame\n+    # e.g. across() that dplyr::mutate() will autosplice\n+    # TODO(ARROW-16999)\n+    msg <- 'all ... expressions must be named: autosplicing multi-column results not supported in Arrow'\n+    return(abandon_ship(call, .data, msg))\n\nReview comment:\n       FWIW, I thought the same thing but couldn't come up with a better alternative \u2014 splitting it up if possible and not too much extra work would be really awesome\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T23:01:31.837+0000",
                    "updated": "2021-02-23T23:01:31.837+0000",
                    "started": "2021-02-23T23:01:31.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556621",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581458393\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -423,26 +482,115 @@ ungroup.arrow_dplyr_query <- function(x, ...) {\n }\n ungroup.Dataset <- ungroup.ArrowTabular <- force\n \n-mutate.arrow_dplyr_query <- function(.data, ...) {\n+mutate.arrow_dplyr_query <- function(.data,\n+                                     ...,\n+                                     .keep = c(\"all\", \"used\", \"unused\", \"none\"),\n+                                     .before = NULL,\n+                                     .after = NULL) {\n+  call <- match.call()\n+  exprs <- quos(...)\n+  if (length(exprs) == 0) {\n+    # Nothing to do\n+    return(.data)\n+  }\n+\n   .data <- arrow_dplyr_query(.data)\n   if (query_on_dataset(.data)) {\n     not_implemented_for_dataset(\"mutate()\")\n   }\n-  # TODO: see if we can defer evaluating the expressions and not collect here.\n-  # It's different from filters (as currently implemented) because the basic\n-  # vector transformation functions aren't yet implemented in Arrow C++.\n-  dplyr::mutate(dplyr::collect(.data), ...)\n+\n+  .keep <- match.arg(.keep)\n+  .before <- enquo(.before)\n+  .after <- enquo(.after)\n+  # Restrict the cases we support for now\n+  if (!quo_is_null(.before) || !quo_is_null(.after)) {\n+    # TODO(ARROW-11701)\n+    return(abandon_ship(call, .data, '.before and .after arguments are not supported in Arrow'))\n+  } else if (length(group_vars(.data)) > 0) {\n+    # mutate() on a grouped dataset does calculations within groups\n+    # This doesn't matter on scalar ops (arithmetic etc.) but it does\n+    # for things with aggregations (e.g. subtracting the mean)\n+    return(abandon_ship(call, .data, 'mutate() on grouped data not supported in Arrow'))\n+  } else if (!all(nzchar(names(exprs)))) {\n+    # This is either user error or a function that returns a data.frame\n+    # e.g. across() that dplyr::mutate() will autosplice\n+    # TODO(ARROW-16999)\n+    msg <- 'all ... expressions must be named: autosplicing multi-column results not supported in Arrow'\n+    return(abandon_ship(call, .data, msg))\n\nReview comment:\n       I could also let it go through; dplyr::mutate() will create names by deparsing the expressing and maybe that can work for us too, and dplyr::across() will fail and presumably say \"function not implemented, pulling data into R\". And if/when across)( is implemented, the Table/RecordBatch$create() methods actually do autosplicing. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T23:15:08.146+0000",
                    "updated": "2021-02-23T23:15:08.146+0000",
                    "started": "2021-02-23T23:15:08.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556627",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581514795\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       Oh, hmm, I was running some tests and left off the `collect()`, and in that case the error happens in `get_field_names()`:\r\n   ```r\r\n   > mtcars %>% record_batch() %>% mutate(a=1)\r\n   Called from: mutate.ArrowTabular(., a = 1)\r\n   \r\n   > traceback()\r\n   7: .$field_name %||% .$args$field_name\r\n   6: .$field_name %||% .$args$field_name %||% \"\"\r\n   5: .f(.x[[i]], ...)\r\n   4: map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \r\n          \"\") at dplyr.R#87\r\n   3: get_field_names(x) at dplyr.R#54\r\n   2: print.arrow_dplyr_query(x)\r\n   1: (function (x, ...) \r\n      UseMethod(\"print\"))(x)\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       Oh, hmm, I was running some tests and left off the `collect()`, and in that case the error happens in `get_field_names()`:\r\n   ```r\r\n   > mtcars %>% record_batch() %>% mutate(a=1)\r\n   Error in .$field_name : $ operator is invalid for atomic vectors\r\n   \r\n   > traceback()\r\n   7: .$field_name %||% .$args$field_name\r\n   6: .$field_name %||% .$args$field_name %||% \"\"\r\n   5: .f(.x[[i]], ...)\r\n   4: map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \r\n          \"\") at dplyr.R#87\r\n   3: get_field_names(x) at dplyr.R#54\r\n   2: print.arrow_dplyr_query(x)\r\n   1: (function (x, ...) \r\n      UseMethod(\"print\"))(x)\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       I guess that's a separate issue\u2014which we should also try to fix\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       Ah, ok I was running some tests and left off the `collect()`, and in that case the error happens in `get_field_names()` which is called by `print.arrow_dplyr_query()`:\r\n   ```r\r\n   > mtcars %>% record_batch() %>% mutate(a=1)\r\n   Error in .$field_name : $ operator is invalid for atomic vectors\r\n   \r\n   > traceback()\r\n   7: .$field_name %||% .$args$field_name\r\n   6: .$field_name %||% .$args$field_name %||% \"\"\r\n   5: .f(.x[[i]], ...)\r\n   4: map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \r\n          \"\") at dplyr.R#87\r\n   3: get_field_names(x) at dplyr.R#54\r\n   2: print.arrow_dplyr_query(x)\r\n   1: (function (x, ...) \r\n      UseMethod(\"print\"))(x)\r\n   ```\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       But also per that dplyr docs page:\r\n   >`collect()` retrieves data into a local tibble\r\n   \r\n   I think repurposing `collect()` with `as_data_frame = FALSE` to force computation without actually returning a tibble/data frame is kinda sus (as the kids say). Despite the database-centric framing of `compute()` in the dplyr docs, I think `compute()` is really the appropriate verb to describe this action.\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -73,6 +80,22 @@ print.arrow_dplyr_query <- function(x, ...) {\n   invisible(x)\n }\n \n+get_field_names <- function(selected_cols) {\n+  if (inherits(selected_cols, \"arrow_dplyr_query\")) {\n+    selected_cols <- selected_cols$selected_columns\n+  }\n+  map_chr(selected_cols, ~.$field_name %||% .$args$field_name %||% \"\")\n\nReview comment:\n       See [my other comment](https://github.com/apache/arrow/pull/9521/files#r581514795) in which an error happens on this line\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-24T01:33:33.653+0000",
                    "updated": "2021-02-24T01:33:33.653+0000",
                    "started": "2021-02-24T01:33:33.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556656",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581537939\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       I'm going to open a dplyr PR suggesting that the `compute()` generic should lose its required `name` argument. That `name` argument is a vestige from the old days before dbplyr was broken out as a separate package, and it does nothing AFAICT because every dplyr SQL backend package would use `dbplyr::compute.tbl_sql()` (which redefines the `name` argument) or would define its own `compute()` method.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-24T01:42:08.422+0000",
                    "updated": "2021-02-24T01:42:08.422+0000",
                    "started": "2021-02-24T01:42:08.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556671",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581572604\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       Oh, turns out Hadley already removed that stuff from the dplyr docs, and made the explanations more in-line with the generic behavior https://github.com/tidyverse/dplyr/commit/5d47c53d23ad20f9e78ae414ebc13aa55779b550#diff-097e83b67afe19875988f4550478dd52c467eb9becff25fe0521e5b320360c03\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-24T02:32:29.096+0000",
                    "updated": "2021-02-24T02:32:29.096+0000",
                    "started": "2021-02-24T02:32:29.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556706",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/556718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r581582449\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -309,8 +344,27 @@ collect.arrow_dplyr_query <- function(x, as_data_frame = TRUE, ...) {\n     # See dataset.R for Dataset and Scanner(Builder) classes\n\nReview comment:\n       https://github.com/tidyverse/dplyr/pull/5783\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-24T03:01:25.369+0000",
                    "updated": "2021-02-24T03:01:25.369+0000",
                    "started": "2021-02-24T03:01:25.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556718",
                    "issueId": "13359172"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/worklog/557091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9521:\nURL: https://github.com/apache/arrow/pull/9521#discussion_r582099472\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr-mutate.R\n##########\n@@ -0,0 +1,311 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(dplyr)\n+library(stringr)\n+\n+tbl <- example_data\n+# Add some better string data\n+tbl$verses <- verses[[1]]\n+# c(\" a \", \"  b  \", \"   c   \", ...) increasing padding\n+# nchar =   3  5  7  9 11 13 15 17 19 21\n+tbl$padded_strings <- stringr::str_pad(letters[1:10], width = 2*(1:10)+1, side = \"both\")\n+\n+test_that(\"mutate() is lazy\", {\n+  expect_is(\n+    tbl %>% record_batch() %>% mutate(int = int + 6L),\n+    \"arrow_dplyr_query\"\n+  )\n+})\n+\n+test_that(\"basic mutate\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      mutate(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"transmute\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, chr) %>%\n+      filter(int > 5) %>%\n+      transmute(int = int + 6L) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate and refer to previous mutants\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with .data pronoun\", {\n+  expect_dplyr_equal(\n+    input %>%\n+      select(int, padded_strings) %>%\n+      mutate(\n+        line_lengths = nchar(padded_strings),\n+        longer = .data$line_lengths * 10\n+      ) %>%\n+      filter(line_lengths > 15) %>%\n+      collect(),\n+    tbl\n+  )\n+})\n+\n+test_that(\"mutate with single value for recycling\", {\n+  skip(\"Not implemented (ARROW-11705\")\n\nReview comment:\n       Agreed\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-24T16:19:01.565+0000",
                    "updated": "2021-02-24T16:19:01.565+0000",
                    "started": "2021-02-24T16:19:01.565+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "557091",
                    "issueId": "13359172"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 25800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@b1477a7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b228d46[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c7c1450[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@63dbe024[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5958d445[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@125fcd07[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e6d8588[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@428b80a1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5dee9e49[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@31355706[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23e6c56d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3df6c738[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 25800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 25 18:31:20 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-25T18:31:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11683/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-02-18T01:46:50.000+0000",
        "updated": "2021-02-26T18:58:29.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 25800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Support dplyr::mutate()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359172/comment/17291131",
                    "id": "17291131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 9521\n[https://github.com/apache/arrow/pull/9521]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-02-25T18:31:20.806+0000",
                    "updated": "2021-02-25T18:31:20.806+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nrsw:",
        "customfield_12314139": null
    }
}