{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13394841",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841",
    "key": "ARROW-13612",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12620984",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12620984",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13393306",
                    "key": "ARROW-13541",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393306",
                    "fields": {
                        "summary": "[C++][Python] Implement ExtensionScalar",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13612/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 33,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok opened a new pull request, #13454:\nURL: https://github.com/apache/arrow/pull/13454\n\n   This is to resolve [ARROW-13612](https://issues.apache.org/jira/browse/ARROW-13612).\n\n\n",
                    "created": "2022-06-28T16:37:46.318+0000",
                    "updated": "2022-06-28T16:37:46.318+0000",
                    "started": "2022-06-28T16:37:46.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785681",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#issuecomment-1168961277\n\n   @wjones127 \n\n\n",
                    "created": "2022-06-28T16:38:04.708+0000",
                    "updated": "2022-06-28T16:38:04.708+0000",
                    "started": "2022-06-28T16:38:04.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785682",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#issuecomment-1168996131\n\n   https://issues.apache.org/jira/browse/ARROW-13612\n\n\n",
                    "created": "2022-06-28T17:05:24.903+0000",
                    "updated": "2022-06-28T17:05:24.903+0000",
                    "started": "2022-06-28T17:05:24.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785689",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r908768502\n\n\n##########\ndocs/source/python/extending_types.rst:\n##########\n@@ -286,6 +286,36 @@ are available).\n The same ``__arrow_ext_class__`` specialization can be used with custom types defined\n by subclassing :class:`ExtensionType`.\n \n+Custom scalar conversion\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want scalars of your custom extension type to convert to a custom type when\n+:meth:`ExtensionScalar.as_py()` is called, you can override the :meth:`ExtensionType.scalar_as_py()`\n+method. For example, if we wanted the above example 3D point type to return a tuple instead\n+of a list, we would implement::\n\nReview Comment:\n   ```suggestion\r\n   method. For example, if we wanted the above example 3D point type to return a custom\r\n   3D point class instead of a list, we would implement::\r\n   ```\n\n\n\n",
                    "created": "2022-06-28T17:33:55.492+0000",
                    "updated": "2022-06-28T17:33:55.492+0000",
                    "started": "2022-06-28T17:33:55.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785695",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r908769271\n\n\n##########\ndocs/source/python/extending_types.rst:\n##########\n@@ -286,6 +286,36 @@ are available).\n The same ``__arrow_ext_class__`` specialization can be used with custom types defined\n by subclassing :class:`ExtensionType`.\n \n+Custom scalar conversion\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want scalars of your custom extension type to convert to a custom type when\n+:meth:`ExtensionScalar.as_py()` is called, you can override the :meth:`ExtensionType.scalar_as_py()`\n+method. For example, if we wanted the above example 3D point type to return a tuple instead\n+of a list, we would implement::\n+\n+    Point3D = namedtuple(\"Point3D\", [\"x\", \"y\", \"z\"])\n+\n+    class Point3DType(pa.PyExtensionType):\n+        def __init__(self):\n+            pa.PyExtensionType.__init__(self, pa.list_(pa.float32(), 3))\n+\n+        def __reduce__(self):\n+            return Point3DType, ()\n+\n+        def scalar_as_py(self, scalar):\n+            if scalar is None:\n+                return None\n+            else:\n+                return Point3D(*scalar.as_py())\n+\n+Arrays built using this extension scalar type now have the expected scalar behaviour::\n\nReview Comment:\n   ```suggestion\r\n   Arrays built using this extension type now provide scalars that convert to our ``Point3D`` class::\r\n   ```\n\n\n\n",
                    "created": "2022-06-28T17:34:55.617+0000",
                    "updated": "2022-06-28T17:34:55.617+0000",
                    "started": "2022-06-28T17:34:55.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785697",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r908770161\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,13 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to. Implementations should handle the case\n+        where the scalar argument is None.\"\"\"\n\nReview Comment:\n   ```suggestion\r\n           where the scalar argument is ``None``.\"\"\"\r\n   ```\n\n\n\n",
                    "created": "2022-06-28T17:36:00.749+0000",
                    "updated": "2022-06-28T17:36:00.749+0000",
                    "started": "2022-06-28T17:36:00.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785699",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#issuecomment-1169045373\n\n   @jorisvandenbossche you're probably best suited to review this/\n\n\n",
                    "created": "2022-06-28T17:55:52.151+0000",
                    "updated": "2022-06-28T17:55:52.151+0000",
                    "started": "2022-06-28T17:55:52.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785705",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r908876758\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,13 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to. Implementations should handle the case\n+        where the scalar argument is ``None``.\"\"\"\n\nReview Comment:\n   ```suggestion\r\n           where the scalar argument is ``None``.\r\n           \r\n           Parameters\r\n           ----------\r\n           scalar : pyarrow.ExtensionScalar or None\r\n             The scalar to be converted to a Python object.\r\n           \"\"\"\r\n   ```\n\n\n\n",
                    "created": "2022-06-28T19:42:31.980+0000",
                    "updated": "2022-06-28T19:42:31.980+0000",
                    "started": "2022-06-28T19:42:31.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785726",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/785891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chaubold commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r909411136\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,19 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to. Implementations should handle the case\n+        where the scalar argument is ``None``.\n\nReview Comment:\n   I am curious about your intention to leave the `None` handling to the subclasses.\r\n   \r\n   Would you like to allow returning custom values (along the lines of `numpy.NaN`) in the case that the value is `None`? Or should `None` always stay `None` because Arrow actually is more explicit with its missing value handling and is able to differentiate between e.g. `None` and `NaN` for double columns. If the latter is preferred, then I'd suggest to move the `None` handling to `Scalar.as_py()` and only invoke `scalar_as_py` for existing values.\n\n\n\n",
                    "created": "2022-06-29T09:30:34.952+0000",
                    "updated": "2022-06-29T09:30:34.952+0000",
                    "started": "2022-06-29T09:30:34.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785891",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/786178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r910325599\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,19 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to. Implementations should handle the case\n+        where the scalar argument is ``None``.\n\nReview Comment:\n   I think for numpy conversion, we have more efficient methods to do that conversion (to arrays). I can't think of any other case where someone might want to customize the null handling of `as_py()`, so maybe you are right that we should only invoke `scalar_as_py` for existing values.\r\n   \r\n   @jorisvandenbossche Any thoughts on that?\n\n\n\n",
                    "created": "2022-06-29T19:28:56.963+0000",
                    "updated": "2022-06-29T19:28:56.963+0000",
                    "started": "2022-06-29T19:28:56.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786178",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/787905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r913924665\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,18 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+        \"\"\"\n+        return scalar.as_py() if scalar is not None else None\n\nReview Comment:\n   This should no longer be able to be None right?\r\n   \r\n   Also is the type ExtensionScalar? It seems we pass the underlying value right?\n\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -261,16 +297,19 @@ def test_ext_scalar_from_array():\n         assert s.type == ty1\n         if val is not None:\n             assert s.value == pa.scalar(val, storage.type)\n+            assert s.as_py() == UUID(bytes=val)\n         else:\n             assert s.value is None\n-        assert s.as_py() == val\n \n     scalars_b = list(b)\n     assert len(scalars_b) == 4\n \n     for sa, sb in zip(scalars_a, scalars_b):\n         assert sa.is_valid == sb.is_valid\n-        assert sa.as_py() == sb.as_py()\n+        if sa.as_py() is None:\n+            assert sa.as_py() == sb.as_py()\n+        else:\n+            assert sa.as_py().bytes == sb.as_py()\n         assert sa != sb\n\nReview Comment:\n   Is there still a test of converting a type that uses the default `scalar_as_py`?\n\n\n\n##########\ndocs/source/python/extending_types.rst:\n##########\n@@ -286,6 +286,33 @@ are available).\n The same ``__arrow_ext_class__`` specialization can be used with custom types defined\n by subclassing :class:`ExtensionType`.\n \n+Custom scalar conversion\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want scalars of your custom extension type to convert to a custom type when\n+:meth:`ExtensionScalar.as_py()` is called, you can override the :meth:`ExtensionType.scalar_as_py()`\n+method. For example, if we wanted the above example 3D point type to return a custom\n+3D point class instead of a list, we would implement::\n+\n+    Point3D = namedtuple(\"Point3D\", [\"x\", \"y\", \"z\"])\n+\n+    class Point3DType(pa.PyExtensionType):\n+        def __init__(self):\n+            pa.PyExtensionType.__init__(self, pa.list_(pa.float32(), 3))\n+\n+        def __reduce__(self):\n+            return Point3DType, ()\n+\n+        def scalar_as_py(self, scalar):\n\nReview Comment:\n   ```suggestion\r\n           def scalar_as_py(self, scalar: ListScalar) -> Point3D:\r\n   ```\r\n   maybe for clarity about types?\n\n\n\n",
                    "created": "2022-07-05T15:25:21.468+0000",
                    "updated": "2022-07-05T15:25:21.468+0000",
                    "started": "2022-07-05T15:25:21.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787905",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/787963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r914041248\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,18 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+        \"\"\"\n+        return scalar.as_py() if scalar is not None else None\n\nReview Comment:\n   > This should no longer be able to be None right?\r\n   >\r\n   > Also is the type ExtensionScalar? It seems we pass the underlying value right?\r\n   \r\n   Scalar shouldn't be None, but the return value could I think. Changed, please see if it makes sense.\n\n\n\n",
                    "created": "2022-07-05T17:39:37.287+0000",
                    "updated": "2022-07-05T17:39:37.287+0000",
                    "started": "2022-07-05T17:39:37.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787963",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/787964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r914041992\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -261,16 +297,19 @@ def test_ext_scalar_from_array():\n         assert s.type == ty1\n         if val is not None:\n             assert s.value == pa.scalar(val, storage.type)\n+            assert s.as_py() == UUID(bytes=val)\n         else:\n             assert s.value is None\n-        assert s.as_py() == val\n \n     scalars_b = list(b)\n     assert len(scalars_b) == 4\n \n     for sa, sb in zip(scalars_a, scalars_b):\n         assert sa.is_valid == sb.is_valid\n-        assert sa.as_py() == sb.as_py()\n+        if sa.as_py() is None:\n+            assert sa.as_py() == sb.as_py()\n+        else:\n+            assert sa.as_py().bytes == sb.as_py()\n         assert sa != sb\n\nReview Comment:\n   Added one back and introduced `UuidType2()` without `scalar_as_py`.\n\n\n\n",
                    "created": "2022-07-05T17:40:37.597+0000",
                    "updated": "2022-07-05T17:40:37.597+0000",
                    "started": "2022-07-05T17:40:37.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787964",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/787965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#issuecomment-1175327332\n\n   Thanks for the review @lidavidm!\n\n\n",
                    "created": "2022-07-05T17:41:10.314+0000",
                    "updated": "2022-07-05T17:41:10.314+0000",
                    "started": "2022-07-05T17:41:10.313+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787965",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r914141335\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,22 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+\n+        Returns\n+        -------\n+        Scalar value as a native Python object.\n+        \"\"\"\n+        return scalar.as_py()\n\nReview Comment:\n   I was talking about the docstring - this is always passed a not-None `pyarrow.Scalar` subclass corresponding to the extension type, right? \n\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,18 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+        \"\"\"\n+        return scalar.as_py() if scalar is not None else None\n\nReview Comment:\n   What I meant was, this method is always passed the Scalar of the storage type, right? Not of the Extension type? \n\n\n\n",
                    "created": "2022-07-05T19:33:30.871+0000",
                    "updated": "2022-07-05T19:33:30.871+0000",
                    "started": "2022-07-05T19:33:30.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788030",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r914942510\n\n\n##########\ndocs/source/python/extending_types.rst:\n##########\n@@ -286,6 +286,33 @@ are available).\n The same ``__arrow_ext_class__`` specialization can be used with custom types defined\n by subclassing :class:`ExtensionType`.\n \n+Custom scalar conversion\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want scalars of your custom extension type to convert to a custom type when\n+:meth:`ExtensionScalar.as_py()` is called, you can override the :meth:`ExtensionType.scalar_as_py()`\n+method. For example, if we wanted the above example 3D point type to return a custom\n+3D point class instead of a list, we would implement::\n+\n+    Point3D = namedtuple(\"Point3D\", [\"x\", \"y\", \"z\"])\n+\n+    class Point3DType(pa.PyExtensionType):\n+        def __init__(self):\n+            pa.PyExtensionType.__init__(self, pa.list_(pa.float32(), 3))\n+\n+        def __reduce__(self):\n+            return Point3DType, ()\n+\n+        def scalar_as_py(self, scalar: ListScalar) -> Point3D:\n+            return Point3D(*scalar.as_py())\n+\n+Arrays built using this extension type now provide scalars that convert to our ``Point3D`` class::\n+\n+    >>> storage = pa.array([[1, 2, 3], [4, 5, 6]], pa.list_(pa.float32(), 3))\n+    >>> arr = pa.ExtensionArray.from_storage(Point3DType(), storage)\n+    >>> arr[0].as_py()\n+    Point3D(x=1.0, y=2.0, z=3.0)\n+\n\nReview Comment:\n   Maybe it might be compelling to also show that `as_py_list()` returns `List[Point3D]` too.\n\n\n\n",
                    "created": "2022-07-06T14:55:58.516+0000",
                    "updated": "2022-07-06T14:55:58.516+0000",
                    "started": "2022-07-06T14:55:58.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788294",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r915044913\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,22 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+\n+        Returns\n+        -------\n+        Scalar value as a native Python object.\n+        \"\"\"\n+        return scalar.as_py()\n\nReview Comment:\n   Oh I see, sorry. Is this better?\n\n\n\n##########\ndocs/source/python/extending_types.rst:\n##########\n@@ -286,6 +286,33 @@ are available).\n The same ``__arrow_ext_class__`` specialization can be used with custom types defined\n by subclassing :class:`ExtensionType`.\n \n+Custom scalar conversion\n+~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want scalars of your custom extension type to convert to a custom type when\n+:meth:`ExtensionScalar.as_py()` is called, you can override the :meth:`ExtensionType.scalar_as_py()`\n+method. For example, if we wanted the above example 3D point type to return a custom\n+3D point class instead of a list, we would implement::\n+\n+    Point3D = namedtuple(\"Point3D\", [\"x\", \"y\", \"z\"])\n+\n+    class Point3DType(pa.PyExtensionType):\n+        def __init__(self):\n+            pa.PyExtensionType.__init__(self, pa.list_(pa.float32(), 3))\n+\n+        def __reduce__(self):\n+            return Point3DType, ()\n+\n+        def scalar_as_py(self, scalar: ListScalar) -> Point3D:\n+            return Point3D(*scalar.as_py())\n+\n+Arrays built using this extension type now provide scalars that convert to our ``Point3D`` class::\n+\n+    >>> storage = pa.array([[1, 2, 3], [4, 5, 6]], pa.list_(pa.float32(), 3))\n+    >>> arr = pa.ExtensionArray.from_storage(Point3DType(), storage)\n+    >>> arr[0].as_py()\n+    Point3D(x=1.0, y=2.0, z=3.0)\n+\n\nReview Comment:\n   Added.\n\n\n\n",
                    "created": "2022-07-06T16:33:52.564+0000",
                    "updated": "2022-07-06T16:33:52.564+0000",
                    "started": "2022-07-06T16:33:52.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788328",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r915044913\n\n\n##########\npython/pyarrow/types.pxi:\n##########\n@@ -902,6 +902,22 @@ cdef class ExtensionType(BaseExtensionType):\n         \"\"\"\n         return ExtensionArray\n \n+    def scalar_as_py(self, scalar):\n+        \"\"\"Convert scalar to a Python type.\n+\n+        This method can be overridden in subclasses to customize what type\n+        scalars are converted to.\n+\n+        Parameters\n+        ----------\n+        scalar : pyarrow.ExtensionScalar\n+          The scalar to be converted to a Python object.\n+\n+        Returns\n+        -------\n+        Scalar value as a native Python object.\n+        \"\"\"\n+        return scalar.as_py()\n\nReview Comment:\n   Oh I see, sorry. Is [this](https://github.com/apache/arrow/pull/13454/files#diff-9f6b1034bb57bace094700a1b4748c88e40c9f98aec94a959ca466b5cbce0401) better?\n\n\n\n",
                    "created": "2022-07-06T16:34:47.720+0000",
                    "updated": "2022-07-06T16:34:47.720+0000",
                    "started": "2022-07-06T16:34:47.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788329",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on code in PR #13454:\nURL: https://github.com/apache/arrow/pull/13454#discussion_r915076964\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -41,6 +42,17 @@ def __init__(self):\n     def __reduce__(self):\n         return UuidType, ()\n \n+    def scalar_as_py(self, scalar):\n+        return UUID(bytes=scalar.as_py())\n+\n+class UuidType2(pa.PyExtensionType):\n\nReview Comment:\n   ```suggestion\r\n   \r\n   class UuidType2(pa.PyExtensionType):\r\n   ```\n\n\n\n",
                    "created": "2022-07-06T17:10:51.659+0000",
                    "updated": "2022-07-06T17:10:51.659+0000",
                    "started": "2022-07-06T17:10:51.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788340",
                    "issueId": "13394841"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/worklog/788374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm merged PR #13454:\nURL: https://github.com/apache/arrow/pull/13454\n\n\n",
                    "created": "2022-07-06T19:26:12.908+0000",
                    "updated": "2022-07-06T19:26:12.908+0000",
                    "started": "2022-07-06T19:26:12.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788374",
                    "issueId": "13394841"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6377f0f4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48a5cf26[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ce2e033[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@a58ce76[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44c627da[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@67e73ea[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7de6f86e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3101b2da[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@448cbbd7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3118718f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bf7da4a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@475c308c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 06 19:26:14 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-06T19:26:14.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13612/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-08-12T07:41:25.000+0000",
        "updated": "2022-07-11T13:26:50.000+0000",
        "timeoriginalestimate": null,
        "description": "As a follow-up on ARROW-13541 (https://github.com/apache/arrow/pull/10904#discussion_r686609844), we could have a mechanism that the ExtensionType can control the behaviour of {{ExtensionScalar.as_py()}} method.\r\n\r\nSimilarly as we have {{\\_\\_arrow_ext_class\\_\\_}} for using an ExtensionArray subclass for the array object, we could indeed have a way to specify a custom scalar wrapper.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Allow specifying a custom type for converting ExtensionScalar to python object",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/comment/17554585",
                    "id": "17554585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Also: the ExtensionScalar Python class is not yet documented.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-06-15T13:09:21.610+0000",
                    "updated": "2022-06-15T13:09:21.610+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394841/comment/17563407",
                    "id": "17563407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13454\n[https://github.com/apache/arrow/pull/13454]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-07-06T19:26:14.828+0000",
                    "updated": "2022-07-06T19:26:14.828+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tu60:",
        "customfield_12314139": null
    }
}