{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13290878",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878",
    "key": "ARROW-8059",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8059/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 37,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/404809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T15:54:32.544+0000",
                    "updated": "2020-03-17T15:54:32.544+0000",
                    "started": "2020-03-17T15:54:32.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404809",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/404827",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#issuecomment-600153049\n \n \n   https://issues.apache.org/jira/browse/ARROW-8059\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T16:02:46.779+0000",
                    "updated": "2020-03-17T16:02:46.779+0000",
                    "started": "2020-03-17T16:02:46.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404827",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/404864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r393847866\n \n \n\n ##########\n File path: python/pyarrow/_s3fs.pyx\n ##########\n @@ -91,85 +97,40 @@ cdef class S3Options:\n                 '`access_key` is not set.'\n             )\n         elif access_key is not None or secret_key is not None:\n-            self.options = CS3Options.FromAccessKey(\n+            options = CS3Options.FromAccessKey(\n                 tobytes(access_key),\n                 tobytes(secret_key)\n             )\n         else:\n-            self.options = CS3Options.Defaults()\n+            options = CS3Options.Defaults()\n \n         if region is not None:\n-            self.region = region\n+            options.region = tobytes(region)\n         if scheme is not None:\n-            self.scheme = scheme\n+            options.scheme = tobytes(scheme)\n         if endpoint_override is not None:\n-            self.endpoint_override = endpoint_override\n+            options.endpoint_override = tobytes(endpoint_override)\n         if background_writes is not None:\n-            self.background_writes = background_writes\n-\n-    cdef inline CS3Options unwrap(self) nogil:\n-        return self.options\n-\n-    @property\n-    def region(self):\n-        \"\"\"AWS region to connect to.\"\"\"\n-        return frombytes(self.options.region)\n-\n-    @region.setter\n-    def region(self, value):\n-        self.options.region = tobytes(value)\n-\n-    @property\n-    def scheme(self):\n-        \"\"\"S3 connection transport scheme.\"\"\"\n-        return frombytes(self.options.scheme)\n-\n-    @scheme.setter\n-    def scheme(self, value):\n-        self.options.scheme = tobytes(value)\n-\n-    @property\n-    def endpoint_override(self):\n-        \"\"\"Override region with a connect string such as localhost:9000\"\"\"\n-        return frombytes(self.options.endpoint_override)\n-\n-    @endpoint_override.setter\n-    def endpoint_override(self, value):\n-        self.options.endpoint_override = tobytes(value)\n-\n-    @property\n-    def background_writes(self):\n-        \"\"\"OutputStream writes will be issued in the background\"\"\"\n-        return self.options.background_writes\n-\n-    @background_writes.setter\n-    def background_writes(self, bint value):\n-        self.options.background_writes = value\n+            options.background_writes = background_writes\n \n-\n-cdef class S3FileSystem(FileSystem):\n-    \"\"\"S3-backed FileSystem implementation\n-\n-    Note: S3 buckets are special and the operations available on them may be\n-    limited or more expensive than desired.\n-\n-    Parameters\n-    ----------\n-    options: S3Options, default None\n-        Options for connecting to S3. If None is passed then attempts to\n-        initialize the connection from AWS environment variables.\n-    \"\"\"\n-\n-    cdef:\n-        CS3FileSystem* s3fs\n-\n-    def __init__(self, S3Options options=None):\n-        cdef shared_ptr[CS3FileSystem] wrapped\n-        options = options or S3Options()\n         with nogil:\n-            wrapped = GetResultValue(CS3FileSystem.Make(options.unwrap()))\n+            wrapped = GetResultValue(CS3FileSystem.Make(options))\n+\n         self.init(<shared_ptr[CFileSystem]> wrapped)\n \n     cdef init(self, const shared_ptr[CFileSystem]& wrapped):\n         FileSystem.init(self, wrapped)\n         self.s3fs = <CS3FileSystem*> wrapped.get()\n+\n+    def __reduce__(self):\n+        cdef CS3Options opts = self.s3fs.options()\n+        return (\n+            S3FileSystem, (\n+                None,  # frombytes(opts.access_key),\n \n Review comment:\n   @pitrou I'm not sure how to retrieve the credentials. Pickling the credentials could also cause security issues, would be an explicit notice enough?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-17T17:27:02.930+0000",
                    "updated": "2020-03-17T17:27:02.930+0000",
                    "started": "2020-03-17T17:27:02.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "404864",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396648179\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/hdfs.cc\n ##########\n @@ -300,11 +314,38 @@ Result<HdfsOptions> HdfsOptions::FromUri(const Uri& uri) {\n     }\n     options.ConfigureHdfsReplication(reps);\n   }\n+\n+  // configure buffer_size\n+  it = options_map.find(\"buffer_size\");\n+  if (it != options_map.end()) {\n+    const auto& v = it->second;\n+    ::arrow::internal::StringConverter<Int32Type> converter;\n+    int32_t reps;\n+    if (!converter(v.data(), v.size(), &reps)) {\n+      return Status::Invalid(\"Invalid value for option 'buffer_size': '\", v, \"'\");\n+    }\n+    options.ConfigureHdfsBufferSize(reps);\n+  }\n+\n+  // configure default_block_size\n+  it = options_map.find(\"default_block_size\");\n+  if (it != options_map.end()) {\n+    const auto& v = it->second;\n+    ::arrow::internal::StringConverter<Int64Type> converter;\n+    int64_t reps;\n+    if (!converter(v.data(), v.size(), &reps)) {\n+      return Status::Invalid(\"Invalid value for option 'default_block_size': '\", v, \"'\");\n+    }\n+    options.ConfigureHdfsBlockSize(reps);\n \n Review comment:\n   ```suggestion\r\n       int64_t block_size;\r\n       if (!converter(v.data(), v.size(), &block_size)) {\r\n         return Status::Invalid(\"Invalid value for option 'default_block_size': '\", v, \"'\");\r\n       }\r\n       options.ConfigureHdfsBlockSize(block_size);\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.537+0000",
                    "updated": "2020-03-23T18:19:10.537+0000",
                    "started": "2020-03-23T18:19:10.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408117",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396650312\n \n \n\n ##########\n File path: python/pyarrow/_fs.pyx\n ##########\n @@ -269,6 +269,15 @@ cdef class FileSystem:\n     cdef inline shared_ptr[CFileSystem] unwrap(self) nogil:\n         return self.wrapped\n \n+    def equals(self, FileSystem other):\n+        return self.fs.Equals(other.unwrap())\n+\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n+            return NotImplemented\n \n Review comment:\n   I think this check is unnecessary; C++ should fail to compile if a subclass of CFileSystem did not implement Equals()\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.540+0000",
                    "updated": "2020-03-23T18:19:10.540+0000",
                    "started": "2020-03-23T18:19:10.539+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408118",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396647773\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/hdfs.cc\n ##########\n @@ -300,11 +314,38 @@ Result<HdfsOptions> HdfsOptions::FromUri(const Uri& uri) {\n     }\n     options.ConfigureHdfsReplication(reps);\n   }\n+\n+  // configure buffer_size\n+  it = options_map.find(\"buffer_size\");\n+  if (it != options_map.end()) {\n+    const auto& v = it->second;\n+    ::arrow::internal::StringConverter<Int32Type> converter;\n+    int32_t reps;\n+    if (!converter(v.data(), v.size(), &reps)) {\n+      return Status::Invalid(\"Invalid value for option 'buffer_size': '\", v, \"'\");\n+    }\n+    options.ConfigureHdfsBufferSize(reps);\n+  }\n \n Review comment:\n   ```suggestion\r\n       int32_t buffer_size;\r\n       if (!converter(v.data(), v.size(), &buffer_size)) {\r\n         return Status::Invalid(\"Invalid value for option 'buffer_size': '\", v, \"'\");\r\n       }\r\n       options.ConfigureHdfsBufferSize(buffer_size);\r\n     }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.587+0000",
                    "updated": "2020-03-23T18:19:10.587+0000",
                    "started": "2020-03-23T18:19:10.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408119",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396658307\n \n \n\n ##########\n File path: python/pyarrow/tests/test_fs.py\n ##########\n @@ -195,6 +193,36 @@ def test_cannot_instantiate_base_filesystem():\n         FileSystem()\n \n \n+def test_filesystem_equals():\n+    fs0 = LocalFileSystem()\n+    fs1 = LocalFileSystem()\n+    fs2 = _MockFileSystem()\n+\n+    assert fs0.equals(fs0)\n+    assert fs0.equals(fs1)\n+    with pytest.raises(TypeError):\n+        fs0.equals('string')\n+    assert fs0 == fs0 == fs1\n+    assert fs0 != 4\n+\n+    assert fs2 == fs2\n+    assert fs2 != _MockFileSystem()\n+\n+    assert SubTreeFileSystem('/base', fs0) == SubTreeFileSystem('/base', fs0)\n+    assert SubTreeFileSystem('/base', fs0) != SubTreeFileSystem('/base', fs2)\n+    assert SubTreeFileSystem('/base', fs0) != SubTreeFileSystem('/other', fs0)\n+\n+\n+def test_filesystem_pickling(fs):\n+    serialized = pickle.dumps(fs)\n+    restored = pickle.loads(serialized)\n+    assert isinstance(restored, FileSystem)\n+    if isinstance(fs, _MockFileSystem):\n+        assert not restored.equals(fs)\n \n Review comment:\n   Please add a comment explaining this exception\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.701+0000",
                    "updated": "2020-03-23T18:19:10.701+0000",
                    "started": "2020-03-23T18:19:10.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408120",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396650623\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/filesystem.h\n ##########\n @@ -168,6 +168,10 @@ class ARROW_EXPORT FileSystem {\n   /// may allow normalizing irregular path forms (such as Windows local paths).\n   virtual Result<std::string> NormalizePath(std::string path);\n \n+  virtual bool Equals(const FileSystem& other) const { return this == &other; }\n \n Review comment:\n   ```suggestion\r\n     virtual bool Equals(const FileSystem& other) const = 0;\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.704+0000",
                    "updated": "2020-03-23T18:19:10.704+0000",
                    "started": "2020-03-23T18:19:10.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408122",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396658539\n \n \n\n ##########\n File path: python/pyarrow/tests/test_fs.py\n ##########\n @@ -212,43 +240,48 @@ def test_get_target_infos(fs, pathfn):\n     c = pathfn('c.txt')\n     zzz = pathfn('zzz')\n \n-    fs.create_dir(aaa)\n-    with fs.open_output_stream(bb):\n-        pass  # touch\n-    with fs.open_output_stream(c) as fp:\n-        fp.write(b'test')\n-\n-    aaa_info, bb_info, c_info, zzz_info = \\\n-        fs.get_target_infos([aaa, bb, c, zzz])\n-\n-    assert aaa_info.path == aaa\n-    assert 'aaa' in repr(aaa_info)\n-    assert aaa_info.extension == ''\n-    assert 'FileType.Directory' in repr(aaa_info)\n-    assert isinstance(aaa_info.mtime, datetime)\n-\n-    assert bb_info.path == str(bb)\n-    assert bb_info.base_name == 'bb'\n-    assert bb_info.extension == ''\n-    assert bb_info.type == FileType.File\n-    assert 'FileType.File' in repr(bb_info)\n-    assert bb_info.size == 0\n-    assert isinstance(bb_info.mtime, datetime)\n-\n-    assert c_info.path == str(c)\n-    assert c_info.base_name == 'c.txt'\n-    assert c_info.extension == 'txt'\n-    assert c_info.type == FileType.File\n-    assert 'FileType.File' in repr(c_info)\n-    assert c_info.size == 4\n-    assert isinstance(c_info.mtime, datetime)\n-\n-    assert zzz_info.path == str(zzz)\n-    assert zzz_info.base_name == 'zzz'\n-    assert zzz_info.extension == ''\n-    assert zzz_info.type == FileType.NotFound\n-    assert 'FileType.NotFound' in repr(zzz_info)\n-    assert isinstance(c_info.mtime, datetime)\n+    # also test that the filesystem object is functional after a serialization\n+    # roundtrip\n+    fs_ = pickle.loads(pickle.dumps(fs))\n \n Review comment:\n   ```suggestion\r\n       roundtripped_fs = pickle.loads(pickle.dumps(fs))\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:19:10.704+0000",
                    "updated": "2020-03-23T18:19:10.704+0000",
                    "started": "2020-03-23T18:19:10.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408121",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396667979\n \n \n\n ##########\n File path: python/pyarrow/_fs.pyx\n ##########\n @@ -652,3 +636,6 @@ cdef class _MockFileSystem(FileSystem):\n     cdef init(self, const shared_ptr[CFileSystem]& wrapped):\n         FileSystem.init(self, wrapped)\n         self.mockfs = <CMockFileSystem*> wrapped.get()\n+\n+    def __reduce__(self):\n+        return _MockFileSystem, tuple()\n \n Review comment:\n   Side note: not sure if pickling this class can actually make sense if it doesn't preserve the data written to it (cfr https://github.com/apache/arrow/pull/6655#discussion_r394359544, creating from an URI gives a similar problem)\r\n   \r\n   EDIT: I see below that you made then evaluate unequal for that reason\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:45:11.625+0000",
                    "updated": "2020-03-23T18:45:11.625+0000",
                    "started": "2020-03-23T18:45:11.625+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408140",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396669228\n \n \n\n ##########\n File path: python/pyarrow/_hdfs.pyx\n ##########\n @@ -25,137 +25,101 @@ from pyarrow.includes.libarrow_fs cimport *\n from pyarrow._fs cimport FileSystem\n \n \n-cdef class HdfsOptions:\n-    \"\"\"Options for HadoopFileSystem.\n+cdef class HadoopFileSystem(FileSystem):\n+    \"\"\"\n+    HDFS backed FileSystem implementation\n \n     Parameters\n     ----------\n-    endpoint : tuple of (host, port) pair\n-        For example ('localhost', 8020).\n+    host : str\n+        HDFS host to connect to.\n+    port : int, default 8020\n+        HDFS port to connect to.\n     replication : int, default 3\n         Number of copies each block will have.\n     buffer_size : int, default 0\n         If 0, no buffering will happen otherwise the size of the temporary read\n         and write buffer.\n-    default_block_size : int, default None\n-        None means the default configuration for HDFS, a typical block size is\n+    default_block_size : int, default 0\n+        0 means the default configuration for HDFS, a typical block size is\n \n Review comment:\n   I would personally keep None as the default in the user facing constructor (to me that seems clearer for a keyword that is a number where the default is not actually 0)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:45:11.686+0000",
                    "updated": "2020-03-23T18:45:11.686+0000",
                    "started": "2020-03-23T18:45:11.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408141",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396677653\n \n \n\n ##########\n File path: python/pyarrow/tests/test_fs.py\n ##########\n @@ -621,12 +643,13 @@ def test_filesystem_from_path_object(path):\n \n \n @pytest.mark.s3\n-def test_filesystem_from_uri_s3(minio_server):\n+def test_filesystem_from_uri_s3(s3_connection):\n \n Review comment:\n   is there a reason this doesn't need the s3_server fixture?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:45:11.861+0000",
                    "updated": "2020-03-23T18:45:11.861+0000",
                    "started": "2020-03-23T18:45:11.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408142",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396676955\n \n \n\n ##########\n File path: python/pyarrow/tests/test_fs.py\n ##########\n @@ -513,76 +534,77 @@ def test_localfs_errors(localfs):\n \n \n @pytest.mark.s3\n-def test_s3_options(minio_server):\n-    from pyarrow.fs import S3Options\n-\n-    options = S3Options()\n-\n-    assert options.region == 'us-east-1'\n-    options.region = 'us-west-1'\n-    assert options.region == 'us-west-1'\n-\n-    assert options.scheme == 'https'\n-    options.scheme = 'http'\n-    assert options.scheme == 'http'\n+def test_s3_options():\n+    from pyarrow.fs import S3FileSystem\n \n-    assert options.endpoint_override == ''\n-    options.endpoint_override = 'localhost:8999'\n-    assert options.endpoint_override == 'localhost:8999'\n+    fs = S3FileSystem(access_key='access', secret_key='secret',\n+                      region='us-east-1', scheme='https',\n+                      endpoint_override='localhost:8999')\n+    assert isinstance(fs, S3FileSystem)\n+    assert pickle.loads(pickle.dumps(fs)) == fs\n \n     with pytest.raises(ValueError):\n-        S3Options(access_key='access')\n+        S3FileSystem(access_key='access')\n     with pytest.raises(ValueError):\n-        S3Options(secret_key='secret')\n-\n-    address, access_key, secret_key = minio_server\n-    options = S3Options(\n-        access_key=access_key,\n-        secret_key=secret_key,\n-        endpoint_override=address,\n-        scheme='http'\n-    )\n-    assert options.scheme == 'http'\n-    assert options.endpoint_override == address\n+        S3FileSystem(secret_key='secret')\n \n \n @pytest.mark.hdfs\n-def test_hdfs_options(hdfs_server):\n-    from pyarrow.fs import HdfsOptions, HadoopFileSystem\n+def test_hdfs_options(hdfs_connection):\n+    from pyarrow.fs import HadoopFileSystem\n     if not pa.have_libhdfs():\n         pytest.skip('Cannot locate libhdfs')\n \n-    options = HdfsOptions()\n-    assert options.endpoint == ('', 0)\n-    options.endpoint = ('localhost', 8080)\n-    assert options.endpoint == ('localhost', 8080)\n+    host, port, user = hdfs_connection\n+\n+    replication = 2\n+    buffer_size = 64*1024\n+    default_block_size = 128*1024**2\n+    uri = ('hdfs://{}:{}/?user={}&replication={}&buffer_size={}'\n+           '&default_block_size={}')\n+\n+    hdfs1 = HadoopFileSystem(host, port, user='libhdfs',\n+                             replication=replication, buffer_size=buffer_size,\n+                             default_block_size=default_block_size)\n+    hdfs2 = HadoopFileSystem.from_uri(uri.format(\n+        host, port, 'libhdfs', replication, buffer_size, default_block_size\n+    ))\n+    hdfs3 = HadoopFileSystem.from_uri(uri.format(\n+        host, port, 'me', replication, buffer_size, default_block_size\n+    ))\n+    hdfs4 = HadoopFileSystem.from_uri(uri.format(\n+        host, port, 'me', replication + 1, buffer_size, default_block_size\n+    ))\n+    hdfs5 = HadoopFileSystem(host, port)\n+    hdfs6 = HadoopFileSystem.from_uri('hdfs://{}:{}'.format(host, port))\n+    hdfs7 = HadoopFileSystem(host, port, user='localuser')\n+\n+    print(hdfs1.__reduce__())\n+    print(hdfs2.__reduce__())\n \n Review comment:\n   Some leftovers here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T18:45:12.097+0000",
                    "updated": "2020-03-23T18:45:12.097+0000",
                    "started": "2020-03-23T18:45:12.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408143",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r396695558\n \n \n\n ##########\n File path: python/pyarrow/_fs.pyx\n ##########\n @@ -652,3 +636,6 @@ cdef class _MockFileSystem(FileSystem):\n     cdef init(self, const shared_ptr[CFileSystem]& wrapped):\n         FileSystem.init(self, wrapped)\n         self.mockfs = <CMockFileSystem*> wrapped.get()\n+\n+    def __reduce__(self):\n+        return _MockFileSystem, tuple()\n \n Review comment:\n   Maybe it'd be better to just raise an exception if someone tries to pickle a _MockFileSystem\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-23T19:15:41.730+0000",
                    "updated": "2020-03-23T19:15:41.730+0000",
                    "started": "2020-03-23T19:15:41.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408169",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#issuecomment-603160855\n \n \n   @kszucs I don't want to pressure you too much, but I think the best way to do this would be to add a `std::string FileSystem::ToUri()` method on the C++ side. Then both equality testing and serialization are trivial (just use the filesystem URI). Do you want to do this? Otherwise, the approach in this PR is acceptable as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T10:36:36.188+0000",
                    "updated": "2020-03-24T10:36:36.188+0000",
                    "started": "2020-03-24T10:36:36.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408651",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on issue #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#issuecomment-603162241\n \n \n   > add a std::string FileSystem::ToUri() method\r\n   \r\n   Would that create a URI for the filesystem without a specific path?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T10:39:16.790+0000",
                    "updated": "2020-03-24T10:39:16.790+0000",
                    "started": "2020-03-24T10:39:16.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408653",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#issuecomment-603164687\n \n \n   @jorisvandenbossche, yes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T10:43:55.775+0000",
                    "updated": "2020-03-24T10:43:55.775+0000",
                    "started": "2020-03-24T10:43:55.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408657",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#issuecomment-603185774\n \n \n   > @kszucs I don't want to pressure you too much, but I think the best way to do this would be to add a `std::string FileSystem::ToUri()` method on the C++ side. Then both equality testing and serialization are trivial (just use the filesystem URI). Do you want to do this? Otherwise, the approach in this PR is acceptable as well.\r\n   \r\n   @pitrou That was my original plan but wasn't sure how to encode additional options, like the S3 ones:\r\n   access_key, secret_key, region, scheme, endpoint_override, background_writes.\r\n   \r\n   On the other hand I don't think it matters much, because we don't guarantee any version compatibility for the pickled objects, so we can switch the underlying implementation anytime. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T11:30:11.549+0000",
                    "updated": "2020-03-24T11:30:11.549+0000",
                    "started": "2020-03-24T11:30:11.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408681",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r397089819\n \n \n\n ##########\n File path: python/pyarrow/_fs.pyx\n ##########\n @@ -269,6 +269,15 @@ cdef class FileSystem:\n     cdef inline shared_ptr[CFileSystem] unwrap(self) nogil:\n         return self.wrapped\n \n+    def equals(self, FileSystem other):\n+        return self.fs.Equals(other.unwrap())\n+\n+    def __eq__(self, other):\n+        try:\n+            return self.equals(other)\n+        except TypeError:\n+            return NotImplemented\n \n Review comment:\n   This is python and cython specific. \r\n   \r\n   `self.equals` raises a `TypeError` if the passed argument is not an instance of FileSystem, but the object needs to be comparable with other objects without raising an error:\r\n   \r\n   ```py\r\n   fs == 'any-non-filesystem-objects'  # should return false instead of raising TypeError\r\n   ```\r\n   \r\n   `NotImplemented` is a [special exception](https://docs.python.org/3.6/library/constants.html#NotImplemented) to let the other operand to override the comparison operator.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T11:43:25.619+0000",
                    "updated": "2020-03-24T11:43:25.619+0000",
                    "started": "2020-03-24T11:43:25.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408687",
                    "issueId": "13290878"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/worklog/408692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6644: ARROW-8059: [Python] Make FileSystem objects serializable\nURL: https://github.com/apache/arrow/pull/6644#discussion_r397098383\n \n \n\n ##########\n File path: python/pyarrow/tests/test_fs.py\n ##########\n @@ -621,12 +643,13 @@ def test_filesystem_from_path_object(path):\n \n \n @pytest.mark.s3\n-def test_filesystem_from_uri_s3(minio_server):\n+def test_filesystem_from_uri_s3(s3_connection):\n \n Review comment:\n   It needs it, running that case alone fails.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-24T11:59:22.590+0000",
                    "updated": "2020-03-24T11:59:22.590+0000",
                    "started": "2020-03-24T11:59:22.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "408692",
                    "issueId": "13290878"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6a22af70[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6477bf63[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e7432ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@272116a4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1725ffe4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4c21547[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bfca633[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@74c70fde[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c25147d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@58d94893[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66aab085[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2adfea71[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 25 16:41:18 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-25T16:41:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8059/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-03-10T17:47:00.000+0000",
        "updated": "2020-03-25T16:41:18.000+0000",
        "timeoriginalestimate": null,
        "description": "It would be good to be able to pickle {{pyarrow.fs.FileSystem}} objects (eg for use in dask.distributed)\r\n\r\ncc [~apitrou]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Make FileSystem objects serializable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/comment/17056228",
                    "id": "17056228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "what will be the result of trying to serialize a local file system?\r\n\r\ncould be:\r\n- failure (a local file system will not make sense if sent to another machine)\r\n- success (but it would make sense if sent to another process on the same machine)\r\n- either of the above, unless an adapter is provided (a local file system might be exposed to the network, so it could be wrapped for other machines by pre-pending the hostname or something)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-10T18:23:30.288+0000",
                    "updated": "2020-03-10T18:23:30.288+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/comment/17056251",
                    "id": "17056251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Specifically for dask's usecase, it might also make sense for them to send just a string path to their workers, in case of a local file system. \r\n\r\nBut in general, I think one would assume that it is deserialized on the same machine (so the path references the same file).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-03-10T18:35:39.759+0000",
                    "updated": "2020-03-10T18:35:39.759+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/comment/17060906",
                    "id": "17060906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "The approach I'm favouring is to serialize filesystems by URI. This means we need to ensure that filesystem configuration roundtrips through URIs.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-03-17T13:14:57.312+0000",
                    "updated": "2020-03-17T13:14:57.312+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13290878/comment/17066839",
                    "id": "17066839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6644\n[https://github.com/apache/arrow/pull/6644]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-03-25T16:41:18.545+0000",
                    "updated": "2020-03-25T16:41:18.545+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cdy8:",
        "customfield_12314139": null
    }
}