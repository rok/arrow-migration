{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13117584",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117584",
    "key": "ARROW-1794",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1794/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@25a6fb9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c552ee9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b448bd6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7e93ce31[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3102c200[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7b7e025e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@544b3cdc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@34c98222[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@137c4479[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@181bd8ba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@153baab9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6d1bf2ae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 13 04:47:57 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-13T04:47:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1794/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-11-10T14:41:34.000+0000",
        "updated": "2017-11-13T04:47:57.000+0000",
        "timeoriginalestimate": null,
        "description": "This will help future proof the API for when we may need to add smaller in-memory decimal types",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Rename DecimalArray to Decimal128Array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117584/comment/16249100",
                    "id": "16249100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1312: ARROW-1794: [C++/Python] Rename DecimalArray to Decimal128Array\nURL: https://github.com/apache/arrow/pull/1312\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array-test.cc b/cpp/src/arrow/array-test.cc\nindex 9f248cdbb..15c75534e 100644\n--- a/cpp/src/arrow/array-test.cc\n+++ b/cpp/src/arrow/array-test.cc\n@@ -2799,7 +2799,7 @@ class DecimalTest : public ::testing::TestWithParam<int> {\n         BitUtil::BytesToBits(valid_bytes, default_memory_pool(), &expected_null_bitmap));\n \n     int64_t expected_null_count = test::null_count(valid_bytes);\n-    auto expected = std::make_shared<DecimalArray>(\n+    auto expected = std::make_shared<Decimal128Array>(\n         type, size, expected_data, expected_null_bitmap, expected_null_count);\n \n     std::shared_ptr<Array> lhs = out->Slice(offset);\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex 9c91d619c..651fa26ba 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -314,12 +314,12 @@ const uint8_t* FixedSizeBinaryArray::GetValue(int64_t i) const {\n // ----------------------------------------------------------------------\n // Decimal\n \n-DecimalArray::DecimalArray(const std::shared_ptr<ArrayData>& data)\n+Decimal128Array::Decimal128Array(const std::shared_ptr<ArrayData>& data)\n     : FixedSizeBinaryArray(data) {\n   DCHECK_EQ(data->type->id(), Type::DECIMAL);\n }\n \n-std::string DecimalArray::FormatValue(int64_t i) const {\n+std::string Decimal128Array::FormatValue(int64_t i) const {\n   const auto& type_ = static_cast<const DecimalType&>(*type());\n   const Decimal128 value(GetValue(i));\n   return value.ToString(type_.scale());\n@@ -515,7 +515,7 @@ struct ValidateVisitor {\n \n   Status Visit(const PrimitiveArray&) { return Status::OK(); }\n \n-  Status Visit(const DecimalArray&) { return Status::OK(); }\n+  Status Visit(const Decimal128Array&) { return Status::OK(); }\n \n   Status Visit(const BinaryArray&) {\n     // TODO(wesm): what to do here?\ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex f7762ce10..3337e4b15 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -559,19 +559,22 @@ class ARROW_EXPORT FixedSizeBinaryArray : public PrimitiveArray {\n };\n \n // ----------------------------------------------------------------------\n-// DecimalArray\n-class ARROW_EXPORT DecimalArray : public FixedSizeBinaryArray {\n+// Decimal128Array\n+class ARROW_EXPORT Decimal128Array : public FixedSizeBinaryArray {\n  public:\n   using TypeClass = DecimalType;\n \n   using FixedSizeBinaryArray::FixedSizeBinaryArray;\n \n-  /// \\brief Construct DecimalArray from ArrayData instance\n-  explicit DecimalArray(const std::shared_ptr<ArrayData>& data);\n+  /// \\brief Construct Decimal128Array from ArrayData instance\n+  explicit Decimal128Array(const std::shared_ptr<ArrayData>& data);\n \n   std::string FormatValue(int64_t i) const;\n };\n \n+// Backward compatibility\n+using DecimalArray = Decimal128Array;\n+\n // ----------------------------------------------------------------------\n // Struct\n \ndiff --git a/cpp/src/arrow/compare.cc b/cpp/src/arrow/compare.cc\nindex a2d4de7b7..253c2e1fe 100644\n--- a/cpp/src/arrow/compare.cc\n+++ b/cpp/src/arrow/compare.cc\n@@ -255,7 +255,7 @@ class RangeEqualsVisitor {\n     return Status::OK();\n   }\n \n-  Status Visit(const DecimalArray& left) {\n+  Status Visit(const Decimal128Array& left) {\n     return Visit(static_cast<const FixedSizeBinaryArray&>(left));\n   }\n \ndiff --git a/cpp/src/arrow/ipc/json-internal.cc b/cpp/src/arrow/ipc/json-internal.cc\nindex 1b9baee7d..976f9660a 100644\n--- a/cpp/src/arrow/ipc/json-internal.cc\n+++ b/cpp/src/arrow/ipc/json-internal.cc\n@@ -458,7 +458,7 @@ class ArrayWriter {\n     }\n   }\n \n-  void WriteDataValues(const DecimalArray& arr) {\n+  void WriteDataValues(const Decimal128Array& arr) {\n     for (int64_t i = 0; i < arr.length(); ++i) {\n       const Decimal128 value(arr.GetValue(i));\n       writer_->String(value.ToIntegerString());\ndiff --git a/cpp/src/arrow/ipc/test-common.h b/cpp/src/arrow/ipc/test-common.h\nindex 91023db48..7fc139381 100644\n--- a/cpp/src/arrow/ipc/test-common.h\n+++ b/cpp/src/arrow/ipc/test-common.h\n@@ -690,10 +690,10 @@ Status MakeDecimal(std::shared_ptr<RecordBatch>* out) {\n \n   RETURN_NOT_OK(BitUtil::BytesToBits(is_valid_bytes, default_memory_pool(), &is_valid));\n \n-  auto a1 = std::make_shared<DecimalArray>(f0->type(), length, data, is_valid,\n-                                           kUnknownNullCount);\n+  auto a1 = std::make_shared<Decimal128Array>(f0->type(), length, data, is_valid,\n+                                              kUnknownNullCount);\n \n-  auto a2 = std::make_shared<DecimalArray>(f1->type(), length, data);\n+  auto a2 = std::make_shared<Decimal128Array>(f1->type(), length, data);\n \n   ArrayVector arrays = {a1, a2};\n   *out = std::make_shared<RecordBatch>(schema, length, arrays);\ndiff --git a/cpp/src/arrow/ipc/writer.cc b/cpp/src/arrow/ipc/writer.cc\nindex 5598cc682..323116f58 100644\n--- a/cpp/src/arrow/ipc/writer.cc\n+++ b/cpp/src/arrow/ipc/writer.cc\n@@ -339,7 +339,7 @@ class RecordBatchSerializer : public ArrayVisitor {\n   VISIT_FIXED_WIDTH(Time32Array)\n   VISIT_FIXED_WIDTH(Time64Array)\n   VISIT_FIXED_WIDTH(FixedSizeBinaryArray)\n-  VISIT_FIXED_WIDTH(DecimalArray)\n+  VISIT_FIXED_WIDTH(Decimal128Array)\n \n #undef VISIT_FIXED_WIDTH\n \ndiff --git a/cpp/src/arrow/pretty_print.cc b/cpp/src/arrow/pretty_print.cc\nindex aaea34a51..cfbc30315 100644\n--- a/cpp/src/arrow/pretty_print.cc\n+++ b/cpp/src/arrow/pretty_print.cc\n@@ -170,7 +170,7 @@ class ArrayPrinter : public PrettyPrinter {\n   }\n \n   template <typename T>\n-  inline typename std::enable_if<std::is_same<DecimalArray, T>::value, void>::type\n+  inline typename std::enable_if<std::is_same<Decimal128Array, T>::value, void>::type\n   WriteDataValues(const T& array) {\n     for (int i = 0; i < array.length(); ++i) {\n       if (i > 0) {\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 3894772da..f966b2987 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -633,7 +633,7 @@ static Status ConvertDecimals(PandasOptions options, const ChunkedArray& data,\n   PyObject* Decimal = Decimal_ref.obj();\n \n   for (int c = 0; c < data.num_chunks(); c++) {\n-    auto* arr(static_cast<arrow::DecimalArray*>(data.chunk(c).get()));\n+    auto* arr(static_cast<arrow::Decimal128Array*>(data.chunk(c).get()));\n     auto type(std::dynamic_pointer_cast<arrow::DecimalType>(arr->type()));\n     const int scale = type->scale();\n \ndiff --git a/cpp/src/arrow/type_fwd.h b/cpp/src/arrow/type_fwd.h\nindex 0d06b6f6c..343487055 100644\n--- a/cpp/src/arrow/type_fwd.h\n+++ b/cpp/src/arrow/type_fwd.h\n@@ -69,7 +69,7 @@ class StructArray;\n class StructBuilder;\n \n class DecimalType;\n-class DecimalArray;\n+class Decimal128Array;\n class DecimalBuilder;\n \n class UnionType;\ndiff --git a/cpp/src/arrow/type_traits.h b/cpp/src/arrow/type_traits.h\nindex fbd78398f..bc600372e 100644\n--- a/cpp/src/arrow/type_traits.h\n+++ b/cpp/src/arrow/type_traits.h\n@@ -231,7 +231,7 @@ struct TypeTraits<DoubleType> {\n \n template <>\n struct TypeTraits<DecimalType> {\n-  using ArrayType = DecimalArray;\n+  using ArrayType = Decimal128Array;\n   using BuilderType = DecimalBuilder;\n   constexpr static bool is_parameter_free = false;\n };\ndiff --git a/cpp/src/arrow/visitor.cc b/cpp/src/arrow/visitor.cc\nindex a7b01b0f6..3739e89f3 100644\n--- a/cpp/src/arrow/visitor.cc\n+++ b/cpp/src/arrow/visitor.cc\n@@ -56,7 +56,7 @@ ARRAY_VISITOR_DEFAULT(ListArray);\n ARRAY_VISITOR_DEFAULT(StructArray);\n ARRAY_VISITOR_DEFAULT(UnionArray);\n ARRAY_VISITOR_DEFAULT(DictionaryArray);\n-ARRAY_VISITOR_DEFAULT(DecimalArray);\n+ARRAY_VISITOR_DEFAULT(Decimal128Array);\n \n #undef ARRAY_VISITOR_DEFAULT\n \ndiff --git a/cpp/src/arrow/visitor.h b/cpp/src/arrow/visitor.h\nindex 6c36e465e..34679eb95 100644\n--- a/cpp/src/arrow/visitor.h\n+++ b/cpp/src/arrow/visitor.h\n@@ -50,7 +50,7 @@ class ARROW_EXPORT ArrayVisitor {\n   virtual Status Visit(const Time64Array& array);\n   virtual Status Visit(const TimestampArray& array);\n   virtual Status Visit(const IntervalArray& array);\n-  virtual Status Visit(const DecimalArray& array);\n+  virtual Status Visit(const Decimal128Array& array);\n   virtual Status Visit(const ListArray& array);\n   virtual Status Visit(const StructArray& array);\n   virtual Status Visit(const UnionArray& array);\ndiff --git a/python/doc/source/api.rst b/python/doc/source/api.rst\nindex 6bceba3c6..c52024044 100644\n--- a/python/doc/source/api.rst\n+++ b/python/doc/source/api.rst\n@@ -155,7 +155,7 @@ Array Types\n    Date32Array\n    Date64Array\n    TimestampArray\n-   DecimalArray\n+   Decimal128Array\n    ListArray\n \n .. _api.table:\ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex 2d7d7288b..09bf6b35f 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -58,7 +58,7 @@\n                          DictionaryArray,\n                          Date32Array, Date64Array,\n                          TimestampArray, Time32Array, Time64Array,\n-                         DecimalArray, StructArray,\n+                         Decimal128Array, StructArray,\n                          ArrayValue, Scalar, NA,\n                          BooleanValue,\n                          Int8Value, Int16Value, Int32Value, Int64Value,\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex 9991411e5..2ef592ff7 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -597,7 +597,7 @@ cdef class FixedSizeBinaryArray(Array):\n     pass\n \n \n-cdef class DecimalArray(FixedSizeBinaryArray):\n+cdef class Decimal128Array(FixedSizeBinaryArray):\n     pass\n \n \n@@ -846,7 +846,7 @@ cdef dict _array_classes = {\n     _Type_STRING: StringArray,\n     _Type_DICTIONARY: DictionaryArray,\n     _Type_FIXED_SIZE_BINARY: FixedSizeBinaryArray,\n-    _Type_DECIMAL: DecimalArray,\n+    _Type_DECIMAL: Decimal128Array,\n     _Type_STRUCT: StructArray,\n }\n \ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex dfafd371b..11cc6b3ff 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -312,7 +312,9 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n     cdef cppclass CFixedSizeBinaryArray\" arrow::FixedSizeBinaryArray\"(CArray):\n         const uint8_t* GetValue(int i)\n \n-    cdef cppclass CDecimalArray\" arrow::DecimalArray\"(CFixedSizeBinaryArray):\n+    cdef cppclass CDecimal128Array\" arrow::Decimal128Array\"(\n+        CFixedSizeBinaryArray\n+    ):\n         c_string FormatValue(int i)\n \n     cdef cppclass CListArray\" arrow::ListArray\"(CArray):\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex 531489490..6413b838f 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -246,7 +246,7 @@ cdef class FixedSizeBinaryArray(Array):\n     pass\n \n \n-cdef class DecimalArray(FixedSizeBinaryArray):\n+cdef class Decimal128Array(FixedSizeBinaryArray):\n     pass\n \n \ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex a396fa763..1bc5ed7a3 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -258,7 +258,7 @@ cdef class DecimalValue(ArrayValue):\n \n     def as_py(self):\n         cdef:\n-            CDecimalArray* ap = <CDecimalArray*> self.sp_array.get()\n+            CDecimal128Array* ap = <CDecimal128Array*> self.sp_array.get()\n             c_string s = ap.FormatValue(self.index)\n         return _pydecimal.Decimal(s.decode('utf8'))\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-13T04:47:57.750+0000",
                    "updated": "2017-11-13T04:47:57.750+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117584/comment/16249101",
                    "id": "16249101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1312\n[https://github.com/apache/arrow/pull/1312]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-13T04:47:57.958+0000",
                    "updated": "2017-11-13T04:47:57.958+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mna7:",
        "customfield_12314139": null
    }
}