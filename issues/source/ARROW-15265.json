{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13420936",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936",
    "key": "ARROW-15265",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350712",
                "id": "12350712",
                "description": "",
                "name": "6.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-11-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12630758",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12630758",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13421393",
                    "key": "ARROW-15285",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13421393",
                    "fields": {
                        "summary": "[C++] write_dataset with delete_matching occasionally fails with \"Path does not exist\"",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coverman",
            "name": "coverman",
            "key": "coverman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Caleb Overman",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=coverman",
            "name": "coverman",
            "key": "coverman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Caleb Overman",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "aggregateprogress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19800,
            "total": 19800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15265/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 33,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099\n\n\n   When the dataset writer is configured to delete existing data before writing, the target directory is on S3, the dataset is partitioned, and there are at least as many partitions as threads in the I/O thread pool, then the writer would hang. The writer spawns a task on the I/O thread pool for each partition to delete existing data. However, S3FS implemented the relevant filesystem call by asynchronously listing the objects using the I/O thread pool, then deleting them, blocking until this is done. Hence, nested asynchrony would cause the program to hang.\r\n   \r\n   The fix is to do this deletion fully asynchronously, so that there is no blocking. It's sufficient to just use the default implementation of async filesystem methods; it just spawns another task on the I/O thread pool, but this lets the writer avoid blocking. However, this PR also refactors the S3FS internals to implement the call truly asynchronously.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:41:47.709+0000",
                    "updated": "2022-01-07T18:41:47.709+0000",
                    "started": "2022-01-07T18:41:47.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705174",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007645730\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:42:00.676+0000",
                    "updated": "2022-01-07T18:42:00.676+0000",
                    "started": "2022-01-07T18:42:00.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705175",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007647894\n\n\n   Hmm, this sometimes hangs on >8 partitions, taking another look.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:44:59.773+0000",
                    "updated": "2022-01-07T18:44:59.773+0000",
                    "started": "2022-01-07T18:44:59.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705178",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#discussion_r780457910\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -328,12 +328,12 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n   uint64_t rows_written() const { return rows_written_; }\n \n   void PrepareDirectory() {\n-    init_future_ =\n-        DeferNotOk(write_options_.filesystem->io_context().executor()->Submit([this] {\n+    init_future_ = DeferNotOk(\n+        write_options_.filesystem->io_context().executor()->Submit([this]() -> Future<> {\n\nReview comment:\n       It would probably be a good addition to allow executor submission tasks to return futures but I don't think this actually works today.  The future you are returning from the task will be discarded without being awaited.\r\n   \r\n   I think you'll need to change it to...\r\n   \r\n   `init_future_ = SubmitTask(CreateDir).Then(DeleteDirContentsAsync);`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:55:11.343+0000",
                    "updated": "2022-01-07T18:55:11.343+0000",
                    "started": "2022-01-07T18:55:11.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705181",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007654362\n\n\n   Ah, there's _another_ deadlock: finishing a FileWriter closes the underlying file. This is done as a continuation that runs on the I/O thread pool (I think). (On a side note, would anyone complain if I #ifdef'd in the pthread calls to name threads on Linux to make debugging easier?) On S3, closing a file blocks on a condition variable until all background writes are finished\u2026and of course, those background writes are on the I/O thread pool, like everything else, so we hang.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:55:24.176+0000",
                    "updated": "2022-01-07T18:55:24.176+0000",
                    "started": "2022-01-07T18:55:24.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705182",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007657502\n\n\n   And there's definitely a race condition somewhere\u2026 (using the reproducer from JIRA)\r\n   \r\n   ```\r\n   8 partitions\r\n   Traceback (most recent call last):\r\n     File \"/home/lidavidm/Code/upstream/arrow-15265/python/test.py\", line 37, in <module>\r\n       ds.write_dataset(\r\n     File \"/home/lidavidm/Code/upstream/arrow-15265/python/pyarrow/dataset.py\", line 931, in write_dataset\r\n       _filesystemdataset_write(\r\n     File \"pyarrow/_dataset.pyx\", line 2658, in pyarrow._dataset._filesystemdataset_write\r\n       check_status(CFileSystemDataset.Write(c_options, c_scanner))\r\n     File \"pyarrow/error.pxi\", line 114, in pyarrow.lib.check_status\r\n       raise IOError(message)\r\n   OSError: Path does not exist 'my-bucket/test8.parquet/col1=b'\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T18:59:32.502+0000",
                    "updated": "2022-01-07T18:59:32.502+0000",
                    "started": "2022-01-07T18:59:32.501+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705185",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007657899\n\n\n   I think finishing a file actually happens on the CPU thread pool at the moment.  Although it's at the mercy of the writer.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:00:07.252+0000",
                    "updated": "2022-01-07T19:00:07.252+0000",
                    "started": "2022-01-07T19:00:07.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705186",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007659299\n\n\n   > On a side note, would anyone complain if I #ifdef'd in the pthread calls to name threads on Linux to make debugging easier?\r\n   \r\n   Please do.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:02:06.970+0000",
                    "updated": "2022-01-07T19:02:06.970+0000",
                    "started": "2022-01-07T19:02:06.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705188",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705189",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007661614\n\n\n   > I think finishing a file actually happens on the CPU thread pool at the moment. Although it's at the mercy of the writer.\r\n   \r\n   Ah, but the background Close/Wait also blocks on the CPU thread pool.  So I think you're filling up the CPU thread pool in this case.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:05:10.266+0000",
                    "updated": "2022-01-07T19:05:10.266+0000",
                    "started": "2022-01-07T19:05:10.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705189",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007663490\n\n\n   Moving the Close/Wait to the I/O thread pool will probably be an easy fix.  Then the rules we are building are...\r\n   \r\n   * If you are going to call a synchronous filesystem method (e.g. Close, DeleteDirContents) then you must be on the CPU thread pool.\r\n   * If you are a synchronous filesystem method then you are only allowed to spawn one I/O task and wait for it.\r\n   \r\n   ...I think that will prevent any sort of nested deadlock.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:07:58.176+0000",
                    "updated": "2022-01-07T19:07:58.176+0000",
                    "started": "2022-01-07T19:07:58.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705192",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007667064\n\n\n   Surprisingly it is the I/O thread pool:\r\n   \r\n   ```\r\n   (gdb) info thread\r\n     Id   Target Id         Frame \r\n   * 1    Thread 0x7f8856a04740 (LWP 27248) \"python\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x5622ee0e97e8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   ...snip...\r\n     29   Thread 0x7f879e7fc700 (LWP 27276) \"Io-7\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x7f87900051e0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     30   Thread 0x7f879d3ff700 (LWP 27277) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a794) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     31   Thread 0x7f878ffff700 (LWP 27278) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a864) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   (gdb) t 29\r\n   [Switching to thread 29 (Thread 0x7f879e7fc700 (LWP 27276))]\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   88\tin ../sysdeps/unix/sysv/linux/futex-internal.h\r\n   (gdb) bt\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   #1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7f8790005190, cond=0x7f87900051b8) at pthread_cond_wait.c:502\r\n   #2  __pthread_cond_wait (cond=0x7f87900051b8, mutex=0x7f8790005190) at pthread_cond_wait.c:655\r\n   #3  0x00007f87cdd374ad in __gthread_cond_wait (\r\n       __mutex=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       __cond=<optimized out>)\r\n       at /home/conda/feedstock_root/build_artifacts/gcc_compilers_1628138005912/work/build/x86_64-conda-linux-gnu/libstdc++-v3/src/c++11/condition_variable.cc:865\r\n   #4  std::__condvar::wait (__m=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       this=<optimized out>) at ../../../../../libstdc++-v3/src/c++11/gthr-default.h:155\r\n   #5  std::condition_variable::wait (this=<optimized out>, __lock=...)\r\n       at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41\r\n   #6  0x00007f87d1420c11 in std::condition_variable::wait<arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}>(std::unique_lock<std::mutex>&, arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}) (\r\n       this=0x7f87900051b8, __lock=..., __p=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/condition_variable:99\r\n   #7  0x00007f87d141ba1e in arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1301\r\n   #8  0x00007f87d141bfe0 in arrow::fs::(anonymous namespace)::ObjectOutputStream::Close (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1218\r\n   #9  0x00007f87d141c66d in virtual thunk to arrow::fs::(anonymous namespace)::ObjectOutputStream::Close() ()\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/hashtable.h:492\r\n   #10 0x00007f87c7d7d907 in arrow::dataset::FileWriter::Finish (this=0x7f8788007d80)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/file_base.cc:322\r\n   #11 0x00007f87c7d59040 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoFinish (\r\n       this=0x7f87b000b5f0) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/dataset_writer.cc:221\r\n   #12 0x00007f87c7d58ee6 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}::operator()() const (this=0x7f87b00088c8)\r\n   \r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:12:34.483+0000",
                    "updated": "2022-01-07T19:12:34.483+0000",
                    "started": "2022-01-07T19:12:34.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705196",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm edited a comment on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007667064\n\n\n   Surprisingly it is the I/O thread pool:\r\n   \r\n   ```\r\n   (gdb) info thread\r\n     Id   Target Id         Frame \r\n   * 1    Thread 0x7f8856a04740 (LWP 27248) \"python\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x5622ee0e97e8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   ...snip...\r\n     29   Thread 0x7f879e7fc700 (LWP 27276) \"Io-7\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x7f87900051e0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     30   Thread 0x7f879d3ff700 (LWP 27277) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a794) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     31   Thread 0x7f878ffff700 (LWP 27278) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a864) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   (gdb) t 29\r\n   [Switching to thread 29 (Thread 0x7f879e7fc700 (LWP 27276))]\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   88\tin ../sysdeps/unix/sysv/linux/futex-internal.h\r\n   (gdb) bt\r\n   (gdb) bt\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   #1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7f8790005190, cond=0x7f87900051b8) at pthread_cond_wait.c:502\r\n   #2  __pthread_cond_wait (cond=0x7f87900051b8, mutex=0x7f8790005190) at pthread_cond_wait.c:655\r\n   #3  0x00007f87cdd374ad in __gthread_cond_wait (\r\n       __mutex=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       __cond=<optimized out>)\r\n       at /home/conda/feedstock_root/build_artifacts/gcc_compilers_1628138005912/work/build/x86_64-conda-linux-gnu/libstdc++-v3/src/c++11/condition_variable.cc:865\r\n   #4  std::__condvar::wait (__m=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       this=<optimized out>) at ../../../../../libstdc++-v3/src/c++11/gthr-default.h:155\r\n   #5  std::condition_variable::wait (this=<optimized out>, __lock=...)\r\n       at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41\r\n   #6  0x00007f87d1420c11 in std::condition_variable::wait<arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}>(std::unique_lock<std::mutex>&, arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}) (\r\n       this=0x7f87900051b8, __lock=..., __p=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/condition_variable:99\r\n   #7  0x00007f87d141ba1e in arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1301\r\n   #8  0x00007f87d141bfe0 in arrow::fs::(anonymous namespace)::ObjectOutputStream::Close (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1218\r\n   #9  0x00007f87d141c66d in virtual thunk to arrow::fs::(anonymous namespace)::ObjectOutputStream::Close() ()\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/hashtable.h:492\r\n   #10 0x00007f87c7d7d907 in arrow::dataset::FileWriter::Finish (this=0x7f8788007d80)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/file_base.cc:322\r\n   #11 0x00007f87c7d59040 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoFinish (\r\n       this=0x7f87b000b5f0) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/dataset_writer.cc:221\r\n   #12 0x00007f87c7d58ee6 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}::operator()() const (this=0x7f87b00088c8)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/dataset_writer.cc:196\r\n   #13 0x00007f87c7d58e80 in arrow::detail::ContinueFuture::operator()<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, , arrow::Status, arrow::Future<arrow::internal::Empty> > (\r\n       this=0x7f879e7fb268, next=..., f=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:148\r\n   #14 0x00007f87c7d58d42 in arrow::detail::ContinueFuture::IgnoringArgsIf<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>, arrow::internal const&>(std::integral_constant<bool, true>, arrow::Future<arrow::internal::Empty>&&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}&&, arrow::internal const&) const (this=0x7f879e7fb268, next=..., f=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:186\r\n   #15 0x00007f87c7d58c3d in arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> >::operator()(arrow::Result<arrow::internal::Empty> const&) && (this=0x7f87b00088c8, result=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:599\r\n   #16 0x00007f87c7d58bb2 in arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> > >::operator()(arrow::FutureImpl const&) && (this=0x7f87b00088c8, impl=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:496\r\n   #17 0x00007f87c7d58b76 in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> > > >::invoke(arrow::FutureImpl const&) (this=0x7f87b00088c0, a=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #18 0x00007f87d023220f in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator()(arrow::FutureImpl const&) && (this=0x7f87b00065e0, a=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   #19 0x00007f87d0231b61 in arrow::ConcreteFutureImpl::RunOrScheduleCallback (self=..., callback_record=..., \r\n       in_add_callback=false) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:298\r\n   #20 0x00007f87d023160f in arrow::ConcreteFutureImpl::DoMarkFinishedOrFailed (this=0x7f87b000ba60, \r\n       state=arrow::FutureState::SUCCESS) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:327\r\n   #21 0x00007f87d022f9ca in arrow::ConcreteFutureImpl::DoMarkFinished (this=0x7f87b000ba60)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:231\r\n   #22 0x00007f87d022cc9d in arrow::FutureImpl::MarkFinished (this=0x7f87b000ba60)\r\n   ---Type <return> to continue, or q <return> to quit---\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:383\r\n   #23 0x00007f87d01ce812 in arrow::Future<arrow::internal::Empty>::DoMarkFinished (this=0x7f87b000b688, res=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:712\r\n   #24 0x00007f87d01ccfa4 in arrow::Future<arrow::internal::Empty>::MarkFinished<arrow::internal::Empty, void> (\r\n       this=0x7f87b000b688, s=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:463\r\n   #25 0x00007f87d01cb4ed in arrow::util::SerializedAsyncTaskGroup::ConsumeAsMuchAsPossibleUnlocked (this=0x7f87b000b688, \r\n       guard=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/async_util.cc:143\r\n   #26 0x00007f87d01cc9c0 in arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}::operator()(arrow::Status const&) const (this=0x7f8788009c38, st=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/async_util.cc:164\r\n   #27 0x00007f87d01cc92a in arrow::Future<arrow::internal::Empty>::WrapStatusyOnComplete::Callback<arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}>::operator()(arrow::FutureImpl const&) && (this=0x7f8788009c38, impl=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:509\r\n   #28 0x00007f87d01cc8e6 in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<arrow::internal::Empty>::WrapStatusyOnComplete::Callback<arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}> >::invoke(arrow::FutureImpl const&) (this=0x7f8788009c30, a=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #29 0x00007f87d023220f in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator()(arrow::FutureImpl const&) && (this=0x7f8788002610, a=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   #30 0x00007f87d0231b61 in arrow::ConcreteFutureImpl::RunOrScheduleCallback (self=..., callback_record=..., \r\n       in_add_callback=false) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:298\r\n   #31 0x00007f87d023160f in arrow::ConcreteFutureImpl::DoMarkFinishedOrFailed (this=0x7f8794019890, \r\n       state=arrow::FutureState::SUCCESS) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:327\r\n   #32 0x00007f87d022f9ca in arrow::ConcreteFutureImpl::DoMarkFinished (this=0x7f8794019890)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:231\r\n   #33 0x00007f87d022cc9d in arrow::FutureImpl::MarkFinished (this=0x7f8794019890)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:383\r\n   #34 0x00007f87d01ce812 in arrow::Future<arrow::internal::Empty>::DoMarkFinished (this=0x7f879e7fbac0, res=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:712\r\n   #35 0x00007f87d01ccfa4 in arrow::Future<arrow::internal::Empty>::MarkFinished<arrow::internal::Empty, void> (\r\n       this=0x7f879e7fbac0, s=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:463\r\n   #36 0x00007f87c7d5823d in _ZNK5arrow6detail14ContinueFutureclIRZNS_7dataset8internal12_GLOBAL__N_122DatasetWriterFileQueue9WriteNextESt10shared_ptrINS_11RecordBatchEEE9WriteTaskJENS_6StatusENS_6FutureINS_8internal5EmptyEEEEENSt9enable_ifIXaaaantsr3std7is_voidIT1_EE5valuentsr9is_futureISI_EE5valueoontsrT2_8is_emptysr3std7is_sameISI_SC_EE5valueEvE4typeESJ_OT_DpOT0_\r\n       (this=0x7f8788003fe8, next=..., f=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:148\r\n   #37 0x00007f87c7d581b3 in std::__invoke_impl<void, arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&>(std::__invoke_other, arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&) (\r\n       __f=..., __args=..., __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:60\r\n   #38 0x00007f87c7d580e7 in std::__invoke<arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&>(arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&) (__fn=..., __args=..., __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:95\r\n   #39 0x00007f87c7d58092 in std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x7f8788003fe8, __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/functional:467\r\n   #40 0x00007f87c7d58026 in std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)>::operator()<, void>() (this=0x7f8788003fe8)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/functional:549\r\n   #41 0x00007f87c7d57ff1 in arrow::internal::FnOnce<void ()>::FnImpl<std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)> >::invoke() (this=0x7f8788003fe0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #42 0x00007f87d027e85a in arrow::internal::FnOnce<void ()>::operator()() && (this=0x7f879e7fbd10)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   ---Type <return> to continue, or q <return> to quit---\r\n   #43 0x00007f87d027e03f in arrow::internal::WorkerLoop (state=..., it=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/thread_pool.cc:185\r\n   #44 0x00007f87d027dce3 in arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3::operator()() const (\r\n       this=0x7f87a0011578) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/thread_pool.cc:363\r\n   #45 0x00007f87d027dc6d in _ZSt13__invoke_implIvZN5arrow8internal10ThreadPool21LaunchWorkersUnlockedEiE3$_3JEET_St14__invoke_otherOT0_DpOT1_ (__f=...) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:60\r\n   #46 0x00007f87d027dbfd in _ZSt8__invokeIZN5arrow8internal10ThreadPool21LaunchWorkersUnlockedEiE3$_3JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS5_DpOS6_ (__fn=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:95\r\n   #47 0x00007f87d027dbd5 in std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> >::_M_invoke<0ul> (this=0x7f87a0011578) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:234\r\n   #48 0x00007f87d027dba5 in std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> >::operator()() (this=0x7f87a0011578) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:243\r\n   #49 0x00007f87d027da39 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> > >::_M_run() (this=0x7f87a0011570)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:186\r\n   #50 0x00007f87cdd3b9b0 in std::execute_native_thread_routine (__p=<optimized out>)\r\n       at /home/conda/feedstock_root/build_artifacts/gcc_compilers_1628138005912/work/build/x86_64-conda-linux-gnu/libstdc++-v3/include/bits/new_allocator.h:82\r\n   #51 0x00007f88565ef6db in start_thread (arg=0x7f879e7fc700) at pthread_create.c:463\r\n   #52 0x00007f885596b71f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:22:09.320+0000",
                    "updated": "2022-01-07T19:22:09.320+0000",
                    "started": "2022-01-07T19:22:09.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705206",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007681528\n\n\n   Thanks for the help Weston, this last commit should fix the deadlock\u2026though I still occasionally see that `OSError`, but I think we can try to track that down separately.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T19:32:38.020+0000",
                    "updated": "2022-01-07T19:32:38.020+0000",
                    "started": "2022-01-07T19:32:38.020+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705211",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007703162\n\n\n   1) Filed ARROW-15285 for the OSError, though, it seems quite rare (2/200 runs)\r\n   2) Increasing partitions to 16 causes it to hang again\u2026taking a look\u2026\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T20:07:32.697+0000",
                    "updated": "2022-01-07T20:07:32.697+0000",
                    "started": "2022-01-07T20:07:32.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705226",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007706164\n\n\n   It's the same hang with 16 partitions so I think we will need a CloseAsync().\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T20:11:58.189+0000",
                    "updated": "2022-01-07T20:11:58.189+0000",
                    "started": "2022-01-07T20:11:58.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705232",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007726131\n\n\n   Ah, the fundamental issue is S3FS implements writes asynchronously (unless background_writes=False), but our file interfaces are still mostly synchronous, and the dataset writer is asynchronous, using the thread pool to manage parallelism\u2026so we have nested parallelism. Setting background_writes=False fixes it by breaking this loop, the other way will be to have at least CloseAsync().\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T20:40:29.884+0000",
                    "updated": "2022-01-07T20:40:29.884+0000",
                    "started": "2022-01-07T20:40:29.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705242",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm edited a comment on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007667064\n\n\n   Surprisingly it is the I/O thread pool:\r\n   \r\n   ```\r\n   (gdb) info thread\r\n     Id   Target Id         Frame \r\n   * 1    Thread 0x7f8856a04740 (LWP 27248) \"python\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x5622ee0e97e8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   ...snip...\r\n     29   Thread 0x7f879e7fc700 (LWP 27276) \"Io-7\" 0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, \r\n       expected=0, futex_word=0x7f87900051e0) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     30   Thread 0x7f879d3ff700 (LWP 27277) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a794) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n     31   Thread 0x7f878ffff700 (LWP 27278) \"jemalloc_bg_thd\" 0x00007f88565f5ad3 in futex_wait_cancelable (\r\n       private=<optimized out>, expected=0, futex_word=0x7f87cd40a864) at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   (gdb) t 29\r\n   [Switching to thread 29 (Thread 0x7f879e7fc700 (LWP 27276))]\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   88\tin ../sysdeps/unix/sysv/linux/futex-internal.h\r\n   (gdb) bt\r\n   (gdb) bt\r\n   #0  0x00007f88565f5ad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x7f87900051e0)\r\n       at ../sysdeps/unix/sysv/linux/futex-internal.h:88\r\n   #1  __pthread_cond_wait_common (abstime=0x0, mutex=0x7f8790005190, cond=0x7f87900051b8) at pthread_cond_wait.c:502\r\n   #2  __pthread_cond_wait (cond=0x7f87900051b8, mutex=0x7f8790005190) at pthread_cond_wait.c:655\r\n   #3  0x00007f87cdd374ad in __gthread_cond_wait (\r\n       __mutex=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       __cond=<optimized out>)\r\n       at /home/conda/feedstock_root/build_artifacts/gcc_compilers_1628138005912/work/build/x86_64-conda-linux-gnu/libstdc++-v3/src/c++11/condition_variable.cc:865\r\n   #4  std::__condvar::wait (__m=<error reading variable: dwarf2_find_location_expression: Corrupted DWARF expression.>, \r\n       this=<optimized out>) at ../../../../../libstdc++-v3/src/c++11/gthr-default.h:155\r\n   #5  std::condition_variable::wait (this=<optimized out>, __lock=...)\r\n       at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41\r\n   #6  0x00007f87d1420c11 in std::condition_variable::wait<arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}>(std::unique_lock<std::mutex>&, arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush()::{lambda()#1}) (\r\n       this=0x7f87900051b8, __lock=..., __p=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/condition_variable:99\r\n   #7  0x00007f87d141ba1e in arrow::fs::(anonymous namespace)::ObjectOutputStream::Flush (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1301\r\n   #8  0x00007f87d141bfe0 in arrow::fs::(anonymous namespace)::ObjectOutputStream::Close (this=0x7f879000add0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/filesystem/s3fs.cc:1218\r\n   #9  0x00007f87d141c66d in virtual thunk to arrow::fs::(anonymous namespace)::ObjectOutputStream::Close() ()\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/hashtable.h:492\r\n   #10 0x00007f87c7d7d907 in arrow::dataset::FileWriter::Finish (this=0x7f8788007d80)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/file_base.cc:322\r\n   #11 0x00007f87c7d59040 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoFinish (\r\n       this=0x7f87b000b5f0) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/dataset_writer.cc:221\r\n   #12 0x00007f87c7d58ee6 in arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}::operator()() const (this=0x7f87b00088c8)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/dataset/dataset_writer.cc:196\r\n   #13 0x00007f87c7d58e80 in arrow::detail::ContinueFuture::operator()<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, , arrow::Status, arrow::Future<arrow::internal::Empty> > (\r\n       this=0x7f879e7fb268, next=..., f=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:148\r\n   #14 0x00007f87c7d58d42 in arrow::detail::ContinueFuture::IgnoringArgsIf<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>, arrow::internal const&>(std::integral_constant<bool, true>, arrow::Future<arrow::internal::Empty>&&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}&&, arrow::internal const&) const (this=0x7f879e7fb268, next=..., f=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:186\r\n   #15 0x00007f87c7d58c3d in arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> >::operator()(arrow::Result<arrow::internal::Empty> const&) && (this=0x7f87b00088c8, result=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:599\r\n   #16 0x00007f87c7d58bb2 in arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> > >::operator()(arrow::FutureImpl const&) && (this=0x7f87b00088c8, impl=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:496\r\n   #17 0x00007f87c7d58b76 in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<arrow::internal::Empty>::WrapResultyOnComplete::Callback<arrow::Future<arrow::internal::Empty>::ThenOnComplete<arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::DoDestroy()::{lambda()#1}, arrow::Future<arrow::internal::Empty>::PassthruOnFailure<{lambda()#1}> > > >::invoke(arrow::FutureImpl const&) (this=0x7f87b00088c0, a=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #18 0x00007f87d023220f in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator()(arrow::FutureImpl const&) && (this=0x7f87b00065e0, a=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   #19 0x00007f87d0231b61 in arrow::ConcreteFutureImpl::RunOrScheduleCallback (self=..., callback_record=..., \r\n       in_add_callback=false) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:298\r\n   #20 0x00007f87d023160f in arrow::ConcreteFutureImpl::DoMarkFinishedOrFailed (this=0x7f87b000ba60, \r\n       state=arrow::FutureState::SUCCESS) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:327\r\n   #21 0x00007f87d022f9ca in arrow::ConcreteFutureImpl::DoMarkFinished (this=0x7f87b000ba60)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:231\r\n   #22 0x00007f87d022cc9d in arrow::FutureImpl::MarkFinished (this=0x7f87b000ba60)\r\n   ---Type <return> to continue, or q <return> to quit---\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:383\r\n   #23 0x00007f87d01ce812 in arrow::Future<arrow::internal::Empty>::DoMarkFinished (this=0x7f87b000b688, res=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:712\r\n   #24 0x00007f87d01ccfa4 in arrow::Future<arrow::internal::Empty>::MarkFinished<arrow::internal::Empty, void> (\r\n       this=0x7f87b000b688, s=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:463\r\n   #25 0x00007f87d01cb4ed in arrow::util::SerializedAsyncTaskGroup::ConsumeAsMuchAsPossibleUnlocked (this=0x7f87b000b688, \r\n       guard=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/async_util.cc:143\r\n   #26 0x00007f87d01cc9c0 in arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}::operator()(arrow::Status const&) const (this=0x7f8788009c38, st=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/async_util.cc:164\r\n   #27 0x00007f87d01cc92a in arrow::Future<arrow::internal::Empty>::WrapStatusyOnComplete::Callback<arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}>::operator()(arrow::FutureImpl const&) && (this=0x7f8788009c38, impl=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:509\r\n   #28 0x00007f87d01cc8e6 in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<arrow::internal::Empty>::WrapStatusyOnComplete::Callback<arrow::util::SerializedAsyncTaskGroup::TryDrainUnlocked()::$_2::operator()() const::{lambda(arrow::Status const&)#1}> >::invoke(arrow::FutureImpl const&) (this=0x7f8788009c30, a=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #29 0x00007f87d023220f in arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator()(arrow::FutureImpl const&) && (this=0x7f8788002610, a=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   #30 0x00007f87d0231b61 in arrow::ConcreteFutureImpl::RunOrScheduleCallback (self=..., callback_record=..., \r\n       in_add_callback=false) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:298\r\n   #31 0x00007f87d023160f in arrow::ConcreteFutureImpl::DoMarkFinishedOrFailed (this=0x7f8794019890, \r\n       state=arrow::FutureState::SUCCESS) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:327\r\n   #32 0x00007f87d022f9ca in arrow::ConcreteFutureImpl::DoMarkFinished (this=0x7f8794019890)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:231\r\n   #33 0x00007f87d022cc9d in arrow::FutureImpl::MarkFinished (this=0x7f8794019890)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.cc:383\r\n   #34 0x00007f87d01ce812 in arrow::Future<arrow::internal::Empty>::DoMarkFinished (this=0x7f879e7fbac0, res=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:712\r\n   #35 0x00007f87d01ccfa4 in arrow::Future<arrow::internal::Empty>::MarkFinished<arrow::internal::Empty, void> (\r\n       this=0x7f879e7fbac0, s=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:463\r\n   #36 0x00007f87c7d5823d in _ZNK5arrow6detail14ContinueFutureclIRZNS_7dataset8internal12_GLOBAL__N_122DatasetWriterFileQueue9WriteNextESt10shared_ptrINS_11RecordBatchEEE9WriteTaskJENS_6StatusENS_6FutureINS_8internal5EmptyEEEEENSt9enable_ifIXaaaantsr3std7is_voidIT1_EE5valuentsr9is_futureISI_EE5valueoontsrT2_8is_emptysr3std7is_sameISI_SC_EE5valueEvE4typeESJ_OT_DpOT0_\r\n       (this=0x7f8788003fe8, next=..., f=...) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/future.h:148\r\n   #37 0x00007f87c7d581b3 in std::__invoke_impl<void, arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&>(std::__invoke_other, arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&) (\r\n       __f=..., __args=..., __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:60\r\n   #38 0x00007f87c7d580e7 in std::__invoke<arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&>(arrow::detail::ContinueFuture&, arrow::Future<arrow::internal::Empty>&, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask&) (__fn=..., __args=..., __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:95\r\n   #39 0x00007f87c7d58092 in std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) (this=0x7f8788003fe8, __args=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/functional:467\r\n   #40 0x00007f87c7d58026 in std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)>::operator()<, void>() (this=0x7f8788003fe8)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/functional:549\r\n   #41 0x00007f87c7d57ff1 in arrow::internal::FnOnce<void ()>::FnImpl<std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::dataset::internal::(anonymous namespace)::DatasetWriterFileQueue::WriteNext(std::shared_ptr<arrow::RecordBatch>)::WriteTask)> >::invoke() (this=0x7f8788003fe0)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:152\r\n   #42 0x00007f87d027e85a in arrow::internal::FnOnce<void ()>::operator()() && (this=0x7f879e7fbd10)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/functional.h:140\r\n   ---Type <return> to continue, or q <return> to quit---\r\n   #43 0x00007f87d027e03f in arrow::internal::WorkerLoop (state=..., it=...)\r\n       at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/thread_pool.cc:185\r\n   #44 0x00007f87d027dce3 in arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3::operator()() const (\r\n       this=0x7f87a0011578) at /home/lidavidm/Code/upstream/arrow-15265/cpp/src/arrow/util/thread_pool.cc:363\r\n   #45 0x00007f87d027dc6d in _ZSt13__invoke_implIvZN5arrow8internal10ThreadPool21LaunchWorkersUnlockedEiE3$_3JEET_St14__invoke_otherOT0_DpOT1_ (__f=...) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:60\r\n   #46 0x00007f87d027dbfd in _ZSt8__invokeIZN5arrow8internal10ThreadPool21LaunchWorkersUnlockedEiE3$_3JEENSt15__invoke_resultIT_JDpT0_EE4typeEOS5_DpOS6_ (__fn=...)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/invoke.h:95\r\n   #47 0x00007f87d027dbd5 in std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> >::_M_invoke<0ul> (this=0x7f87a0011578) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:234\r\n   #48 0x00007f87d027dba5 in std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> >::operator()() (this=0x7f87a0011578) at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:243\r\n   #49 0x00007f87d027da39 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_3> > >::_M_run() (this=0x7f87a0011570)\r\n       at /usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/thread:186\r\n   #50 0x00007f87cdd3b9b0 in std::execute_native_thread_routine (__p=<optimized out>)\r\n       at /home/conda/feedstock_root/build_artifacts/gcc_compilers_1628138005912/work/build/x86_64-conda-linux-gnu/libstdc++-v3/include/bits/new_allocator.h:82\r\n   #51 0x00007f88565ef6db in start_thread (arg=0x7f879e7fc700) at pthread_create.c:463\r\n   #52 0x00007f885596b71f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T10:10:26.512+0000",
                    "updated": "2022-01-08T10:10:26.512+0000",
                    "started": "2022-01-08T10:10:26.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705470",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#discussion_r780457910\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/dataset_writer.cc\n##########\n@@ -328,12 +328,12 @@ class DatasetWriterDirectoryQueue : public util::AsyncDestroyable {\n   uint64_t rows_written() const { return rows_written_; }\n \n   void PrepareDirectory() {\n-    init_future_ =\n-        DeferNotOk(write_options_.filesystem->io_context().executor()->Submit([this] {\n+    init_future_ = DeferNotOk(\n+        write_options_.filesystem->io_context().executor()->Submit([this]() -> Future<> {\n\nReview comment:\n       It would probably be a good addition to allow executor submission tasks to return futures but I don't think this actually works today.  The future you are returning from the task will be discarded without being awaited.\r\n   \r\n   I think you'll need to change it to...\r\n   \r\n   `init_future_ = SubmitTask(CreateDir).Then(DeleteDirContentsAsync);`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T10:13:16.844+0000",
                    "updated": "2022-01-08T10:13:16.844+0000",
                    "started": "2022-01-08T10:13:16.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705498",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007645730\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T10:13:20.788+0000",
                    "updated": "2022-01-08T10:13:20.788+0000",
                    "started": "2022-01-08T10:13:20.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705499",
                    "issueId": "13420936"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/worklog/705533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #12099:\nURL: https://github.com/apache/arrow/pull/12099#issuecomment-1007647894\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-08T10:16:33.179+0000",
                    "updated": "2022-01-08T10:16:33.179+0000",
                    "started": "2022-01-08T10:16:33.178+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "705533",
                    "issueId": "13420936"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 19800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@71d856b0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45fc5cbc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@704eff68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@57705461[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72ac1ce3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@331e5df6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34ac5142[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@61aad8ea[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73738b38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3243994d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6433e806[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@53e911e2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 12 20:32:23 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-12T20:32:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15265/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-01-05T23:07:48.000+0000",
        "updated": "2022-01-13T20:10:03.000+0000",
        "timeoriginalestimate": null,
        "description": "I'm attempting to use use the {{existing_data_behavior=\"delete_matching\"}} option when using {{ds.write_dataset}} to write a hive partitioned parquet file to S3. This seems to work perfectly fine when the table being written is creating 7 or fewer partitions, but as soon as the partition column in the table has an 8th unique value the write completely hangs.\r\n\r\n\u00a0\r\n{code:java}\r\nimport numpy as np\r\nimport pyarrow as pa\r\nfrom pyarrow import fs\r\nimport pyarrow.dataset as ds\r\n\r\nbucket = \"my-bucket\"\r\ns3 = fs.S3FileSystem()\r\n\r\ncols_7 = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\r\ntable_7 = pa.table(\r\n    {\"col1\": cols_7 * 5, \"col2\": np.random.randn(len(cols_7) * 5)}\r\n)\r\n# succeeds\r\nds.write_dataset(\r\n    data=table_7,\r\n    base_dir=f\"{bucket}/test7.parquet\",\r\n    format=\"parquet\",\r\n    partitioning=[\"col1\"],\r\n    partitioning_flavor=\"hive\",\r\n    filesystem=s3,\r\n    existing_data_behavior=\"delete_matching\",\r\n)\r\n\r\ncols_8 = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\r\ntable_8 = pa.table(\r\n    {\"col1\": cols_8 * 5, \"col2\": np.random.randn(len(cols_8) * 5)}\r\n)\r\n# this hangs\r\nds.write_dataset(\r\n    data=table_8,\r\n    base_dir=f\"{bucket}/test8.parquet\",\r\n    format=\"parquet\",\r\n    partitioning=[\"col1\"],\r\n    partitioning_flavor=\"hive\",\r\n    filesystem=s3,\r\n    existing_data_behavior=\"delete_matching\",\r\n) {code}\r\nFor the file with 8 partitions, the directory structure is created in S3 but no actual files are written before hanging.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python][Dataset] write_dataset with delete_matching hangs when the number of partitions is too large",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/comment/17470724",
                    "id": "17470724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks for the report. I can reproduce this with 6.0.1 and Minio, including that the directories are created but the write itself hangs. It also occurs on the development branch.\r\n\r\nI haven't dug fully into this yet, but it seems what happens is that DeleteDir is synchronous, but is implemented underneath asynchronously by blocking upon a future. One DeleteDir call is made per partition, and the blocking happens on the IO thread pool. The IO thread pool has 8 threads by default, so with 8 partitions, all 8 threads are now being occupied. But DeleteDir's implementation works by spawning ListObjectsV2 call requests on the same IO thread pool. So no progress can be made.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-01-07T16:17:33.419+0000",
                    "updated": "2022-01-07T16:17:33.419+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/comment/17470726",
                    "id": "17470726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "{{pa.set_io_thread_count(N)}} where {{N > (# partitions)}} unblocks it, though then I see a different error: {{{}OSError: Path does not exist 'my-bucket/test8.parquet/col1=c'{}}}(where the partition in question changes every time, i.e. it's not deterministic)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-01-07T16:18:52.160+0000",
                    "updated": "2022-01-07T16:18:52.160+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/comment/17470794",
                    "id": "17470794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks for figuring that out [~lidavidm].  Adding a async version of DeleteDirContents should probably allow us to fix this.  Fortunately, DatasetWriter already expected these calls to become async so it won't be too hard to plug it in.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-01-07T18:24:18.683+0000",
                    "updated": "2022-01-07T18:24:18.683+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420936/comment/17474940",
                    "id": "17474940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 12099\n[https://github.com/apache/arrow/pull/12099]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-01-12T20:32:23.902+0000",
                    "updated": "2022-01-12T20:32:23.902+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yafk:",
        "customfield_12314139": null
    }
}