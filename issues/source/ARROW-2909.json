{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13174394",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394",
    "key": "ARROW-2909",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342901",
                "id": "12342901",
                "description": "",
                "name": "JS-0.4.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-02-11"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2909/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/127355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit opened a new pull request #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322\n \n \n   Simplifies the creating of a `Table` from JS Arrays:\r\n   \r\n   ```js\r\n   const LENGTH = 20000;\r\n   \r\n   const idVec = Arrow.vector.IntVector.from(\r\n     Uint32Array.from({length: LENGTH}, () => Math.round(Math.random() * 2E9))\r\n   );\r\n   const latVec = Arrow.vector.FloatVector.from(\r\n     Float32Array.from({length: LENGTH}, () => Number((Math.random() * 180 - 90).toFixed(1)))\r\n   );\r\n   const lngVec = Arrow.vector.FloatVector.from(\r\n     Float32Array.from({length: LENGTH}, () => Number((Math.random() * 360 - 180).toFixed(1)))\r\n   );\r\n   \r\n   const table = Arrow.Table.fromVectors([idVec, latVec, lngVec], ['id', 'lat', 'lng'])\r\n   \r\n   onsole.log(table.schema.fields.map((f) => f.name));\r\n   // [ 'id', 'lat', 'lng' ]\r\n   \r\n   console.log(table.schema.fields.map((f) => f.type));\r\n   // [ Uint32 [Int] { TType: 2, children: undefined, isSigned: false, bitWidth: 32 },\r\n   //   Float32 [Float] { TType: 3, children: undefined, precision: 1 },\r\n   //   Float32 [Float] { TType: 3, children: undefined, precision: 1 } ]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-25T15:50:15.776+0000",
                    "updated": "2018-07-25T15:50:15.776+0000",
                    "started": "2018-07-25T15:50:15.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "127355",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/127375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322#issuecomment-407819436\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=h1) Report\n   > Merging [#2322](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f01960194e6d5f7930fa4e6b756ef5a24a9d7313?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2322/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2322      +/-   ##\n   ==========================================\n   - Coverage   84.46%   84.46%   -0.01%     \n   ==========================================\n     Files         293      293              \n     Lines       45112    45112              \n   ==========================================\n   - Hits        38103    38102       -1     \n   - Misses       6978     6979       +1     \n     Partials       31       31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2322/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <0%> (-0.55%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=footer). Last update [f019601...9fb6050](https://codecov.io/gh/apache/arrow/pull/2322?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-25T16:41:53.632+0000",
                    "updated": "2018-07-25T16:41:53.632+0000",
                    "started": "2018-07-25T16:41:53.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "127375",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/134842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322#issuecomment-413093147\n \n \n   @trxcllnt what do you think?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-15T04:47:02.489+0000",
                    "updated": "2018-08-15T04:47:02.489+0000",
                    "started": "2018-08-15T04:47:02.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "134842",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/135741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322#issuecomment-413919293\n \n \n   Note the README change in this PR will only work once #2445 is merged\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-17T16:28:08.715+0000",
                    "updated": "2018-08-17T16:28:08.715+0000",
                    "started": "2018-08-17T16:28:08.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "135741",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/139872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322#issuecomment-417451321\n \n \n   @TheNeuralBit could you rebase?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-30T20:10:29.620+0000",
                    "updated": "2018-08-30T20:10:29.620+0000",
                    "started": "2018-08-30T20:10:29.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "139872",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/152300",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on issue #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322#issuecomment-427897910\n \n \n   Just rebased this on top of #2726 to fix tests\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-08T16:27:13.631+0000",
                    "updated": "2018-10-08T16:27:13.631+0000",
                    "started": "2018-10-08T16:27:13.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152300",
                    "issueId": "13174394"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/worklog/171816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit closed pull request #2322: ARROW-2909: [JS] Add convenience function for creating a table from a list of vectors\nURL: https://github.com/apache/arrow/pull/2322\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/js/README.md b/js/README.md\nindex e048ba1c1c..15d7ed03f6 100644\n--- a/js/README.md\n+++ b/js/README.md\n@@ -94,26 +94,14 @@ console.log(table.toString());\n ### Create a Table from JavaScript arrays\n \n ```es6\n-const fields = [{\n-        name: 'precipitation',\n-        type: { name: 'floatingpoint', precision: 'SINGLE'},\n-        nullable: false, children: []\n-    }, {\n-        name: 'date',\n-        type: { name: 'date', unit: 'MILLISECOND' },\n-        nullable: false, children: []\n-    }];\n-const rainAmounts = Array.from({length: LENGTH}, () => Number((Math.random() * 20).toFixed(1)));\n-const rainDates = Array.from({length: LENGTH}, (_, i) => Date.now() - 1000 * 60 * 60 * 24 * i);\n-\n const LENGTH = 2000;\n-const rainfall = arrow.Table.from({\n-  schema: { fields: fields },\n-  batches: [{\n-    count: LENGTH,\n-    columns: [\n-      {name: \"precipitation\", count: LENGTH, VALIDITY: [], DATA: rainAmounts },\n-      {name: \"date\",          count: LENGTH, VALIDITY: [], DATA: rainDates } ] }] })\n+const rainAmounts = Float32Array.from({length: LENGTH}, () => Number((Math.random() * 20).toFixed(1)));\n+const rainDates = Array.from({length: LENGTH}, (_, i) => new Date(Date.now() - 1000 * 60 * 60 * 24 * i));\n+\n+const rainfall = arrow.Table.fromVectors(\n+  [FloatVector.from(rainAmounts), DateVector.from(rainDates)],\n+  ['precipitation', 'date']\n+);\n ```\n \n ### Load data with `fetch`\ndiff --git a/js/src/Arrow.externs.js b/js/src/Arrow.externs.js\nindex f01ea5cedc..7ad0665857 100644\n--- a/js/src/Arrow.externs.js\n+++ b/js/src/Arrow.externs.js\n@@ -32,6 +32,8 @@ var Table = function() {};\n /** @type {?} */\n Table.from = function() {};\n /** @type {?} */\n+Table.fromVectors = function() {};\n+/** @type {?} */\n Table.fromAsync = function() {};\n /** @type {?} */\n Table.fromStruct = function() {};\ndiff --git a/js/src/Arrow.ts b/js/src/Arrow.ts\nindex b1f4a3a4fa..c76578b629 100644\n--- a/js/src/Arrow.ts\n+++ b/js/src/Arrow.ts\n@@ -238,6 +238,7 @@ try {\n // set them via string indexers to save them from the mangler\n Schema['from'] = Schema.from;\n Table['from'] = Table.from;\n+Table['fromVectors'] = Table.fromVectors;\n Table['fromAsync'] = Table.fromAsync;\n Table['fromStruct'] = Table.fromStruct;\n Table['empty'] = Table.empty;\ndiff --git a/js/src/recordbatch.ts b/js/src/recordbatch.ts\nindex 91ea5cfbff..cfc236dffc 100644\n--- a/js/src/recordbatch.ts\n+++ b/js/src/recordbatch.ts\n@@ -25,8 +25,8 @@ import { valueToString, leftPad } from './util/pretty';\n import Long = flatbuffers.Long;\n \n export class RecordBatch<T extends StructData = StructData> extends StructVector<T> {\n-    public static from<R extends StructData = StructData>(vectors: Vector[]) {\n-        return new RecordBatch<R>(Schema.from(vectors),\n+    public static from<R extends StructData = StructData>(vectors: Vector[], names?: string[]) {\n+      return new RecordBatch<R>(Schema.from(vectors, names),\n             Math.max(...vectors.map((v) => v.length)),\n             vectors\n         );\ndiff --git a/js/src/table.ts b/js/src/table.ts\nindex 634092f0e4..3559cd84ff 100644\n--- a/js/src/table.ts\n+++ b/js/src/table.ts\n@@ -38,6 +38,9 @@ export interface DataFrame<T extends StructData = StructData> {\n \n export class Table<T extends StructData = StructData> implements DataFrame {\n     static empty<R extends StructData = StructData>() { return new Table<R>(new Schema([]), []); }\n+    static fromVectors<R extends StructData = StructData>(vectors: Vector[], names?: string[]) {\n+       return new Table<R>([RecordBatch.from<R>(vectors, names)])\n+    }\n     static from<R extends StructData = StructData>(sources?: Iterable<Uint8Array | Buffer | string> | object | string) {\n         if (sources) {\n             let schema: Schema | undefined;\n@@ -199,6 +202,10 @@ export class Table<T extends StructData = StructData> implements DataFrame {\n     }\n }\n \n+// protect batches, batchesUnion from es2015/umd mangler\n+(<any> Table.prototype).batches = Object.freeze([]);\n+(<any> Table.prototype).batchesUnion = Object.freeze([]);\n+\n class FilteredDataFrame<T extends StructData = StructData> implements DataFrame<T> {\n     private predicate: Predicate;\n     private batches: RecordBatch<T>[];\ndiff --git a/js/src/type.ts b/js/src/type.ts\nindex 811086c938..3f75903593 100644\n--- a/js/src/type.ts\n+++ b/js/src/type.ts\n@@ -47,8 +47,8 @@ function generateDictionaryMap(fields: Field[]) {\n }\n \n export class Schema {\n-    public static from(vectors: Vector[]) {\n-        return new Schema(vectors.map((v, i) => new Field('' + i, v.type)));\n+    public static from(vectors: Vector[], names?: string[]) {\n+        return new Schema(vectors.map((v, i) => new Field(names ? names[i] : ('' + i), v.type)));\n     }\n     // @ts-ignore\n     protected _bodyLength: number;\ndiff --git a/js/test/unit/table-tests.ts b/js/test/unit/table-tests.ts\nindex 4ee1411d0f..3a90a0d05e 100644\n--- a/js/test/unit/table-tests.ts\n+++ b/js/test/unit/table-tests.ts\n@@ -16,13 +16,20 @@\n // under the License.\n \n import '../jest-extensions';\n+import { TextEncoder } from 'text-encoding-utf-8';\n \n import Arrow, { vector, RecordBatch } from '../Arrow';\n \n const { predicate, Table } = Arrow;\n \n+const { DictionaryVector, IntVector, FloatVector, Utf8Vector } = Arrow.vector;\n+const { Dictionary, Utf8, Int } = Arrow.type;\n+\n const { col, lit, custom, and, or, And, Or } = predicate;\n \n+const utf8Encoder = new TextEncoder('utf-8');\n+\n+const NAMES = ['f32', 'i32', 'dictionary'];\n const F32 = 0, I32 = 1, DICT = 2;\n const test_data = [\n     {\n@@ -336,338 +343,69 @@ function leftPad(str: string, fill: string, n: number) {\n     return (new Array(n + 1).join(fill) + str).slice(-1 * n);\n }\n \n+function makeUtf8Vector(values) {\n+    const n = values.length;\n+    let offset = 0;\n+    const offsets = Uint32Array.of(0, ...values.map((d) => { offset += d.length; return offset; }));\n+    return new Utf8Vector(new Arrow.data.FlatListData(new Utf8(), n, null, offsets, utf8Encoder.encode(values.join(''))));\n+}\n+\n+function getTestVectors(f32Values, i32Values, dictionaryValues) {\n+    const f32Vec = FloatVector.from(\n+        Float32Array.from(f32Values)\n+    );\n+\n+    const i32Vec = IntVector.from(\n+        Int32Array.from(i32Values)\n+    );\n+\n+    const dictionaryVec = new DictionaryVector(\n+        new Arrow.data.DictionaryData(\n+            new Dictionary(new Utf8(), new Int(true, 8)),\n+            makeUtf8Vector(['a', 'b', 'c']),\n+            IntVector.from(Int8Array.from(dictionaryValues)).data\n+        )\n+    );\n+\n+    return [f32Vec, i32Vec, dictionaryVec];\n+}\n+\n export function getSingleRecordBatchTable() {\n-    return Table.from({\n-        'schema': {\n-            'fields': [\n-                {\n-                    'name': 'f32',\n-                    'type': {\n-                        'name': 'floatingpoint',\n-                        'precision': 'SINGLE'\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                },\n-                {\n-                    'name': 'i32',\n-                    'type': {\n-                        'name': 'int',\n-                        'isSigned': true,\n-                        'bitWidth': 32\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'type': {\n-                        'name': 'utf8'\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                    'dictionary': {\n-                        'id': 0,\n-                        'indexType': {\n-                            'name': 'int',\n-                            'isSigned': true,\n-                            'bitWidth': 8\n-                        },\n-                        'isOrdered': false\n-                    }\n-                }\n-            ]\n-        },\n-        'dictionaries': [{\n-            'id': 0,\n-            'data': {\n-                'count': 3,\n-                'columns': [\n-                    {\n-                        'name': 'DICT0',\n-                        'count': 3,\n-                        'VALIDITY': [],\n-                        'OFFSET': [\n-                            0,\n-                            1,\n-                            2,\n-                            3\n-                        ],\n-                        'DATA': [\n-                            'a',\n-                            'b',\n-                            'c',\n-                        ]\n-                    }\n-                ]\n-            }\n-        }],\n-        'batches': [{\n-            'count': 7,\n-            'columns': [\n-                {\n-                    'name': 'f32',\n-                    'count': 7,\n-                    'VALIDITY': [],\n-                    'DATA': [-0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3]\n-                },\n-                {\n-                    'name': 'i32',\n-                    'count': 7,\n-                    'VALIDITY': [],\n-                    'DATA': [-1, 1, -1, 1, -1, 1, -1]\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'count': 7,\n-                    'VALIDITY': [],\n-                    'DATA': [0, 1, 2, 0, 1, 2, 0]\n-                }\n-            ]\n-        }]\n-    });\n+    const vectors = getTestVectors(\n+        [-0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3],\n+        [-1, 1, -1, 1, -1, 1, -1],\n+        [0, 1, 2, 0, 1, 2, 0]\n+    );\n+\n+    return Table.fromVectors(\n+        vectors,\n+        NAMES\n+    );\n }\n \n function getMultipleRecordBatchesTable() {\n-    return Table.from({\n-        'schema': {\n-            'fields': [\n-                {\n-                    'name': 'f32',\n-                    'type': {\n-                        'name': 'floatingpoint',\n-                        'precision': 'SINGLE'\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                },\n-                {\n-                    'name': 'i32',\n-                    'type': {\n-                        'name': 'int',\n-                        'isSigned': true,\n-                        'bitWidth': 32\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'type': {\n-                        'name': 'utf8'\n-                    },\n-                    'nullable': false,\n-                    'children': [],\n-                    'dictionary': {\n-                        'id': 0,\n-                        'indexType': {\n-                            'name': 'int',\n-                            'isSigned': true,\n-                            'bitWidth': 8\n-                        },\n-                        'isOrdered': false\n-                    }\n-                }\n-            ]\n-        },\n-        'dictionaries': [{\n-            'id': 0,\n-            'data': {\n-                'count': 3,\n-                'columns': [\n-                    {\n-                        'name': 'DICT0',\n-                        'count': 3,\n-                        'VALIDITY': [],\n-                        'OFFSET': [\n-                            0,\n-                            1,\n-                            2,\n-                            3\n-                        ],\n-                        'DATA': [\n-                            'a',\n-                            'b',\n-                            'c',\n-                        ]\n-                    }\n-                ]\n-            }\n-        }],\n-        'batches': [{\n-            'count': 3,\n-            'columns': [\n-                {\n-                    'name': 'f32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [-0.3, -0.2, -0.1]\n-                },\n-                {\n-                    'name': 'i32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [-1, 1, -1]\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [0, 1, 2]\n-                }\n-            ]\n-        }, {\n-            'count': 3,\n-            'columns': [\n-                {\n-                    'name': 'f32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [0, 0.1, 0.2]\n-                },\n-                {\n-                    'name': 'i32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [1, -1, 1]\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [0, 1, 2]\n-                }\n-            ]\n-        }, {\n-            'count': 3,\n-            'columns': [\n-                {\n-                    'name': 'f32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [0.3, 0.2, 0.1]\n-                },\n-                {\n-                    'name': 'i32',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [-1, 1, -1]\n-                },\n-                {\n-                    'name': 'dictionary',\n-                    'count': 3,\n-                    'VALIDITY': [],\n-                    'DATA': [0, 1, 2]\n-                }\n-            ]\n-        }]\n-    });\n+    const b1 = Arrow.RecordBatch.from(getTestVectors(\n+        [-0.3, -0.2, -0.1],\n+        [-1, 1, -1],\n+        [0, 1, 2]\n+    ), NAMES);\n+\n+    const b2 = Arrow.RecordBatch.from(getTestVectors(\n+        [0, 0.1, 0.2],\n+        [1, -1, 1],\n+        [0, 1, 2]\n+    ), NAMES);\n+\n+    const b3 = Arrow.RecordBatch.from(getTestVectors(\n+        [0.3, 0.2, 0.1],\n+        [-1, 1, -1],\n+        [0, 1, 2]\n+    ), NAMES);\n+\n+    return new Table([b1, b2, b3])\n }\n \n function getStructTable() {\n-    return Table.from({\n-        'schema': {\n-            'fields': [\n-                {\n-                    'name': 'struct',\n-                    'type': {\n-                        'name': 'struct'\n-                    },\n-                    'nullable': false,\n-                    'children': [\n-                        {\n-                            'name': 'f32',\n-                            'type': {\n-                                'name': 'floatingpoint',\n-                                'precision': 'SINGLE'\n-                            },\n-                            'nullable': false,\n-                            'children': [],\n-                        },\n-                        {\n-                            'name': 'i32',\n-                            'type': {\n-                                'name': 'int',\n-                                'isSigned': true,\n-                                'bitWidth': 32\n-                            },\n-                            'nullable': false,\n-                            'children': [],\n-                        },\n-                        {\n-                            'name': 'dictionary',\n-                            'type': {\n-                                'name': 'utf8'\n-                            },\n-                            'nullable': false,\n-                            'children': [],\n-                            'dictionary': {\n-                                'id': 0,\n-                                'indexType': {\n-                                    'name': 'int',\n-                                    'isSigned': true,\n-                                    'bitWidth': 8\n-                                },\n-                                'isOrdered': false\n-                            }\n-                        }\n-                    ]\n-                }\n-            ]\n-        },\n-        'dictionaries': [{\n-            'id': 0,\n-            'data': {\n-                'count': 3,\n-                'columns': [\n-                    {\n-                        'name': 'DICT0',\n-                        'count': 3,\n-                        'VALIDITY': [],\n-                        'OFFSET': [\n-                            0,\n-                            1,\n-                            2,\n-                            3\n-                        ],\n-                        'DATA': [\n-                            'a',\n-                            'b',\n-                            'c',\n-                        ]\n-                    }\n-                ]\n-            }\n-        }],\n-        'batches': [{\n-            'count': 7,\n-            'columns': [\n-                {\n-                    'name': 'struct',\n-                    'count': 7,\n-                    'VALIDITY': [],\n-                    'children': [\n-                        {\n-                            'name': 'f32',\n-                            'count': 7,\n-                            'VALIDITY': [],\n-                            'DATA': [-0.3, -0.2, -0.1, 0, 0.1, 0.2, 0.3]\n-                        },\n-                        {\n-                            'name': 'i32',\n-                            'count': 7,\n-                            'VALIDITY': [],\n-                            'DATA': [-1, 1, -1, 1, -1, 1, -1]\n-                        },\n-                        {\n-                            'name': 'dictionary',\n-                            'count': 7,\n-                            'VALIDITY': [],\n-                            'DATA': [0, 1, 2, 0, 1, 2, 0]\n-                        }\n-                    ]\n-                }\n-            ]\n-        }]\n-    });\n+    const structVec = getSingleRecordBatchTable().batchesUnion\n+    return Table.fromVectors([structVec], ['struct'])\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-04T03:12:53.470+0000",
                    "updated": "2018-12-04T03:12:53.470+0000",
                    "started": "2018-12-04T03:12:53.469+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171816",
                    "issueId": "13174394"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@24d3e953[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3dece444[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3321bd3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59a60135[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1022726a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2f2abbf1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cd5d144[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5593d042[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56a159b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2c2e95ae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ee33e9e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@75b9f8c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Dec 04 03:16:27 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-04T03:16:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2909/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-07-25T15:47:30.000+0000",
        "updated": "2018-12-04T03:16:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Similar to ARROW-2766, but requires users to first turn their arrays into vectors, so we don't have to deduce type.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Add convenience function for creating a table from a list of vectors",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13174394/comment/16708139",
                    "id": "16708139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "Issue resolved by pull request 2322\n[https://github.com/apache/arrow/pull/2322]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2018-12-04T03:16:27.354+0000",
                    "updated": "2018-12-04T03:16:27.354+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3w9wn:",
        "customfield_12314139": null
    }
}