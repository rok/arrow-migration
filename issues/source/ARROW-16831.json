{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13450087",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087",
    "key": "ARROW-16831",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ccasola",
            "name": "ccasola",
            "key": "JIRAUSER280257",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hoff",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ccasola",
            "name": "ccasola",
            "key": "JIRAUSER280257",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hoff",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ccasola",
            "name": "ccasola",
            "key": "JIRAUSER280257",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chris Hoff",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16831/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chriscasola opened a new pull request, #13381:\nURL: https://github.com/apache/arrow/pull/13381\n\n   Add a check for invalid offsets in a string array and panic. This\r\n   prevents panic'ing later when accessing the column data or\r\n   attempting to write it with ipc.Writer.\n\n\n",
                    "created": "2022-06-14T19:41:07.507+0000",
                    "updated": "2022-06-14T19:41:07.507+0000",
                    "started": "2022-06-14T19:41:07.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781364",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#issuecomment-1155640166\n\n   https://issues.apache.org/jira/browse/ARROW-16831\n\n\n",
                    "created": "2022-06-14T19:41:31.688+0000",
                    "updated": "2022-06-14T19:41:31.688+0000",
                    "started": "2022-06-14T19:41:31.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781365",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897274054\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,12 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif a.array.data.length > 0 &&\n+\t\t(len(a.offsets) < expNumOffsets || int(a.offsets[expNumOffsets-2]) > len(a.values)) {\n+\t\tpanic(\"arrow/array: string offsets out of bounds of data buffer\")\n+\t}\n\nReview Comment:\n   is the `a.array.data.length > 0` actually needed? Also, shouldn't this be `len(a.offsets) >= expNumOffsets` ?\r\n   \r\n   `a.offsets[expNumOffsets-2]` would be incorrect, why the -2? `a.offsets[expNumOffset]` should be the final byte.\n\n\n\n",
                    "created": "2022-06-14T20:06:50.990+0000",
                    "updated": "2022-06-14T20:06:50.990+0000",
                    "started": "2022-06-14T20:06:50.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781369",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897275987\n\n\n##########\ngo/arrow/array/string_test.go:\n##########\n@@ -206,3 +206,37 @@ func TestStringReset(t *testing.T) {\n \n \tassert.Equal(t, \"string1\", string2.Value(0))\n }\n+\n+func TestStringInvalidOffsets(t *testing.T) {\n+\tconst expectedPanic = \"arrow/array: string offsets out of bounds of data buffer\"\n+\n+\tmakeBuffers := func(offsets []int32, data string) []*memory.Buffer {\n+\t\toffsetBuf := memory.NewBufferBytes(arrow.Int32Traits.CastToBytes(offsets))\n+\t\treturn []*memory.Buffer{nil, offsetBuf, memory.NewBufferBytes([]byte(data))}\n+\t}\n+\n+\tassert.NotPanics(t, func() {\n+\t\tbuffers := makeBuffers([]int32{}, \"\")\n+\t\tarray.NewStringData(array.NewData(arrow.BinaryTypes.String, 0, buffers, nil, 0, 0))\n+\t}, \"empty array has no offsets\")\n+\n+\tassert.NotPanics(t, func() {\n+\t\tbuffers := makeBuffers([]int32{0, 5}, \"\")\n\nReview Comment:\n   this is an invalid string array and should be erroring. The offsets indicate that the value for index 0 should be 5 bytes long, but your data array is empty. This is invalid.\n\n\n\n",
                    "created": "2022-06-14T20:09:21.233+0000",
                    "updated": "2022-06-14T20:09:21.233+0000",
                    "started": "2022-06-14T20:09:21.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781370",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897281793\n\n\n##########\ngo/arrow/array/string_test.go:\n##########\n@@ -206,3 +206,37 @@ func TestStringReset(t *testing.T) {\n \n \tassert.Equal(t, \"string1\", string2.Value(0))\n }\n+\n+func TestStringInvalidOffsets(t *testing.T) {\n\nReview Comment:\n   should probably add some cases with 0 length values and with nulls\n\n\n\n",
                    "created": "2022-06-14T20:16:47.056+0000",
                    "updated": "2022-06-14T20:16:47.056+0000",
                    "started": "2022-06-14T20:16:47.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781373",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781376",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chriscasola commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897288469\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,12 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif a.array.data.length > 0 &&\n+\t\t(len(a.offsets) < expNumOffsets || int(a.offsets[expNumOffsets-2]) > len(a.values)) {\n+\t\tpanic(\"arrow/array: string offsets out of bounds of data buffer\")\n+\t}\n\nReview Comment:\n   The length check is needed because if length is 0 it appears that lots of things allow `len(a.offsets)` to also be `0`. The offsets seem to be ignored in that case.\r\n   \r\n   I think `len(a.offsets) < expNumOffsets` is correct. If there aren't at least `expNumOffsets` we should panic. If there are extra offsets we can't panic because that can happen in slice scenarios like `array.NewSliceData` (unit tests seem to confirm this).\r\n   \r\n   `a.offsets[expNumOffsets-2]` is where the last value in the array starts and it must be less than `len(a.values)`. I'll change the `>` to a `>=`. The final byte, indicated by `a.offsets[expNumOffsets-1]` seems to be allowed to overflow and be gracefully handled, based on [this test](https://github.com/apache/arrow/blob/master/go/arrow/array/concat_test.go#L293), which is why I am not checking it.\n\n\n\n",
                    "created": "2022-06-14T20:25:27.965+0000",
                    "updated": "2022-06-14T20:25:27.965+0000",
                    "started": "2022-06-14T20:25:27.965+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781376",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897308624\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,12 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif a.array.data.length > 0 &&\n+\t\t(len(a.offsets) < expNumOffsets || int(a.offsets[expNumOffsets-2]) > len(a.values)) {\n+\t\tpanic(\"arrow/array: string offsets out of bounds of data buffer\")\n+\t}\n\nReview Comment:\n   Ah I flipped the condition in my head, the `>=` is what indicates it's valid and as such `<` is telling that it's invalid. That's my bad.\r\n   \r\n   Looking at the test you're referencing however, it's considered an *error* if it overflows like that. The fact that arrays can be constructed easily by putting the buffers together can result in such an overflow occurring (because right now we don't validate it) but notice that it's expected that the call to `Concatenate` would return an error in such a case because that is not a valid array. If we're going to panic if someone tries constructing such an invalid array then we can probably remove that test since the situation could never occur (which also means this should probably have a corresponding change in `binary.go` for `Binary` arrays.\r\n   \r\n   If we allow the last offset to go past the end of the data slice, it doesn't solve the original panic you were trying to prevent in the first place as calling `ValueBytes` would still result in an out of bounds panic in that situation.\n\n\n\n",
                    "created": "2022-06-14T20:50:25.041+0000",
                    "updated": "2022-06-14T20:50:25.041+0000",
                    "started": "2022-06-14T20:50:25.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781382",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chriscasola commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r897331203\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,12 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif a.array.data.length > 0 &&\n+\t\t(len(a.offsets) < expNumOffsets || int(a.offsets[expNumOffsets-2]) > len(a.values)) {\n+\t\tpanic(\"arrow/array: string offsets out of bounds of data buffer\")\n+\t}\n\nReview Comment:\n   Are you okay with the `Concatenate` error becoming a panic?\r\n   \r\n   I can remove the logic that allows the last offset to overflow and apply this fix to binary arrays as well.\r\n   \r\n   Also, I said I would change `int(a.offsets[expNumOffsets-2]) > len(a.values)` to `int(a.offsets[expNumOffsets-2]) >= len(a.values)` but that doesn't work if the last value in the string array is empty string. In that case the last offset will be equal to `len(a.values)`, so I'm going to leave it as I had it.\r\n   \r\n   > If we allow the last offset to go past the end of the data slice, it doesn't solve the original panic you were trying to prevent in the first place as calling ValueBytes would still result in an out of bounds panic in that situation.\r\n   \r\n   It actually does still solve my original panic. My original issue would be caught because the second-to-last offset was also past the end.\n\n\n\n",
                    "created": "2022-06-14T21:18:47.780+0000",
                    "updated": "2022-06-14T21:18:47.780+0000",
                    "started": "2022-06-14T21:18:47.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781394",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898022858\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,12 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif a.array.data.length > 0 &&\n+\t\t(len(a.offsets) < expNumOffsets || int(a.offsets[expNumOffsets-2]) > len(a.values)) {\n+\t\tpanic(\"arrow/array: string offsets out of bounds of data buffer\")\n+\t}\n\nReview Comment:\n   I'd prefer the Concatenate error to still be an error if possible, but I'm okay with it being a panic. That said, I don't want to rely on the second-to-last offset, we should follow the Arrow spec and either rely on the last offset or not add this check at all. Alternately we could follow the C++ path and add a Validate function to the arrays and then check that in the reader so we can return an error. \r\n   \r\n   Either way, I don't like relying on the second-to-last offset\n\n\n\n",
                    "created": "2022-06-15T14:01:08.977+0000",
                    "updated": "2022-06-15T14:01:08.977+0000",
                    "started": "2022-06-15T14:01:08.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781675",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898153389\n\n\n##########\ngo/arrow/array/concat_test.go:\n##########\n@@ -289,13 +288,3 @@ func (cts *ConcatTestSuite) TestCheckConcat() {\n \t\t})\n \t}\n }\n-\n-func TestOffsetOverflow(t *testing.T) {\n-\tfakeOffsets := memory.NewBufferBytes(arrow.Int32Traits.CastToBytes([]int32{0, math.MaxInt32}))\n-\tfakeArr := array.NewStringData(array.NewData(arrow.BinaryTypes.String, 1, []*memory.Buffer{nil, fakeOffsets, memory.NewBufferBytes([]byte{})}, nil, 0, 0))\n-\tvar err error\n-\tassert.NotPanics(t, func() {\n-\t\t_, err = array.Concatenate([]arrow.Array{fakeArr, fakeArr}, memory.DefaultAllocator)\n-\t})\n-\tassert.EqualError(t, err, \"offset overflow while concatenating arrays\")\n-}\n\nReview Comment:\n   Since you added the recover to the concatenate function, it might make sense to leave this test so that we are testing the recover is working correctly and returning the error\n\n\n\n",
                    "created": "2022-06-15T15:52:29.415+0000",
                    "updated": "2022-06-15T15:52:29.415+0000",
                    "started": "2022-06-15T15:52:29.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781710",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898154949\n\n\n##########\ngo/arrow/array/string.go:\n##########\n@@ -113,6 +113,19 @@ func (a *String) setData(data *Data) {\n \tif offsets := data.buffers[1]; offsets != nil {\n \t\ta.offsets = arrow.Int32Traits.CastFromBytes(offsets.Bytes())\n \t}\n+\n+\tif a.array.data.length < 1 {\n+\t\treturn\n+\t}\n+\n+\texpNumOffsets := a.array.data.offset + a.array.data.length + 1\n+\tif len(a.offsets) < expNumOffsets {\n+\t\tpanic(\"arrow/array: string offsets missing\")\n\nReview Comment:\n   let's add a little more detail on this error message:\r\n   \r\n   `panic(fmt.Errorf(\"arrow/array: string offset buffer must have at least %d values\", expNumOffsets))`\n\n\n\n",
                    "created": "2022-06-15T15:53:49.675+0000",
                    "updated": "2022-06-15T15:53:49.675+0000",
                    "started": "2022-06-15T15:53:49.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781711",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#issuecomment-1156651266\n\n   @chriscasola can you add the same changes to `binary.go` for Binary arrays also please?\n\n\n",
                    "created": "2022-06-15T15:57:47.701+0000",
                    "updated": "2022-06-15T15:57:47.701+0000",
                    "started": "2022-06-15T15:57:47.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781714",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chriscasola commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898282386\n\n\n##########\ngo/arrow/array/concat_test.go:\n##########\n@@ -289,13 +288,3 @@ func (cts *ConcatTestSuite) TestCheckConcat() {\n \t\t})\n \t}\n }\n-\n-func TestOffsetOverflow(t *testing.T) {\n-\tfakeOffsets := memory.NewBufferBytes(arrow.Int32Traits.CastToBytes([]int32{0, math.MaxInt32}))\n-\tfakeArr := array.NewStringData(array.NewData(arrow.BinaryTypes.String, 1, []*memory.Buffer{nil, fakeOffsets, memory.NewBufferBytes([]byte{})}, nil, 0, 0))\n-\tvar err error\n-\tassert.NotPanics(t, func() {\n-\t\t_, err = array.Concatenate([]arrow.Array{fakeArr, fakeArr}, memory.DefaultAllocator)\n-\t})\n-\tassert.EqualError(t, err, \"offset overflow while concatenating arrays\")\n-}\n\nReview Comment:\n   This test now panics in `NewStringData` because that calls down to `setData`. Should I replace that with manual string array creation like in `TestStringInvalidOffsets`?\n\n\n\n",
                    "created": "2022-06-15T18:18:23.352+0000",
                    "updated": "2022-06-15T18:18:23.352+0000",
                    "started": "2022-06-15T18:18:23.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781779",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "chriscasola commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898282386\n\n\n##########\ngo/arrow/array/concat_test.go:\n##########\n@@ -289,13 +288,3 @@ func (cts *ConcatTestSuite) TestCheckConcat() {\n \t\t})\n \t}\n }\n-\n-func TestOffsetOverflow(t *testing.T) {\n-\tfakeOffsets := memory.NewBufferBytes(arrow.Int32Traits.CastToBytes([]int32{0, math.MaxInt32}))\n-\tfakeArr := array.NewStringData(array.NewData(arrow.BinaryTypes.String, 1, []*memory.Buffer{nil, fakeOffsets, memory.NewBufferBytes([]byte{})}, nil, 0, 0))\n-\tvar err error\n-\tassert.NotPanics(t, func() {\n-\t\t_, err = array.Concatenate([]arrow.Array{fakeArr, fakeArr}, memory.DefaultAllocator)\n-\t})\n-\tassert.EqualError(t, err, \"offset overflow while concatenating arrays\")\n-}\n\nReview Comment:\n   This test now panics in `NewStringData` because that calls down to `setData`. ~~Should I replace that with manual string array creation like in `TestStringInvalidOffsets`?~~ edit: that doesn't make sense, the other tests are using `NewStringData` too.\n\n\n\n",
                    "created": "2022-06-15T18:28:13.923+0000",
                    "updated": "2022-06-15T18:28:13.923+0000",
                    "started": "2022-06-15T18:28:13.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781781",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898323159\n\n\n##########\ngo/arrow/array/concat_test.go:\n##########\n@@ -289,13 +288,3 @@ func (cts *ConcatTestSuite) TestCheckConcat() {\n \t\t})\n \t}\n }\n-\n-func TestOffsetOverflow(t *testing.T) {\n-\tfakeOffsets := memory.NewBufferBytes(arrow.Int32Traits.CastToBytes([]int32{0, math.MaxInt32}))\n-\tfakeArr := array.NewStringData(array.NewData(arrow.BinaryTypes.String, 1, []*memory.Buffer{nil, fakeOffsets, memory.NewBufferBytes([]byte{})}, nil, 0, 0))\n-\tvar err error\n-\tassert.NotPanics(t, func() {\n-\t\t_, err = array.Concatenate([]arrow.Array{fakeArr, fakeArr}, memory.DefaultAllocator)\n-\t})\n-\tassert.EqualError(t, err, \"offset overflow while concatenating arrays\")\n-}\n\nReview Comment:\n   Ah gotcha, we're dying there rather than inside `Concatenate` good point. Okay then yea it makes sense to just remove this test since we can't hit this situation anymore with the addition of the panics for the bad offset arrays.\n\n\n\n",
                    "created": "2022-06-15T19:10:23.002+0000",
                    "updated": "2022-06-15T19:10:23.002+0000",
                    "started": "2022-06-15T19:10:23.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781795",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898323553\n\n\n##########\ngo/arrow/ipc/reader.go:\n##########\n@@ -54,7 +54,12 @@ type Reader struct {\n // NewReaderFromMessageReader allows constructing a new reader object with the\n // provided MessageReader allowing injection of reading messages other than\n // by simple streaming bytes such as Arrow Flight which receives a protobuf message\n-func NewReaderFromMessageReader(r MessageReader, opts ...Option) (*Reader, error) {\n+func NewReaderFromMessageReader(r MessageReader, opts ...Option) (reader *Reader, err error) {\n+\tdefer func() {\n+\t\tif pErr := recover(); pErr != nil {\n+\t\t\terr = fmt.Errorf(\"arrow/ipc: unknown error while reading: %v\", pErr)\n+\t\t}\n+\t}()\n\nReview Comment:\n   can we add a test for this? same for the writer.\n\n\n\n",
                    "created": "2022-06-15T19:10:52.944+0000",
                    "updated": "2022-06-15T19:10:52.944+0000",
                    "started": "2022-06-15T19:10:52.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781796",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781797",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#issuecomment-1156829913\n\n   @chriscasola LGTM the only thing i'd like is at least one test for the recovers added to the reader and writer to have them catch the panics and return errors.\n\n\n",
                    "created": "2022-06-15T19:11:19.250+0000",
                    "updated": "2022-06-15T19:11:19.250+0000",
                    "started": "2022-06-15T19:11:19.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781797",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/781799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#discussion_r898328146\n\n\n##########\ngo/arrow/ipc/reader.go:\n##########\n@@ -54,7 +54,12 @@ type Reader struct {\n // NewReaderFromMessageReader allows constructing a new reader object with the\n // provided MessageReader allowing injection of reading messages other than\n // by simple streaming bytes such as Arrow Flight which receives a protobuf message\n-func NewReaderFromMessageReader(r MessageReader, opts ...Option) (*Reader, error) {\n+func NewReaderFromMessageReader(r MessageReader, opts ...Option) (reader *Reader, err error) {\n+\tdefer func() {\n+\t\tif pErr := recover(); pErr != nil {\n+\t\t\terr = fmt.Errorf(\"arrow/ipc: unknown error while reading: %v\", pErr)\n+\t\t}\n+\t}()\n\nReview Comment:\n   Also do we want to add the recover in the `Read` functions for both this and the `FileReader`?\n\n\n\n",
                    "created": "2022-06-15T19:16:58.362+0000",
                    "updated": "2022-06-15T19:16:58.362+0000",
                    "started": "2022-06-15T19:16:58.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781799",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/782115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13381:\nURL: https://github.com/apache/arrow/pull/13381#issuecomment-1157920154\n\n   LGTM! Thanks much @chriscasola \n\n\n",
                    "created": "2022-06-16T17:02:52.881+0000",
                    "updated": "2022-06-16T17:02:52.881+0000",
                    "started": "2022-06-16T17:02:52.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782115",
                    "issueId": "13450087"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/worklog/782116",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade closed pull request #13381: ARROW-16831: [Go] panic in ipc.Reader when string array offsets are invalid\nURL: https://github.com/apache/arrow/pull/13381\n\n\n",
                    "created": "2022-06-16T17:03:28.047+0000",
                    "updated": "2022-06-16T17:03:28.047+0000",
                    "started": "2022-06-16T17:03:28.047+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782116",
                    "issueId": "13450087"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e83e533[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b14f8ec[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19a5c3f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@25ca8bb1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@393fab13[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2114961d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16996385[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@67fff5e4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23dcbd3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@26fd7323[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ba5b932[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@63ed2377[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 16 17:03:26 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-16T17:03:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16831/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-06-14T19:32:28.000+0000",
        "updated": "2022-06-16T19:31:12.000+0000",
        "timeoriginalestimate": null,
        "description": "ipc.Reader will silently accept string columns with invalid offsets. This results in a panic later when attempting to access the table or write it with ipc.Writer.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] ipc.Reader should panic for invalid string array offsets",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13450087/comment/17555200",
                    "id": "17555200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13381\n[https://github.com/apache/arrow/pull/13381]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-16T17:03:26.362+0000",
                    "updated": "2022-06-16T17:03:26.362+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z138ls:",
        "customfield_12314139": null
    }
}