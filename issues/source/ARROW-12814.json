{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13378871",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871",
    "key": "ARROW-12814",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anthonylouis",
            "name": "anthonylouis",
            "key": "anthonylouis",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=anthonylouis&avatarId=46146",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=anthonylouis&avatarId=46146",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=anthonylouis&avatarId=46146",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=anthonylouis&avatarId=46146"
            },
            "displayName": "Anthony Louis Gotlib Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anthonylouis",
            "name": "anthonylouis",
            "key": "anthonylouis",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=anthonylouis&avatarId=46146",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=anthonylouis&avatarId=46146",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=anthonylouis&avatarId=46146",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=anthonylouis&avatarId=46146"
            },
            "displayName": "Anthony Louis Gotlib Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 36000,
            "total": 36000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 36000,
            "total": 36000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12814/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 60,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/598218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb opened a new pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350\n\n\n   Implements the `ABS`, `FLOOR`, `PI`, `SQRT`, `SIGN`, `LSHIFT`, `RSHIFT`, and `TRUNC`. \r\n   \r\n   The [RANDOM functions](https://github.com/apache/arrow/blob/master/cpp/src/gandiva/random_generator_holder.h) are already implemented in Gandiva.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T19:26:45.851+0000",
                    "updated": "2021-05-17T19:26:45.851+0000",
                    "started": "2021-05-17T19:26:45.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598218",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/598219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#issuecomment-842574833\n\n\n   https://issues.apache.org/jira/browse/ARROW-12814\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-17T19:27:09.691+0000",
                    "updated": "2021-05-17T19:27:09.691+0000",
                    "started": "2021-05-17T19:27:09.690+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "598219",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635030461\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -212,6 +230,32 @@ ENUMERIC_TYPES_UNARY(RADIANS, float64)\n   }\n ENUMERIC_TYPES_UNARY(DEGREES, float64)\n \n+// Abs\n+#define ABS(IN_TYPE)                                                      \\\n+  FORCE_INLINE                                                            \\\n+  gdv_##IN_TYPE abs_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##IN_TYPE>(abs(static_cast<long double>(in))); \\\n\nReview comment:\n       I am curious whether all platforms can convert 64-bit integer to `long double` without loss of digits. (i.e. size(long double) > size(int64)).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:37:25.213+0000",
                    "updated": "2021-05-19T08:37:25.213+0000",
                    "started": "2021-05-19T08:37:25.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599066",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635032175\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -273,4 +324,137 @@ TEST(TestExtendedMathOps, TestTrigonometricFunctions) {\n   VerifyFuzzyEquals(cot_float64(M_PI / 2), tan(M_PI / 2 - M_PI / 2));\n }\n \n+TEST(TestExtendedMathOps, TestAbs) {\n+  // Abs functions\n+  VerifyFuzzyEquals(abs_int32(0), abs(0));\n+  VerifyFuzzyEquals(abs_int64(0), abs(0));\n+  VerifyFuzzyEquals(abs_float32(0), abs(0));\n+  VerifyFuzzyEquals(abs_float64(0), abs(0));\n+\n+  VerifyFuzzyEquals(abs_int32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_int64(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float64(-5), abs(-5));\n+\n+  VerifyFuzzyEquals(abs_int32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_int64(-2371041), abs(-2371041));\n\nReview comment:\n       Can you add a test case using `abs_int64(LONG_MIN)`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:39:35.663+0000",
                    "updated": "2021-05-19T08:39:35.663+0000",
                    "started": "2021-05-19T08:39:35.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599067",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635039248\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n\nReview comment:\n       Lshift -> Rshift\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:48:59.320+0000",
                    "updated": "2021-05-19T08:48:59.320+0000",
                    "started": "2021-05-19T08:48:59.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599069",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599070",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635039850\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n\nReview comment:\n       It would be good to write the definition of Rshift. Shift logical or shift arithmetic?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:49:45.507+0000",
                    "updated": "2021-05-19T08:49:45.507+0000",
                    "started": "2021-05-19T08:49:45.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599070",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635040464\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n+#define RSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE rshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 >> in2);                       \\\n\nReview comment:\n       Can we ensure that the same semantics (shift logical or shift arithmetic) on all platforms using just `>>`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:50:42.574+0000",
                    "updated": "2021-05-19T08:50:42.574+0000",
                    "started": "2021-05-19T08:50:42.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599071",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635032175\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -273,4 +324,137 @@ TEST(TestExtendedMathOps, TestTrigonometricFunctions) {\n   VerifyFuzzyEquals(cot_float64(M_PI / 2), tan(M_PI / 2 - M_PI / 2));\n }\n \n+TEST(TestExtendedMathOps, TestAbs) {\n+  // Abs functions\n+  VerifyFuzzyEquals(abs_int32(0), abs(0));\n+  VerifyFuzzyEquals(abs_int64(0), abs(0));\n+  VerifyFuzzyEquals(abs_float32(0), abs(0));\n+  VerifyFuzzyEquals(abs_float64(0), abs(0));\n+\n+  VerifyFuzzyEquals(abs_int32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_int64(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float64(-5), abs(-5));\n+\n+  VerifyFuzzyEquals(abs_int32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_int64(-2371041), abs(-2371041));\n\nReview comment:\n       Can you add a test case using `abs_int64(LONG_MIN)` and `abs_int64(LONG_MIN+1)`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:57:01.379+0000",
                    "updated": "2021-05-19T08:57:01.379+0000",
                    "started": "2021-05-19T08:57:01.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599074",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r635046384\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -273,4 +324,137 @@ TEST(TestExtendedMathOps, TestTrigonometricFunctions) {\n   VerifyFuzzyEquals(cot_float64(M_PI / 2), tan(M_PI / 2 - M_PI / 2));\n }\n \n+TEST(TestExtendedMathOps, TestAbs) {\n+  // Abs functions\n+  VerifyFuzzyEquals(abs_int32(0), abs(0));\n+  VerifyFuzzyEquals(abs_int64(0), abs(0));\n+  VerifyFuzzyEquals(abs_float32(0), abs(0));\n+  VerifyFuzzyEquals(abs_float64(0), abs(0));\n+\n+  VerifyFuzzyEquals(abs_int32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_int64(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float64(-5), abs(-5));\n+\n+  VerifyFuzzyEquals(abs_int32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_int64(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_float32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_float64(-2371041), abs(-2371041));\n+\n+  VerifyFuzzyEquals(abs_int32(-3600.50), abs(-3600));\n+  VerifyFuzzyEquals(abs_int64(-3600.50), abs(-3600));\n+  VerifyFuzzyEquals(abs_float32(-3600.50), abs(-3600.50));\n+  VerifyFuzzyEquals(abs_float64(-3600.50), abs(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestCeil) {\n+  // Ceil functions\n+  VerifyFuzzyEquals(ceil_float32(0), ceil(0));\n+  VerifyFuzzyEquals(ceil_float64(0), ceil(0));\n+\n+  VerifyFuzzyEquals(ceil_float32(-5), ceil(-5));\n+  VerifyFuzzyEquals(ceil_float64(-5), ceil(-5));\n+\n+  VerifyFuzzyEquals(ceil_float32(-2371041), ceil(-2371041));\n+  VerifyFuzzyEquals(ceil_float64(-2371041), ceil(-2371041));\n+\n+  VerifyFuzzyEquals(ceil_float32(5.45), ceil(5.45));\n+  VerifyFuzzyEquals(ceil_float64(5.45), ceil(5.45));\n+\n+  VerifyFuzzyEquals(ceil_float32(-3600.50), ceil(-3600.50));\n+  VerifyFuzzyEquals(ceil_float64(-3600.50), ceil(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestFloor) {\n+  // Ceil functions\n+  VerifyFuzzyEquals(floor_float32(0), floor(0));\n+  VerifyFuzzyEquals(floor_float64(0), floor(0));\n+\n+  VerifyFuzzyEquals(floor_float32(-5), floor(-5));\n+  VerifyFuzzyEquals(floor_float64(-5), floor(-5));\n+\n+  VerifyFuzzyEquals(floor_float32(-2371041), floor(-2371041));\n+  VerifyFuzzyEquals(floor_float64(-2371041), floor(-2371041));\n+\n+  VerifyFuzzyEquals(floor_float32(5.45), floor(5.45));\n+  VerifyFuzzyEquals(floor_float64(5.45), floor(5.45));\n+\n+  VerifyFuzzyEquals(floor_float32(-3600.50), floor(-3600.50));\n+  VerifyFuzzyEquals(floor_float64(-3600.50), floor(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestConstants) {\n+  // Constants functions\n+  VerifyFuzzyEquals(pi(), M_PI);\n+  VerifyFuzzyEquals(e(), exp(1.0));\n+}\n+\n+TEST(TestExtendedMathOps, TestSqrt) {\n+  // Sqrt functions\n+  VerifyFuzzyEquals(sqrt_int32(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_int64(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_float32(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_float64(0), sqrt(0));\n+\n+  VerifyFuzzyEquals(sqrt_int32(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_int64(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_float32(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_float64(5), sqrt(5));\n+\n+  VerifyFuzzyEquals(sqrt_int32(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_int64(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_float32(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_float64(2371041), sqrt(2371041));\n+\n+  VerifyFuzzyEquals(sqrt_int32(3600.50), sqrt(3600));\n+  VerifyFuzzyEquals(sqrt_int64(3600.50), sqrt(3600));\n+  VerifyFuzzyEquals(sqrt_float32(3600.50), sqrt(3600.50));\n+  VerifyFuzzyEquals(sqrt_float64(3600.50), sqrt(3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestSign) {\n+  // Sqrt functions\n+  EXPECT_EQ(sign_int32(0), 0);\n+  EXPECT_EQ(sign_int64(0), 0);\n+  EXPECT_EQ(sign_float32(0), 0);\n+  EXPECT_EQ(sign_float64(0), 0);\n+\n+  EXPECT_EQ(sign_int32(5), 1);\n+  EXPECT_EQ(sign_int64(5), 1);\n+  EXPECT_EQ(sign_float32(5), 1);\n+  EXPECT_EQ(sign_float64(5), 1);\n+\n+  EXPECT_EQ(sign_int32(2371041), 1);\n+  EXPECT_EQ(sign_int64(2371041), 1);\n+  EXPECT_EQ(sign_float32(2371041), 1);\n+  EXPECT_EQ(sign_float64(2371041), 1);\n+\n+  EXPECT_EQ(sign_int32(-3600.50), -1);\n+  EXPECT_EQ(sign_int64(-3600.50), -1);\n+  EXPECT_EQ(sign_float32(-3600.50), -1);\n+  EXPECT_EQ(sign_float64(-3600.50), -1);\n+}\n+\n+TEST(TestExtendedMathOps, TestLshiftRshift) {\n+  // Lshift functions\n+  EXPECT_EQ(lshift_int32(0, 1), 0 << 1);\n+  EXPECT_EQ(lshift_int64(0, 1), 0 << 1);\n+\n+  EXPECT_EQ(lshift_int32(5, 20), 5 << 20);\n+  EXPECT_EQ(lshift_int64(5, 20), 5 << 20);\n+\n+  EXPECT_EQ(lshift_int32(1, 20), 1 << 20);\n+  EXPECT_EQ(lshift_int64(1, 20), 1 << 20);\n+\n+  // Rshift functions\n+  EXPECT_EQ(rshift_int32(0, 1), 0 >> 1);\n+  EXPECT_EQ(rshift_int64(0, 1), 0 >> 1);\n+\n+  EXPECT_EQ(rshift_int32(5, 20), 5 >> 20);\n+  EXPECT_EQ(rshift_int64(5, 20), 5 >> 20);\n+\n+  EXPECT_EQ(rshift_int32(1, 20), 1 >> 20);\n+  EXPECT_EQ(rshift_int64(1, 20), 1 >> 20);\n+}\n\nReview comment:\n       It would be worth adding tests for rshift with a negative value.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T08:58:16.498+0000",
                    "updated": "2021-05-19T08:58:16.498+0000",
                    "started": "2021-05-19T08:58:16.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599075",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#issuecomment-844033861\n\n\n   #10274 handles abs operation well.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T12:00:07.869+0000",
                    "updated": "2021-05-19T12:00:07.869+0000",
                    "started": "2021-05-19T12:00:07.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599169",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#issuecomment-845101610\n\n\n   I included the `CEIL` function in the title because it was implemented too.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-20T13:05:44.423+0000",
                    "updated": "2021-05-20T13:05:44.423+0000",
                    "started": "2021-05-20T13:05:44.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599791",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/599793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb edited a comment on pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#issuecomment-845101610\n\n\n   I included the `CEIL` function in the title because it was implemented too in Pull Request\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-20T13:06:11.002+0000",
                    "updated": "2021-05-20T13:06:11.002+0000",
                    "started": "2021-05-20T13:06:11.001+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599793",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/600210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kiszk commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r636696619\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -290,4 +299,53 @@ TEST(TestGdvFnStubs, TestCastVARCHARFromDouble) {\n   EXPECT_FALSE(ctx.has_error());\n }\n \n+TEST(TestGdvFnStubs, TestAbs) {\n+  gandiva::ExecutionContext ctx;\n+  uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+\n+  // Abs functions\n+  EXPECT_EQ(gdv_fn_abs_int32(ctx_ptr, 0), 0);\n+  EXPECT_EQ(gdv_fn_abs_uint32(ctx_ptr, 0), 0);\n+  EXPECT_EQ(gdv_fn_abs_int64(ctx_ptr, 0), 0L);\n+  EXPECT_EQ(gdv_fn_abs_uint64(ctx_ptr, 0), 0L);\n+  VerifyAlmostEquals(gdv_fn_abs_float32(ctx_ptr, 0.0f), abs(0.0f));\n+  VerifyAlmostEquals(gdv_fn_abs_float64(ctx_ptr, 0.0), abs(0.0));\n+\n+  VerifyAlmostEquals(gdv_fn_abs_int32(ctx_ptr, (INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_int64(ctx_ptr, (INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_float32(ctx_ptr, static_cast<float>(INT32_MIN + 1)),\n+                     abs(static_cast<float>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_float64(ctx_ptr, static_cast<double>(INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+\n+  EXPECT_EQ(gdv_fn_abs_int64(ctx_ptr, (INT64_MIN + 1)),\n\nReview comment:\n       Does it mean that we will accept the loss of digits in INT64?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-21T07:26:04.981+0000",
                    "updated": "2021-05-21T07:26:04.981+0000",
                    "started": "2021-05-21T07:26:04.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "600210",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/600462",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637037791\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -290,4 +299,53 @@ TEST(TestGdvFnStubs, TestCastVARCHARFromDouble) {\n   EXPECT_FALSE(ctx.has_error());\n }\n \n+TEST(TestGdvFnStubs, TestAbs) {\n+  gandiva::ExecutionContext ctx;\n+  uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+\n+  // Abs functions\n+  EXPECT_EQ(gdv_fn_abs_int32(ctx_ptr, 0), 0);\n+  EXPECT_EQ(gdv_fn_abs_uint32(ctx_ptr, 0), 0);\n+  EXPECT_EQ(gdv_fn_abs_int64(ctx_ptr, 0), 0L);\n+  EXPECT_EQ(gdv_fn_abs_uint64(ctx_ptr, 0), 0L);\n+  VerifyAlmostEquals(gdv_fn_abs_float32(ctx_ptr, 0.0f), abs(0.0f));\n+  VerifyAlmostEquals(gdv_fn_abs_float64(ctx_ptr, 0.0), abs(0.0));\n+\n+  VerifyAlmostEquals(gdv_fn_abs_int32(ctx_ptr, (INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_int64(ctx_ptr, (INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_float32(ctx_ptr, static_cast<float>(INT32_MIN + 1)),\n+                     abs(static_cast<float>(INT32_MIN + 1)));\n+  VerifyAlmostEquals(gdv_fn_abs_float64(ctx_ptr, static_cast<double>(INT32_MIN + 1)),\n+                     abs(static_cast<double>(INT32_MIN + 1)));\n+\n+  EXPECT_EQ(gdv_fn_abs_int64(ctx_ptr, (INT64_MIN + 1)),\n\nReview comment:\n       @kiszk Thanks for your revision! Please, could you explain how would occur digit loss here? I did not understand what you said. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-21T16:03:43.100+0000",
                    "updated": "2021-05-21T16:03:43.100+0000",
                    "started": "2021-05-21T16:03:43.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "600462",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637712623\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -212,6 +230,32 @@ ENUMERIC_TYPES_UNARY(RADIANS, float64)\n   }\n ENUMERIC_TYPES_UNARY(DEGREES, float64)\n \n+// Abs\n+#define ABS(IN_TYPE)                                                      \\\n+  FORCE_INLINE                                                            \\\n+  gdv_##IN_TYPE abs_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##IN_TYPE>(abs(static_cast<long double>(in))); \\\n\nReview comment:\n       @kiszk I checked that by the `IEE-754` convention, the numbers in double precision [should use at least 8 bytes](https://en.wikipedia.org/wiki/IEEE_754) to construct their representation, so I think that there would not have any digit loss in conversion.\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -273,4 +324,137 @@ TEST(TestExtendedMathOps, TestTrigonometricFunctions) {\n   VerifyFuzzyEquals(cot_float64(M_PI / 2), tan(M_PI / 2 - M_PI / 2));\n }\n \n+TEST(TestExtendedMathOps, TestAbs) {\n+  // Abs functions\n+  VerifyFuzzyEquals(abs_int32(0), abs(0));\n+  VerifyFuzzyEquals(abs_int64(0), abs(0));\n+  VerifyFuzzyEquals(abs_float32(0), abs(0));\n+  VerifyFuzzyEquals(abs_float64(0), abs(0));\n+\n+  VerifyFuzzyEquals(abs_int32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_int64(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float64(-5), abs(-5));\n+\n+  VerifyFuzzyEquals(abs_int32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_int64(-2371041), abs(-2371041));\n\nReview comment:\n       Test added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:15:59.748+0000",
                    "updated": "2021-05-24T06:15:59.748+0000",
                    "started": "2021-05-24T06:15:59.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601024",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637712786\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n\nReview comment:\n       The definition was added\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:16:13.090+0000",
                    "updated": "2021-05-24T06:16:13.090+0000",
                    "started": "2021-05-24T06:16:13.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601025",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637713009\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops_test.cc\n##########\n@@ -273,4 +324,137 @@ TEST(TestExtendedMathOps, TestTrigonometricFunctions) {\n   VerifyFuzzyEquals(cot_float64(M_PI / 2), tan(M_PI / 2 - M_PI / 2));\n }\n \n+TEST(TestExtendedMathOps, TestAbs) {\n+  // Abs functions\n+  VerifyFuzzyEquals(abs_int32(0), abs(0));\n+  VerifyFuzzyEquals(abs_int64(0), abs(0));\n+  VerifyFuzzyEquals(abs_float32(0), abs(0));\n+  VerifyFuzzyEquals(abs_float64(0), abs(0));\n+\n+  VerifyFuzzyEquals(abs_int32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_int64(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float32(-5), abs(-5));\n+  VerifyFuzzyEquals(abs_float64(-5), abs(-5));\n+\n+  VerifyFuzzyEquals(abs_int32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_int64(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_float32(-2371041), abs(-2371041));\n+  VerifyFuzzyEquals(abs_float64(-2371041), abs(-2371041));\n+\n+  VerifyFuzzyEquals(abs_int32(-3600.50), abs(-3600));\n+  VerifyFuzzyEquals(abs_int64(-3600.50), abs(-3600));\n+  VerifyFuzzyEquals(abs_float32(-3600.50), abs(-3600.50));\n+  VerifyFuzzyEquals(abs_float64(-3600.50), abs(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestCeil) {\n+  // Ceil functions\n+  VerifyFuzzyEquals(ceil_float32(0), ceil(0));\n+  VerifyFuzzyEquals(ceil_float64(0), ceil(0));\n+\n+  VerifyFuzzyEquals(ceil_float32(-5), ceil(-5));\n+  VerifyFuzzyEquals(ceil_float64(-5), ceil(-5));\n+\n+  VerifyFuzzyEquals(ceil_float32(-2371041), ceil(-2371041));\n+  VerifyFuzzyEquals(ceil_float64(-2371041), ceil(-2371041));\n+\n+  VerifyFuzzyEquals(ceil_float32(5.45), ceil(5.45));\n+  VerifyFuzzyEquals(ceil_float64(5.45), ceil(5.45));\n+\n+  VerifyFuzzyEquals(ceil_float32(-3600.50), ceil(-3600.50));\n+  VerifyFuzzyEquals(ceil_float64(-3600.50), ceil(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestFloor) {\n+  // Ceil functions\n+  VerifyFuzzyEquals(floor_float32(0), floor(0));\n+  VerifyFuzzyEquals(floor_float64(0), floor(0));\n+\n+  VerifyFuzzyEquals(floor_float32(-5), floor(-5));\n+  VerifyFuzzyEquals(floor_float64(-5), floor(-5));\n+\n+  VerifyFuzzyEquals(floor_float32(-2371041), floor(-2371041));\n+  VerifyFuzzyEquals(floor_float64(-2371041), floor(-2371041));\n+\n+  VerifyFuzzyEquals(floor_float32(5.45), floor(5.45));\n+  VerifyFuzzyEquals(floor_float64(5.45), floor(5.45));\n+\n+  VerifyFuzzyEquals(floor_float32(-3600.50), floor(-3600.50));\n+  VerifyFuzzyEquals(floor_float64(-3600.50), floor(-3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestConstants) {\n+  // Constants functions\n+  VerifyFuzzyEquals(pi(), M_PI);\n+  VerifyFuzzyEquals(e(), exp(1.0));\n+}\n+\n+TEST(TestExtendedMathOps, TestSqrt) {\n+  // Sqrt functions\n+  VerifyFuzzyEquals(sqrt_int32(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_int64(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_float32(0), sqrt(0));\n+  VerifyFuzzyEquals(sqrt_float64(0), sqrt(0));\n+\n+  VerifyFuzzyEquals(sqrt_int32(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_int64(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_float32(5), sqrt(5));\n+  VerifyFuzzyEquals(sqrt_float64(5), sqrt(5));\n+\n+  VerifyFuzzyEquals(sqrt_int32(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_int64(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_float32(2371041), sqrt(2371041));\n+  VerifyFuzzyEquals(sqrt_float64(2371041), sqrt(2371041));\n+\n+  VerifyFuzzyEquals(sqrt_int32(3600.50), sqrt(3600));\n+  VerifyFuzzyEquals(sqrt_int64(3600.50), sqrt(3600));\n+  VerifyFuzzyEquals(sqrt_float32(3600.50), sqrt(3600.50));\n+  VerifyFuzzyEquals(sqrt_float64(3600.50), sqrt(3600.50));\n+}\n+\n+TEST(TestExtendedMathOps, TestSign) {\n+  // Sqrt functions\n+  EXPECT_EQ(sign_int32(0), 0);\n+  EXPECT_EQ(sign_int64(0), 0);\n+  EXPECT_EQ(sign_float32(0), 0);\n+  EXPECT_EQ(sign_float64(0), 0);\n+\n+  EXPECT_EQ(sign_int32(5), 1);\n+  EXPECT_EQ(sign_int64(5), 1);\n+  EXPECT_EQ(sign_float32(5), 1);\n+  EXPECT_EQ(sign_float64(5), 1);\n+\n+  EXPECT_EQ(sign_int32(2371041), 1);\n+  EXPECT_EQ(sign_int64(2371041), 1);\n+  EXPECT_EQ(sign_float32(2371041), 1);\n+  EXPECT_EQ(sign_float64(2371041), 1);\n+\n+  EXPECT_EQ(sign_int32(-3600.50), -1);\n+  EXPECT_EQ(sign_int64(-3600.50), -1);\n+  EXPECT_EQ(sign_float32(-3600.50), -1);\n+  EXPECT_EQ(sign_float64(-3600.50), -1);\n+}\n+\n+TEST(TestExtendedMathOps, TestLshiftRshift) {\n+  // Lshift functions\n+  EXPECT_EQ(lshift_int32(0, 1), 0 << 1);\n+  EXPECT_EQ(lshift_int64(0, 1), 0 << 1);\n+\n+  EXPECT_EQ(lshift_int32(5, 20), 5 << 20);\n+  EXPECT_EQ(lshift_int64(5, 20), 5 << 20);\n+\n+  EXPECT_EQ(lshift_int32(1, 20), 1 << 20);\n+  EXPECT_EQ(lshift_int64(1, 20), 1 << 20);\n+\n+  // Rshift functions\n+  EXPECT_EQ(rshift_int32(0, 1), 0 >> 1);\n+  EXPECT_EQ(rshift_int64(0, 1), 0 >> 1);\n+\n+  EXPECT_EQ(rshift_int32(5, 20), 5 >> 20);\n+  EXPECT_EQ(rshift_int64(5, 20), 5 >> 20);\n+\n+  EXPECT_EQ(rshift_int32(1, 20), 1 >> 20);\n+  EXPECT_EQ(rshift_int64(1, 20), 1 >> 20);\n+}\n\nReview comment:\n       The test was added.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:16:46.405+0000",
                    "updated": "2021-05-24T06:16:46.405+0000",
                    "started": "2021-05-24T06:16:46.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601026",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637720694\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n+#define RSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE rshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 >> in2);                       \\\n\nReview comment:\n       @kiszk Thanks for your revision, I checked the [C++ reference](https://en.cppreference.com/w/cpp/language/operator_arithmetic) and I checked that the shift operators have undefined or implementation-choice behavior for signed and negative numbers.\r\n   \r\n   So as in this Pull Request, we are implementing the `Logical Shift`, we can cast the input parameters to their respective `unsigned` types and apply the shift operators and they will have the same behavior in all platforms. Do you agree with the solution?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:35:41.716+0000",
                    "updated": "2021-05-24T06:35:41.716+0000",
                    "started": "2021-05-24T06:35:41.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601031",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637720694\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n+#define RSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE rshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 >> in2);                       \\\n\nReview comment:\n       @kiszk Thanks for your revision, I checked the [C++ reference](https://en.cppreference.com/w/cpp/language/operator_arithmetic), and I noticed that the shift operators have undefined or implementation-choice behavior for signed and negative numbers.\r\n   \r\n   So as in this Pull Request, we are implementing the `Logical Shift`, we can cast the input parameters to their respective `unsigned` types and apply the shift operators and they will have the same behavior in all platforms. Do you agree with the solution?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:35:54.839+0000",
                    "updated": "2021-05-24T06:35:54.839+0000",
                    "started": "2021-05-24T06:35:54.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601032",
                    "issueId": "13378871"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/worklog/601033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anthonylouisbsb commented on a change in pull request #10350:\nURL: https://github.com/apache/arrow/pull/10350#discussion_r637720694\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/extended_math_ops.cc\n##########\n@@ -220,6 +264,51 @@ ENUMERIC_TYPES_UNARY(DEGREES, float64)\n   }\n POWER(float64, float64, float64)\n \n+// Sqrt\n+#define SQRT(IN_TYPE, OUT_TYPE)                                             \\\n+  FORCE_INLINE                                                              \\\n+  gdv_##OUT_TYPE sqrt_##IN_TYPE(gdv_##IN_TYPE in) {                         \\\n+    return static_cast<gdv_##OUT_TYPE>(sqrt(static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES_UNARY(SQRT, float64)\n+\n+// Sign\n+#define SIGN(IN_TYPE)                                                               \\\n+  FORCE_INLINE                                                                      \\\n+  gdv_##IN_TYPE sign_##IN_TYPE(gdv_##IN_TYPE in) {                                  \\\n+    if (in == 0.0) return in;                                                       \\\n+    return static_cast<gdv_##IN_TYPE>(copysign(1.0, static_cast<long double>(in))); \\\n+  }\n+ENUMERIC_TYPES(SIGN)\n+\n+// Lshift\n+#define LSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE lshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 << in2);                       \\\n+  }\n+LSHIFT(int32)\n+LSHIFT(int64)\n+LSHIFT(uint32)\n+LSHIFT(uint64)\n+\n+// Lshift\n+#define RSHIFT(IN_TYPE)                                                  \\\n+  FORCE_INLINE                                                           \\\n+  gdv_##IN_TYPE rshift_##IN_TYPE(gdv_##IN_TYPE in1, gdv_##IN_TYPE in2) { \\\n+    return static_cast<gdv_##IN_TYPE>(in1 >> in2);                       \\\n\nReview comment:\n       @kiszk Thanks for your revision, I checked the [C++ reference](https://en.cppreference.com/w/cpp/language/operator_arithmetic), and I noticed that the shift operators have undefined or implementation-choice behavior for signed and negative numbers.\r\n   \r\n   So as in this Pull Request, we are implementing the `Logical Shift`, we can cast the input parameters to their respective `unsigned` types and then apply the shift operators and they will have the same behavior in all platforms. Do you agree with the solution?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-24T06:36:17.996+0000",
                    "updated": "2021-05-24T06:36:17.996+0000",
                    "started": "2021-05-24T06:36:17.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "601033",
                    "issueId": "13378871"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 36000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@285498f7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c491758[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c8d28eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@787a13f5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f48988a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5b17c128[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e4860d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@66853756[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1df27fc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7889f3d3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75ca4afb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3abaec93[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 36000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 12 14:04:25 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12814/watchers",
            "watchCount": 2,
            "isWatching": true
        },
        "created": "2021-05-17T18:56:16.000+0000",
        "updated": "2022-07-12T14:04:25.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 36000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implements ABS, FLOOR, PI, SQRT, SIGN, LSHIFT, RSHIFT, CEIL, TRUNC, LN and LOG2 functions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13378871/comment/17565596",
                    "id": "17565596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "This issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-07-12T14:04:25.169+0000",
                    "updated": "2022-07-12T14:04:25.169+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0r3sg:",
        "customfield_12314139": null
    }
}