{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13159891",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891",
    "key": "ARROW-2594",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2594/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/102727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler opened a new pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unused bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054\n \n \n   Currently when reallocating vectors, only the second half of the new buffer will be zeroed out assuming that it is doubled from the previous buffer and the first half is already populated or cleaned.  This isn't the case if the vector had been cleared and the buffer is empty causing incorrect values in the new buffer if it was recycled from an old one.\r\n   \r\n   Added a new test with a ListVector that should reuse a previous buffer after being cleared.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-16T23:57:36.868+0000",
                    "updated": "2018-05-16T23:57:36.868+0000",
                    "started": "2018-05-16T23:57:36.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102727",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/102729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unused bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#issuecomment-389702056\n \n \n   This surfaced from https://github.com/apache/spark/pull/21312#issuecomment-389035697, @siddharthteotia @icexelloss please take a look.  Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-16T23:58:06.042+0000",
                    "updated": "2018-05-16T23:58:06.042+0000",
                    "started": "2018-05-16T23:58:06.041+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102729",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/102753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "viirya commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r188820798\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -117,8 +117,7 @@ protected void reallocOffsetBuffer() {\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, offsetBuffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n \n Review comment:\n   `newAllocationSize` can be more than `currentBufferCapacity * 2`. But we just set zeros since `halfNewCapacity`, so I think previously we miss to zero out since `halfNewCapacity` to `newAllocationSize / 2`. Is it?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T01:58:45.443+0000",
                    "updated": "2018-05-17T01:58:45.443+0000",
                    "started": "2018-05-17T01:58:45.442+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102753",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/102997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189035718\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      result = vector.getObject(0);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n \n Review comment:\n   Remove extra space?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:16:22.827+0000",
                    "updated": "2018-05-17T17:16:22.827+0000",
                    "started": "2018-05-17T17:16:22.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102997",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/102998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189036037\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n \n Review comment:\n   Curious about this comment - Does `clear` not release the buffer? How is the buffer reused?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:17:21.560+0000",
                    "updated": "2018-05-17T17:17:21.560+0000",
                    "started": "2018-05-17T17:17:21.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102998",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189037522\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -117,8 +117,7 @@ protected void reallocOffsetBuffer() {\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, offsetBuffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n \n Review comment:\n   That could have been a problem too if the buffer ends up more than the requested size, some values might not get zeroed.  The problem I was seeing was that the current buffer size was 0, and the new buffer had old values still populated in the first half that were not zeroed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:22:45.703+0000",
                    "updated": "2018-05-17T17:22:45.703+0000",
                    "started": "2018-05-17T17:22:45.702+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103000",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189037899\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      result = vector.getObject(0);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n \n Review comment:\n   oops\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:24:03.824+0000",
                    "updated": "2018-05-17T17:24:03.824+0000",
                    "started": "2018-05-17T17:24:03.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103002",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189039606\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n \n Review comment:\n   Yeah, `clear` released the buffer, then next time it goes to realloc and requests a new buffer if the buffer manager still has one available, it will reuse it.  So the case I was seeing was that an old data buffer was being reused for the new `ListVector` offset buffer - causing all kinds of fun output\r\n   \r\n   I'm not sure if there is a better way to force this issue more directly, but this test seemed to cause it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:29:56.611+0000",
                    "updated": "2018-05-17T17:29:56.611+0000",
                    "started": "2018-05-17T17:29:56.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103003",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189042287\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n \n Review comment:\n   I see.\r\n   \r\n   This is probably a separate discussion but another option is have the buffer manager zero out the buffer before returning to the caller  instead of having the caller do the zero out. It seems the code would be cleaner that way.\r\n   \r\n   @jacques-n @siddharthteotia @BryanCutler what do you think?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:39:26.776+0000",
                    "updated": "2018-05-17T17:39:26.776+0000",
                    "started": "2018-05-17T17:39:26.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103007",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189045408\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n \n Review comment:\n   That would be a bit cleaner, but I think the original idea here was that the new buffer is 2x the size of the old buffer.  Then the old buffer is copied to the first half and zeros to the second half, so that way it minimizes writes.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:49:12.608+0000",
                    "updated": "2018-05-17T17:49:12.608+0000",
                    "started": "2018-05-17T17:49:12.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103009",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#discussion_r189046645\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -827,4 +827,51 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n \n Review comment:\n   That's true too. Anyway, this PR looks good to me. Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T17:53:03.651+0000",
                    "updated": "2018-05-17T17:53:03.651+0000",
                    "started": "2018-05-17T17:53:03.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103014",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler closed pull request #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/java/vector/src/main/codegen/templates/UnionVector.java b/java/vector/src/main/codegen/templates/UnionVector.java\nindex 1cfa0666a3..8b27f39bfb 100644\n--- a/java/vector/src/main/codegen/templates/UnionVector.java\n+++ b/java/vector/src/main/codegen/templates/UnionVector.java\n@@ -290,8 +290,7 @@ private void reallocTypeBuffer() {\n \n     final ArrowBuf newBuf = allocator.buffer((int)newAllocationSize);\n     newBuf.setBytes(0, typeBuffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     typeBuffer.release(1);\n     typeBuffer = newBuf;\n     typeBufferAllocationSizeInBytes = (int)newAllocationSize;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\nindex b275ab22db..5c456368c4 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n@@ -450,8 +450,7 @@ private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean dataBuffer)\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, buffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     buffer.release(1);\n     buffer = newBuf;\n     if (dataBuffer) {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\nindex 543705630d..53e123c9e4 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n@@ -549,8 +549,7 @@ private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean offsetBuffer\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, buffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     buffer.release(1);\n     buffer = newBuf;\n     if (offsetBuffer) {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\nindex 2dd2894ffe..bd4f7aac7b 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n@@ -117,8 +117,7 @@ protected void reallocOffsetBuffer() {\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, offsetBuffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     offsetBuffer.release(1);\n     offsetBuffer = newBuf;\n     offsetAllocationSizeInBytes = (int) newAllocationSize;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\nindex eadbab4361..f863bb6791 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n@@ -217,8 +217,8 @@ private void reallocValidityBuffer() {\n     }\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n-    newBuf.setZero(0, newBuf.capacity());\n     newBuf.setBytes(0, validityBuffer, 0, currentBufferCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     validityBuffer.release(1);\n     validityBuffer = newBuf;\n     validityAllocationSizeInBytes = (int) newAllocationSize;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\nindex d3eeaf2f0d..d34d68c0db 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\n@@ -301,8 +301,7 @@ private void reallocValidityBuffer() {\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n     newBuf.setBytes(0, validityBuffer, 0, currentBufferCapacity);\n-    final int halfNewCapacity = newBuf.capacity() / 2;\n-    newBuf.setZero(halfNewCapacity, halfNewCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     validityBuffer.release(1);\n     validityBuffer = newBuf;\n     validityAllocationSizeInBytes = (int) newAllocationSize;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\nindex 05571bbb93..6938ea663e 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\n@@ -414,8 +414,8 @@ private void reallocValidityBuffer() {\n     }\n \n     final ArrowBuf newBuf = allocator.buffer((int) newAllocationSize);\n-    newBuf.setZero(0, newBuf.capacity());\n     newBuf.setBytes(0, validityBuffer, 0, currentBufferCapacity);\n+    newBuf.setZero(currentBufferCapacity, newBuf.capacity() - currentBufferCapacity);\n     validityBuffer.release(1);\n     validityBuffer = newBuf;\n     validityAllocationSizeInBytes = (int) newAllocationSize;\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\nindex aea7caf8e3..fbac551f37 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n@@ -827,4 +827,49 @@ public void testSetInitialCapacity() {\n       assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n+\n+  @Test\n+  public void testClearAndReuse() {\n+    try (final ListVector vector = ListVector.empty(\"list\", allocator)) {\n+      BigIntVector bigIntVector = (BigIntVector) vector.addOrGetVector(FieldType.nullable(MinorType.BIGINT.getType())).getVector();\n+      vector.setInitialCapacity(10);\n+      vector.allocateNew();\n+\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      Object result = vector.getObject(0);\n+      ArrayList<Long> resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+\n+      // Clear and release the buffers to trigger a realloc when adding next value\n+      vector.clear();\n+\n+      // The list vector should reuse a buffer when reallocating the offset buffer\n+      vector.startNewValue(0);\n+      bigIntVector.setSafe(0, 7);\n+      vector.endValue(0, 1);\n+      vector.startNewValue(1);\n+      bigIntVector.setSafe(1, 8);\n+      vector.endValue(1, 1);\n+      vector.setValueCount(2);\n+\n+      result = vector.getObject(0);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(7), resultSet.get(0));\n+\n+      result = vector.getObject(1);\n+      resultSet = (ArrayList<Long>) result;\n+      assertEquals(new Long(8), resultSet.get(0));\n+    }\n+  }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T18:21:06.734+0000",
                    "updated": "2018-05-17T18:21:06.734+0000",
                    "started": "2018-05-17T18:21:06.733+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103029",
                    "issueId": "13159891"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/worklog/103030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2054: ARROW-2594: [Java] When realloc Vectors, zero out all unfilled bytes of new buffer\nURL: https://github.com/apache/arrow/pull/2054#issuecomment-389962087\n \n \n   Merged to master.  Thanks @icexelloss @siddharthteotia and @viirya !\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-17T18:21:50.069+0000",
                    "updated": "2018-05-17T18:21:50.069+0000",
                    "started": "2018-05-17T18:21:50.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "103030",
                    "issueId": "13159891"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7f1102a5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11526478[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42c1e470[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@40b239f4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2105ab93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2f66bfe[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f59edb4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1ef50032[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12a0794c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@23b8597d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@230c24f3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@15ce5430[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 17 18:21:13 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-17T18:21:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2594/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-05-16T23:21:26.000+0000",
        "updated": "2018-05-17T18:21:50.000+0000",
        "timeoriginalestimate": null,
        "description": "When reallocating a vector buffer, it assumes that the first half of the new buffer was clean or populated from the previous and only zeros out the second half.\u00a0 This is not the case if the vector has released the buffer and the current capacity is 0 (empty).\u00a0 If the new buffer has values set, then they will cause bogus values when used in the vector.\r\n\r\nI came across this when looking into SPARK-23030, due to the comment here https://github.com/apache/spark/pull/21312#issuecomment-389035697",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Vector reallocation does not properly clear reused buffers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13159891/comment/16479504",
                    "id": "16479504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 2054\n[https://github.com/apache/arrow/pull/2054]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-05-17T18:21:13.595+0000",
                    "updated": "2018-05-17T18:21:13.595+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3tt6f:",
        "customfield_12314139": null
    }
}