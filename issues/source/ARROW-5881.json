{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13243837",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837",
    "key": "ARROW-5881",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5881/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/273879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829\n \n \n   These utilities can be used to efficiently determine, for example,\r\n   \r\n   If all values in a vector are null\r\n   If a vector contains no null\r\n   If a vector contains any valid element\r\n   If a vector contains any invalid element\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T07:48:25.713+0000",
                    "updated": "2019-07-09T07:48:25.713+0000",
                    "started": "2019-07-09T07:48:25.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273879",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/273892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-509538109\n \n \n   @liyafan82 how are you imagining these would be used in comparison with the existing pop-count?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T08:09:23.814+0000",
                    "updated": "2019-07-09T08:09:23.814+0000",
                    "started": "2019-07-09T08:09:23.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273892",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/273896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-509542780\n \n \n   > @liyafan82 how are you imagining these would be used in comparison with the existing pop-count?\r\n   \r\n   Good question. @emkornfield \r\n   These should provide better performance, because they provide short-circuit behaviors. \r\n   For some scenarios, the user only cares about if there is any 0/1 bit in the buffer. So if one is found, the methods return immediately.\r\n   \r\n   Fundamentally, the count contains much more information than existence/non-existence. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T08:22:55.263+0000",
                    "updated": "2019-07-09T08:22:55.263+0000",
                    "started": "2019-07-09T08:22:55.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273896",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/273923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-509562861\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=h1) Report\n   > Merging [#4829](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3f767ce38866b87e29aa5a964176e978ddf4899e?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4829/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #4829      +/-   ##\n   =========================================\n   + Coverage   87.44%   89.6%   +2.16%     \n   =========================================\n     Files         997     662     -335     \n     Lines      139804   96427   -43377     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       122246   86401   -35845     \n   + Misses      17196   10026    -7170     \n   + Partials      362       0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/io/readahead.cc](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9yZWFkYWhlYWQuY2M=) | `95.91% <0%> (-1.03%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | ... and [330 more](https://codecov.io/gh/apache/arrow/pull/4829/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=footer). Last update [3f767ce...3deedaf](https://codecov.io/gh/apache/arrow/pull/4829?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T09:17:26.213+0000",
                    "updated": "2019-07-09T09:17:26.213+0000",
                    "started": "2019-07-09T09:17:26.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "273923",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/274662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-509922994\n \n \n   > For some scenarios, the user only cares about if there is any 0/1 bit in the buffer. So if one is found, the methods return immediately.\r\n   \r\n   What scenarios did you have in mind?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T06:10:21.383+0000",
                    "updated": "2019-07-10T06:10:21.383+0000",
                    "started": "2019-07-10T06:10:21.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274662",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/274701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-509941108\n \n \n   > > For some scenarios, the user only cares about if there is any 0/1 bit in the buffer. So if one is found, the methods return immediately.\r\n   > \r\n   > What scenarios did you have in mind?\r\n   \r\n   In a distributed computational engine:\r\n   1. Before shuffling a batch of vector data, if the vector is full of nulls, there is no need to send it. \r\n   2. When the memory is insufficient, spilling is required (for example, in a Hash Join or Hash Aggregate). If the vector is full of null data, there is no need to spill it and no need to load it later. \r\n   \r\n   In the current code, there is an example in AbstractStructVector#addOrGet: If the vector is full of nulls, it will be cleared and a new one will be created. Code for this example has been revised accordingly in this PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T07:17:50.239+0000",
                    "updated": "2019-07-10T07:17:50.239+0000",
                    "started": "2019-07-10T07:17:50.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274701",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#discussion_r302352768\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -179,6 +179,109 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     return 8 * sizeInBytes - count;\n   }\n \n+  /**\n+   * Tests if all bits in a validity buffer are 0.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 0, and false otherwise.\n+   */\n+  public static boolean allBitsNull(final ArrowBuf validityBuffer, final int valueCount) {\n \n Review comment:\n   can you please add a benchmark for this ? I'm curious if a simple loop that checks each byte performs any better.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T03:44:10.824+0000",
                    "updated": "2019-07-11T03:44:10.824+0000",
                    "started": "2019-07-11T03:44:10.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275153",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#discussion_r302353039\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -179,6 +179,109 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     return 8 * sizeInBytes - count;\n   }\n \n+  /**\n+   * Tests if all bits in a validity buffer are 0.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 0, and false otherwise.\n+   */\n+  public static boolean allBitsNull(final ArrowBuf validityBuffer, final int valueCount) {\n+    if (valueCount == 0) {\n+      return true;\n+    }\n+    final int sizeInBytes = getValidityBufferSize(valueCount);\n+    // If value count is not a multiple of 8, then calculate number of used bits in the last byte\n+    final int remainder = valueCount % 8;\n+    final int fullBytesCount = remainder == 0 ? sizeInBytes : sizeInBytes - 1;\n+\n+    int index = 0;\n+    while (index + 8 <= fullBytesCount) {\n+      long longValue = validityBuffer.getLong(index);\n \n Review comment:\n   I've seen that these do bound checks on every call and too many of these can add up.\r\n   \r\n   In https://github.com/apache/arrow/pull/4847, I did one boundary check at the beginning of the function and bypassed the rest.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T03:44:11.123+0000",
                    "updated": "2019-07-11T03:44:11.123+0000",
                    "started": "2019-07-11T03:44:11.123+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275154",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#discussion_r302389754\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -179,6 +183,117 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     return 8 * sizeInBytes - count;\n   }\n \n+  /**\n+   * Tests if all bits in a validity buffer are 0.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 0, and false otherwise.\n+   */\n+  public static boolean allBitsNull(final ArrowBuf validityBuffer, final int valueCount) {\n+    if (valueCount == 0) {\n+      return true;\n+    }\n+    final int sizeInBytes = getValidityBufferSize(valueCount);\n+\n+    // boundary check\n+    validityBuffer.checkBytes(0, sizeInBytes);\n+\n+    // If value count is not a multiple of 8, then calculate number of used bits in the last byte\n+    final int remainder = valueCount % 8;\n+    final int fullBytesCount = remainder == 0 ? sizeInBytes : sizeInBytes - 1;\n+\n+    int index = 0;\n+    while (index + 8 <= fullBytesCount) {\n+      long longValue = getLong(validityBuffer.memoryAddress() + index);\n+      if (longValue != 0L) {\n+        return false;\n+      }\n+      index += 8;\n+    }\n+\n+    while (index + 4 <= fullBytesCount) {\n+      int intValue = getInt(validityBuffer.memoryAddress() + index);\n+      if (intValue != 0) {\n+        return false;\n+      }\n+      index += 4;\n+    }\n+\n+    while (index < fullBytesCount) {\n+      byte byteValue = getByte(validityBuffer.memoryAddress() + index);\n+      if (byteValue != (byte) 0) {\n+        return false;\n+      }\n+      index += 1;\n+    }\n+\n+    // handling with the last bits\n+    if (remainder != 0) {\n+      byte byteValue = getByte(validityBuffer.memoryAddress() + sizeInBytes - 1);\n+      byte mask = (byte) ((1 << remainder) - 1);\n+      byteValue = (byte) (byteValue & mask);\n+      if (byteValue != (byte) 0) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Tests if all bits in a validity buffer are 1.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 1, and false otherwise.\n+   */\n+  public static boolean allBitsSet(final ArrowBuf validityBuffer, final int valueCount) {\n+    if (valueCount == 0) {\n+      return true;\n+    }\n+    final int sizeInBytes = getValidityBufferSize(valueCount);\n+\n+    // boundary check\n+    validityBuffer.checkBytes(0, sizeInBytes);\n+\n+    // If value count is not a multiple of 8, then calculate number of used bits in the last byte\n+    final int remainder = valueCount % 8;\n+    final int fullBytesCount = remainder == 0 ? sizeInBytes : sizeInBytes - 1;\n+\n+    int index = 0;\n+    while (index + 8 <= fullBytesCount) {\n \n Review comment:\n   can we merge this with the code in above method..the only thing to change looks like the comparison value 0 and 1?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T07:00:28.240+0000",
                    "updated": "2019-07-11T07:00:28.240+0000",
                    "started": "2019-07-11T07:00:28.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275236",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275247",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#discussion_r302402724\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -179,6 +183,117 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     return 8 * sizeInBytes - count;\n   }\n \n+  /**\n+   * Tests if all bits in a validity buffer are 0.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 0, and false otherwise.\n+   */\n+  public static boolean allBitsNull(final ArrowBuf validityBuffer, final int valueCount) {\n+    if (valueCount == 0) {\n+      return true;\n+    }\n+    final int sizeInBytes = getValidityBufferSize(valueCount);\n+\n+    // boundary check\n+    validityBuffer.checkBytes(0, sizeInBytes);\n+\n+    // If value count is not a multiple of 8, then calculate number of used bits in the last byte\n+    final int remainder = valueCount % 8;\n+    final int fullBytesCount = remainder == 0 ? sizeInBytes : sizeInBytes - 1;\n+\n+    int index = 0;\n+    while (index + 8 <= fullBytesCount) {\n+      long longValue = getLong(validityBuffer.memoryAddress() + index);\n+      if (longValue != 0L) {\n+        return false;\n+      }\n+      index += 8;\n+    }\n+\n+    while (index + 4 <= fullBytesCount) {\n+      int intValue = getInt(validityBuffer.memoryAddress() + index);\n+      if (intValue != 0) {\n+        return false;\n+      }\n+      index += 4;\n+    }\n+\n+    while (index < fullBytesCount) {\n+      byte byteValue = getByte(validityBuffer.memoryAddress() + index);\n+      if (byteValue != (byte) 0) {\n+        return false;\n+      }\n+      index += 1;\n+    }\n+\n+    // handling with the last bits\n+    if (remainder != 0) {\n+      byte byteValue = getByte(validityBuffer.memoryAddress() + sizeInBytes - 1);\n+      byte mask = (byte) ((1 << remainder) - 1);\n+      byteValue = (byte) (byteValue & mask);\n+      if (byteValue != (byte) 0) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  /**\n+   * Tests if all bits in a validity buffer are 1.\n+   * @param validityBuffer the validity buffer.\n+   * @param valueCount the bit count.\n+   * @return true if all bits are 1, and false otherwise.\n+   */\n+  public static boolean allBitsSet(final ArrowBuf validityBuffer, final int valueCount) {\n+    if (valueCount == 0) {\n+      return true;\n+    }\n+    final int sizeInBytes = getValidityBufferSize(valueCount);\n+\n+    // boundary check\n+    validityBuffer.checkBytes(0, sizeInBytes);\n+\n+    // If value count is not a multiple of 8, then calculate number of used bits in the last byte\n+    final int remainder = valueCount % 8;\n+    final int fullBytesCount = remainder == 0 ? sizeInBytes : sizeInBytes - 1;\n+\n+    int index = 0;\n+    while (index + 8 <= fullBytesCount) {\n \n Review comment:\n   @praveenbingo Greate suggestion. Thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T07:40:40.059+0000",
                    "updated": "2019-07-11T07:40:40.059+0000",
                    "started": "2019-07-11T07:40:40.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275247",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-510759575\n \n \n   Of the two failures, one is in rust and not related to this change. The other is in flight which I see is failing in the master builds too. so, i'm going ahead with merging this change.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T06:09:34.942+0000",
                    "updated": "2019-07-12T06:09:34.942+0000",
                    "started": "2019-07-12T06:09:34.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275659",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T06:12:08.835+0000",
                    "updated": "2019-07-12T06:12:08.835+0000",
                    "started": "2019-07-12T06:12:08.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275661",
                    "issueId": "13243837"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/worklog/275671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4829: ARROW-5881: [Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits\nURL: https://github.com/apache/arrow/pull/4829#issuecomment-510766590\n \n \n   @pravindra and @praveenbingo, thanks a lot for your valuable comments.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T06:39:18.975+0000",
                    "updated": "2019-07-12T06:39:18.975+0000",
                    "started": "2019-07-12T06:39:18.974+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275671",
                    "issueId": "13243837"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@40df488c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@306f6ece[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6759cc9a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2c0bd7a1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62121d2d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7cd0a182[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55c48f9e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2780ec58[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@558976f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2cac1172[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d65c306[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d2716de[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 12 06:12:05 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-12T06:12:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5881/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-09T07:42:20.000+0000",
        "updated": "2019-08-01T22:39:26.000+0000",
        "timeoriginalestimate": null,
        "description": "These utilities can be used to efficiently determine, for example, \r\n* If all values in a vector are null\r\n* If a vector contains no null\r\n* If a vector contains any valid element\r\n* If a vector contains any invalid element",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Provide functionalities to efficiently determine if a validity buffer has completely 1 bits/0 bits",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13243837/comment/16883562",
                    "id": "16883562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 4829\n[https://github.com/apache/arrow/pull/4829]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-07-12T06:12:05.707+0000",
                    "updated": "2019-07-12T06:12:05.707+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04hi0:",
        "customfield_12314139": null
    }
}