{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13325811",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811",
    "key": "ARROW-9902",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9902/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102\n\n\n   This adds `array()` built-in function to most primitive types. For composite types, this is more challenging and I decided to scope out of this PR.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-02T21:21:27.097+0000",
                    "updated": "2020-09-02T21:21:27.097+0000",
                    "started": "2020-09-02T21:21:27.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478155",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-686019871\n\n\n   https://issues.apache.org/jira/browse/ARROW-9902\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-02T21:22:30.489+0000",
                    "updated": "2020-09-02T21:22:30.489+0000",
                    "started": "2020-09-02T21:22:30.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478156",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r482593020\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/array_expressions.rs\n##########\n@@ -0,0 +1,102 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Array expressions\n+\n+use crate::error::{ExecutionError, Result};\n+use arrow::array::*;\n+use arrow::datatypes::DataType;\n+use std::sync::Arc;\n+\n+macro_rules! downcast_vec {\n+    ($ARGS:expr, $ARRAY_TYPE:ident) => {{\n+        $ARGS\n+            .iter()\n+            .map(|e| match e.as_any().downcast_ref::<$ARRAY_TYPE>() {\n+                Some(array) => Ok(array),\n+                _ => Err(ExecutionError::General(\"failed to downcast\".to_string())),\n+            })\n+    }};\n+}\n+\n+macro_rules! array {\n+    ($ARGS:expr, $ARRAY_TYPE:ident, $BUILDER_TYPE:ident) => {{\n+        // downcast all arguments to their common format\n+        let args =\n+            downcast_vec!($ARGS, $ARRAY_TYPE).collect::<Result<Vec<&$ARRAY_TYPE>>>()?;\n+\n+        let mut builder = FixedSizeListBuilder::<$BUILDER_TYPE>::new(\n+            <$BUILDER_TYPE>::new(args[0].len()),\n+            args.len() as i32,\n+        );\n+        // for each entry in the array\n+        for index in 0..args[0].len() {\n+            for arg in &args {\n+                if arg.is_null(index) {\n+                    builder.values().append_null()?;\n+                } else {\n+                    builder.values().append_value(arg.value(index))?;\n+                }\n+            }\n+            builder.append(true).unwrap();\n\nReview comment:\n       Can we remove this unwrap?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-02T23:20:23.200+0000",
                    "updated": "2020-09-02T23:20:23.200+0000",
                    "started": "2020-09-02T23:20:23.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478200",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-686127989\n\n\n   @jorgecarleitao please rebase\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-02T23:52:39.680+0000",
                    "updated": "2020-09-02T23:52:39.680+0000",
                    "started": "2020-09-02T23:52:39.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478224",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r482605686\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/array_expressions.rs\n##########\n@@ -0,0 +1,102 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Array expressions\n+\n+use crate::error::{ExecutionError, Result};\n+use arrow::array::*;\n+use arrow::datatypes::DataType;\n+use std::sync::Arc;\n+\n+macro_rules! downcast_vec {\n+    ($ARGS:expr, $ARRAY_TYPE:ident) => {{\n+        $ARGS\n+            .iter()\n+            .map(|e| match e.as_any().downcast_ref::<$ARRAY_TYPE>() {\n+                Some(array) => Ok(array),\n+                _ => Err(ExecutionError::General(\"failed to downcast\".to_string())),\n+            })\n+    }};\n+}\n+\n+macro_rules! array {\n+    ($ARGS:expr, $ARRAY_TYPE:ident, $BUILDER_TYPE:ident) => {{\n+        // downcast all arguments to their common format\n+        let args =\n+            downcast_vec!($ARGS, $ARRAY_TYPE).collect::<Result<Vec<&$ARRAY_TYPE>>>()?;\n+\n+        let mut builder = FixedSizeListBuilder::<$BUILDER_TYPE>::new(\n+            <$BUILDER_TYPE>::new(args[0].len()),\n+            args.len() as i32,\n+        );\n+        // for each entry in the array\n+        for index in 0..args[0].len() {\n+            for arg in &args {\n+                if arg.is_null(index) {\n+                    builder.values().append_null()?;\n+                } else {\n+                    builder.values().append_value(arg.value(index))?;\n+                }\n+            }\n+            builder.append(true).unwrap();\n+        }\n+        Ok(Arc::new(builder.finish()))\n+    }};\n+}\n+\n+/// put values in an array.\n+pub fn array(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    // do not accept 0 arguments.\n+    if args.len() == 0 {\n+        return Err(ExecutionError::InternalError(\n+            \"array requires at least one argument\".to_string(),\n+        ));\n+    }\n+\n+    match args[0].data_type() {\n+        DataType::Utf8 => array!(args, StringArray, StringBuilder),\n+        DataType::LargeUtf8 => array!(args, LargeStringArray, LargeStringBuilder),\n+        DataType::Boolean => array!(args, BooleanArray, BooleanBuilder),\n+        DataType::Float32 => array!(args, Float32Array, Float32Builder),\n+        DataType::Float64 => array!(args, Float64Array, Float64Builder),\n+        DataType::Int8 => array!(args, Int8Array, Int8Builder),\n+        DataType::Int32 => array!(args, Int32Array, Int32Builder),\n\nReview comment:\n       Is it intentional that 16 bit integer types are not represented here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-02T23:54:07.555+0000",
                    "updated": "2020-09-02T23:54:07.555+0000",
                    "started": "2020-09-02T23:54:07.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478226",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-686351207\n\n\n   @jorgecarleitao do you already have followup plans for more array functions? some functions like `array_first`, `array_last`, `array_index_of or `array_contains` would be useful for me too.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-03T08:53:23.876+0000",
                    "updated": "2020-09-03T08:53:23.876+0000",
                    "started": "2020-09-03T08:53:23.876+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478390",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r483017698\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/array_expressions.rs\n##########\n@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Array expressions\n+\n+use crate::error::{ExecutionError, Result};\n+use arrow::array::*;\n+use arrow::datatypes::DataType;\n+use std::sync::Arc;\n+\n+macro_rules! downcast_vec {\n+    ($ARGS:expr, $ARRAY_TYPE:ident) => {{\n+        $ARGS\n+            .iter()\n+            .map(|e| match e.as_any().downcast_ref::<$ARRAY_TYPE>() {\n+                Some(array) => Ok(array),\n+                _ => Err(ExecutionError::General(\"failed to downcast\".to_string())),\n+            })\n+    }};\n+}\n+\n+macro_rules! array {\n+    ($ARGS:expr, $ARRAY_TYPE:ident, $BUILDER_TYPE:ident) => {{\n+        // downcast all arguments to their common format\n+        let args =\n+            downcast_vec!($ARGS, $ARRAY_TYPE).collect::<Result<Vec<&$ARRAY_TYPE>>>()?;\n+\n+        let mut builder = FixedSizeListBuilder::<$BUILDER_TYPE>::new(\n+            <$BUILDER_TYPE>::new(args[0].len()),\n+            args.len() as i32,\n+        );\n+        // for each entry in the array\n+        for index in 0..args[0].len() {\n+            for arg in &args {\n+                if arg.is_null(index) {\n+                    builder.values().append_null()?;\n+                } else {\n+                    builder.values().append_value(arg.value(index))?;\n+                }\n+            }\n+            builder.append(true)?;\n+        }\n+        Ok(Arc::new(builder.finish()))\n+    }};\n+}\n+\n+/// put values in an array.\n+pub fn array(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    // do not accept 0 arguments.\n+    if args.len() == 0 {\n+        return Err(ExecutionError::InternalError(\n+            \"array requires at least one argument\".to_string(),\n+        ));\n+    }\n+\n+    match args[0].data_type() {\n\nReview comment:\n       It looks like we assume all values in the list are going to be the same type, which makes sense, but I don't see any validation checks for that. Perhaps we need to add them, or do we expect that type coercion will take care of introducing the appropriate casts? Either way, a specific test for this would be good.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-03T14:24:07.437+0000",
                    "updated": "2020-09-03T14:24:07.437+0000",
                    "started": "2020-09-03T14:24:07.437+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478605",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/478643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r483070474\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/array_expressions.rs\n##########\n@@ -0,0 +1,106 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Array expressions\n+\n+use crate::error::{ExecutionError, Result};\n+use arrow::array::*;\n+use arrow::datatypes::DataType;\n+use std::sync::Arc;\n+\n+macro_rules! downcast_vec {\n+    ($ARGS:expr, $ARRAY_TYPE:ident) => {{\n+        $ARGS\n+            .iter()\n+            .map(|e| match e.as_any().downcast_ref::<$ARRAY_TYPE>() {\n+                Some(array) => Ok(array),\n+                _ => Err(ExecutionError::General(\"failed to downcast\".to_string())),\n+            })\n+    }};\n+}\n+\n+macro_rules! array {\n+    ($ARGS:expr, $ARRAY_TYPE:ident, $BUILDER_TYPE:ident) => {{\n+        // downcast all arguments to their common format\n+        let args =\n+            downcast_vec!($ARGS, $ARRAY_TYPE).collect::<Result<Vec<&$ARRAY_TYPE>>>()?;\n+\n+        let mut builder = FixedSizeListBuilder::<$BUILDER_TYPE>::new(\n+            <$BUILDER_TYPE>::new(args[0].len()),\n+            args.len() as i32,\n+        );\n+        // for each entry in the array\n+        for index in 0..args[0].len() {\n+            for arg in &args {\n+                if arg.is_null(index) {\n+                    builder.values().append_null()?;\n+                } else {\n+                    builder.values().append_value(arg.value(index))?;\n+                }\n+            }\n+            builder.append(true)?;\n+        }\n+        Ok(Arc::new(builder.finish()))\n+    }};\n+}\n+\n+/// put values in an array.\n+pub fn array(args: &[ArrayRef]) -> Result<ArrayRef> {\n+    // do not accept 0 arguments.\n+    if args.len() == 0 {\n+        return Err(ExecutionError::InternalError(\n+            \"array requires at least one argument\".to_string(),\n+        ));\n+    }\n+\n+    match args[0].data_type() {\n\nReview comment:\n       Type coercion should do it, but while adding a test to this, I found a bug in the coercion logic. So, this PR will have to wait a bit until the logic is fixed. Spot-on, @andygrove !\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-03T15:34:11.075+0000",
                    "updated": "2020-09-03T15:34:11.075+0000",
                    "started": "2020-09-03T15:34:11.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "478643",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/479137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-687186971\n\n\n   This is pending #8108, as it requires a bug fix to pass the tests.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-04T14:38:52.255+0000",
                    "updated": "2020-09-04T14:38:52.255+0000",
                    "started": "2020-09-04T14:38:52.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479137",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/479292",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-687518807\n\n\n   @jhorstmann , those are great suggestions!\r\n   \r\n   I am not planning to work on that atm, as I wanted first to have an interface to declare UDFs with the same capabilities as built-in functions (#7967 and #8032).\r\n   \r\n   However, please add them to the [issue tracker](https://issues.apache.org/jira/issues/?jql=project%20%3D%20ARROW%20AND%20resolution%20%3D%20Unresolved%20AND%20component%20in%20(Rust%2C%20%22Rust%20-%20DataFusion%22)%20ORDER%20BY%20created%20DESC%2C%20updated%20ASC%2C%20priority%20DESC). You are of course also welcome to take them, if you have the time. They seem to be good entry-level issues, but of course the devil is always in the details ^_^\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-05T01:56:57.975+0000",
                    "updated": "2020-09-05T01:56:57.975+0000",
                    "started": "2020-09-05T01:56:57.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "479292",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/484832",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#issuecomment-693092473\n\n\n   @jorgecarleitao I plan on reviewing this one tomorrow.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T00:03:39.545+0000",
                    "updated": "2020-09-16T00:03:39.545+0000",
                    "started": "2020-09-16T00:03:39.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "484832",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r489807582\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -734,7 +737,38 @@ fn query_concat() -> Result<()> {\n     ctx.register_table(\"test\", Box::new(table));\n     let sql = \"SELECT concat(c1, '-hi-', cast(c2 as varchar)) FROM test\";\n     let actual = execute(&mut ctx, sql);\n-    let expected = vec![\"\\\"-hi-0\\\"\", \"\\\"a-hi-1\\\"\", \"\\\"NULL\\\"\", \"\\\"aaa-hi-3\\\"\"];\n+    let expected = vec![\"\\\"-hi-0\\\"\", \"\\\"a-hi-1\\\"\", \"NULL\", \"\\\"aaa-hi-3\\\"\"];\n+    assert_eq!(expected, actual);\n+    Ok(())\n+}\n+\n+#[test]\n+fn query_array() -> Result<()> {\n+    let schema = Arc::new(Schema::new(vec![\n+        Field::new(\"c1\", DataType::Utf8, false),\n+        Field::new(\"c2\", DataType::Int32, true),\n+    ]));\n+\n+    let data = RecordBatch::try_new(\n+        schema.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"\", \"a\", \"aa\", \"aaa\"])),\n+            Arc::new(Int32Array::from(vec![Some(0), Some(1), None, Some(3)])),\n+        ],\n+    )?;\n+\n+    let table = MemTable::new(schema, vec![vec![data]])?;\n+\n+    let mut ctx = ExecutionContext::new();\n+    ctx.register_table(\"test\", Box::new(table));\n+    let sql = \"SELECT array(c1, cast(c2 as varchar)) FROM test\";\n+    let actual = execute(&mut ctx, sql);\n\nReview comment:\n       nit: It would be good to have an assertion here looking at the data type of this array\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T23:26:12.385+0000",
                    "updated": "2020-09-16T23:26:12.385+0000",
                    "started": "2020-09-16T23:26:12.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485452",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r489808150\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n+\n+    match array.data_type() {\n+        DataType::Int8 => {\n+            let array = array.as_any().downcast_ref::<Int8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int16 => {\n+            let array = array.as_any().downcast_ref::<Int16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int32 => {\n+            let array = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int64 => {\n+            let array = array.as_any().downcast_ref::<Int64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt8 => {\n+            let array = array.as_any().downcast_ref::<UInt8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt16 => {\n+            let array = array.as_any().downcast_ref::<UInt16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt32 => {\n+            let array = array.as_any().downcast_ref::<UInt32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt64 => {\n+            let array = array.as_any().downcast_ref::<UInt64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float32 => {\n+            let array = array.as_any().downcast_ref::<Float32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float64 => {\n+            let array = array.as_any().downcast_ref::<Float64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Utf8 => {\n+            let array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Boolean => {\n+            let array = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::FixedSizeList(_, n) => {\n+            let array = array.as_any().downcast_ref::<FixedSizeListArray>().unwrap();\n+\n+            let mut r = Vec::with_capacity(*n as usize);\n+            for i in 0..*n {\n+                let array = array.value(row_index);\n\nReview comment:\n       I think this also needs null handling since elements within this array could have null values?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T23:28:15.833+0000",
                    "updated": "2020-09-16T23:28:15.833+0000",
                    "started": "2020-09-16T23:28:15.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485453",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r489908380\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -734,7 +737,38 @@ fn query_concat() -> Result<()> {\n     ctx.register_table(\"test\", Box::new(table));\n     let sql = \"SELECT concat(c1, '-hi-', cast(c2 as varchar)) FROM test\";\n     let actual = execute(&mut ctx, sql);\n-    let expected = vec![\"\\\"-hi-0\\\"\", \"\\\"a-hi-1\\\"\", \"\\\"NULL\\\"\", \"\\\"aaa-hi-3\\\"\"];\n+    let expected = vec![\"\\\"-hi-0\\\"\", \"\\\"a-hi-1\\\"\", \"NULL\", \"\\\"aaa-hi-3\\\"\"];\n+    assert_eq!(expected, actual);\n+    Ok(())\n+}\n+\n+#[test]\n+fn query_array() -> Result<()> {\n+    let schema = Arc::new(Schema::new(vec![\n+        Field::new(\"c1\", DataType::Utf8, false),\n+        Field::new(\"c2\", DataType::Int32, true),\n+    ]));\n+\n+    let data = RecordBatch::try_new(\n+        schema.clone(),\n+        vec![\n+            Arc::new(StringArray::from(vec![\"\", \"a\", \"aa\", \"aaa\"])),\n+            Arc::new(Int32Array::from(vec![Some(0), Some(1), None, Some(3)])),\n+        ],\n+    )?;\n+\n+    let table = MemTable::new(schema, vec![vec![data]])?;\n+\n+    let mut ctx = ExecutionContext::new();\n+    ctx.register_table(\"test\", Box::new(table));\n+    let sql = \"SELECT array(c1, cast(c2 as varchar)) FROM test\";\n+    let actual = execute(&mut ctx, sql);\n\nReview comment:\n       Yeah, we have not been testing that the final schema is expected in any of these tests, and IMO we should, for all tests in this module. I will open an issue in Jira with this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T02:53:42.926+0000",
                    "updated": "2020-09-17T02:53:42.926+0000",
                    "started": "2020-09-17T02:53:42.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485510",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r489909343\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n+\n+    match array.data_type() {\n+        DataType::Int8 => {\n+            let array = array.as_any().downcast_ref::<Int8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int16 => {\n+            let array = array.as_any().downcast_ref::<Int16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int32 => {\n+            let array = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int64 => {\n+            let array = array.as_any().downcast_ref::<Int64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt8 => {\n+            let array = array.as_any().downcast_ref::<UInt8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt16 => {\n+            let array = array.as_any().downcast_ref::<UInt16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt32 => {\n+            let array = array.as_any().downcast_ref::<UInt32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt64 => {\n+            let array = array.as_any().downcast_ref::<UInt64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float32 => {\n+            let array = array.as_any().downcast_ref::<Float32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float64 => {\n+            let array = array.as_any().downcast_ref::<Float64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Utf8 => {\n+            let array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Boolean => {\n+            let array = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::FixedSizeList(_, n) => {\n+            let array = array.as_any().downcast_ref::<FixedSizeListArray>().unwrap();\n+\n+            let mut r = Vec::with_capacity(*n as usize);\n+            for i in 0..*n {\n+                let array = array.value(row_index);\n\nReview comment:\n       Not sure I follow:\r\n   \r\n   * if `array.is_null(row_index)`, then line 613 covers it with `array.is_null(row_index)`\r\n   * if the elements within the array are null, then line 613 covers it because we call the function recursively on each element, in line 672.\r\n   \r\n   I moved that statement away from the loop to make it more explicit.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T02:55:16.281+0000",
                    "updated": "2020-09-17T02:55:16.281+0000",
                    "started": "2020-09-17T02:55:16.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485511",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r490294558\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n+\n+    match array.data_type() {\n+        DataType::Int8 => {\n+            let array = array.as_any().downcast_ref::<Int8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int16 => {\n+            let array = array.as_any().downcast_ref::<Int16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int32 => {\n+            let array = array.as_any().downcast_ref::<Int32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Int64 => {\n+            let array = array.as_any().downcast_ref::<Int64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt8 => {\n+            let array = array.as_any().downcast_ref::<UInt8Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt16 => {\n+            let array = array.as_any().downcast_ref::<UInt16Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt32 => {\n+            let array = array.as_any().downcast_ref::<UInt32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::UInt64 => {\n+            let array = array.as_any().downcast_ref::<UInt64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float32 => {\n+            let array = array.as_any().downcast_ref::<Float32Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Float64 => {\n+            let array = array.as_any().downcast_ref::<Float64Array>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Utf8 => {\n+            let array = array.as_any().downcast_ref::<StringArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::Boolean => {\n+            let array = array.as_any().downcast_ref::<BooleanArray>().unwrap();\n+            format!(\"{:?}\", array.value(row_index))\n+        }\n+        DataType::FixedSizeList(_, n) => {\n+            let array = array.as_any().downcast_ref::<FixedSizeListArray>().unwrap();\n+            let array = array.value(row_index);\n\nReview comment:\n       I think that we need a null check here in case the whole array is null. I know we check at the start of this method for a null value _within_ an array, but I don't see a check for a null array. Maybe there are guarantees that no arrays can be null? If so, it would be good to add a comment here to explain.\r\n   \r\n   ```rust\r\n   let array = array.as_any().downcast_ref::<FixedSizeListArray>().unwrap();\r\n   if array.is_null(row_index) {\r\n     // this case isn't handled\r\n   } else {\r\n     let array = array.value(row_index);\r\n     let mut r = Vec::with_capacity(*n as usize);\r\n     for i in 0..*n {\r\n       r.push(array_str(&array, i as usize));\r\n     }\r\n     format!(\"[{}]\", r.join(\",\"))\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T14:31:51.052+0000",
                    "updated": "2020-09-17T14:31:51.052+0000",
                    "started": "2020-09-17T14:31:51.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485770",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r490299782\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n\nReview comment:\n       @andygrove , isn't this the check that you refer to? I moved it to the beggining of the function so that it applies to all types (array or not).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T14:37:35.534+0000",
                    "updated": "2020-09-17T14:37:35.534+0000",
                    "started": "2020-09-17T14:37:35.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485774",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r490299782\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n\nReview comment:\n       @andygrove , isn't this the check that you refer to? I moved it to the begining of the function so that it applies to all types (array type or not).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T14:38:58.587+0000",
                    "updated": "2020-09-17T14:38:58.587+0000",
                    "started": "2020-09-17T14:38:58.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485776",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r490299782\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n\nReview comment:\n       @andygrove , isn't this the check that you refer to? I moved it to the begining of the function so that it applies to all types (array type or not). Note that this function is used to print any `ArrayRef`, in line 691. I.e. this function is not used only for Array-types. It is just written in a way that allows for recursion, on composite types.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T14:41:21.034+0000",
                    "updated": "2020-09-17T14:41:21.034+0000",
                    "started": "2020-09-17T14:41:21.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485779",
                    "issueId": "13325811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/worklog/485975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8102:\nURL: https://github.com/apache/arrow/pull/8102#discussion_r490575680\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -609,6 +609,74 @@ fn execute(ctx: &mut ExecutionContext, sql: &str) -> Vec<String> {\n     result_str(&results)\n }\n \n+fn array_str(array: &Arc<dyn Array>, row_index: usize) -> String {\n+    if array.is_null(row_index) {\n+        return \"NULL\".to_string();\n+    }\n\nReview comment:\n       This check is good but no, this is not what I'm referring to. Here is my example code again but renaming some variables for clarity.\r\n   \r\n   ```rust\r\n   let array1 = array.as_any().downcast_ref::<FixedSizeListArray>().unwrap();\r\n   if array1.is_null(row_index) {\r\n     // this case isn't handled\r\n   } else {\r\n     let array2 = array1.value(row_index);\r\n     let mut r = Vec::with_capacity(*n as usize);\r\n     for i in 0..*n {\r\n       r.push(array_str(&array2, i as usize));\r\n     }\r\n     format!(\"[{}]\", r.join(\",\"))\r\n   }\r\n   ```\r\n   \r\n   There are two arrays involved here; array1 and array2.\r\n   \r\n   `array1` is the array of columns.\r\n   \r\n   `array2` is one of the columns from the array `array2`.\r\n   \r\n   We call `array_str` with `array2` and that part is all good.\r\n   \r\n   However, when we initialize `array2` with `let array2 = array1.value(row_index);` we are not first checking to see if there is a valid value at `row_index` in `array1`.\r\n   \r\n   Does that make sense?\r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-17T21:35:53.555+0000",
                    "updated": "2020-09-17T21:35:53.555+0000",
                    "started": "2020-09-17T21:35:53.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485975",
                    "issueId": "13325811"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@31b4153f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5bf3e383[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48a2b6d6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c09bbba[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f2cc6b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5440cb39[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@989d361[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@489c7d81[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@519c6b2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3d77b25[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4402b2e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6fd9af91[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Sep 20 15:24:37 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-20T15:24:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9902/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-02T21:12:49.000+0000",
        "updated": "2020-09-22T03:33:16.000+0000",
        "timeoriginalestimate": null,
        "description": "`array` is a function that takes an arbitrary number of columns and returns a fixed-size array with their values.\r\n\r\nThis function is notoriously difficult to implement because it receives an arbitrary number of arguments or arbitrary but common types, but it is also useful for grouping values together, e.g. to pass to a UDF.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Add support for array()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13325811/comment/17199033",
                    "id": "17199033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8102\n[https://github.com/apache/arrow/pull/8102]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-09-20T15:24:37.351+0000",
                    "updated": "2020-09-20T15:24:37.351+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0iawg:",
        "customfield_12314139": null
    }
}