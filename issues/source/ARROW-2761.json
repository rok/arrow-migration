{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13168903",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903",
    "key": "ARROW-2761",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "features",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rgruener",
            "name": "rgruener",
            "key": "rgruener",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robbie Gruener",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rgruener",
            "name": "rgruener",
            "key": "rgruener",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robbie Gruener",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rgruener",
            "name": "rgruener",
            "key": "rgruener",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robbie Gruener",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2761/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/worklog/116904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rgruener opened a new pull request #2188:  ARROW-2761: [Python] Add support for set operations in hive partition filtering\nURL: https://github.com/apache/arrow/pull/2188\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-28T16:55:55.267+0000",
                    "updated": "2018-06-28T16:55:55.267+0000",
                    "started": "2018-06-28T16:55:55.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "116904",
                    "issueId": "13168903"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/worklog/117399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rgruener closed pull request #2188:  ARROW-2761: [Python] Add support for set operations in hive partition filtering\nURL: https://github.com/apache/arrow/pull/2188\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex ad1fa54f3b..4b5257b7e0 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -866,6 +866,18 @@ def filter_accepts_partition(part_key, filter, level):\n                 return True\n \n             f_type = type(f_value)\n+\n+            if isinstance(f_value, set):\n+                if not f_value:\n+                    raise ValueError(\"Cannot use empty set as filter value\")\n+                if op not in {'in', 'not in'}:\n+                    raise ValueError(\"Op '%s' not supported with set value\",\n+                                     op)\n+                if len(set([type(item) for item in f_value])) != 1:\n+                    raise ValueError(\"All elements of set '%s' must be of\"\n+                                     \" same type\", f_value)\n+                f_type = type(next(iter(f_value)))\n+\n             p_value = f_type((self.partitions\n                                   .levels[level]\n                                   .dictionary[p_value_index]\n@@ -883,6 +895,10 @@ def filter_accepts_partition(part_key, filter, level):\n                 return p_value <= f_value\n             elif op == '>=':\n                 return p_value >= f_value\n+            elif op == 'in':\n+                return p_value in f_value\n+            elif op == 'not in':\n+                return p_value not in f_value\n             else:\n                 raise ValueError(\"'%s' is not a valid operator in predicates.\",\n                                  filter[1])\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex 51d3b011d7..a435f28cbc 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -1061,40 +1061,41 @@ def test_equivalency(tmpdir):\n     assert 'b' not in result_df['string'].values\n     assert False not in result_df['boolean'].values\n \n-    @parquet\n-    def test_cutoff_exclusive_integer(tmpdir):\n-        fs = LocalFileSystem.get_instance()\n-        base_path = str(tmpdir)\n \n-        import pyarrow.parquet as pq\n+@parquet\n+def test_cutoff_exclusive_integer(tmpdir):\n+    fs = LocalFileSystem.get_instance()\n+    base_path = str(tmpdir)\n \n-        integer_keys = [0, 1, 2, 3, 4]\n-        partition_spec = [\n-            ['integers', integer_keys],\n-        ]\n-        N = 5\n+    import pyarrow.parquet as pq\n+\n+    integer_keys = [0, 1, 2, 3, 4]\n+    partition_spec = [\n+        ['integers', integer_keys],\n+    ]\n+    N = 5\n \n-        df = pd.DataFrame({\n-            'index': np.arange(N),\n-            'integers': np.array(integer_keys, dtype='i4'),\n-        }, columns=['index', 'integers'])\n+    df = pd.DataFrame({\n+        'index': np.arange(N),\n+        'integers': np.array(integer_keys, dtype='i4'),\n+    }, columns=['index', 'integers'])\n \n-        _generate_partition_directories(fs, base_path, partition_spec, df)\n+    _generate_partition_directories(fs, base_path, partition_spec, df)\n \n-        dataset = pq.ParquetDataset(\n-            base_path, filesystem=fs,\n-            filters=[\n-                ('integers', '<', 4),\n-                ('integers', '>', 1),\n-            ]\n-        )\n-        table = dataset.read()\n-        result_df = (table.to_pandas()\n-                          .sort_values(by='index')\n-                          .reset_index(drop=True))\n+    dataset = pq.ParquetDataset(\n+        base_path, filesystem=fs,\n+        filters=[\n+            ('integers', '<', 4),\n+            ('integers', '>', 1),\n+        ]\n+    )\n+    table = dataset.read()\n+    result_df = (table.to_pandas()\n+                      .sort_values(by='index')\n+                      .reset_index(drop=True))\n \n-        result_list = [x for x in map(int, result_df['integers'].values)]\n-        assert result_list == [2, 3]\n+    result_list = [x for x in map(int, result_df['integers'].values)]\n+    assert result_list == [2, 3]\n \n \n @parquet\n@@ -1182,6 +1183,44 @@ def test_inclusive_integer(tmpdir):\n     assert result_list == [2, 3]\n \n \n+@parquet\n+def test_inclusive_set(tmpdir):\n+    fs = LocalFileSystem.get_instance()\n+    base_path = str(tmpdir)\n+\n+    import pyarrow.parquet as pq\n+\n+    integer_keys = [0, 1]\n+    string_keys = ['a', 'b', 'c']\n+    boolean_keys = [True, False]\n+    partition_spec = [\n+        ['integer', integer_keys],\n+        ['string', string_keys],\n+        ['boolean', boolean_keys]\n+    ]\n+\n+    df = pd.DataFrame({\n+        'integer': np.array(integer_keys, dtype='i4').repeat(15),\n+        'string': np.tile(np.tile(np.array(string_keys, dtype=object), 5), 2),\n+        'boolean': np.tile(np.tile(np.array(boolean_keys, dtype='bool'), 5),\n+                           3),\n+    }, columns=['integer', 'string', 'boolean'])\n+\n+    _generate_partition_directories(fs, base_path, partition_spec, df)\n+\n+    dataset = pq.ParquetDataset(\n+        base_path, filesystem=fs,\n+        filters=[('integer', 'in', {1}), ('string', 'in', {'a', 'b'}),\n+                 ('boolean', 'in', {True})]\n+    )\n+    table = dataset.read()\n+    result_df = (table.to_pandas().reset_index(drop=True))\n+\n+    assert 0 not in result_df['integer'].values\n+    assert 'c' not in result_df['string'].values\n+    assert False not in result_df['boolean'].values\n+\n+\n @parquet\n def test_invalid_pred_op(tmpdir):\n     fs = LocalFileSystem.get_instance()\n@@ -1209,6 +1248,20 @@ def test_invalid_pred_op(tmpdir):\n                             ('integers', '=<', 3),\n                           ])\n \n+    with pytest.raises(ValueError):\n+        pq.ParquetDataset(base_path,\n+                          filesystem=fs,\n+                          filters=[\n+                            ('integers', 'in', set()),\n+                          ])\n+\n+    with pytest.raises(ValueError):\n+        pq.ParquetDataset(base_path,\n+                          filesystem=fs,\n+                          filters=[\n+                            ('integers', '!=', {3}),\n+                          ])\n+\n \n @pytest.yield_fixture\n def s3_example():\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-29T14:34:20.826+0000",
                    "updated": "2018-06-29T14:34:20.826+0000",
                    "started": "2018-06-29T14:34:20.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "117399",
                    "issueId": "13168903"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/worklog/117400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rgruener opened a new pull request #2188:  ARROW-2761: [Python] Add support for set operations in hive partition filtering\nURL: https://github.com/apache/arrow/pull/2188\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-29T14:34:23.209+0000",
                    "updated": "2018-06-29T14:34:23.209+0000",
                    "started": "2018-06-29T14:34:23.208+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "117400",
                    "issueId": "13168903"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/worklog/117824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #2188: ARROW-2761: [Python] Add support for set operations in hive partition filtering\nURL: https://github.com/apache/arrow/pull/2188\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex ad1fa54f3b..4b5257b7e0 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -866,6 +866,18 @@ def filter_accepts_partition(part_key, filter, level):\n                 return True\n \n             f_type = type(f_value)\n+\n+            if isinstance(f_value, set):\n+                if not f_value:\n+                    raise ValueError(\"Cannot use empty set as filter value\")\n+                if op not in {'in', 'not in'}:\n+                    raise ValueError(\"Op '%s' not supported with set value\",\n+                                     op)\n+                if len(set([type(item) for item in f_value])) != 1:\n+                    raise ValueError(\"All elements of set '%s' must be of\"\n+                                     \" same type\", f_value)\n+                f_type = type(next(iter(f_value)))\n+\n             p_value = f_type((self.partitions\n                                   .levels[level]\n                                   .dictionary[p_value_index]\n@@ -883,6 +895,10 @@ def filter_accepts_partition(part_key, filter, level):\n                 return p_value <= f_value\n             elif op == '>=':\n                 return p_value >= f_value\n+            elif op == 'in':\n+                return p_value in f_value\n+            elif op == 'not in':\n+                return p_value not in f_value\n             else:\n                 raise ValueError(\"'%s' is not a valid operator in predicates.\",\n                                  filter[1])\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex 51d3b011d7..a435f28cbc 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -1061,40 +1061,41 @@ def test_equivalency(tmpdir):\n     assert 'b' not in result_df['string'].values\n     assert False not in result_df['boolean'].values\n \n-    @parquet\n-    def test_cutoff_exclusive_integer(tmpdir):\n-        fs = LocalFileSystem.get_instance()\n-        base_path = str(tmpdir)\n \n-        import pyarrow.parquet as pq\n+@parquet\n+def test_cutoff_exclusive_integer(tmpdir):\n+    fs = LocalFileSystem.get_instance()\n+    base_path = str(tmpdir)\n \n-        integer_keys = [0, 1, 2, 3, 4]\n-        partition_spec = [\n-            ['integers', integer_keys],\n-        ]\n-        N = 5\n+    import pyarrow.parquet as pq\n+\n+    integer_keys = [0, 1, 2, 3, 4]\n+    partition_spec = [\n+        ['integers', integer_keys],\n+    ]\n+    N = 5\n \n-        df = pd.DataFrame({\n-            'index': np.arange(N),\n-            'integers': np.array(integer_keys, dtype='i4'),\n-        }, columns=['index', 'integers'])\n+    df = pd.DataFrame({\n+        'index': np.arange(N),\n+        'integers': np.array(integer_keys, dtype='i4'),\n+    }, columns=['index', 'integers'])\n \n-        _generate_partition_directories(fs, base_path, partition_spec, df)\n+    _generate_partition_directories(fs, base_path, partition_spec, df)\n \n-        dataset = pq.ParquetDataset(\n-            base_path, filesystem=fs,\n-            filters=[\n-                ('integers', '<', 4),\n-                ('integers', '>', 1),\n-            ]\n-        )\n-        table = dataset.read()\n-        result_df = (table.to_pandas()\n-                          .sort_values(by='index')\n-                          .reset_index(drop=True))\n+    dataset = pq.ParquetDataset(\n+        base_path, filesystem=fs,\n+        filters=[\n+            ('integers', '<', 4),\n+            ('integers', '>', 1),\n+        ]\n+    )\n+    table = dataset.read()\n+    result_df = (table.to_pandas()\n+                      .sort_values(by='index')\n+                      .reset_index(drop=True))\n \n-        result_list = [x for x in map(int, result_df['integers'].values)]\n-        assert result_list == [2, 3]\n+    result_list = [x for x in map(int, result_df['integers'].values)]\n+    assert result_list == [2, 3]\n \n \n @parquet\n@@ -1182,6 +1183,44 @@ def test_inclusive_integer(tmpdir):\n     assert result_list == [2, 3]\n \n \n+@parquet\n+def test_inclusive_set(tmpdir):\n+    fs = LocalFileSystem.get_instance()\n+    base_path = str(tmpdir)\n+\n+    import pyarrow.parquet as pq\n+\n+    integer_keys = [0, 1]\n+    string_keys = ['a', 'b', 'c']\n+    boolean_keys = [True, False]\n+    partition_spec = [\n+        ['integer', integer_keys],\n+        ['string', string_keys],\n+        ['boolean', boolean_keys]\n+    ]\n+\n+    df = pd.DataFrame({\n+        'integer': np.array(integer_keys, dtype='i4').repeat(15),\n+        'string': np.tile(np.tile(np.array(string_keys, dtype=object), 5), 2),\n+        'boolean': np.tile(np.tile(np.array(boolean_keys, dtype='bool'), 5),\n+                           3),\n+    }, columns=['integer', 'string', 'boolean'])\n+\n+    _generate_partition_directories(fs, base_path, partition_spec, df)\n+\n+    dataset = pq.ParquetDataset(\n+        base_path, filesystem=fs,\n+        filters=[('integer', 'in', {1}), ('string', 'in', {'a', 'b'}),\n+                 ('boolean', 'in', {True})]\n+    )\n+    table = dataset.read()\n+    result_df = (table.to_pandas().reset_index(drop=True))\n+\n+    assert 0 not in result_df['integer'].values\n+    assert 'c' not in result_df['string'].values\n+    assert False not in result_df['boolean'].values\n+\n+\n @parquet\n def test_invalid_pred_op(tmpdir):\n     fs = LocalFileSystem.get_instance()\n@@ -1209,6 +1248,20 @@ def test_invalid_pred_op(tmpdir):\n                             ('integers', '=<', 3),\n                           ])\n \n+    with pytest.raises(ValueError):\n+        pq.ParquetDataset(base_path,\n+                          filesystem=fs,\n+                          filters=[\n+                            ('integers', 'in', set()),\n+                          ])\n+\n+    with pytest.raises(ValueError):\n+        pq.ParquetDataset(base_path,\n+                          filesystem=fs,\n+                          filters=[\n+                            ('integers', '!=', {3}),\n+                          ])\n+\n \n @pytest.yield_fixture\n def s3_example():\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-30T09:53:23.531+0000",
                    "updated": "2018-06-30T09:53:23.531+0000",
                    "started": "2018-06-30T09:53:23.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "117824",
                    "issueId": "13168903"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/worklog/117826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #2188: ARROW-2761: [Python] Add support for set operations in hive partition filtering\nURL: https://github.com/apache/arrow/pull/2188#issuecomment-401530774\n \n \n   Thank you @rgruener for implementing this!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-30T09:54:12.429+0000",
                    "updated": "2018-06-30T09:54:12.429+0000",
                    "started": "2018-06-30T09:54:12.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "117826",
                    "issueId": "13168903"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@726f586e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7356cd36[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35b903ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@70c35712[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fb23042[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3e7e6877[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43a5ba25[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@29340e84[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57fa0bc0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a0aec98[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7410196e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d596946[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jun 30 09:53:16 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-06-30T09:53:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2761/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-06-28T15:54:22.000+0000",
        "updated": "2018-06-30T09:54:12.000+0000",
        "timeoriginalestimate": null,
        "description": "Pyarrow supports many operators on hive partitioned parquet files. It should add in support for set operations similar to\u00a0https://github.com/dask/fastparquet/blob/master/fastparquet/api.py#L335",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Support set filter operators on Hive partitioned Parquet files",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/comment/16526544",
                    "id": "16526544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rgruener",
                        "name": "rgruener",
                        "key": "rgruener",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robbie Gruener",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "https://github.com/apache/arrow/pull/2188",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rgruener",
                        "name": "rgruener",
                        "key": "rgruener",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robbie Gruener",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-06-28T16:58:34.319+0000",
                    "updated": "2018-06-28T16:58:34.319+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168903/comment/16528645",
                    "id": "16528645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 2188\n[https://github.com/apache/arrow/pull/2188]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-06-30T09:53:16.554+0000",
                    "updated": "2018-06-30T09:53:16.554+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vcbz:",
        "customfield_12314139": null
    }
}