{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13193045",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045",
    "key": "ARROW-3577",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3577/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet opened a new pull request #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-21T20:47:02.704+0000",
                    "updated": "2018-10-21T20:47:02.704+0000",
                    "started": "2018-10-21T20:47:02.703+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156722",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431702895\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=h1) Report\n   > Merging [#2811](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d656dc3fc90b0f1c34b2f44f2c62598da82a24dd?src=pr&el=desc) will **decrease** coverage by `24.68%`.\n   > The diff coverage is `95.58%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2811/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #2811       +/-   ##\n   ===========================================\n   - Coverage   87.63%   62.95%   -24.69%     \n   ===========================================\n     Files         406       50      -356     \n     Lines       62842     2378    -60464     \n   ===========================================\n   - Hits        55070     1497    -53573     \n   + Misses       7698      811     -6887     \n   + Partials       74       70        -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.36% <100%> (+0.06%)` | :arrow_up: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | `94.44% <94.44%> (\u00f8)` | |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | ... and [363 more](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=footer). Last update [d656dc3...c01df69](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-21T20:51:37.554+0000",
                    "updated": "2018-10-21T20:51:37.554+0000",
                    "started": "2018-10-21T20:51:37.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156723",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431702895\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=h1) Report\n   > Merging [#2811](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d656dc3fc90b0f1c34b2f44f2c62598da82a24dd?src=pr&el=desc) will **decrease** coverage by `24.59%`.\n   > The diff coverage is `98.52%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2811/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2811      +/-   ##\n   ==========================================\n   - Coverage   87.63%   63.03%   -24.6%     \n   ==========================================\n     Files         406       50     -356     \n     Lines       62842     2378   -60464     \n   ==========================================\n   - Hits        55070     1499   -53571     \n   + Misses       7698      809    -6889     \n   + Partials       74       70       -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/array.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYXJyYXkuZ28=) | `96.36% <100%> (+0.06%)` | :arrow_up: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | `98.14% <98.14%> (\u00f8)` | |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | ... and [363 more](https://codecov.io/gh/apache/arrow/pull/2811/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=footer). Last update [d656dc3...fe004b8](https://codecov.io/gh/apache/arrow/pull/2811?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-21T20:58:50.002+0000",
                    "updated": "2018-10-21T20:58:50.002+0000",
                    "started": "2018-10-21T20:58:50.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156724",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431703826\n \n \n   @stuartcarnie PTAL\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-21T21:04:34.508+0000",
                    "updated": "2018-10-21T21:04:34.508+0000",
                    "started": "2018-10-21T21:04:34.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156725",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431716573\n \n \n   Thanks!\r\n   I've merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T00:17:55.959+0000",
                    "updated": "2018-10-22T00:17:55.959+0000",
                    "started": "2018-10-22T00:17:55.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156731",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431716592\n \n \n   Thanks!\r\n   I've merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T00:18:17.559+0000",
                    "updated": "2018-10-22T00:18:17.559+0000",
                    "started": "2018-10-22T00:18:17.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156732",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431716618\n \n \n   Thanks!\r\n   I've merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T00:18:38.925+0000",
                    "updated": "2018-10-22T00:18:38.925+0000",
                    "started": "2018-10-22T00:18:38.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156733",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/go/arrow/array/array.go b/go/arrow/array/array.go\nindex 7aa1295a38..44c35a480a 100644\n--- a/go/arrow/array/array.go\n+++ b/go/arrow/array/array.go\n@@ -133,6 +133,36 @@ func (a *array) setData(data *Data) {\n type arrayConstructorFn func(*Data) Interface\n \n var (\n+\tmakeArrayFn [32]arrayConstructorFn\n+)\n+\n+func unsupportedArrayType(data *Data) Interface {\n+\tpanic(\"unsupported data type: \" + data.dtype.ID().String())\n+}\n+\n+func invalidDataType(data *Data) Interface {\n+\tpanic(\"invalid data type: \" + data.dtype.ID().String())\n+}\n+\n+// MakeFromData constructs a strongly-typed array instance from generic Data.\n+func MakeFromData(data *Data) Interface {\n+\treturn makeArrayFn[byte(data.dtype.ID()&0x1f)](data)\n+}\n+\n+// NewSlice constructs a zero-copy slice of the array with the indicated\n+// indices i and j, corresponding to array[i:j].\n+// The returned array must be Release()'d after use.\n+//\n+// NewSlice panics if the slice is outside the valid range of the input array.\n+// NewSlice panics if j < i.\n+func NewSlice(arr Interface, i, j int64) Interface {\n+\tdata := NewSliceData(arr.Data(), i, j)\n+\tslice := MakeFromData(data)\n+\tdata.Release()\n+\treturn slice\n+}\n+\n+func init() {\n \tmakeArrayFn = [...]arrayConstructorFn{\n \t\tarrow.NULL:              func(data *Data) Interface { return NewNullData(data) },\n \t\tarrow.BOOL:              func(data *Data) Interface { return NewBooleanData(data) },\n@@ -157,8 +187,8 @@ var (\n \t\tarrow.TIME64:            unsupportedArrayType,\n \t\tarrow.INTERVAL:          unsupportedArrayType,\n \t\tarrow.DECIMAL:           unsupportedArrayType,\n-\t\tarrow.LIST:              unsupportedArrayType,\n-\t\tarrow.STRUCT:            unsupportedArrayType,\n+\t\tarrow.LIST:              func(data *Data) Interface { return NewListData(data) },\n+\t\tarrow.STRUCT:            func(data *Data) Interface { return NewStructData(data) },\n \t\tarrow.UNION:             unsupportedArrayType,\n \t\tarrow.DICTIONARY:        unsupportedArrayType,\n \t\tarrow.MAP:               unsupportedArrayType,\n@@ -169,35 +199,4 @@ var (\n \t\t30: invalidDataType,\n \t\t31: invalidDataType,\n \t}\n-)\n-\n-func unsupportedArrayType(data *Data) Interface {\n-\tpanic(\"unsupported data type: \" + data.dtype.ID().String())\n-}\n-\n-func invalidDataType(data *Data) Interface {\n-\tpanic(\"invalid data type: \" + data.dtype.ID().String())\n-}\n-\n-// MakeFromData constructs a strongly-typed array instance from generic Data.\n-func MakeFromData(data *Data) Interface {\n-\treturn makeArrayFn[byte(data.dtype.ID()&0x1f)](data)\n-}\n-\n-// NewSlice constructs a zero-copy slice of the array with the indicated\n-// indices i and j, corresponding to array[i:j].\n-// The returned array must be Release()'d after use.\n-//\n-// NewSlice panics if the slice is outside the valid range of the input array.\n-// NewSlice panics if j < i.\n-func NewSlice(arr Interface, i, j int64) Interface {\n-\tdata := NewSliceData(arr.Data(), i, j)\n-\tslice := MakeFromData(data)\n-\tdata.Release()\n-\treturn slice\n-}\n-\n-func init() {\n-\tmakeArrayFn[arrow.LIST] = func(data *Data) Interface { return NewListData(data) }\n-\tmakeArrayFn[arrow.STRUCT] = func(data *Data) Interface { return NewStructData(data) }\n }\ndiff --git a/go/arrow/array/table.go b/go/arrow/array/table.go\nnew file mode 100644\nindex 0000000000..7118f248cf\n--- /dev/null\n+++ b/go/arrow/array/table.go\n@@ -0,0 +1,128 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+)\n+\n+// Chunked manages a collection of primitives arrays as one logical large array.\n+type Chunked struct {\n+\tchunks []Interface\n+\n+\trefCount int64\n+\n+\tlength int\n+\tnulls  int\n+\tdtype  arrow.DataType\n+}\n+\n+// NewChunked returns a new chunked array from the slice of arrays.\n+//\n+// NewChunked panics if the chunks do not have the same data type.\n+func NewChunked(dtype arrow.DataType, chunks []Interface) *Chunked {\n+\tarr := &Chunked{\n+\t\tchunks:   make([]Interface, len(chunks)),\n+\t\trefCount: 1,\n+\t\tdtype:    dtype,\n+\t}\n+\tfor i, chunk := range chunks {\n+\t\tif chunk.DataType() != dtype {\n+\t\t\tpanic(\"arrow/array: mismatch data type\")\n+\t\t}\n+\t\tchunk.Retain()\n+\t\tarr.chunks[i] = chunk\n+\t\tarr.length += chunk.Len()\n+\t\tarr.nulls += chunk.NullN()\n+\t}\n+\treturn arr\n+}\n+\n+// Retain increases the reference count by 1.\n+// Retain may be called simultaneously from multiple goroutines.\n+func (a *Chunked) Retain() {\n+\tatomic.AddInt64(&a.refCount, 1)\n+}\n+\n+// Release decreases the reference count by 1.\n+// When the reference count goes to zero, the memory is freed.\n+// Release may be called simultaneously from multiple goroutines.\n+func (a *Chunked) Release() {\n+\tdebug.Assert(atomic.LoadInt64(&a.refCount) > 0, \"too many releases\")\n+\n+\tif atomic.AddInt64(&a.refCount, -1) == 0 {\n+\t\tfor _, arr := range a.chunks {\n+\t\t\tarr.Release()\n+\t\t}\n+\t\ta.chunks = nil\n+\t\ta.length = 0\n+\t\ta.nulls = 0\n+\t}\n+}\n+\n+func (a *Chunked) Len() int                 { return a.length }\n+func (a *Chunked) NullN() int               { return a.nulls }\n+func (a *Chunked) DataType() arrow.DataType { return a.dtype }\n+func (a *Chunked) Chunks() []Interface      { return a.chunks }\n+func (a *Chunked) Chunk(i int) Interface    { return a.chunks[i] }\n+\n+// NewSlice constructs a zero-copy slice of the chunked array with the indicated\n+// indices i and j, corresponding to array[i:j].\n+// The returned chunked array must be Release()'d after use.\n+//\n+// NewSlice panics if the slice is outside the valid range of the input array.\n+// NewSlice panics if j < i.\n+func (a *Chunked) NewSlice(i, j int64) *Chunked {\n+\tif j > int64(a.length) || i > j || i > int64(a.length) {\n+\t\tpanic(\"arrow/array: index out of range\")\n+\t}\n+\n+\tvar (\n+\t\tcur    = 0\n+\t\tbeg    = i\n+\t\tsz     = j - i\n+\t\tchunks = make([]Interface, 0, len(a.chunks))\n+\t)\n+\n+\tfor cur < len(a.chunks) && beg >= int64(a.chunks[cur].Len()) {\n+\t\tbeg -= int64(a.chunks[cur].Len())\n+\t\tcur++\n+\t}\n+\n+\tfor cur < len(a.chunks) && sz > 0 {\n+\t\tarr := a.chunks[cur]\n+\t\tend := beg + sz\n+\t\tif end > int64(arr.Len()) {\n+\t\t\tend = int64(arr.Len())\n+\t\t}\n+\t\tchunks = append(chunks, NewSlice(arr, beg, end))\n+\t\tsz -= int64(arr.Len()) - beg\n+\t\tbeg = 0\n+\t\tcur++\n+\t}\n+\tchunks = chunks[:len(chunks):len(chunks)]\n+\tdefer func() {\n+\t\tfor _, chunk := range chunks {\n+\t\t\tchunk.Release()\n+\t\t}\n+\t}()\n+\n+\treturn NewChunked(a.dtype, chunks)\n+}\ndiff --git a/go/arrow/array/table_test.go b/go/arrow/array/table_test.go\nnew file mode 100644\nindex 0000000000..849b82ba10\n--- /dev/null\n+++ b/go/arrow/array/table_test.go\n@@ -0,0 +1,190 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array_test\n+\n+import (\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestChunked(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tc1 := array.NewChunked(arrow.PrimitiveTypes.Int32, nil)\n+\tc1.Retain()\n+\tc1.Release()\n+\tif got, want := c1.Len(), 0; got != want {\n+\t\tt.Fatalf(\"len differ. got=%d, want=%d\", got, want)\n+\t}\n+\tif got, want := c1.NullN(), 0; got != want {\n+\t\tt.Fatalf(\"nulls: got=%d, want=%d\", got, want)\n+\t}\n+\tif got, want := c1.DataType(), arrow.PrimitiveTypes.Int32; got != want {\n+\t\tt.Fatalf(\"dtype: got=%v, want=%v\", got, want)\n+\t}\n+\tc1.Release()\n+\n+\tfb := array.NewFloat64Builder(mem)\n+\tdefer fb.Release()\n+\n+\tfb.AppendValues([]float64{1, 2, 3, 4, 5}, nil)\n+\tf1 := fb.NewFloat64Array()\n+\tdefer f1.Release()\n+\n+\tfb.AppendValues([]float64{6, 7}, nil)\n+\tf2 := fb.NewFloat64Array()\n+\tdefer f2.Release()\n+\n+\tfb.AppendValues([]float64{8, 9, 10}, nil)\n+\tf3 := fb.NewFloat64Array()\n+\tdefer f3.Release()\n+\n+\tc2 := array.NewChunked(\n+\t\tarrow.PrimitiveTypes.Float64,\n+\t\t[]array.Interface{f1, f2, f3},\n+\t)\n+\tdefer c2.Release()\n+\n+\tif got, want := c2.Len(), 10; got != want {\n+\t\tt.Fatalf(\"len: got=%d, want=%d\", got, want)\n+\t}\n+\tif got, want := c2.NullN(), 0; got != want {\n+\t\tt.Fatalf(\"nulls: got=%d, want=%d\", got, want)\n+\t}\n+\tif got, want := c2.DataType(), arrow.PrimitiveTypes.Float64; got != want {\n+\t\tt.Fatalf(\"dtype: got=%v, want=%v\", got, want)\n+\t}\n+\n+\tfor _, tc := range []struct {\n+\t\ti, j   int64\n+\t\tlen    int\n+\t\tnulls  int\n+\t\tchunks int\n+\t}{\n+\t\t{i: 0, j: 10, len: 10, nulls: 0, chunks: 3},\n+\t\t{i: 2, j: 3, len: 1, nulls: 0, chunks: 1},\n+\t\t{i: 9, j: 10, len: 1, nulls: 0, chunks: 1},\n+\t\t{i: 0, j: 5, len: 5, nulls: 0, chunks: 1},\n+\t\t{i: 5, j: 7, len: 2, nulls: 0, chunks: 1},\n+\t\t{i: 7, j: 10, len: 3, nulls: 0, chunks: 1},\n+\t\t{i: 10, j: 10, len: 0, nulls: 0, chunks: 0},\n+\t} {\n+\t\tt.Run(\"\", func(t *testing.T) {\n+\t\t\tsub := c2.NewSlice(tc.i, tc.j)\n+\t\t\tdefer sub.Release()\n+\n+\t\t\tif got, want := sub.Len(), tc.len; got != want {\n+\t\t\t\tt.Fatalf(\"len: got=%d, want=%d\", got, want)\n+\t\t\t}\n+\t\t\tif got, want := sub.NullN(), tc.nulls; got != want {\n+\t\t\t\tt.Fatalf(\"nulls: got=%d, want=%d\", got, want)\n+\t\t\t}\n+\t\t\tif got, want := sub.DataType(), arrow.PrimitiveTypes.Float64; got != want {\n+\t\t\t\tt.Fatalf(\"dtype: got=%v, want=%v\", got, want)\n+\t\t\t}\n+\t\t\tif got, want := len(sub.Chunks()), tc.chunks; got != want {\n+\t\t\t\tt.Fatalf(\"chunks: got=%d, want=%d\", got, want)\n+\t\t\t}\n+\t\t})\n+\t}\n+}\n+\n+func TestChunkedInvalid(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tfb := array.NewFloat64Builder(mem)\n+\tdefer fb.Release()\n+\n+\tfb.AppendValues([]float64{1, 2, 3, 4, 5}, nil)\n+\tf1 := fb.NewFloat64Array()\n+\tdefer f1.Release()\n+\n+\tib := array.NewInt32Builder(mem)\n+\tdefer ib.Release()\n+\n+\tib.AppendValues([]int32{6, 7}, nil)\n+\tf2 := ib.NewInt32Array()\n+\tdefer f2.Release()\n+\n+\tdefer func() {\n+\t\te := recover()\n+\t\tif e == nil {\n+\t\t\tt.Fatalf(\"expected a panic\")\n+\t\t}\n+\t\tif got, want := e.(string), \"arrow/array: mismatch data type\"; got != want {\n+\t\t\tt.Fatalf(\"invalid error. got=%q, want=%q\", got, want)\n+\t\t}\n+\t}()\n+\n+\tc1 := array.NewChunked(arrow.PrimitiveTypes.Int32, []array.Interface{\n+\t\tf1, f2,\n+\t})\n+\tdefer c1.Release()\n+}\n+\n+func TestChunkedSliceInvalid(t *testing.T) {\n+\tmem := memory.NewCheckedAllocator(memory.NewGoAllocator())\n+\tdefer mem.AssertSize(t, 0)\n+\n+\tfb := array.NewFloat64Builder(mem)\n+\tdefer fb.Release()\n+\n+\tfb.AppendValues([]float64{1, 2, 3, 4, 5}, nil)\n+\tf1 := fb.NewFloat64Array()\n+\tdefer f1.Release()\n+\n+\tfb.AppendValues([]float64{6, 7}, nil)\n+\tf2 := fb.NewFloat64Array()\n+\tdefer f2.Release()\n+\n+\tfb.AppendValues([]float64{8, 9, 10}, nil)\n+\tf3 := fb.NewFloat64Array()\n+\tdefer f3.Release()\n+\n+\tc := array.NewChunked(\n+\t\tarrow.PrimitiveTypes.Float64,\n+\t\t[]array.Interface{f1, f2, f3},\n+\t)\n+\tdefer c.Release()\n+\n+\tfor _, tc := range []struct {\n+\t\ti, j int64\n+\t}{\n+\t\t{i: 2, j: 1},\n+\t\t{i: 10, j: 11},\n+\t\t{i: 11, j: 11},\n+\t} {\n+\t\tt.Run(\"\", func(t *testing.T) {\n+\t\t\tdefer func() {\n+\t\t\t\te := recover()\n+\t\t\t\tif e == nil {\n+\t\t\t\t\tt.Fatalf(\"expected a panic\")\n+\t\t\t\t}\n+\t\t\t\tif got, want := e.(string), \"arrow/array: index out of range\"; got != want {\n+\t\t\t\t\tt.Fatalf(\"invalid error. got=%q, want=%q\", got, want)\n+\t\t\t\t}\n+\t\t\t}()\n+\t\t\tsub := c.NewSlice(tc.i, tc.j)\n+\t\t\tdefer sub.Release()\n+\t\t})\n+\t}\n+}\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T00:19:47.563+0000",
                    "updated": "2018-10-22T00:19:47.563+0000",
                    "started": "2018-10-22T00:19:47.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156734",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou removed a comment on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431716592\n \n \n   Thanks!\r\n   I've merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T18:59:00.004+0000",
                    "updated": "2018-10-22T18:59:00.004+0000",
                    "started": "2018-10-22T18:59:00.004+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156972",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/156973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou removed a comment on issue #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#issuecomment-431716618\n \n \n   Thanks!\r\n   I've merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-22T18:59:01.032+0000",
                    "updated": "2018-10-22T18:59:01.032+0000",
                    "started": "2018-10-22T18:59:01.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "156973",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/235548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nickpoorman commented on pull request #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#discussion_r279946590\n \n \n\n ##########\n File path: go/arrow/array/table.go\n ##########\n @@ -0,0 +1,128 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+)\n+\n+// Chunked manages a collection of primitives arrays as one logical large array.\n+type Chunked struct {\n+\tchunks []Interface\n+\n+\trefCount int64\n+\n+\tlength int\n+\tnulls  int\n+\tdtype  arrow.DataType\n+}\n+\n+// NewChunked returns a new chunked array from the slice of arrays.\n+//\n+// NewChunked panics if the chunks do not have the same data type.\n+func NewChunked(dtype arrow.DataType, chunks []Interface) *Chunked {\n+\tarr := &Chunked{\n+\t\tchunks:   make([]Interface, len(chunks)),\n+\t\trefCount: 1,\n+\t\tdtype:    dtype,\n+\t}\n+\tfor i, chunk := range chunks {\n+\t\tif chunk.DataType() != dtype {\n+\t\t\tpanic(\"arrow/array: mismatch data type\")\n+\t\t}\n+\t\tchunk.Retain()\n+\t\tarr.chunks[i] = chunk\n+\t\tarr.length += chunk.Len()\n \n Review comment:\n   @sbinet - Could this cause issues since length on Chunked is only an int and this is taking the total length of the chunks? Seems like length should be an int64.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-30T21:38:42.512+0000",
                    "updated": "2019-04-30T21:38:42.512+0000",
                    "started": "2019-04-30T21:38:42.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "235548",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/235549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nickpoorman commented on pull request #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#discussion_r279946590\n \n \n\n ##########\n File path: go/arrow/array/table.go\n ##########\n @@ -0,0 +1,128 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+)\n+\n+// Chunked manages a collection of primitives arrays as one logical large array.\n+type Chunked struct {\n+\tchunks []Interface\n+\n+\trefCount int64\n+\n+\tlength int\n+\tnulls  int\n+\tdtype  arrow.DataType\n+}\n+\n+// NewChunked returns a new chunked array from the slice of arrays.\n+//\n+// NewChunked panics if the chunks do not have the same data type.\n+func NewChunked(dtype arrow.DataType, chunks []Interface) *Chunked {\n+\tarr := &Chunked{\n+\t\tchunks:   make([]Interface, len(chunks)),\n+\t\trefCount: 1,\n+\t\tdtype:    dtype,\n+\t}\n+\tfor i, chunk := range chunks {\n+\t\tif chunk.DataType() != dtype {\n+\t\t\tpanic(\"arrow/array: mismatch data type\")\n+\t\t}\n+\t\tchunk.Retain()\n+\t\tarr.chunks[i] = chunk\n+\t\tarr.length += chunk.Len()\n \n Review comment:\n   @sbinet - Could this cause issues since `length` on Chunked is only an `int` and this is taking the total length of the chunks? Seems like length should be an `int64`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-30T21:39:08.962+0000",
                    "updated": "2019-04-30T21:39:08.962+0000",
                    "started": "2019-04-30T21:39:08.962+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "235549",
                    "issueId": "13193045"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/worklog/241043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #2811: ARROW-3577: [Go] implement Chunked array\nURL: https://github.com/apache/arrow/pull/2811#discussion_r283320917\n \n \n\n ##########\n File path: go/arrow/array/table.go\n ##########\n @@ -0,0 +1,128 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package array\n+\n+import (\n+\t\"sync/atomic\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/internal/debug\"\n+)\n+\n+// Chunked manages a collection of primitives arrays as one logical large array.\n+type Chunked struct {\n+\tchunks []Interface\n+\n+\trefCount int64\n+\n+\tlength int\n+\tnulls  int\n+\tdtype  arrow.DataType\n+}\n+\n+// NewChunked returns a new chunked array from the slice of arrays.\n+//\n+// NewChunked panics if the chunks do not have the same data type.\n+func NewChunked(dtype arrow.DataType, chunks []Interface) *Chunked {\n+\tarr := &Chunked{\n+\t\tchunks:   make([]Interface, len(chunks)),\n+\t\trefCount: 1,\n+\t\tdtype:    dtype,\n+\t}\n+\tfor i, chunk := range chunks {\n+\t\tif chunk.DataType() != dtype {\n+\t\t\tpanic(\"arrow/array: mismatch data type\")\n+\t\t}\n+\t\tchunk.Retain()\n+\t\tarr.chunks[i] = chunk\n+\t\tarr.length += chunk.Len()\n \n Review comment:\n   yeah... could you file a JIRA issue?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-13T12:28:59.580+0000",
                    "updated": "2019-05-13T12:28:59.580+0000",
                    "started": "2019-05-13T12:28:59.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "241043",
                    "issueId": "13193045"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7108f2cc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5414b0bf[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bc6067[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@755ca907[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@241b7de9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@354d9c33[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52957da5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4291f261[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d1a3bef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@64ef947b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d6eb516[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50a15e20[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 22 00:17:38 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-22T00:17:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3577/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-20T15:27:23.000+0000",
        "updated": "2019-05-13T12:28:59.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] add support for ChunkedArray",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193045/comment/16658451",
                    "id": "16658451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 2811\n[https://github.com/apache/arrow/pull/2811]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2018-10-22T00:17:38.654+0000",
                    "updated": "2018-10-22T00:17:38.654+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zg3z:",
        "customfield_12314139": null
    }
}