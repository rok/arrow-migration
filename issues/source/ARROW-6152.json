{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13249219",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219",
    "key": "ARROW-6152",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567182",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567182",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13185395",
                    "key": "ARROW-3246",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13185395",
                    "fields": {
                        "summary": "[Python][Parquet] direct reading/writing of pandas categoricals in parquet",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6152/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/290979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036\n \n \n   * Write Arrow arrays directly to ColumnWriter, to allow internal optimizations and other features, like direct DictionaryArray writes\r\n   * Refactor and streamline implementation for maintainability and readability\r\n   * Move Arrow reader/writer properties to parquet/properties.h\r\n   * Some minor miscellaneous code reorganization to help\r\n   \r\n   Functionally the library is unchanged\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T03:53:59.554+0000",
                    "updated": "2019-08-08T03:53:59.554+0000",
                    "started": "2019-08-08T03:53:59.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290979",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/290980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519352482\n \n \n   cc @hatemhelal @xhochy \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T03:54:35.015+0000",
                    "updated": "2019-08-08T03:54:35.015+0000",
                    "started": "2019-08-08T03:54:35.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "290980",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "hatemhelal commented on pull request #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#discussion_r311976429\n \n \n\n ##########\n File path: cpp/src/parquet/properties.h\n ##########\n @@ -423,6 +425,161 @@ class PARQUET_EXPORT WriterProperties {\n \n std::shared_ptr<WriterProperties> PARQUET_EXPORT default_writer_properties();\n \n+// ----------------------------------------------------------------------\n+// Properties specific to Apache Arrow columnar read and write\n+\n+static constexpr bool kArrowDefaultUseThreads = false;\n+\n+// Default number of rows to read when using ::arrow::RecordBatchReader\n+static constexpr int64_t kArrowDefaultBatchSize = 64 * 1024;\n+\n+/// EXPERIMENTAL: Properties for configuring FileReader behavior.\n+class PARQUET_EXPORT ArrowReaderProperties {\n+ public:\n+  explicit ArrowReaderProperties(bool use_threads = kArrowDefaultUseThreads)\n+      : use_threads_(use_threads),\n+        read_dict_indices_(),\n+        batch_size_(kArrowDefaultBatchSize) {}\n+\n+  void set_use_threads(bool use_threads) { use_threads_ = use_threads; }\n+\n+  bool use_threads() const { return use_threads_; }\n+\n+  void set_read_dictionary(int column_index, bool read_dict) {\n+    if (read_dict) {\n+      read_dict_indices_.insert(column_index);\n+    } else {\n+      read_dict_indices_.erase(column_index);\n+    }\n+  }\n+  bool read_dictionary(int column_index) const {\n+    if (read_dict_indices_.find(column_index) != read_dict_indices_.end()) {\n+      return true;\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  void set_batch_size(int64_t batch_size) { batch_size_ = batch_size; }\n+\n+  int64_t batch_size() const { return batch_size_; }\n+\n+ private:\n+  bool use_threads_;\n+  std::unordered_set<int> read_dict_indices_;\n+  int64_t batch_size_;\n+};\n+\n+/// EXPERIMENTAL: Constructs the default ArrowReaderProperties\n+PARQUET_EXPORT\n+ArrowReaderProperties default_arrow_reader_properties();\n+\n+class PARQUET_EXPORT ArrowWriterProperties {\n+ public:\n+  class Builder {\n+   public:\n+    Builder()\n+        : write_timestamps_as_int96_(false),\n+          coerce_timestamps_enabled_(false),\n+          coerce_timestamps_unit_(::arrow::TimeUnit::SECOND),\n+          truncated_timestamps_allowed_(false) {}\n+    virtual ~Builder() {}\n+\n+    Builder* disable_deprecated_int96_timestamps() {\n+      write_timestamps_as_int96_ = false;\n+      return this;\n+    }\n+\n+    Builder* enable_deprecated_int96_timestamps() {\n+      write_timestamps_as_int96_ = true;\n+      return this;\n+    }\n+\n+    Builder* coerce_timestamps(::arrow::TimeUnit::type unit) {\n+      coerce_timestamps_enabled_ = true;\n+      coerce_timestamps_unit_ = unit;\n+      return this;\n+    }\n+\n+    Builder* allow_truncated_timestamps() {\n+      truncated_timestamps_allowed_ = true;\n+      return this;\n+    }\n+\n+    Builder* disallow_truncated_timestamps() {\n+      truncated_timestamps_allowed_ = false;\n+      return this;\n+    }\n+\n+    std::shared_ptr<ArrowWriterProperties> build() {\n+      return std::shared_ptr<ArrowWriterProperties>(new ArrowWriterProperties(\n+          write_timestamps_as_int96_, coerce_timestamps_enabled_, coerce_timestamps_unit_,\n+          truncated_timestamps_allowed_));\n+    }\n+\n+   private:\n+    bool write_timestamps_as_int96_;\n+\n+    bool coerce_timestamps_enabled_;\n+    ::arrow::TimeUnit::type coerce_timestamps_unit_;\n+    bool truncated_timestamps_allowed_;\n+  };\n+\n+  bool support_deprecated_int96_timestamps() const { return write_timestamps_as_int96_; }\n+\n+  bool coerce_timestamps_enabled() const { return coerce_timestamps_enabled_; }\n+  ::arrow::TimeUnit::type coerce_timestamps_unit() const {\n+    return coerce_timestamps_unit_;\n+  }\n+\n+  bool truncated_timestamps_allowed() const { return truncated_timestamps_allowed_; }\n+\n+ private:\n+  explicit ArrowWriterProperties(bool write_nanos_as_int96,\n+                                 bool coerce_timestamps_enabled,\n+                                 ::arrow::TimeUnit::type coerce_timestamps_unit,\n+                                 bool truncated_timestamps_allowed)\n+      : write_timestamps_as_int96_(write_nanos_as_int96),\n+        coerce_timestamps_enabled_(coerce_timestamps_enabled),\n+        coerce_timestamps_unit_(coerce_timestamps_unit),\n+        truncated_timestamps_allowed_(truncated_timestamps_allowed) {}\n+\n+  const bool write_timestamps_as_int96_;\n+  const bool coerce_timestamps_enabled_;\n+  const ::arrow::TimeUnit::type coerce_timestamps_unit_;\n+  const bool truncated_timestamps_allowed_;\n+};\n+\n+/// \\brief State object used for writing Arrow data directly to a Parquet\n+/// column chunk. API possibly not stable\n+struct ArrowWriteContext {\n+  ArrowWriteContext(MemoryPool* memory_pool, ArrowWriterProperties* properties)\n+      : memory_pool(memory_pool), properties(properties) {\n+    this->data_buffer = AllocateBuffer(memory_pool);\n \n Review comment:\n   I can't tell without compiling but I wondered if this could be done in the member initializer list:\r\n   \r\n   ```\r\n     ArrowWriteContext(MemoryPool* memory_pool, ArrowWriterProperties* properties)\r\n         : memory_pool(memory_pool), properties(properties), \r\n           data_buffer(AllocateBuffer(memory_pool)),\r\n           def_levels_buffer(AllocateBuffer(memory_pool)) { }\r\n   ```\r\n   This might fall in the category of a micro (or even nano) optimization.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T11:22:25.345+0000",
                    "updated": "2019-08-08T11:22:25.345+0000",
                    "started": "2019-08-08T11:22:25.345+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291180",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#discussion_r312142917\n \n \n\n ##########\n File path: cpp/src/parquet/properties.h\n ##########\n @@ -423,6 +425,161 @@ class PARQUET_EXPORT WriterProperties {\n \n std::shared_ptr<WriterProperties> PARQUET_EXPORT default_writer_properties();\n \n+// ----------------------------------------------------------------------\n+// Properties specific to Apache Arrow columnar read and write\n+\n+static constexpr bool kArrowDefaultUseThreads = false;\n+\n+// Default number of rows to read when using ::arrow::RecordBatchReader\n+static constexpr int64_t kArrowDefaultBatchSize = 64 * 1024;\n+\n+/// EXPERIMENTAL: Properties for configuring FileReader behavior.\n+class PARQUET_EXPORT ArrowReaderProperties {\n+ public:\n+  explicit ArrowReaderProperties(bool use_threads = kArrowDefaultUseThreads)\n+      : use_threads_(use_threads),\n+        read_dict_indices_(),\n+        batch_size_(kArrowDefaultBatchSize) {}\n+\n+  void set_use_threads(bool use_threads) { use_threads_ = use_threads; }\n+\n+  bool use_threads() const { return use_threads_; }\n+\n+  void set_read_dictionary(int column_index, bool read_dict) {\n+    if (read_dict) {\n+      read_dict_indices_.insert(column_index);\n+    } else {\n+      read_dict_indices_.erase(column_index);\n+    }\n+  }\n+  bool read_dictionary(int column_index) const {\n+    if (read_dict_indices_.find(column_index) != read_dict_indices_.end()) {\n+      return true;\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  void set_batch_size(int64_t batch_size) { batch_size_ = batch_size; }\n+\n+  int64_t batch_size() const { return batch_size_; }\n+\n+ private:\n+  bool use_threads_;\n+  std::unordered_set<int> read_dict_indices_;\n+  int64_t batch_size_;\n+};\n+\n+/// EXPERIMENTAL: Constructs the default ArrowReaderProperties\n+PARQUET_EXPORT\n+ArrowReaderProperties default_arrow_reader_properties();\n+\n+class PARQUET_EXPORT ArrowWriterProperties {\n+ public:\n+  class Builder {\n+   public:\n+    Builder()\n+        : write_timestamps_as_int96_(false),\n+          coerce_timestamps_enabled_(false),\n+          coerce_timestamps_unit_(::arrow::TimeUnit::SECOND),\n+          truncated_timestamps_allowed_(false) {}\n+    virtual ~Builder() {}\n+\n+    Builder* disable_deprecated_int96_timestamps() {\n+      write_timestamps_as_int96_ = false;\n+      return this;\n+    }\n+\n+    Builder* enable_deprecated_int96_timestamps() {\n+      write_timestamps_as_int96_ = true;\n+      return this;\n+    }\n+\n+    Builder* coerce_timestamps(::arrow::TimeUnit::type unit) {\n+      coerce_timestamps_enabled_ = true;\n+      coerce_timestamps_unit_ = unit;\n+      return this;\n+    }\n+\n+    Builder* allow_truncated_timestamps() {\n+      truncated_timestamps_allowed_ = true;\n+      return this;\n+    }\n+\n+    Builder* disallow_truncated_timestamps() {\n+      truncated_timestamps_allowed_ = false;\n+      return this;\n+    }\n+\n+    std::shared_ptr<ArrowWriterProperties> build() {\n+      return std::shared_ptr<ArrowWriterProperties>(new ArrowWriterProperties(\n+          write_timestamps_as_int96_, coerce_timestamps_enabled_, coerce_timestamps_unit_,\n+          truncated_timestamps_allowed_));\n+    }\n+\n+   private:\n+    bool write_timestamps_as_int96_;\n+\n+    bool coerce_timestamps_enabled_;\n+    ::arrow::TimeUnit::type coerce_timestamps_unit_;\n+    bool truncated_timestamps_allowed_;\n+  };\n+\n+  bool support_deprecated_int96_timestamps() const { return write_timestamps_as_int96_; }\n+\n+  bool coerce_timestamps_enabled() const { return coerce_timestamps_enabled_; }\n+  ::arrow::TimeUnit::type coerce_timestamps_unit() const {\n+    return coerce_timestamps_unit_;\n+  }\n+\n+  bool truncated_timestamps_allowed() const { return truncated_timestamps_allowed_; }\n+\n+ private:\n+  explicit ArrowWriterProperties(bool write_nanos_as_int96,\n+                                 bool coerce_timestamps_enabled,\n+                                 ::arrow::TimeUnit::type coerce_timestamps_unit,\n+                                 bool truncated_timestamps_allowed)\n+      : write_timestamps_as_int96_(write_nanos_as_int96),\n+        coerce_timestamps_enabled_(coerce_timestamps_enabled),\n+        coerce_timestamps_unit_(coerce_timestamps_unit),\n+        truncated_timestamps_allowed_(truncated_timestamps_allowed) {}\n+\n+  const bool write_timestamps_as_int96_;\n+  const bool coerce_timestamps_enabled_;\n+  const ::arrow::TimeUnit::type coerce_timestamps_unit_;\n+  const bool truncated_timestamps_allowed_;\n+};\n+\n+/// \\brief State object used for writing Arrow data directly to a Parquet\n+/// column chunk. API possibly not stable\n+struct ArrowWriteContext {\n+  ArrowWriteContext(MemoryPool* memory_pool, ArrowWriterProperties* properties)\n+      : memory_pool(memory_pool), properties(properties) {\n+    this->data_buffer = AllocateBuffer(memory_pool);\n \n Review comment:\n   I'll make this change\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T17:00:23.743+0000",
                    "updated": "2019-08-08T17:00:23.743+0000",
                    "started": "2019-08-08T17:00:23.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291407",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519703937\n \n \n   @romainfrancois @nealrichardson I've noted that when I run `R CMD INSTALL .` that when the R extension is tested, system library paths are given precedence over the contents of `$LD_LIBRARY_PATH`. This is very annoying for me because there is an older version of liblz4 in Ubuntu 18.04's system paths that is incompatible with the one that we use in `libarrow.so`. Do you know any way to fix this? I can also open a JIRA issue\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:03:06.397+0000",
                    "updated": "2019-08-08T22:03:06.397+0000",
                    "started": "2019-08-08T22:03:06.396+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291597",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519705656\n \n \n   @wesm can you provide a traceback/console output of what the failure looks like/where it happens?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:09:25.496+0000",
                    "updated": "2019-08-08T22:09:25.496+0000",
                    "started": "2019-08-08T22:09:25.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291600",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519706188\n \n \n   ```\r\n   $ R CMD INSTALL .\r\n   * installing to library \u2018/home/wesm/R/x86_64-pc-linux-gnu-library/3.6\u2019\r\n   * installing *source* package \u2018arrow\u2019 ...\r\n   ** using staged installation\r\n   Arrow C++ libraries found via pkg-config\r\n   PKG_CFLAGS=-I/home/wesm/local/include -DARROW_R_WITH_ARROW\r\n   PKG_LIBS=-L/home/wesm/local/lib -larrow -lparquet\r\n   ** libs\r\n   make: Nothing to be done for 'all'.\r\n   installing to /home/wesm/R/x86_64-pc-linux-gnu-library/3.6/00LOCK-r/00new/arrow/libs\r\n   ** R\r\n   ** inst\r\n   ** byte-compile and prepare package for lazy loading\r\n   ** help\r\n   *** installing help indices\r\n   ** building package indices\r\n   ** testing if installed package can be loaded from temporary location\r\n   Error: package or namespace load failed for \u2018arrow\u2019 in dyn.load(file, DLLpath = DLLpath, ...):\r\n    unable to load shared object '/home/wesm/R/x86_64-pc-linux-gnu-library/3.6/00LOCK-r/00new/arrow/libs/arrow.so':\r\n     /home/wesm/local/lib/libarrow.so.100: undefined symbol: LZ4F_resetDecompressionContext\r\n   Error: loading failed\r\n   Execution halted\r\n   ERROR: loading failed\r\n   * removing \u2018/home/wesm/R/x86_64-pc-linux-gnu-library/3.6/arrow\u2019\r\n   * restoring previous \u2018/home/wesm/R/x86_64-pc-linux-gnu-library/3.6/arrow\u2019\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:11:31.865+0000",
                    "updated": "2019-08-08T22:11:31.865+0000",
                    "started": "2019-08-08T22:11:31.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291603",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519707002\n \n \n   And of course\r\n   \r\n   ```\r\n   $ ldd ~/local/lib/libarrow.so\r\n   \tlinux-vdso.so.1 (0x00007ffd2bcfc000)\r\n   \tlibcrypto.so.1.1 => /home/wesm/cpp-runtime-toolchain/lib/libcrypto.so.1.1 (0x00007fce910f2000)\r\n   \tlibssl.so.1.1 => /home/wesm/cpp-runtime-toolchain/lib/libssl.so.1.1 (0x00007fce92fe4000)\r\n   \tlibglog.so.0 => /home/wesm/cpp-runtime-toolchain/lib/libglog.so.0 (0x00007fce92fab000)\r\n   \tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fce90eee000)\r\n   \tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007fce90ce6000)\r\n   \tlibbz2.so.1.0 => /home/wesm/cpp-runtime-toolchain/lib/libbz2.so.1.0 (0x00007fce92f73000)\r\n   \tliblz4.so.1 => /home/wesm/cpp-runtime-toolchain/lib/liblz4.so.1 (0x00007fce92f3b000)\r\n   \tlibsnappy.so.1 => /home/wesm/cpp-runtime-toolchain/lib/libsnappy.so.1 (0x00007fce92f30000)\r\n   \tlibz.so.1 => /home/wesm/cpp-runtime-toolchain/lib/libz.so.1 (0x00007fce92f16000)\r\n   \tlibzstd.so.1 => /home/wesm/cpp-runtime-toolchain/lib/libzstd.so.1 (0x00007fce90a49000)\r\n   \tlibboost_system.so.1.70.0 => /home/wesm/cpp-runtime-toolchain/lib/libboost_system.so.1.70.0 (0x00007fce92f11000)\r\n   \tlibboost_filesystem.so.1.70.0 => /home/wesm/cpp-runtime-toolchain/lib/libboost_filesystem.so.1.70.0 (0x00007fce92eef000)\r\n   \tlibstdc++.so.6 => /home/wesm/cpp-runtime-toolchain/lib/libstdc++.so.6 (0x00007fce908d5000)\r\n   \tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007fce90537000)\r\n   \tlibgcc_s.so.1 => /home/wesm/cpp-runtime-toolchain/lib/libgcc_s.so.1 (0x00007fce92edb000)\r\n   \tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fce90318000)\r\n   \tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007fce8ff27000)\r\n   \t/lib64/ld-linux-x86-64.so.2 (0x00007fce92e4f000)\r\n   \tlibgflags.so.2.2 => /home/wesm/cpp-runtime-toolchain/lib/./libgflags.so.2.2 (0x00007fce92eb5000)\r\n   ```\r\n   \r\n   So outside of the context of `R CMD INSTALL` the correct liblz4.so is resolved\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:14:51.447+0000",
                    "updated": "2019-08-08T22:14:51.447+0000",
                    "started": "2019-08-08T22:14:51.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291605",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519707374\n \n \n   +1, will merge this PR once Travis CI runs...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:16:21.154+0000",
                    "updated": "2019-08-08T22:16:21.154+0000",
                    "started": "2019-08-08T22:16:21.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291606",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519709545\n \n \n   One thing you can check out is what is in `$(R RHOME)/etc/ldpaths`. I saw that referenced in [The Bible](https://cran.r-project.org/doc/manuals/r-release/R-exts.html). Maybe you can amend that and it will pick up the right path? Or make it pay attention to the `LD_LIBRARY_PATH` you set? Totally guessing though, this is not my area of expertise.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T22:25:34.877+0000",
                    "updated": "2019-08-08T22:25:34.877+0000",
                    "started": "2019-08-08T22:25:34.876+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291607",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519718293\n \n \n   Ugh\r\n   \r\n   ```\r\n   $ cat /etc/R/ldpaths \r\n   : ${JAVA_HOME=/usr/lib/jvm/default-java}\r\n   : ${R_JAVA_LD_LIBRARY_PATH=${JAVA_HOME}/lib/server}\r\n   if test -n \"/usr/lib/x86_64-linux-gnu\"; then\r\n   : ${R_LD_LIBRARY_PATH=${R_HOME}/lib:/usr/lib/x86_64-linux-gnu}\r\n   else\r\n   : ${R_LD_LIBRARY_PATH=${R_HOME}/lib}\r\n   fi\r\n   if test -n \"${R_JAVA_LD_LIBRARY_PATH}\"; then\r\n     R_LD_LIBRARY_PATH=\"${R_LD_LIBRARY_PATH}:${R_JAVA_LD_LIBRARY_PATH}\"\r\n   fi\r\n   ## This is DYLD_FALLBACK_LIBRARY_PATH on Darwin (macOS) and\r\n   ## LD_LIBRARY_PATH elsewhere.\r\n   ## However, on macOS >=10.11 (if SIP is enabled, the default), the\r\n   ## environment value will not be passed to a script such as R.sh, so\r\n   ## would not seen here.\r\n   if test -z \"${LD_LIBRARY_PATH}\"; then\r\n     LD_LIBRARY_PATH=\"${R_LD_LIBRARY_PATH}\"\r\n   else\r\n     LD_LIBRARY_PATH=\"${R_LD_LIBRARY_PATH}:${LD_LIBRARY_PATH}\"\r\n   fi\r\n   export LD_LIBRARY_PATH\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:04:46.727+0000",
                    "updated": "2019-08-08T23:04:46.727+0000",
                    "started": "2019-08-08T23:04:46.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291634",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519718442\n \n \n   IMHO this is a bug in R. If you have $LD_LIBRARY_PATH set it should respect that\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:05:29.213+0000",
                    "updated": "2019-08-08T23:05:29.213+0000",
                    "started": "2019-08-08T23:05:29.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291636",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519718745\n \n \n   OIC, it puts its path before the one you provide. That's odd. If you reverse the order of the paths in that next to last line, does it work as expected?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:07:10.848+0000",
                    "updated": "2019-08-08T23:07:10.848+0000",
                    "started": "2019-08-08T23:07:10.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291637",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519719245\n \n \n   This works fine\r\n   \r\n   ```\r\n   $ R_LD_LIBRARY_PATH=$LD_LIBRARY_PATH R CMD INSTALL .\r\n   * installing to library \u2018/home/wesm/R/x86_64-pc-linux-gnu-library/3.6\u2019\r\n   * installing *source* package \u2018arrow\u2019 ...\r\n   ** using staged installation\r\n   Arrow C++ libraries found via pkg-config\r\n   PKG_CFLAGS=-I/home/wesm/local/include -DARROW_R_WITH_ARROW\r\n   PKG_LIBS=-L/home/wesm/local/lib -larrow -lparquet\r\n   ** libs\r\n   g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG -I/home/wesm/local/include -DARROW_R_WITH_ARROW -I\"/home/wesm/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include\"  -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-uuRxut/r-base-3.6.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c arrowExports.cpp -o arrowExports.o\r\n   g++ -std=gnu++11 -I\"/usr/share/R/include\" -DNDEBUG -I/home/wesm/local/include -DARROW_R_WITH_ARROW -I\"/home/wesm/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/include\"  -fvisibility=hidden -fpic  -g -O2 -fdebug-prefix-map=/build/r-base-uuRxut/r-base-3.6.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c parquet.cpp -o parquet.o\r\n   g++ -std=gnu++11 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o arrow.so array.o array__to_vector.o array_from_vector.o arraydata.o arrowExports.o buffer.o chunkedarray.o compression.o compute.o csv.o datatype.o feather.o field.o io.o json.o memorypool.o message.o parquet.o recordbatch.o recordbatchreader.o recordbatchwriter.o schema.o symbols.o table.o threadpool.o -L/home/wesm/local/lib -larrow -lparquet -L/usr/lib/R/lib -lR\r\n   installing to /home/wesm/R/x86_64-pc-linux-gnu-library/3.6/00LOCK-r/00new/arrow/libs\r\n   ** R\r\n   ** inst\r\n   ** byte-compile and prepare package for lazy loading\r\n   ** help\r\n   *** installing help indices\r\n   ** building package indices\r\n   ** testing if installed package can be loaded from temporary location\r\n   ** checking absolute paths in shared objects and dynamic libraries\r\n   ** testing if installed package can be loaded from final location\r\n   ** testing if installed package keeps a record of temporary installation path\r\n   * DONE (arrow)\r\n   ```\r\n   \r\n   I'll do that as a workaround. We should document it for developers\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:09:33.498+0000",
                    "updated": "2019-08-08T23:09:33.498+0000",
                    "started": "2019-08-08T23:09:33.498+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291638",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519720669\n \n \n   I guess I can _kind of_ understand the point of view of wanting to isolate R from being contaminated by the user's environment, including modifications of LD_LIBRARY_PATH. Since if you build a package when LD_LIBRARY_PATH set and then unset it, that package will be broken\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:16:57.011+0000",
                    "updated": "2019-08-08T23:16:57.011+0000",
                    "started": "2019-08-08T23:16:57.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291647",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519720669\n \n \n   I guess I can _kind of_ understand the point of view of wanting to isolate R from being contaminated by the user's environment, including modifications of LD_LIBRARY_PATH. Since if you build a package when LD_LIBRARY_PATH set and then unset it, that package could be broken\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-08T23:17:10.874+0000",
                    "updated": "2019-08-08T23:17:10.874+0000",
                    "started": "2019-08-08T23:17:10.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291648",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519734461\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=h1) Report\n   > Merging [#5036](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d549b7c6223a16b462c2ec1cbcc1698827b0c87f?src=pr&el=desc) will **increase** coverage by `1.59%`.\n   > The diff coverage is `94.25%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5036/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5036      +/-   ##\n   ==========================================\n   + Coverage   87.57%   89.17%   +1.59%     \n   ==========================================\n     Files        1008      727     -281     \n     Lines      143814   102958   -40856     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       125952    91814   -34138     \n   + Misses      17500    11144    -6356     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/parquet/arrow/reader\\_internal.cc](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlcl9pbnRlcm5hbC5jYw==) | `91.27% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/reader\\_internal.h](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlcl9pbnRlcm5hbC5o) | `93.02% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/reader.h](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5o) | `80% <\u00f8> (-12.31%)` | :arrow_down: |\n   | [cpp/src/parquet/schema.cc](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L3NjaGVtYS5jYw==) | `90.01% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/writer.h](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3dyaXRlci5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/types.h](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L3R5cGVzLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/reader.cc](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L3JlYWRlci5jYw==) | `84.86% <\u00f8> (-0.13%)` | :arrow_down: |\n   | [cpp/src/parquet/column\\_writer.h](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl93cml0ZXIuaA==) | `95.65% <100%> (+6.76%)` | :arrow_up: |\n   | [cpp/src/parquet/arrow/arrow-reader-writer-test.cc](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Fycm93L2Fycm93LXJlYWRlci13cml0ZXItdGVzdC5jYw==) | `93.73% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/properties.cc](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L3Byb3BlcnRpZXMuY2M=) | `73.33% <100%> (+17.77%)` | :arrow_up: |\n   | ... and [290 more](https://codecov.io/gh/apache/arrow/pull/5036/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=footer). Last update [d549b7c...b2ddcb3](https://codecov.io/gh/apache/arrow/pull/5036?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T00:31:40.990+0000",
                    "updated": "2019-08-09T00:31:40.990+0000",
                    "started": "2019-08-09T00:31:40.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291668",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T01:22:05.306+0000",
                    "updated": "2019-08-09T01:22:05.306+0000",
                    "started": "2019-08-09T01:22:05.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291691",
                    "issueId": "13249219"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/worklog/291778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5036: ARROW-6152: [C++][Parquet] Add parquet::ColumnWriter::WriteArrow method, refactor \nURL: https://github.com/apache/arrow/pull/5036#issuecomment-519768467\n \n \n   If it's a bug, it's been around a while. I traced it back to a commit from the end of the Clinton presidency: https://github.com/wch/r-source/commit/b4f92993f6e0fdb0909ef9d5aef16b638fef9c96\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:01:28.700+0000",
                    "updated": "2019-08-09T04:01:28.700+0000",
                    "started": "2019-08-09T04:01:28.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291778",
                    "issueId": "13249219"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@44cb0db7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17afbb50[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@309fee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6aafd183[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fe098f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@27d98394[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2392a76e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@37255956[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ce97048[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@37c78d62[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@158f523[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1caaf3b7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 09 01:22:06 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-09T01:22:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6152/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-08-06T22:00:19.000+0000",
        "updated": "2019-08-09T04:01:28.000+0000",
        "timeoriginalestimate": null,
        "description": "This is an initial refactoring task to enable the Arrow write layer to access some of the internal implementation details of {{parquet::TypedColumnWriter<T>}}. See discussion in ARROW-3246",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Parquet] Write arrow::Array directly into parquet::TypedColumnWriter<T>",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249219/comment/16903474",
                    "id": "16903474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5036\n[https://github.com/apache/arrow/pull/5036]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-09T01:22:06.185+0000",
                    "updated": "2019-08-09T01:22:06.185+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05e48:",
        "customfield_12314139": null
    }
}