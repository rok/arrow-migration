{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13218811",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811",
    "key": "ARROW-4725",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=javierluraschi",
            "name": "javierluraschi",
            "key": "javierluraschi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Javier Luraschi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=javierluraschi",
            "name": "javierluraschi",
            "key": "javierluraschi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Javier Luraschi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4725/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/237538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255\n \n \n   This stops exporting template class that has internal\r\n   implementation. It's not supported in MinGW. This exposes all template\r\n   class implementations to .h and hides internal details to .cc by pimpl\r\n   idiom.\r\n   \r\n   See also ARROW-4399.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-05T20:48:42.419+0000",
                    "updated": "2019-05-05T20:48:42.419+0000",
                    "started": "2019-05-05T20:48:42.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "237538",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/237541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-489465560\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=h1) Report\n   > Merging [#4255](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/982f341bc81e1e22d4b25f8cf00ef882a34766b6?src=pr&el=desc) will **increase** coverage by `0.03%`.\n   > The diff coverage is `84.78%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4255/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4255      +/-   ##\n   ==========================================\n   + Coverage   88.27%   88.31%   +0.03%     \n   ==========================================\n     Files         763      763              \n     Lines       93723    93745      +22     \n     Branches     1251     1251              \n   ==========================================\n   + Hits        82735    82789      +54     \n   + Misses      10875    10843      -32     \n     Partials      113      113\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/hashing.h](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2hhc2hpbmcuaA==) | `99.26% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_dict.h](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuaA==) | `81.48% <76.92%> (-7.41%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_dict.cc](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuY2M=) | `87.5% <90.76%> (+23.08%)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.59% <0%> (+0.93%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=footer). Last update [982f341...d9b1188](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-05T21:36:36.885+0000",
                    "updated": "2019-05-05T21:36:36.885+0000",
                    "started": "2019-05-05T21:36:36.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "237541",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/237542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-489465563\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=h1) Report\n   > Merging [#4255](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/982f341bc81e1e22d4b25f8cf00ef882a34766b6?src=pr&el=desc) will **increase** coverage by `0.03%`.\n   > The diff coverage is `84.78%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4255/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4255      +/-   ##\n   ==========================================\n   + Coverage   88.27%   88.31%   +0.03%     \n   ==========================================\n     Files         763      763              \n     Lines       93723    93745      +22     \n     Branches     1251     1251              \n   ==========================================\n   + Hits        82735    82789      +54     \n   + Misses      10875    10843      -32     \n     Partials      113      113\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/hashing.h](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2hhc2hpbmcuaA==) | `99.26% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/array/builder\\_dict.h](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuaA==) | `81.48% <76.92%> (-7.41%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_dict.cc](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RpY3QuY2M=) | `87.5% <90.76%> (+23.08%)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4255/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.59% <0%> (+0.93%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=footer). Last update [982f341...d9b1188](https://codecov.io/gh/apache/arrow/pull/4255?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-05T21:36:37.353+0000",
                    "updated": "2019-05-05T21:36:37.353+0000",
                    "started": "2019-05-05T21:36:37.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "237542",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/237905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#discussion_r281263601\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_dict.cc\n ##########\n @@ -145,229 +144,176 @@ Status DictionaryType::Unify(MemoryPool* pool, const std::vector<const DataType*\n // ----------------------------------------------------------------------\n // DictionaryBuilder\n \n-template <typename T>\n-class DictionaryBuilder<T>::MemoTableImpl\n-    : public internal::HashTraits<T>::MemoTableType {\n- public:\n-  using MemoTableType = typename internal::HashTraits<T>::MemoTableType;\n-  using MemoTableType::MemoTableType;\n-\n-  MemoTableImpl(const std::shared_ptr<Array>& dictionary)\n-      : MemoTableImpl(dictionary->length()) {\n-    const auto& values =\n-        static_cast<const typename TypeTraits<T>::ArrayType&>(*dictionary);\n-    for (int64_t i = 0; i < values.length(); ++i) {\n-      ARROW_IGNORE_EXPR(this->GetOrInsert(values.GetView(i)));\n+class internal::DictionaryMemoTable::DictionaryMemoTableImpl {\n+  struct MemoTableInitializer {\n+    std::shared_ptr<DataType> value_type_;\n+    std::unique_ptr<MemoTable>* memo_table_;\n+\n+    Status Visit(const DataType&, void* = nullptr) {\n+      return Status::NotImplemented(\"Initialization of \", value_type_,\n+                                    \" memo table is not implemented\");\n     }\n-  }\n-};\n \n-template <typename T>\n-DictionaryBuilder<T>::~DictionaryBuilder() {}\n-\n-template <typename T>\n-DictionaryBuilder<T>::DictionaryBuilder(const std::shared_ptr<Array>& dictionary,\n-                                        MemoryPool* pool)\n-    : ArrayBuilder(dictionary->type(), pool),\n-      memo_table_(new MemoTableImpl(dictionary)),\n-      delta_offset_(0),\n-      byte_width_(-1),\n-      values_builder_(pool) {\n-  DCHECK_EQ(T::type_id, type_->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+    template <typename T>\n+    Status Visit(const T&,\n+                 typename internal::DictionaryTraits<T>::MemoTableType* = nullptr) {\n+      using MemoTable = typename internal::DictionaryTraits<T>::MemoTableType;\n+      memo_table_->reset(new MemoTable(0));\n+      return Status::OK();\n+    }\n+  };\n \n-template <typename T>\n-DictionaryBuilder<T>::DictionaryBuilder(const std::shared_ptr<DataType>& type,\n-                                        MemoryPool* pool)\n-    : ArrayBuilder(type, pool),\n-      memo_table_(new MemoTableImpl(0)),\n-      delta_offset_(0),\n-      byte_width_(-1),\n-      values_builder_(pool) {\n-  DCHECK_EQ(T::type_id, type->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+  struct ArrayValuesInserter {\n+    DictionaryMemoTableImpl* impl_;\n \n-DictionaryBuilder<NullType>::DictionaryBuilder(const std::shared_ptr<DataType>& type,\n-                                               MemoryPool* pool)\n-    : ArrayBuilder(type, pool), values_builder_(pool) {\n-  DCHECK_EQ(Type::NA, type->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+    template <typename T>\n+    Status Visit(const T& array) {\n+      return InsertValues(array.type(), array);\n+    }\n \n-DictionaryBuilder<NullType>::DictionaryBuilder(const std::shared_ptr<Array>& dictionary,\n-                                               MemoryPool* pool)\n-    : ArrayBuilder(dictionary->type(), pool), values_builder_(pool) {\n-  DCHECK_EQ(Type::NA, type_->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+   private:\n+    template <typename DataType, typename Array>\n+    Status InsertValues(const DataType& type, const Array&, void* = nullptr) {\n+      return Status::NotImplemented(\"Inserting array values of \", type,\n+                                    \" is not implemented\");\n+    }\n \n-template <>\n-DictionaryBuilder<FixedSizeBinaryType>::DictionaryBuilder(\n-    const std::shared_ptr<DataType>& type, MemoryPool* pool)\n-    : ArrayBuilder(type, pool),\n-      memo_table_(new MemoTableImpl(0)),\n-      delta_offset_(0),\n-      byte_width_(checked_cast<const FixedSizeBinaryType&>(*type).byte_width()) {}\n-\n-template <typename T>\n-void DictionaryBuilder<T>::Reset() {\n-  ArrayBuilder::Reset();\n-  values_builder_.Reset();\n-  memo_table_.reset(new MemoTableImpl(0));\n-  delta_offset_ = 0;\n-}\n+    template <typename DataType, typename Array>\n+    Status InsertValues(\n+        const DataType&, const Array& array,\n+        typename internal::DictionaryTraits<DataType>::MemoTableType* = nullptr) {\n+      for (int64_t i = 0; i < array.length(); ++i) {\n+        ARROW_IGNORE_EXPR(impl_->GetOrInsert(array.GetView(i)));\n+      }\n+      return Status::OK();\n+    }\n+  };\n+\n+  struct ArrayDataGetter {\n+    std::shared_ptr<DataType> value_type_;\n+    MemoTable* memo_table_;\n+    MemoryPool* pool_;\n+    int64_t start_offset_;\n+    std::shared_ptr<ArrayData>* out_;\n+\n+    Status Visit(const DataType&, void* = nullptr) {\n+      return Status::NotImplemented(\"Getting array data of \", value_type_,\n+                                    \" is not implemented\");\n+    }\n \n-template <typename T>\n-Status DictionaryBuilder<T>::Resize(int64_t capacity) {\n-  RETURN_NOT_OK(CheckCapacity(capacity, capacity_));\n-  capacity = std::max(capacity, kMinBuilderCapacity);\n+    template <typename T>\n+    Status Visit(const T&,\n+                 typename internal::DictionaryTraits<T>::MemoTableType* = nullptr) {\n+      using ConcreteMemoTable = typename internal::DictionaryTraits<T>::MemoTableType;\n+      auto memo_table = static_cast<ConcreteMemoTable*>(memo_table_);\n+      return internal::DictionaryTraits<T>::GetDictionaryArrayData(\n+          pool_, value_type_, *memo_table, start_offset_, out_);\n+    }\n+  };\n \n-  if (capacity_ == 0) {\n-    // Initialize hash table\n-    // XXX should we let the user pass additional size heuristics?\n-    delta_offset_ = 0;\n+ public:\n+  explicit DictionaryMemoTableImpl(const std::shared_ptr<DataType>& type)\n+      : type_(type), memo_table_(nullptr) {\n+    MemoTableInitializer visitor{type_, &memo_table_};\n+    ARROW_IGNORE_EXPR(VisitTypeInline(*type_, &visitor));\n   }\n-  RETURN_NOT_OK(values_builder_.Resize(capacity));\n-  capacity_ = values_builder_.capacity();\n-  return Status::OK();\n-}\n-\n-Status DictionaryBuilder<NullType>::Resize(int64_t capacity) {\n-  RETURN_NOT_OK(CheckCapacity(capacity, capacity_));\n-  capacity = std::max(capacity, kMinBuilderCapacity);\n \n-  RETURN_NOT_OK(values_builder_.Resize(capacity));\n-  capacity_ = values_builder_.capacity();\n-  return Status::OK();\n-}\n+  Status InsertValues(const std::shared_ptr<Array>& array) {\n+    ArrayValuesInserter visitor{this};\n+    return VisitArrayInline(*array, &visitor);\n+  }\n \n-template <typename T>\n-Status DictionaryBuilder<T>::Append(const Scalar& value) {\n-  RETURN_NOT_OK(Reserve(1));\n+  template <typename T>\n \n Review comment:\n   This seems roundabout; for integer values you could use `ConcreteMemoTable = typename internal::HashTraits<typename CTypeTraits<T>::ArrowType>` and for GetOrInsert(string_view) you could just explicitly name `BinaryMemoTable`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-06T16:48:41.775+0000",
                    "updated": "2019-05-06T16:48:41.775+0000",
                    "started": "2019-05-06T16:48:41.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "237905",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/238109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#discussion_r281338477\n \n \n\n ##########\n File path: cpp/src/arrow/array/builder_dict.cc\n ##########\n @@ -145,229 +144,176 @@ Status DictionaryType::Unify(MemoryPool* pool, const std::vector<const DataType*\n // ----------------------------------------------------------------------\n // DictionaryBuilder\n \n-template <typename T>\n-class DictionaryBuilder<T>::MemoTableImpl\n-    : public internal::HashTraits<T>::MemoTableType {\n- public:\n-  using MemoTableType = typename internal::HashTraits<T>::MemoTableType;\n-  using MemoTableType::MemoTableType;\n-\n-  MemoTableImpl(const std::shared_ptr<Array>& dictionary)\n-      : MemoTableImpl(dictionary->length()) {\n-    const auto& values =\n-        static_cast<const typename TypeTraits<T>::ArrayType&>(*dictionary);\n-    for (int64_t i = 0; i < values.length(); ++i) {\n-      ARROW_IGNORE_EXPR(this->GetOrInsert(values.GetView(i)));\n+class internal::DictionaryMemoTable::DictionaryMemoTableImpl {\n+  struct MemoTableInitializer {\n+    std::shared_ptr<DataType> value_type_;\n+    std::unique_ptr<MemoTable>* memo_table_;\n+\n+    Status Visit(const DataType&, void* = nullptr) {\n+      return Status::NotImplemented(\"Initialization of \", value_type_,\n+                                    \" memo table is not implemented\");\n     }\n-  }\n-};\n \n-template <typename T>\n-DictionaryBuilder<T>::~DictionaryBuilder() {}\n-\n-template <typename T>\n-DictionaryBuilder<T>::DictionaryBuilder(const std::shared_ptr<Array>& dictionary,\n-                                        MemoryPool* pool)\n-    : ArrayBuilder(dictionary->type(), pool),\n-      memo_table_(new MemoTableImpl(dictionary)),\n-      delta_offset_(0),\n-      byte_width_(-1),\n-      values_builder_(pool) {\n-  DCHECK_EQ(T::type_id, type_->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+    template <typename T>\n+    Status Visit(const T&,\n+                 typename internal::DictionaryTraits<T>::MemoTableType* = nullptr) {\n+      using MemoTable = typename internal::DictionaryTraits<T>::MemoTableType;\n+      memo_table_->reset(new MemoTable(0));\n+      return Status::OK();\n+    }\n+  };\n \n-template <typename T>\n-DictionaryBuilder<T>::DictionaryBuilder(const std::shared_ptr<DataType>& type,\n-                                        MemoryPool* pool)\n-    : ArrayBuilder(type, pool),\n-      memo_table_(new MemoTableImpl(0)),\n-      delta_offset_(0),\n-      byte_width_(-1),\n-      values_builder_(pool) {\n-  DCHECK_EQ(T::type_id, type->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+  struct ArrayValuesInserter {\n+    DictionaryMemoTableImpl* impl_;\n \n-DictionaryBuilder<NullType>::DictionaryBuilder(const std::shared_ptr<DataType>& type,\n-                                               MemoryPool* pool)\n-    : ArrayBuilder(type, pool), values_builder_(pool) {\n-  DCHECK_EQ(Type::NA, type->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+    template <typename T>\n+    Status Visit(const T& array) {\n+      return InsertValues(array.type(), array);\n+    }\n \n-DictionaryBuilder<NullType>::DictionaryBuilder(const std::shared_ptr<Array>& dictionary,\n-                                               MemoryPool* pool)\n-    : ArrayBuilder(dictionary->type(), pool), values_builder_(pool) {\n-  DCHECK_EQ(Type::NA, type_->id()) << \"inconsistent type passed to DictionaryBuilder\";\n-}\n+   private:\n+    template <typename DataType, typename Array>\n+    Status InsertValues(const DataType& type, const Array&, void* = nullptr) {\n+      return Status::NotImplemented(\"Inserting array values of \", type,\n+                                    \" is not implemented\");\n+    }\n \n-template <>\n-DictionaryBuilder<FixedSizeBinaryType>::DictionaryBuilder(\n-    const std::shared_ptr<DataType>& type, MemoryPool* pool)\n-    : ArrayBuilder(type, pool),\n-      memo_table_(new MemoTableImpl(0)),\n-      delta_offset_(0),\n-      byte_width_(checked_cast<const FixedSizeBinaryType&>(*type).byte_width()) {}\n-\n-template <typename T>\n-void DictionaryBuilder<T>::Reset() {\n-  ArrayBuilder::Reset();\n-  values_builder_.Reset();\n-  memo_table_.reset(new MemoTableImpl(0));\n-  delta_offset_ = 0;\n-}\n+    template <typename DataType, typename Array>\n+    Status InsertValues(\n+        const DataType&, const Array& array,\n+        typename internal::DictionaryTraits<DataType>::MemoTableType* = nullptr) {\n+      for (int64_t i = 0; i < array.length(); ++i) {\n+        ARROW_IGNORE_EXPR(impl_->GetOrInsert(array.GetView(i)));\n+      }\n+      return Status::OK();\n+    }\n+  };\n+\n+  struct ArrayDataGetter {\n+    std::shared_ptr<DataType> value_type_;\n+    MemoTable* memo_table_;\n+    MemoryPool* pool_;\n+    int64_t start_offset_;\n+    std::shared_ptr<ArrayData>* out_;\n+\n+    Status Visit(const DataType&, void* = nullptr) {\n+      return Status::NotImplemented(\"Getting array data of \", value_type_,\n+                                    \" is not implemented\");\n+    }\n \n-template <typename T>\n-Status DictionaryBuilder<T>::Resize(int64_t capacity) {\n-  RETURN_NOT_OK(CheckCapacity(capacity, capacity_));\n-  capacity = std::max(capacity, kMinBuilderCapacity);\n+    template <typename T>\n+    Status Visit(const T&,\n+                 typename internal::DictionaryTraits<T>::MemoTableType* = nullptr) {\n+      using ConcreteMemoTable = typename internal::DictionaryTraits<T>::MemoTableType;\n+      auto memo_table = static_cast<ConcreteMemoTable*>(memo_table_);\n+      return internal::DictionaryTraits<T>::GetDictionaryArrayData(\n+          pool_, value_type_, *memo_table, start_offset_, out_);\n+    }\n+  };\n \n-  if (capacity_ == 0) {\n-    // Initialize hash table\n-    // XXX should we let the user pass additional size heuristics?\n-    delta_offset_ = 0;\n+ public:\n+  explicit DictionaryMemoTableImpl(const std::shared_ptr<DataType>& type)\n+      : type_(type), memo_table_(nullptr) {\n+    MemoTableInitializer visitor{type_, &memo_table_};\n+    ARROW_IGNORE_EXPR(VisitTypeInline(*type_, &visitor));\n   }\n-  RETURN_NOT_OK(values_builder_.Resize(capacity));\n-  capacity_ = values_builder_.capacity();\n-  return Status::OK();\n-}\n-\n-Status DictionaryBuilder<NullType>::Resize(int64_t capacity) {\n-  RETURN_NOT_OK(CheckCapacity(capacity, capacity_));\n-  capacity = std::max(capacity, kMinBuilderCapacity);\n \n-  RETURN_NOT_OK(values_builder_.Resize(capacity));\n-  capacity_ = values_builder_.capacity();\n-  return Status::OK();\n-}\n+  Status InsertValues(const std::shared_ptr<Array>& array) {\n+    ArrayValuesInserter visitor{this};\n+    return VisitArrayInline(*array, &visitor);\n+  }\n \n-template <typename T>\n-Status DictionaryBuilder<T>::Append(const Scalar& value) {\n-  RETURN_NOT_OK(Reserve(1));\n+  template <typename T>\n \n Review comment:\n   Thanks! Done.\r\n   I didn't know that we have `CTypeTraits`!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-06T20:06:20.512+0000",
                    "updated": "2019-05-06T20:06:20.512+0000",
                    "started": "2019-05-06T20:06:20.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "238109",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-490682892\n \n \n   No more comments?\r\n   I'll merged this tomorrow.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-08T23:03:12.290+0000",
                    "updated": "2019-05-08T23:03:12.290+0000",
                    "started": "2019-05-08T23:03:12.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239502",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-490898578\n \n \n   @pitrou could you have a look at this if possible? Are there any performance implications?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T13:13:04.148+0000",
                    "updated": "2019-05-09T13:13:04.148+0000",
                    "started": "2019-05-09T13:13:04.147+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239729",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-490899662\n \n \n   @kou can you or someone run a benchmark comparison (we are working on doing this in an automated fashion in the near future)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T13:15:55.795+0000",
                    "updated": "2019-05-09T13:15:55.795+0000",
                    "started": "2019-05-09T13:15:55.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239730",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#discussion_r282564722\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -332,14 +332,24 @@ class HashTable {\n \n // XXX typedef memo_index_t int32_t ?\n \n+// ----------------------------------------------------------------------\n+// A base class for memoization table.\n+\n+class MemoTable {\n+ public:\n+  virtual ~MemoTable() = default;\n+\n+  virtual int32_t size() const = 0;\n \n Review comment:\n   Why is this needed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T16:29:05.805+0000",
                    "updated": "2019-05-09T16:29:05.805+0000",
                    "started": "2019-05-09T16:29:05.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239788",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-490974912\n \n \n   I don't like this at all. This is adding some complication and exposing implementation details in the details just to appease an exotic platform compiler.\r\n   \r\n   I'd also like to see some benchmark numbers.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T16:30:01.450+0000",
                    "updated": "2019-05-09T16:30:01.450+0000",
                    "started": "2019-05-09T16:30:01.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239789",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239832",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491000037\n \n \n   I've got some refactoring of this file going in my branch for ARROW-3144 -- https://github.com/wesm/arrow/tree/ARROW-3144. It seems the issue is around symbol visibility of the template exports -- the solution may be to move more of the implementation to the header file. I could look at this in more detail if you'd like, but it won't be until next week\r\n   \r\n   I don't think that exposing implementation in the header is a bad thing so long as the details are in an `internal` namespace or similar\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T17:44:53.390+0000",
                    "updated": "2019-05-09T17:44:53.390+0000",
                    "started": "2019-05-09T17:44:53.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239832",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491000037\n \n \n   I've got some refactoring of this file going in my branch for ARROW-3144 -- https://github.com/wesm/arrow/tree/ARROW-3144 (to shift to variable dictionaries). It seems the issue is around symbol visibility of the template exports -- the solution may be to move more of the implementation to the header file. I could look at this in more detail if you'd like, but it won't be until next week\r\n   \r\n   I don't think that exposing implementation in the header is a bad thing so long as the details are in an `internal` namespace or similar\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T17:45:13.976+0000",
                    "updated": "2019-05-09T17:45:13.976+0000",
                    "started": "2019-05-09T17:45:13.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239833",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-490682892\n \n \n   No more comments?\r\n   I'll merge this tomorrow.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T20:47:27.132+0000",
                    "updated": "2019-05-09T20:47:27.132+0000",
                    "started": "2019-05-09T20:47:27.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239930",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239953",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491072793\n \n \n   I didn't run `make benchmark`.\r\n   \r\n   Now, I run it on my Linux desktop. Note that this result may have error because I was doing some light tasks such as writing a comment on the same machine while `make benchmark`.\r\n   \r\n   Before:\r\n   \r\n   ```text\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                     79 us         79 us       8750   960.194MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                     80 us         80 us       8750   956.713MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean                80 us         80 us       8750   958.454MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median              80 us         80 us       8750   958.454MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev               0 us          0 us       8750   2.46103MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                 74 us         74 us       9448   1033.77MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                 74 us         74 us       9448   1026.17MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean            74 us         74 us       9448   1029.97MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median          74 us         74 us       9448   1029.97MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev           0 us          0 us       9448   5.37446MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                    73 us         73 us       9558   1040.16MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                    74 us         74 us       9558   1033.28MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean               74 us         74 us       9558   1036.72MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median             74 us         74 us       9558   1036.72MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev              0 us          0 us       9558   4.87107MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                         177 us        177 us       3965   565.818MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                         177 us        177 us       3965   564.514MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                    177 us        177 us       3965   565.166MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                  177 us        177 us       3965   565.166MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                    0 us          0 us       3965   944.721kB/s\r\n   ```\r\n   \r\n   After:\r\n   \r\n   ```text\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                     63 us         63 us      11060   1.19024GB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                     63 us         63 us      11060   1.18231GB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean                63 us         63 us      11060   1.18627GB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median              63 us         63 us      11060   1.18627GB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev               0 us          0 us      11060   5.74351MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                 56 us         56 us      12392   1.32746GB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                 56 us         56 us      12392   1.32213GB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean            56 us         56 us      12392    1.3248GB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median          56 us         56 us      12392    1.3248GB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev           0 us          0 us      12392    3.8592MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                    57 us         57 us      11946   1.31269GB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                    56 us         56 us      11946   1.32086GB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean               57 us         57 us      11946   1.31677GB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median             57 us         57 us      11946   1.31677GB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev              0 us          0 us      11946   5.91462MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                         168 us        168 us       4162    593.52MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                         169 us        169 us       4162   592.553MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                    169 us        169 us       4162   593.036MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                  169 us        169 us       4162   593.036MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                    0 us          0 us       4162   700.711kB/s\r\n   ```\r\n   \r\n   It seems that there are no significant slowdown. Most of cases are faster a bit but it may be error.\r\n   \r\n   Some other builder benchmarks are slower with this change. But I'm not sure this is related to this change or just error.\r\n   \r\n   Before:\r\n   \r\n   ```text\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2                       46565 us      46565 us         15   10.7376GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2                       46523 us      46524 us         15   10.7471GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_mean                  46544 us      46545 us         15   10.7424GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_median                46544 us      46545 us         15   10.7424GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_stddev                   29 us         29 us         15   6.84988MB/s\r\n   ```\r\n   \r\n   After:\r\n   \r\n   ```text\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2                       91208 us      91209 us          8    5.4819GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2                       90612 us      90613 us          8   5.51799GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_mean                  90910 us      90911 us          8   5.49994GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_median                90910 us      90911 us          8   5.49994GB/s\r\n   BM_BuildPrimitiveArrayNoNulls/repeats:2_stddev                  421 us        422 us          8   26.1289MB/s\r\n   ```\r\n   \r\n   See the attached full benchmark logs for details:\r\n   \r\n   * Before: [benchmark-logs.master.tar.gz](https://github.com/apache/arrow/files/3164034/benchmark-logs.master.tar.gz)\r\n   * After: [benchmark-logs.branch.tar.gz](https://github.com/apache/arrow/files/3164035/benchmark-logs.branch.tar.gz)\r\n   \r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T21:21:33.730+0000",
                    "updated": "2019-05-09T21:21:33.730+0000",
                    "started": "2019-05-09T21:21:33.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239953",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/239954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#discussion_r282671970\n \n \n\n ##########\n File path: cpp/src/arrow/util/hashing.h\n ##########\n @@ -332,14 +332,24 @@ class HashTable {\n \n // XXX typedef memo_index_t int32_t ?\n \n+// ----------------------------------------------------------------------\n+// A base class for memoization table.\n+\n+class MemoTable {\n+ public:\n+  virtual ~MemoTable() = default;\n+\n+  virtual int32_t size() const = 0;\n \n Review comment:\n   Because this change uses `size()` against `MemoTable` not subclass such as `ScalarMemoTable` here https://github.com/apache/arrow/pull/4255/files#diff-5562b5446398874441052ef04e7ee2e6R243 .\r\n   If this doesn't exist, we need to cast to subclass to call `size()`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T21:25:13.820+0000",
                    "updated": "2019-05-09T21:25:13.820+0000",
                    "started": "2019-05-09T21:25:13.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239954",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/240536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491470242\n \n \n   I'll look at the benchmark results also locally. \r\n   \r\n   @kou what is the easiest way to reproduce this issue locally, using Cygwin? I would like to understand the template visibility issue more deeply since I've spent a lot of time on such problems over the last few years\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-11T01:56:32.712+0000",
                    "updated": "2019-05-11T01:56:32.712+0000",
                    "started": "2019-05-11T01:56:32.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "240536",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/240537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491471096\n \n \n   Hm this branch seems consistently faster than master\r\n   \r\n   before\r\n   \r\n   ```\r\n    ./release/arrow-builder-benchmark --benchmark_filter=Dict\r\n   2019-05-10 21:07:59\r\n   Running ./release/arrow-builder-benchmark\r\n   Run on (6 X 4400 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x6)\r\n     L1 Instruction 32K (x6)\r\n     L2 Unified 256K (x6)\r\n     L3 Unified 12288K (x1)\r\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\r\n   -----------------------------------------------------------------------------------------------\r\n   Benchmark                                                        Time           CPU Iterations\r\n   -----------------------------------------------------------------------------------------------\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                   121 us        121 us       6184   632.767MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                   129 us        129 us       6184   593.177MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean              125 us        125 us       6184   612.972MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median            125 us        125 us       6184   612.972MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev              6 us          6 us       6184   27.9946MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2               101 us        101 us       7143   756.246MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2               102 us        102 us       7143   748.023MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean          101 us        101 us       7143   752.134MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median        101 us        101 us       7143   752.134MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev          1 us          1 us       7143   5.81457MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                  102 us        102 us       6941    749.24MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                  101 us        101 us       6941   752.723MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean             102 us        102 us       6941   750.981MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median           102 us        102 us       6941   750.981MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev             0 us          0 us       6941   2.46331MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        230 us        230 us       2987   434.809MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        231 us        231 us       2987   432.284MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                   231 us        231 us       2987   433.546MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                 231 us        231 us       2987   433.546MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                   1 us          1 us       2987   1.78519MB/s\r\n   ```\r\n   \r\n   after\r\n   \r\n   ```\r\n   $ ./release/arrow-builder-benchmark --benchmark_filter=Dict\r\n   2019-05-10 21:08:21\r\n   Running ./release/arrow-builder-benchmark\r\n   Run on (6 X 4400 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x6)\r\n     L1 Instruction 32K (x6)\r\n     L2 Unified 256K (x6)\r\n     L3 Unified 12288K (x1)\r\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\r\n   -----------------------------------------------------------------------------------------------\r\n   Benchmark                                                        Time           CPU Iterations\r\n   -----------------------------------------------------------------------------------------------\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                    84 us         83 us       9113   920.758MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                    84 us         83 us       9113   918.057MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean               84 us         83 us       9113   919.407MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median             84 us         83 us       9113   919.407MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev              0 us          0 us       9113   1.91017MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                75 us         74 us       9367   1028.33MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                75 us         74 us       9367   1025.62MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean           75 us         74 us       9367   1026.98MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median         75 us         74 us       9367   1026.98MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev          0 us          0 us       9367    1.9155MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                   73 us         73 us      10610   1044.79MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                   72 us         72 us      10610   1059.06MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean              73 us         73 us      10610   1051.92MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median            73 us         73 us      10610   1051.92MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev             1 us          1 us      10610   10.0899MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        210 us        210 us       3325   475.559MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        210 us        210 us       3325   476.206MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                   210 us        210 us       3325   475.882MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                 210 us        210 us       3325   475.882MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                   0 us          0 us       3325   468.806kB/s\r\n   ```\r\n   \r\n   @pitrou thoughts? I fear that may be due for multiple rounds of refactoring, we may also want to expand the benchmarking to be more comprehensive or understand why this patch makes things a good deal faster\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-11T02:10:49.408+0000",
                    "updated": "2019-05-11T02:10:49.408+0000",
                    "started": "2019-05-11T02:10:49.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "240537",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/240538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491471096\n \n \n   Hm this branch seems consistently faster than master (yes, I do see the CPU scaling warning... I haven't figured out how to disable it on the machine that I'm on, using `cpufreq-util -g performance` doesn't seem to do it as with other machines)\r\n   \r\n   before\r\n   \r\n   ```\r\n    ./release/arrow-builder-benchmark --benchmark_filter=Dict\r\n   2019-05-10 21:07:59\r\n   Running ./release/arrow-builder-benchmark\r\n   Run on (6 X 4400 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x6)\r\n     L1 Instruction 32K (x6)\r\n     L2 Unified 256K (x6)\r\n     L3 Unified 12288K (x1)\r\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\r\n   -----------------------------------------------------------------------------------------------\r\n   Benchmark                                                        Time           CPU Iterations\r\n   -----------------------------------------------------------------------------------------------\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                   121 us        121 us       6184   632.767MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                   129 us        129 us       6184   593.177MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean              125 us        125 us       6184   612.972MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median            125 us        125 us       6184   612.972MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev              6 us          6 us       6184   27.9946MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2               101 us        101 us       7143   756.246MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2               102 us        102 us       7143   748.023MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean          101 us        101 us       7143   752.134MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median        101 us        101 us       7143   752.134MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev          1 us          1 us       7143   5.81457MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                  102 us        102 us       6941    749.24MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                  101 us        101 us       6941   752.723MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean             102 us        102 us       6941   750.981MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median           102 us        102 us       6941   750.981MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev             0 us          0 us       6941   2.46331MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        230 us        230 us       2987   434.809MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        231 us        231 us       2987   432.284MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                   231 us        231 us       2987   433.546MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                 231 us        231 us       2987   433.546MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                   1 us          1 us       2987   1.78519MB/s\r\n   ```\r\n   \r\n   after\r\n   \r\n   ```\r\n   $ ./release/arrow-builder-benchmark --benchmark_filter=Dict\r\n   2019-05-10 21:08:21\r\n   Running ./release/arrow-builder-benchmark\r\n   Run on (6 X 4400 MHz CPU s)\r\n   CPU Caches:\r\n     L1 Data 32K (x6)\r\n     L1 Instruction 32K (x6)\r\n     L2 Unified 256K (x6)\r\n     L3 Unified 12288K (x1)\r\n   ***WARNING*** CPU scaling is enabled, the benchmark real time measurements may be noisy and will incur extra overhead.\r\n   -----------------------------------------------------------------------------------------------\r\n   Benchmark                                                        Time           CPU Iterations\r\n   -----------------------------------------------------------------------------------------------\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                    84 us         83 us       9113   920.758MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2                    84 us         83 us       9113   918.057MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_mean               84 us         83 us       9113   919.407MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_median             84 us         83 us       9113   919.407MB/s\r\n   BM_BuildInt64DictionaryArrayRandom/repeats:2_stddev              0 us          0 us       9113   1.91017MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                75 us         74 us       9367   1028.33MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2                75 us         74 us       9367   1025.62MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_mean           75 us         74 us       9367   1026.98MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_median         75 us         74 us       9367   1026.98MB/s\r\n   BM_BuildInt64DictionaryArraySequential/repeats:2_stddev          0 us          0 us       9367    1.9155MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                   73 us         73 us      10610   1044.79MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2                   72 us         72 us      10610   1059.06MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_mean              73 us         73 us      10610   1051.92MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_median            73 us         73 us      10610   1051.92MB/s\r\n   BM_BuildInt64DictionaryArraySimilar/repeats:2_stddev             1 us          1 us      10610   10.0899MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        210 us        210 us       3325   475.559MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2                        210 us        210 us       3325   476.206MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_mean                   210 us        210 us       3325   475.882MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_median                 210 us        210 us       3325   475.882MB/s\r\n   BM_BuildStringDictionaryArray/repeats:2_stddev                   0 us          0 us       3325   468.806kB/s\r\n   ```\r\n   \r\n   @pitrou thoughts? I fear that may be due for multiple rounds of refactoring, we may also want to expand the benchmarking to be more comprehensive or understand why this patch makes things a good deal faster\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-11T02:11:49.940+0000",
                    "updated": "2019-05-11T02:11:49.940+0000",
                    "started": "2019-05-11T02:11:49.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "240538",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/240593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491498157\n \n \n   Ah, perhaps this PR allows inlining more of the code. In this case I'm probably going change my opinion about it :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-11T10:10:15.274+0000",
                    "updated": "2019-05-11T10:10:15.274+0000",
                    "started": "2019-05-11T10:10:15.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "240593",
                    "issueId": "13218811"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/worklog/240645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4255: ARROW-4725: [C++] Enable dictionary builder tests with MinGW build\nURL: https://github.com/apache/arrow/pull/4255#issuecomment-491534749\n \n \n   Yeah my preference is to merge this since it is also in the way of my work on ARROW-3143 which touches the DictionaryBuilder implementation details\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-11T18:41:33.272+0000",
                    "updated": "2019-05-11T18:41:33.272+0000",
                    "started": "2019-05-11T18:41:33.271+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "240645",
                    "issueId": "13218811"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/6",
            "id": "6",
            "description": "A new unit, integration or system test.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/issuetypes/requirement.png",
            "name": "Test",
            "subtask": false
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4c0a954d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22fd02dc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39295ec7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@738840dc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3133420a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@18b1c0d6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b9d6a61[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5aa2496e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@712a6322[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@678baaa1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67c50a53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2fe4c6fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun May 12 15:13:56 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-05-12T15:13:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4725/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-03-01T05:37:18.000+0000",
        "updated": "2019-05-12T15:14:19.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow up to needed for\u00a0[arrow/pull/3693/files|https://github.com/apache/arrow/pull/3693/files].\r\n\r\nUnder\u00a0cpp/src/arrow/CMakeLists.txt, PR disabled\u00a0array-dict-test.cc test, by adding:\r\n\r\n\u00a0\r\n{code:java}\r\nif(WIN32)\r\n\t add_arrow_test(array-test\r\n\t\t\tSOURCES\r\n\t\t\tarray-test.cc\r\n\t\t\tarray-binary-test.cc\r\n\t\t\tarray-list-test.cc\r\n\t\t\tarray-struct-test.cc)\r\nelse()\r\n\t add_arrow_test(array-test\r\n\t\t\tSOURCES\r\n\t\t\tarray-test.cc\r\n\t\t\tarray-binary-test.cc\r\n\t\t\tarray-dict-test.cc\r\n\t\t\tarray-list-test.cc\r\n\t\t\tarray-struct-test.cc)\r\nendif(){code}\r\n\u00a0\r\n\r\nWhich should be reverted and investigated further. The build error that including this test triggers is the following:\r\n{code:java}\r\n/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0xb9a2): undefined reference to `arrow::DictionaryBuilder<arrow::FixedSizeBinaryType>::DictionaryBuilder(std::shared_ptr<arrow::DataType> const&, arrow::MemoryPool*)'\r\nCMakeFiles/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0xcb8a): undefined reference to `arrow::DictionaryBuilder<arrow::FixedSizeBinaryType>::DictionaryBuilder(std::shared_ptr<arrow::DataType> const&, arrow::MemoryPool*)'\r\nCMakeFiles/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0xeef8): undefined reference to `arrow::DictionaryBuilder<arrow::FixedSizeBinaryType>::DictionaryBuilder(std::shared_ptr<arrow::DataType> const&, arrow::MemoryPool*)'\r\nCMakeFiles/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0x10240): undefined reference to `arrow::DictionaryBuilder<arrow::FixedSizeBinaryType>::DictionaryBuilder(std::shared_ptr<arrow::DataType> const&, arrow::MemoryPool*)'\r\nCMakeFiles/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0x104fc): undefined reference to `arrow::DictionaryBuilder<arrow::FixedSizeBinaryType>::AppendArray(arrow::Array const&)'\r\nCMakeFiles/arrow-array-test.dir/objects.a(array-dict-test.cc.obj):array-dict-test.cc:(.text+0x108ef): undefined reference to `arrow{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Dictionary tests disabled under MinGW builds",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/comment/16781511",
                    "id": "16781511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Unfortunately, \"if(WIN32)\" will probably disable the tests also on MSVC, which it shouldn't :-(\r\n\r\n[~wesmckinn]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-03-01T09:42:56.055+0000",
                    "updated": "2019-03-01T09:42:56.055+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218811/comment/16838087",
                    "id": "16838087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4255\n[https://github.com/apache/arrow/pull/4255]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-12T15:13:56.624+0000",
                    "updated": "2019-05-12T15:13:56.624+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z007vk:",
        "customfield_12314139": null
    }
}