{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13390770",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770",
    "key": "ARROW-13388",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350125",
                "id": "12350125",
                "name": "4.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-05-26"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12642773",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12642773",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "outwardIssue": {
                    "id": "12935457",
                    "key": "PARQUET-491",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12935457",
                    "fields": {
                        "summary": "[C++] Incorporate DELTA_LENGTH_BYTE_ARRAY value encoder into library and add unit tests",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=muthunagappan14",
            "name": "muthunagappan14",
            "key": "JIRAUSER291050",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Muthunagappan",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12337837",
                "id": "12337837",
                "name": "Parquet"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13388/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/781748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman opened a new pull request, #13386:\nURL: https://github.com/apache/arrow/pull/13386\n\n   Looks like we have DeltaLengthByteArrayDecoder implemented. Enabling it in this commit to support DELTA_LENGTH_BYTE_ARRAY decoding\n\n\n",
                    "created": "2022-06-15T16:57:55.739+0000",
                    "updated": "2022-06-15T16:57:55.739+0000",
                    "started": "2022-06-15T16:57:55.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781748",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/781749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1156715709\n\n   https://issues.apache.org/jira/browse/ARROW-13388\n\n\n",
                    "created": "2022-06-15T16:58:17.274+0000",
                    "updated": "2022-06-15T16:58:17.274+0000",
                    "started": "2022-06-15T16:58:17.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781749",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/781750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1156715740\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-06-15T16:58:19.462+0000",
                    "updated": "2022-06-15T16:58:19.462+0000",
                    "started": "2022-06-15T16:58:19.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781750",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/781755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1156729095\n\n   @github-actions crossbow submit cpp\n\n\n",
                    "created": "2022-06-15T17:12:19.826+0000",
                    "updated": "2022-06-15T17:12:19.826+0000",
                    "started": "2022-06-15T17:12:19.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781755",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/781756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1156729716\n\n   ```\n   Only contributors can submit requests to this bot. Please ask someone from the community for help with getting the first commit in.\n   The Archery job run can be found at: https://github.com/apache/arrow/actions/runs/2503938485\n   ```\n\n\n",
                    "created": "2022-06-15T17:13:00.620+0000",
                    "updated": "2022-06-15T17:13:00.620+0000",
                    "started": "2022-06-15T17:13:00.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781756",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/782191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1158312182\n\n   @kou Could you please review this change?\n\n\n",
                    "created": "2022-06-17T00:10:37.411+0000",
                    "updated": "2022-06-17T00:10:37.411+0000",
                    "started": "2022-06-17T00:10:37.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782191",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/782196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1158352932\n\n   Could you add a test for this?\n\n\n",
                    "created": "2022-06-17T00:52:36.043+0000",
                    "updated": "2022-06-17T00:52:36.043+0000",
                    "started": "2022-06-17T00:52:36.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782196",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/783910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1163394940\n\n   @github-actions crossbow submit cpp\n\n\n",
                    "created": "2022-06-22T17:09:24.373+0000",
                    "updated": "2022-06-22T17:09:24.373+0000",
                    "started": "2022-06-22T17:09:24.372+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783910",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/783911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1163395511\n\n   ```\n   Only contributors can submit requests to this bot. Please ask someone from the community for help with getting the first commit in.\n   The Archery job run can be found at: https://github.com/apache/arrow/actions/runs/2543925479\n   ```\n\n\n",
                    "created": "2022-06-22T17:09:59.209+0000",
                    "updated": "2022-06-22T17:09:59.209+0000",
                    "started": "2022-06-22T17:09:59.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783911",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/783912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1163401418\n\n   @kou I added a unit test and just merged the test input file to the [parquet-testing](https://github.com/apache/parquet-testing/commit/b76cde43bad62ebf531ae3736d7a59cf645d3a6f) submodule. Could you please review and approve the 7 workflows awaiting approval on this PR? \n\n\n",
                    "created": "2022-06-22T17:15:53.189+0000",
                    "updated": "2022-06-22T17:15:53.189+0000",
                    "started": "2022-06-22T17:15:53.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783912",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/784005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#discussion_r904239076\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_TRUE(std::memcmp(val.ptr, expected.c_str(), val.len) == 0);\n\nReview Comment:\n   How about using string (string view) object for better error message?\r\n   \r\n   ```suggestion\r\n       ASSERT_EQ(::arrow::util::string_view(reinterpret_cast<const char*>(val.ptr), val.len),\r\n                 expected);\r\n   ```\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_TRUE(std::memcmp(val.ptr, expected.c_str(), val.len) == 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n+      std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  int16_t def_levels[25];\n+  int16_t rep_levels[25];\n+  ByteArray values[25];\n+\n+  // This file only has 1000 rows\n+  ASSERT_EQ(1000, reader_->metadata()->num_rows());\n+  // This file only has 1 row group\n+  ASSERT_EQ(1, reader_->metadata()->num_row_groups());\n+  // Size of the metadata is 400 bytes\n\nReview Comment:\n   ```suggestion\r\n     // Size of the metadata is 105 bytes\r\n   ```\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -57,6 +57,9 @@ std::string data_file(const char* file) {\n   return ss.str();\n }\n \n+std::string text_delta_len_byte_array() {\n+  return data_file(\"delta_length_byte_array.parquet\");\n+}\n\nReview Comment:\n   We don't need to define this because we just use this in only one place. We can write this directly in `SetUp()`.\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_EQ(std::memcmp(val.ptr, expected.c_str(), val.len), 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n+      std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  int16_t def_levels[25];\n\nReview Comment:\n   Could you add `int64_t batch_size = 25;` and use it instead of putting many `25` literals?\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_TRUE(std::memcmp(val.ptr, expected.c_str(), val.len) == 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n+      std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  int16_t def_levels[25];\n+  int16_t rep_levels[25];\n+  ByteArray values[25];\n+\n+  // This file only has 1000 rows\n+  ASSERT_EQ(1000, reader_->metadata()->num_rows());\n+  // This file only has 1 row group\n+  ASSERT_EQ(1, reader_->metadata()->num_row_groups());\n+  // Size of the metadata is 400 bytes\n+  ASSERT_EQ(105, reader_->metadata()->size());\n+  // This row group must have 1000 rows\n+  ASSERT_EQ(1000, group->metadata()->num_rows());\n+\n+  // Check if the column is encoded with DELTA_LENGTH_BYTE_ARRAY\n+  std::unique_ptr<ColumnChunkMetaData> col_chunk = group->metadata()->ColumnChunk(0);\n\nReview Comment:\n   We can use `auto` here:\r\n   \r\n   ```suggestion\r\n     auto col_chunk = group->metadata()->ColumnChunk(0);\r\n   ```\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_EQ(std::memcmp(val.ptr, expected.c_str(), val.len), 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n\nReview Comment:\n   Can we use `auto` here?\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n\nReview Comment:\n   Can we use `auto` here?\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_TRUE(std::memcmp(val.ptr, expected.c_str(), val.len) == 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n+      std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  int16_t def_levels[25];\n+  int16_t rep_levels[25];\n+  ByteArray values[25];\n+\n+  // This file only has 1000 rows\n+  ASSERT_EQ(1000, reader_->metadata()->num_rows());\n+  // This file only has 1 row group\n+  ASSERT_EQ(1, reader_->metadata()->num_row_groups());\n+  // Size of the metadata is 400 bytes\n+  ASSERT_EQ(105, reader_->metadata()->size());\n+  // This row group must have 1000 rows\n+  ASSERT_EQ(1000, group->metadata()->num_rows());\n+\n+  // Check if the column is encoded with DELTA_LENGTH_BYTE_ARRAY\n+  std::unique_ptr<ColumnChunkMetaData> col_chunk = group->metadata()->ColumnChunk(0);\n+\n+  ASSERT_TRUE(std::find(col_chunk->encodings().begin(), col_chunk->encodings().end(),\n+                        Encoding::DELTA_LENGTH_BYTE_ARRAY) !=\n+              col_chunk->encodings().end());\n+\n+  ASSERT_TRUE(col->HasNext());\n+  int64_t values_read = 0;\n+  int64_t curr_batch_read;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  while (values_read < 1000) {\n+    auto levels_read =\n+        col->ReadBatch(25, def_levels, rep_levels, values, &curr_batch_read);\n+    ASSERT_EQ(25, levels_read);\n+    ASSERT_EQ(25, curr_batch_read);\n+    for (int i = 0; i < 25; i++) {\n+      std::string expected =\n\nReview Comment:\n   We can use `auto` here.\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_EQ(std::memcmp(val.ptr, expected.c_str(), val.len), 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n\nReview Comment:\n   Can we use `auto` here?\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +130,85 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() { reader_ = ParquetFileReader::OpenFile(text_delta_len_byte_array()); }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayScanner> scanner(new ByteArrayScanner(group->Column(0)));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_TRUE(std::memcmp(val.ptr, expected.c_str(), val.len) == 0);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  std::shared_ptr<RowGroupReader> group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  std::shared_ptr<ByteArrayReader> col =\n+      std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  int16_t def_levels[25];\n+  int16_t rep_levels[25];\n+  ByteArray values[25];\n+\n+  // This file only has 1000 rows\n+  ASSERT_EQ(1000, reader_->metadata()->num_rows());\n+  // This file only has 1 row group\n+  ASSERT_EQ(1, reader_->metadata()->num_row_groups());\n+  // Size of the metadata is 400 bytes\n+  ASSERT_EQ(105, reader_->metadata()->size());\n+  // This row group must have 1000 rows\n+  ASSERT_EQ(1000, group->metadata()->num_rows());\n+\n+  // Check if the column is encoded with DELTA_LENGTH_BYTE_ARRAY\n+  std::unique_ptr<ColumnChunkMetaData> col_chunk = group->metadata()->ColumnChunk(0);\n+\n+  ASSERT_TRUE(std::find(col_chunk->encodings().begin(), col_chunk->encodings().end(),\n+                        Encoding::DELTA_LENGTH_BYTE_ARRAY) !=\n+              col_chunk->encodings().end());\n+\n+  ASSERT_TRUE(col->HasNext());\n+  int64_t values_read = 0;\n+  int64_t curr_batch_read;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  while (values_read < 1000) {\n+    auto levels_read =\n+        col->ReadBatch(25, def_levels, rep_levels, values, &curr_batch_read);\n+    ASSERT_EQ(25, levels_read);\n+    ASSERT_EQ(25, curr_batch_read);\n+    for (int i = 0; i < 25; i++) {\n+      std::string expected =\n+          expected_prefix + std::to_string((i + values_read) * (i + values_read));\n+      ASSERT_TRUE(values[i].len == expected.length());\n+      ASSERT_TRUE(std::memcmp(values[i].ptr, expected.c_str(), values[i].len) == 0);\n\nReview Comment:\n   How about using string view here?\n\n\n\n",
                    "created": "2022-06-23T00:13:52.472+0000",
                    "updated": "2022-06-23T00:13:52.472+0000",
                    "started": "2022-06-23T00:13:52.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784005",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/784666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1165767772\n\n   Hi @kou! Could you please approve the workflows? I've addressed your review comments. Thanks for reviewing :)\n\n\n",
                    "created": "2022-06-24T17:07:52.586+0000",
                    "updated": "2022-06-24T17:07:52.586+0000",
                    "started": "2022-06-24T17:07:52.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784666",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/784774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on code in PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#discussion_r906642739\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +127,90 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() {\n+    reader_ = ParquetFileReader::OpenFile(data_file(\"delta_length_byte_array.parquet\"));\n+  }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  auto group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  auto scanner = std::make_shared<ByteArrayScanner>(group->Column(0));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_EQ(::arrow::util::string_view(reinterpret_cast<const char*>(val.ptr), val.len),\n+              expected);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  auto group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  auto col = std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  const int16_t batch_size = 25;\n+  int16_t def_levels[batch_size];\n+  int16_t rep_levels[batch_size];\n+  ByteArray values[batch_size];\n+\n+  // This file only has 1000 rows\n+  ASSERT_EQ(1000, reader_->metadata()->num_rows());\n+  // This file only has 1 row group\n+  ASSERT_EQ(1, reader_->metadata()->num_row_groups());\n+  // Size of the metadata is 105 bytes\n+  ASSERT_EQ(105, reader_->metadata()->size());\n+  // This row group must have 1000 rows\n+  ASSERT_EQ(1000, group->metadata()->num_rows());\n+\n+  // Check if the column is encoded with DELTA_LENGTH_BYTE_ARRAY\n+  auto col_chunk = group->metadata()->ColumnChunk(0);\n+\n+  ASSERT_TRUE(std::find(col_chunk->encodings().begin(), col_chunk->encodings().end(),\n+                        Encoding::DELTA_LENGTH_BYTE_ARRAY) !=\n+              col_chunk->encodings().end());\n+\n+  ASSERT_TRUE(col->HasNext());\n+  int64_t values_read = 0;\n+  int64_t curr_batch_read;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  while (values_read < 1000) {\n+    auto levels_read =\n+        col->ReadBatch(batch_size, def_levels, rep_levels, values, &curr_batch_read);\n+    ASSERT_EQ(batch_size, levels_read);\n+    ASSERT_EQ(batch_size, curr_batch_read);\n+    for (int i = 0; i < batch_size; i++) {\n\nReview Comment:\n   Could you use the same type for `i` and `batch_size`?\n\n\n\n##########\ncpp/src/parquet/reader_test.cc:\n##########\n@@ -127,6 +127,90 @@ void CheckRowGroupMetadata(const RowGroupMetaData* rg_metadata,\n   }\n }\n \n+class TestTextDeltaLengthByteArray : public ::testing::Test {\n+ public:\n+  void SetUp() {\n+    reader_ = ParquetFileReader::OpenFile(data_file(\"delta_length_byte_array.parquet\"));\n+  }\n+\n+  void TearDown() {}\n+\n+ protected:\n+  std::unique_ptr<ParquetFileReader> reader_;\n+};\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestTextScanner) {\n+  auto group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  auto scanner = std::make_shared<ByteArrayScanner>(group->Column(0));\n+  ByteArray val;\n+  bool is_null;\n+  std::string expected_prefix(\"apple_banana_mango\");\n+  for (int i = 0; i < 1000; ++i) {\n+    ASSERT_TRUE(scanner->HasNext());\n+    ASSERT_TRUE(scanner->NextValue(&val, &is_null));\n+    ASSERT_FALSE(is_null);\n+    std::string expected = expected_prefix + std::to_string(i * i);\n+    ASSERT_TRUE(val.len == expected.length());\n+    ASSERT_EQ(::arrow::util::string_view(reinterpret_cast<const char*>(val.ptr), val.len),\n+              expected);\n+  }\n+  ASSERT_FALSE(scanner->HasNext());\n+  ASSERT_FALSE(scanner->NextValue(&val, &is_null));\n+}\n+\n+TEST_F(TestTextDeltaLengthByteArray, TestBatchRead) {\n+  auto group = reader_->RowGroup(0);\n+\n+  // column 0, id\n+  auto col = std::dynamic_pointer_cast<ByteArrayReader>(group->Column(0));\n+\n+  const int16_t batch_size = 25;\n+  int16_t def_levels[batch_size];\n+  int16_t rep_levels[batch_size];\n+  ByteArray values[batch_size];\n\nReview Comment:\n   Could you move this to the below `while (values_read < 1000) {` because they are used only in the `while` block?\n\n\n\n",
                    "created": "2022-06-25T06:27:56.146+0000",
                    "updated": "2022-06-25T06:27:56.146+0000",
                    "started": "2022-06-25T06:27:56.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784774",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1167943293\n\n   @kou Could you please approve the workflows? Thanks!\n\n\n",
                    "created": "2022-06-27T21:46:15.537+0000",
                    "updated": "2022-06-27T21:46:15.537+0000",
                    "started": "2022-06-27T21:46:15.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785352",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1168022627\n\n   @pitrou / @kou Could you please approve the pending workflows? I just rebased my changes. Thanks!\n\n\n",
                    "created": "2022-06-27T23:12:03.112+0000",
                    "updated": "2022-06-27T23:12:03.112+0000",
                    "started": "2022-06-27T23:12:03.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785364",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sfc-gh-mmuthuraman commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1168149487\n\n   @kou / @pitrou I see a failure in \"_C++ / AMD64 Windows 2019 C++17_\" irrelevant to my changes. \r\n   `[ RUN      ] TestThreadPool.SubmitWithStopTokenCancelled\r\n   D:/a/arrow/arrow/cpp/src/arrow/util/thread_pool_test.cc(742): error: Expected: (n_success) > (0), actual: 0 vs 0\r\n   [  FAILED  ] TestThreadPool.SubmitWithStopTokenCancelled (325 ms)\r\n   [----------] 17 tests from TestThreadPool (2922 ms total)\r\n   `\r\n   Do all merge gates need to pass? Any suggestions on how to proceed?\r\n   \r\n   Thanks!\n\n\n",
                    "created": "2022-06-28T02:39:31.505+0000",
                    "updated": "2022-06-28T02:39:31.505+0000",
                    "started": "2022-06-28T02:39:31.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785403",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1168164915\n\n   I'll re-run it. Please wait for a while.\n\n\n",
                    "created": "2022-06-28T03:08:23.325+0000",
                    "updated": "2022-06-28T03:08:23.325+0000",
                    "started": "2022-06-28T03:08:23.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785407",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1168179312\n\n   Green. I'll merge this.\r\n   \r\n   Thanks!\n\n\n",
                    "created": "2022-06-28T03:34:16.739+0000",
                    "updated": "2022-06-28T03:34:16.739+0000",
                    "started": "2022-06-28T03:34:16.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785413",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou merged PR #13386:\nURL: https://github.com/apache/arrow/pull/13386\n\n\n",
                    "created": "2022-06-28T03:35:31.160+0000",
                    "updated": "2022-06-28T03:35:31.160+0000",
                    "started": "2022-06-28T03:35:31.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785414",
                    "issueId": "13390770"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/worklog/785587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13386:\nURL: https://github.com/apache/arrow/pull/13386#issuecomment-1168696290\n\n   @shanhuuang Do you remember why the DELTA_LENGTH_BYTE_ARRAY decoder hadn't been unabled? \n\n\n",
                    "created": "2022-06-28T13:04:41.886+0000",
                    "updated": "2022-06-28T13:04:41.886+0000",
                    "started": "2022-06-28T13:04:41.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785587",
                    "issueId": "13390770"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6c82de31[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fc6e176[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1332f41d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5b377a5c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4db8162e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7a56e260[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ec0632b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1ec51335[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13c16fa5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5e49da5f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23ed3386[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1507d075[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 28 03:35:32 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-28T03:35:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13388/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-07-19T19:45:48.000+0000",
        "updated": "2022-07-06T23:33:23.000+0000",
        "timeoriginalestimate": null,
        "description": "While trying to read a utf8 column with DELTA_LENGTH_BYTE_ARRAY encoding, pyarrow yields\r\n\r\n`OSError: Not yet implemented: Unsupported encoding.`\r\n\r\nIt would be nice to have support for this encoding, since it lends itself really well to the arrow format, whereby values's encoding is equal to arrow's representation.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Parquet] Add DELTA_LENGTH_BYTE_ARRAY",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/comment/17554707",
                    "id": "17554707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=muthunagappan14",
                        "name": "muthunagappan14",
                        "key": "JIRAUSER291050",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Muthunagappan",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Created PR https://github.com/apache/arrow/pull/13386",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=muthunagappan14",
                        "name": "muthunagappan14",
                        "key": "JIRAUSER291050",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Muthunagappan",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-06-15T17:03:40.589+0000",
                    "updated": "2022-06-15T17:03:40.589+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390770/comment/17559491",
                    "id": "17559491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 13386\n[https://github.com/apache/arrow/pull/13386]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2022-06-28T03:35:32.823+0000",
                    "updated": "2022-06-28T03:35:32.823+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0t51s:",
        "customfield_12314139": null
    }
}