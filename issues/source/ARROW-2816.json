{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13170966",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966",
    "key": "ARROW-2816",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
            "name": "alendit",
            "key": "alendit",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dimitri Vorona",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2816/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 62,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/121885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit opened a new pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253\n \n \n   See [JIRA](https://issues.apache.org/jira/browse/ARROW-2816). \r\n   \r\n   This PR adds implements some of the missing methods from RawIOBase and registers NativeFile (and so all it's descendants) with RawIOBase ABC.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-11T12:38:07.239+0000",
                    "updated": "2018-07-11T12:38:07.239+0000",
                    "started": "2018-07-11T12:38:07.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121885",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/121912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on issue #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#issuecomment-404189305\n \n \n   I'm not sure why the CI build is failing...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-11T14:27:01.938+0000",
                    "updated": "2018-07-11T14:27:01.938+0000",
                    "started": "2018-07-11T14:27:01.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121912",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/121941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#issuecomment-404231628\n \n \n   Super weird error:\r\n   \r\n   ```\r\n   byte-compiling /home/travis/build/apache/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/types.py to types.cpython-36.pyc\r\n   running install_egg_info\r\n   Copying pyarrow.egg-info to /home/travis/build/apache/arrow/pyarrow-test-3.6/lib/python3.6/site-packages/pyarrow-0.1.dev55+gb701ad3-py3.6.egg-info\r\n   running install_scripts\r\n   Installing plasma_store script to /home/travis/build/apache/arrow/pyarrow-test-3.6/bin\r\n   writing list of installed files to 'record.text'\r\n   \r\n   \u001b[31;01mWarning, treated as error:\u001b[39;49;00m\r\n   docstring of pyarrow.BufferOutputStream.readline:6:Block quote ends without a blank line; unexpected unindent.\r\n   \r\n   travis_time:end:01410426:start=1531317164436301464,finish=1531317673168573260,duration=508732271796\r\n   \u001b[0K\r\n   \u001b[31;1mThe command \"$TRAVIS_BUILD_DIR/ci/travis_script_python.sh 3.6\" exited with 2.\u001b[0m\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-11T16:28:42.118+0000",
                    "updated": "2018-07-11T16:28:42.118+0000",
                    "started": "2018-07-11T16:28:42.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121941",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/121946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on issue #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#issuecomment-404235368\n \n \n   Oh, it was an unescaped backslash in the `readline` docstring of `NativeFile` which confused sphinx.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-11T16:41:39.639+0000",
                    "updated": "2018-07-11T16:41:39.639+0000",
                    "started": "2018-07-11T16:41:39.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121946",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/121973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#issuecomment-404249129\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=h1) Report\n   > Merging [#2253](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/35e85b847df32193c204f598d98fe4e7e4e1f058?src=pr&el=desc) will **increase** coverage by `2.41%`.\n   > The diff coverage is `86.98%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2253/graphs/tree.svg?height=150&width=650&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2253      +/-   ##\n   ==========================================\n   + Coverage    84.2%   86.62%   +2.41%     \n   ==========================================\n     Files         288      232      -56     \n     Lines       44076    41503    -2573     \n   ==========================================\n   - Hits        37115    35951    -1164     \n   + Misses       6930     5552    -1378     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_io.py](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pby5weQ==) | `99.2% <100%> (+0.14%)` | :arrow_up: |\n   | [python/pyarrow/io.pxi](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaW8ucHhp) | `63% <69.01%> (+0.81%)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <0%> (-0.55%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | | |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | | |\n   | [go/arrow/array/booleanbuilder.go](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbmJ1aWxkZXIuZ28=) | | |\n   | [go/arrow/array/data.go](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZGF0YS5nbw==) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/2253/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=footer). Last update [35e85b8...fffcc70](https://codecov.io/gh/apache/arrow/pull/2253?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-11T17:27:54.610+0000",
                    "updated": "2018-07-11T17:27:54.610+0000",
                    "started": "2018-07-11T17:27:54.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121973",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201939949\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -262,6 +270,122 @@ cdef class NativeFile:\n         Alias for read, needed to match the IOBase interface.\"\"\"\n         return self.read(nbytes=None)\n \n+    def readall(self):\n+        return self.read()\n+\n+    def readinto(self, b):\n+        \"\"\"\n+        Read into the supplied buffer\n+\n+        Parameters\n+        -----------\n+        buf: any python object supporting buffer interface\n+\n+        Returns\n+        --------\n+        number of bytes written\n+        \"\"\"\n+\n+        cdef:\n+            int64_t buf_size\n+            int64_t bytes_read\n+            uint8_t* buf\n+            cp.Py_buffer py_buffer\n+\n+        self._assert_readable()\n+\n+        if cp.PyObject_GetBuffer(b, &py_buffer, cp.PyBUF_ANY_CONTIGUOUS) == -1:\n \n Review comment:\n   I would say `PyBUF_CONTIG`, to mandate writability.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:44.532+0000",
                    "updated": "2018-07-12T08:07:44.532+0000",
                    "started": "2018-07-12T08:07:44.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122219",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201941879\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -262,6 +270,122 @@ cdef class NativeFile:\n         Alias for read, needed to match the IOBase interface.\"\"\"\n         return self.read(nbytes=None)\n \n+    def readall(self):\n+        return self.read()\n+\n+    def readinto(self, b):\n+        \"\"\"\n+        Read into the supplied buffer\n+\n+        Parameters\n+        -----------\n+        buf: any python object supporting buffer interface\n+\n+        Returns\n+        --------\n+        number of bytes written\n+        \"\"\"\n+\n+        cdef:\n+            int64_t buf_size\n+            int64_t bytes_read\n+            uint8_t* buf\n+            cp.Py_buffer py_buffer\n+\n+        self._assert_readable()\n+\n+        if cp.PyObject_GetBuffer(b, &py_buffer, cp.PyBUF_ANY_CONTIGUOUS) == -1:\n+            raise ValueError(\"{} doesnot support buffer interface\".format(b))\n+\n+        buf = <uint8_t*> cp.PyBuffer_GetPointer(&py_buffer, [0])\n+\n+        buf_size = py_buffer.len\n+\n+        with nogil:\n+            check_status(self.rd_file.get().Read(buf_size, &bytes_read, buf))\n+\n+        return bytes_read\n+\n+    def readline(self, size=None):\n+        \"\"\"Read and return a line of bytes from the file.\n+\n+        If size is specified, read at most size bytes.\n+\n+        Line terminator is always b\"\\\\n\".\"\"\"\n+\n+        cdef:\n+            int64_t c_nbytes\n+            int64_t bytes_read = 0\n+            int64_t buf_size = 0\n+            PyObject* obj\n+\n+        self._assert_readable()\n+\n+        if size is None:\n+            c_nbytes = self.size() - self.tell()\n+        else:\n+            c_nbytes = size\n+\n+        obj = PyBytes_FromStringAndSizeNative(NULL, c_nbytes)\n+        cdef uint8_t* buf = <uint8_t*> cp.PyBytes_AS_STRING(<object> obj)\n+\n+        with nogil:\n+            while buf_size < c_nbytes:\n+                # we advance one byte at a time here which might not be very\n+                # efficient an internal buffer and peek interface migh be\n+                # preferable. Compare cpython's _pyio.py\n+                check_status(self.rd_file.get().Read(1,\n+                                                     &bytes_read,\n+                                                     buf + buf_size))\n+                if (buf + buf_size)[0] == b'\\n':\n \n Review comment:\n   At some point you should check whether `bytes_read` is 0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:44.729+0000",
                    "updated": "2018-07-12T08:07:44.729+0000",
                    "started": "2018-07-12T08:07:44.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122220",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201941683\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -262,6 +270,122 @@ cdef class NativeFile:\n         Alias for read, needed to match the IOBase interface.\"\"\"\n         return self.read(nbytes=None)\n \n+    def readall(self):\n+        return self.read()\n+\n+    def readinto(self, b):\n+        \"\"\"\n+        Read into the supplied buffer\n+\n+        Parameters\n+        -----------\n+        buf: any python object supporting buffer interface\n+\n+        Returns\n+        --------\n+        number of bytes written\n+        \"\"\"\n+\n+        cdef:\n+            int64_t buf_size\n+            int64_t bytes_read\n+            uint8_t* buf\n+            cp.Py_buffer py_buffer\n+\n+        self._assert_readable()\n+\n+        if cp.PyObject_GetBuffer(b, &py_buffer, cp.PyBUF_ANY_CONTIGUOUS) == -1:\n+            raise ValueError(\"{} doesnot support buffer interface\".format(b))\n+\n+        buf = <uint8_t*> cp.PyBuffer_GetPointer(&py_buffer, [0])\n+\n+        buf_size = py_buffer.len\n+\n+        with nogil:\n+            check_status(self.rd_file.get().Read(buf_size, &bytes_read, buf))\n+\n+        return bytes_read\n+\n+    def readline(self, size=None):\n+        \"\"\"Read and return a line of bytes from the file.\n+\n+        If size is specified, read at most size bytes.\n+\n+        Line terminator is always b\"\\\\n\".\"\"\"\n+\n+        cdef:\n+            int64_t c_nbytes\n+            int64_t bytes_read = 0\n+            int64_t buf_size = 0\n+            PyObject* obj\n+\n+        self._assert_readable()\n+\n+        if size is None:\n+            c_nbytes = self.size() - self.tell()\n+        else:\n+            c_nbytes = size\n+\n+        obj = PyBytes_FromStringAndSizeNative(NULL, c_nbytes)\n \n Review comment:\n   So if I'm calling `readline` on a 2GB file, this will allocate a 2GB bytestring? That doesn't sound like a very good idea.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.136+0000",
                    "updated": "2018-07-12T08:07:45.136+0000",
                    "started": "2018-07-12T08:07:45.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122221",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201941064\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -262,6 +270,122 @@ cdef class NativeFile:\n         Alias for read, needed to match the IOBase interface.\"\"\"\n         return self.read(nbytes=None)\n \n+    def readall(self):\n+        return self.read()\n+\n+    def readinto(self, b):\n+        \"\"\"\n+        Read into the supplied buffer\n+\n+        Parameters\n+        -----------\n+        buf: any python object supporting buffer interface\n+\n+        Returns\n+        --------\n+        number of bytes written\n+        \"\"\"\n+\n+        cdef:\n+            int64_t buf_size\n+            int64_t bytes_read\n+            uint8_t* buf\n+            cp.Py_buffer py_buffer\n+\n+        self._assert_readable()\n+\n+        if cp.PyObject_GetBuffer(b, &py_buffer, cp.PyBUF_ANY_CONTIGUOUS) == -1:\n+            raise ValueError(\"{} doesnot support buffer interface\".format(b))\n+\n+        buf = <uint8_t*> cp.PyBuffer_GetPointer(&py_buffer, [0])\n+\n+        buf_size = py_buffer.len\n+\n+        with nogil:\n+            check_status(self.rd_file.get().Read(buf_size, &bytes_read, buf))\n+\n+        return bytes_read\n \n Review comment:\n   You need to call `PyBuffer_Release(&py_buffer)` at the end of the function, otherwise there will be a leak.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.210+0000",
                    "updated": "2018-07-12T08:07:45.210+0000",
                    "started": "2018-07-12T08:07:45.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122222",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201942737\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n \n Review comment:\n   I don't think this test is necessary.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.290+0000",
                    "updated": "2018-07-12T08:07:45.290+0000",
                    "started": "2018-07-12T08:07:45.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122223",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201940886\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -262,6 +270,122 @@ cdef class NativeFile:\n         Alias for read, needed to match the IOBase interface.\"\"\"\n         return self.read(nbytes=None)\n \n+    def readall(self):\n+        return self.read()\n+\n+    def readinto(self, b):\n+        \"\"\"\n+        Read into the supplied buffer\n+\n+        Parameters\n+        -----------\n+        buf: any python object supporting buffer interface\n+\n+        Returns\n+        --------\n+        number of bytes written\n+        \"\"\"\n+\n+        cdef:\n+            int64_t buf_size\n+            int64_t bytes_read\n+            uint8_t* buf\n+            cp.Py_buffer py_buffer\n+\n+        self._assert_readable()\n+\n+        if cp.PyObject_GetBuffer(b, &py_buffer, cp.PyBUF_ANY_CONTIGUOUS) == -1:\n+            raise ValueError(\"{} doesnot support buffer interface\".format(b))\n+\n+        buf = <uint8_t*> cp.PyBuffer_GetPointer(&py_buffer, [0])\n \n Review comment:\n   It's simpler to just say `buf = <uint8_t*> py_buffer.buf` (assuming that works).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.317+0000",
                    "updated": "2018-07-12T08:07:45.317+0000",
                    "started": "2018-07-12T08:07:45.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122224",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201943401\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n+    length = 5\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint16)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+    byte_length = array.nbytes\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == byte_length\n+\n+        assert array[:byte_length].tobytes() == data[:byte_length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readline():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readline_no_nl_at_eof():\n+    data = b'''line1\n+    line2\n+    line3'''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readlines():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines() == buf2.readlines()\n+\n+\n+def test_python_file_readlines_with_hint():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines(8) == buf2.readlines(8)\n+\n+\n+def test_python_file_correct_abc():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert isinstance(f, RawIOBase)\n \n Review comment:\n   It's dubious that this should be `RawIOBase`, since a `BytesIO` is buffered. OTOH this could be considered a best-effort registration.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.352+0000",
                    "updated": "2018-07-12T08:07:45.352+0000",
                    "started": "2018-07-12T08:07:45.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122225",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201944017\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -586,6 +741,7 @@ def sample_disk_data(request, tmpdir):\n \n     def teardown():\n         _try_delete(path)\n+\n \n Review comment:\n   It strikes me that you added a lot of tests for `PythonFile` but none for `NativeFile` (which is the focus of this PR). Did you forget them?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.532+0000",
                    "updated": "2018-07-12T08:07:45.532+0000",
                    "started": "2018-07-12T08:07:45.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122226",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201942625\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n \n Review comment:\n   Unless something is wrong, taking a memoryview shouldn't be required.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.613+0000",
                    "updated": "2018-07-12T08:07:45.613+0000",
                    "started": "2018-07-12T08:07:45.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122227",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201942975\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n+    length = 5\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint16)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+    byte_length = array.nbytes\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == byte_length\n+\n+        assert array[:byte_length].tobytes() == data[:byte_length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readline():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readline_no_nl_at_eof():\n \n Review comment:\n   You can merge this test and the previous one.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.615+0000",
                    "updated": "2018-07-12T08:07:45.615+0000",
                    "started": "2018-07-12T08:07:45.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122228",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201942532\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n \n Review comment:\n   Just use a `bytearray`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.629+0000",
                    "updated": "2018-07-12T08:07:45.629+0000",
                    "started": "2018-07-12T08:07:45.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122229",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201943503\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n+    length = 5\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint16)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+    byte_length = array.nbytes\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == byte_length\n+\n+        assert array[:byte_length].tobytes() == data[:byte_length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readline():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readline_no_nl_at_eof():\n+    data = b'''line1\n+    line2\n+    line3'''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readlines():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines() == buf2.readlines()\n+\n+\n+def test_python_file_readlines_with_hint():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines(8) == buf2.readlines(8)\n+\n+\n+def test_python_file_correct_abc():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert isinstance(f, RawIOBase)\n+        assert isinstance(f, IOBase)\n+\n+\n+def test_python_file_correct_ducktyping():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert hasattr(f, '__iter__')\n \n Review comment:\n   Instead of using `hasattr`, how about just iterating on the file?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T08:07:45.638+0000",
                    "updated": "2018-07-12T08:07:45.638+0000",
                    "started": "2018-07-12T08:07:45.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122230",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201996697\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n+    length = 5\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint16)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+    byte_length = array.nbytes\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == byte_length\n+\n+        assert array[:byte_length].tobytes() == data[:byte_length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readline():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readline_no_nl_at_eof():\n+    data = b'''line1\n+    line2\n+    line3'''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readlines():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines() == buf2.readlines()\n+\n+\n+def test_python_file_readlines_with_hint():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines(8) == buf2.readlines(8)\n+\n+\n+def test_python_file_correct_abc():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert isinstance(f, RawIOBase)\n \n Review comment:\n   Is it specified somewhere? There is `BufferedIOBase`, but the doc strings on `(Raw)IOBase` don't seem to prescribe implementation details.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T11:11:25.648+0000",
                    "updated": "2018-07-12T11:11:25.648+0000",
                    "started": "2018-07-12T11:11:25.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122274",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201997170\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -105,6 +105,141 @@ def test_python_file_read():\n     f.close()\n \n \n+def test_python_file_readall():\n+    data = b'some sample data'\n+\n+    buf = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readall() == data\n+\n+\n+def test_python_file_readinto():\n+    length = 10\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint8)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == 10\n+\n+        assert array[:length].tobytes() == data[:length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readinto_different_buffertype():\n+    length = 5\n+    data = b'some sample data longer than 10'\n+    array = np.empty(length, dtype=np.uint16)\n+    dst_buf = memoryview(array)\n+    src_buf = BytesIO(data)\n+    byte_length = array.nbytes\n+\n+    with pa.PythonFile(src_buf, mode='r') as f:\n+        assert f.readinto(dst_buf) == byte_length\n+\n+        assert array[:byte_length].tobytes() == data[:byte_length]\n+        assert len(array) == length\n+\n+\n+def test_python_file_readline():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readline_no_nl_at_eof():\n+    data = b'''line1\n+    line2\n+    line3'''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        for index in range(4):\n+            assert f.readline() == buf2.readline()\n+\n+\n+def test_python_file_readlines():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines() == buf2.readlines()\n+\n+\n+def test_python_file_readlines_with_hint():\n+    data = b'''line1\n+    line2\n+    line3\n+    '''\n+\n+    buf = BytesIO(data)\n+    buf2 = BytesIO(data)\n+    with pa.PythonFile(buf, mode='r') as f:\n+        assert f.readlines(8) == buf2.readlines(8)\n+\n+\n+def test_python_file_correct_abc():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert isinstance(f, RawIOBase)\n+        assert isinstance(f, IOBase)\n+\n+\n+def test_python_file_correct_ducktyping():\n+    with pa.PythonFile(BytesIO(b''), mode='r') as f:\n+        assert hasattr(f, '__iter__')\n \n Review comment:\n   I wanted to test the failure mentioned in the JIRA ticket explicitly, i.e. have the exact same check as pandas does. The iterating over file is tested in `test_python_file_iterable`, too.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T11:13:16.921+0000",
                    "updated": "2018-07-12T11:13:16.921+0000",
                    "started": "2018-07-12T11:13:16.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122275",
                    "issueId": "13170966"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/worklog/122277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alendit commented on a change in pull request #2253: ARROW-2816: [Python] Make NativeFile RawIOBase-compliant\nURL: https://github.com/apache/arrow/pull/2253#discussion_r201998077\n \n \n\n ##########\n File path: python/pyarrow/tests/test_io.py\n ##########\n @@ -586,6 +741,7 @@ def sample_disk_data(request, tmpdir):\n \n     def teardown():\n         _try_delete(path)\n+\n \n Review comment:\n   `NativeFile` ist kind of an abstract base and cannot used directly (it doesn't set rd_file/wr_file, for example). `PythonFile` is a close descendant which just specifies a custom initializer. Looking at the existing tests, non seem to test `NativeFile` directly.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-12T11:16:47.101+0000",
                    "updated": "2018-07-12T11:16:47.101+0000",
                    "started": "2018-07-12T11:16:47.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "122277",
                    "issueId": "13170966"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 34800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@70046110[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c0b8f83[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@536b5208[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@337ca871[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7802d37f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5dec4057[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@549ea2f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2f7a732[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c800538[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@53511e07[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72f9bfbf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d0848e5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 23 10:23:06 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-23T10:23:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2816/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-07-09T20:34:35.000+0000",
        "updated": "2018-07-23T17:49:01.000+0000",
        "timeoriginalestimate": null,
        "description": "Copied from https://github.com/apache/arrow/issues/2114\r\n\r\n{code}\r\nCurrently, NativeFile does not pass the check of pandas for being a \"file-like\" object because it does not have __iter__ method. It can be easily added using code from native python io module as a reference. Another way would be to subclass io.IOBase.\r\n\r\nThe exact code of pandas check can be found here.\r\n\r\nCode for __iter__ method and io.IOBase can be found here.\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 34800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add __iter__ method to NativeFile",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16537594",
                    "id": "16537594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Subclassing {{RawIOBase}} is probably the right thing to do here. {{IOBase}} is just a base base class.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-09T21:04:44.879+0000",
                    "updated": "2018-07-09T21:04:44.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16538862",
                    "id": "16538862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "We can't subclass Python classes in extension types, can we? We could register NativeFile with RawIOBase, though.\u00a0\r\n\r\nHow would you prefer to solve this issue, just add __iter__ + __next__ to NativeFile (should be trivial) or rather extend it to the whole RawIOBase interface and register it, so that it passes other possible checks, too?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-10T16:06:27.533+0000",
                    "updated": "2018-07-10T16:06:27.533+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16538866",
                    "id": "16538866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "{{NativeFile}} is a Cython-defined class, it can subclass arbitrary Python classes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-10T16:09:09.471+0000",
                    "updated": "2018-07-10T16:09:09.471+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16539658",
                    "id": "16539658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Antoine, are you sure? I maybe missunderstand\u00a0[the docs|http://cython.readthedocs.io/en/latest/src/userguide/extension_types.html#subclassing]\u00a0but I think you can only inherit from other extension (i.e. Cython) classes or built-in types. At least I couldn't get it working. The other way around works fine, of course.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-11T07:31:07.975+0000",
                    "updated": "2018-07-11T07:36:17.889+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16539670",
                    "id": "16539670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Dimitri, hmm, you are right. It could be possible to solve that by using composition: have a {{cdef}} class that contains the actual file handle, and then a regular class inheriting from {{RawIOBase}} that delegates to methods of the {{cdef}} class.\r\n\r\nOtherwise we can just implement {{__iter__}}  and {{__next__}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-11T07:52:15.591+0000",
                    "updated": "2018-07-11T07:52:15.591+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16539676",
                    "id": "16539676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Antoine. Since RawIOBase is an ABC, couldn't we just register NativeFile with it, after we've added all the methods? Should take care of any instanceof checks.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-11T07:58:07.426+0000",
                    "updated": "2018-07-11T07:58:07.426+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16539679",
                    "id": "16539679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "-On a unrelated note: is it normal that I don't receive\u00a0notification emails if someone posts a comment to an issue I'm watching? The issue creation emails arrive just fine...-\r\n\r\n\u00a0\r\n\r\nDisregard that, I think I have it now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-11T07:59:27.695+0000",
                    "updated": "2018-07-11T08:06:09.715+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16539745",
                    "id": "16539745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Yes, we should be able to register NativeFile with the ABC.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-11T08:52:00.699+0000",
                    "updated": "2018-07-11T08:52:00.699+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16540028",
                    "id": "16540028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I sent a PR with proposed changes.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alendit",
                        "name": "alendit",
                        "key": "alendit",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Dimitri Vorona",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-07-11T12:39:31.803+0000",
                    "updated": "2018-07-11T12:39:31.803+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13170966/comment/16552612",
                    "id": "16552612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 2253\n[https://github.com/apache/arrow/pull/2253]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-07-23T10:23:06.742+0000",
                    "updated": "2018-07-23T10:23:06.742+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|i3vozb:",
        "customfield_12314139": null
    }
}