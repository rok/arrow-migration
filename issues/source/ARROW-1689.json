{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13110607",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607",
    "key": "ARROW-1689",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=njw45",
            "name": "njw45",
            "key": "njw45",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nick White",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=njw45",
            "name": "njw45",
            "key": "njw45",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nick White",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=njw45",
            "name": "njw45",
            "key": "njw45",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nick White",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1689/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@180d91b0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c3021ac[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7750991e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5a40eb19[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a9ca752[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@49dd881a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ab66056[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@67f35c3a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@68dac1a1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4d6219f8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@445f64d2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@39b0f2ef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 28 11:54:21 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-10-26T13:58:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1689/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-10-19T08:45:46.000+0000",
        "updated": "2017-10-28T11:54:21.000+0000",
        "timeoriginalestimate": null,
        "description": "It seems like [WriteIndices|https://github.com/apache/arrow/blob/0c8b861f93884f2868eb631d8fceee3a8b8905ec/cpp/src/arrow/python/arrow_to_pandas.cc#L955-L981] could reuse some of the logic in [ConvertValuesZeroCopy|https://github.com/apache/arrow/blob/0c8b861f93884f2868eb631d8fceee3a8b8905ec/cpp/src/arrow/python/arrow_to_pandas.cc#L1348-L1385] to avoid copying the integer indices array?",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Categorical Indices Should Be Zero-Copy",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16211005",
                    "id": "16211005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "True (but only if there are no nulls). ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-19T13:09:07.516+0000",
                    "updated": "2017-10-19T13:09:07.516+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214101",
                    "id": "16214101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "GitHub user njwhite opened a pull request:\n\n    https://github.com/apache/arrow/pull/1233\n\n    ARROW-1689 Allow User To Request No Data Copies\n\n    This makes performance debugging much easier, as it allows you to track down what (Arrow) data is causing unexpected delays in loading. It also makes testing features like ARROW-1689 easier as you can prove (via unit tests) that copies are not being made.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/njwhite/arrow feature/zerocopycategories\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/arrow/pull/1233.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1233\n    \n----\ncommit f0384f0969550401df59be26a7f146b9af9e0920\nAuthor: Nick White <n.j.white@gmail.com>\nDate:   2017-10-21T20:51:36Z\n\n    ARROW-1689 Allow User To Request No Data Copies\n    \n    This makes performance debugging much easier, as it\n    allows you to track down what (arrow) data is causing\n    unexpected delays in loading.\n\n----\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-21T20:53:48.021+0000",
                    "updated": "2017-10-21T20:53:48.021+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214102",
                    "id": "16214102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=njw45",
                        "name": "njw45",
                        "key": "njw45",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nick White",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Working on this myself at https://github.com/apache/arrow/pull/1233",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=njw45",
                        "name": "njw45",
                        "key": "njw45",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nick White",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-21T20:54:16.860+0000",
                    "updated": "2017-10-21T20:54:16.860+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214335",
                    "id": "16214335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T opened a new pull request #1237: ARROW-1689: [Python] Implement Categorical Block Zero-Copy\nURL: https://github.com/apache/arrow/pull/1237\n \n \n   This PR closes [ARROW-1689](https://issues.apache.org/jira/browse/ARROW-1689).\r\n   I want to add the zero-copy option after https://github.com/apache/arrow/pull/1233 merged.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-22T15:02:10.966+0000",
                    "updated": "2017-10-22T15:02:10.966+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214454",
                    "id": "16214454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on issue #1237: ARROW-1689: [Python] Implement CategoricalBlock Index Zero-Copy\nURL: https://github.com/apache/arrow/pull/1237#issuecomment-338509177\n \n \n   Thanks - I wrote a test for this behaviour when working on my PR!\r\n   \r\n   ````\r\n   diff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\r\n   index 8dd38582..21a5c82d 100644\r\n   --- a/python/pyarrow/tests/test_convert_pandas.py\r\n   +++ b/python/pyarrow/tests/test_convert_pandas.py\r\n   @@ -216,6 +216,19 @@ class TestPandasConversion(unittest.TestCase):\r\n            result = pa.array([0, 1, 2]).to_pandas(zero_copy_only=True)\r\n            npt.assert_array_equal(result, [0, 1, 2])\r\n    \r\n   +    def test_zero_copy_dictionaries(self):\r\n   +        arr = pa.DictionaryArray.from_arrays(\r\n   +            np.array([0, 0]),\r\n   +            np.array(['A']))\r\n   +\r\n   +        result = arr.to_pandas(zero_copy_only=True)\r\n   +        values = pd.Categorical(['A', 'A'])\r\n   +\r\n   +        tm.assert_series_equal(\r\n   +            pd.Series(result),\r\n   +            pd.Series(values),\r\n   +           check_names=False)\r\n   +\r\n        def test_zero_copy_failure_on_object_types(self):\r\n            with self.assertRaises(pa.ArrowException):\r\n                pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\r\n   ````\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-22T21:07:14.394+0000",
                    "updated": "2017-10-22T21:07:14.394+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214460",
                    "id": "16214460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146144816\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -159,7 +159,7 @@ cdef class Column:\n         sp_column.reset(new CColumn(boxed_field.sp_field, arr.sp_array))\n         return pyarrow_wrap_column(sp_column)\n \n-    def to_pandas(self, strings_to_categorical=False):\n+    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n \n Review comment:\n   @xhochy That makes sense - but why wouldn't you just make one `PandasBlock` per column (without copying), instead of created a `PandasBlock` per type and copying the various columns of that type into it? \r\n   \r\n   Also, I've pushed a fix for the AppVeyor warning but the Travis errors seem unrelated (in the Go & JS codebases)?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-22T21:24:33.975+0000",
                    "updated": "2017-10-22T21:24:33.975+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214461",
                    "id": "16214461",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146145192\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -159,7 +159,7 @@ cdef class Column:\n         sp_column.reset(new CColumn(boxed_field.sp_field, arr.sp_array))\n         return pyarrow_wrap_column(sp_column)\n \n-    def to_pandas(self, strings_to_categorical=False):\n+    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n \n Review comment:\n   @njwhite Because that is the underlying assumption based upon which Pandas 0.x DataFrames work on. There are several functions that use this assumptions to provide certain (slicing) features. @wesm might be able to go into detail/be more concrete.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-22T21:37:17.053+0000",
                    "updated": "2017-10-22T21:37:17.053+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214471",
                    "id": "16214471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#issuecomment-338512386\n \n \n   pandas aggressively consolidates blocks. For non-categorical types, the maximum performance, most memory efficient choice for nearly all pandas users is to create pre-consolidated blocks. \r\n   \r\n   I\u2019m a bit worried about doing significant work on this code without having ASV benchmarks set up\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-22T21:57:00.040+0000",
                    "updated": "2017-10-22T21:57:00.040+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214886",
                    "id": "16214886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146215009\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -159,7 +159,7 @@ cdef class Column:\n         sp_column.reset(new CColumn(boxed_field.sp_field, arr.sp_array))\n         return pyarrow_wrap_column(sp_column)\n \n-    def to_pandas(self, strings_to_categorical=False):\n+    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n \n Review comment:\n   @xhochy Makes sense, definitely want to keep this change focussed so should I just remove the flag from `pa.Table`? I'll fix the AppVeyor complaints tonight, & rebase off master to see if that fixes the other issues.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-23T09:46:45.506+0000",
                    "updated": "2017-10-23T09:46:45.506+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16214898",
                    "id": "16214898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146216132\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -159,7 +159,7 @@ cdef class Column:\n         sp_column.reset(new CColumn(boxed_field.sp_field, arr.sp_array))\n         return pyarrow_wrap_column(sp_column)\n \n-    def to_pandas(self, strings_to_categorical=False):\n+    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n \n Review comment:\n   No, keep it. I just wanted to give you the hint that it will likely fail to do zero-copy in >90% of all cases.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-23T09:51:38.046+0000",
                    "updated": "2017-10-23T09:51:38.046+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16216519",
                    "id": "16216519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on issue #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#issuecomment-338913924\n \n \n   @xhochy OK - Travis, &c. are all green now. @wesm thanks - that makes sense. I'm definitely not looking to do significant work! That said, [MAP_FIXED](https://stackoverflow.com/questions/10454964/mapping-non-contiguous-blocks-from-a-file-into-contiguous-memory-addresses) looks like a path to mapping different columns in the Arrow file to a contiguous address space (i.e. a pre-consolidated block) without physically copying the data...:)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T08:26:53.046+0000",
                    "updated": "2017-10-24T08:26:53.046+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217286",
                    "id": "16217286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146627905\n \n \n\n ##########\n File path: cpp/src/arrow/status.h\n ##########\n @@ -95,7 +95,8 @@ enum class StatusCode : char {\n   PythonError = 12,\n   PlasmaObjectExists = 20,\n   PlasmaObjectNonexistent = 21,\n-  PlasmaStoreFull = 22\n+  PlasmaStoreFull = 22,\n+  CopyRequired = 23\n \n Review comment:\n   I don't think a new status code is needed. Can you return `Invalid` instead? As a matter of style, we should try not to use Status for routine error handling in C++. I think having this bubble up as an exception in Python is OK for now, but if we need to do zero-copy detection in C++, we are going to want to handle that in a different way. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T17:11:51.928+0000",
                    "updated": "2017-10-24T17:11:51.928+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217287",
                    "id": "16217287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146628354\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1542,26 +1566,19 @@ class ArrowDeserializer {\n   }\n \n   Status Visit(const DictionaryType& type) {\n+    if (options_.zero_copy_only) {\n+      return Status::CopyRequired(\"DictionaryType needs copies\");\n+    }\n+\n     auto block = std::make_shared<CategoricalBlock>(options_, nullptr, col_->length());\n     RETURN_NOT_OK(block->Write(col_, 0, 0));\n \n-    auto dict_type = static_cast<const DictionaryType*>(col_->type().get());\n-\n     PyAcquireGIL lock;\n     result_ = PyDict_New();\n     RETURN_IF_PYERROR();\n \n-    PyObject* dictionary;\n-\n-    // Release GIL before calling ConvertArrayToPandas, will be reacquired\n-    // there if needed\n-    lock.release();\n-    RETURN_NOT_OK(\n-        ConvertArrayToPandas(options_, dict_type->dictionary(), nullptr, &dictionary));\n-    lock.acquire();\n-\n \n Review comment:\n   Why is this deleted?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T17:11:51.946+0000",
                    "updated": "2017-10-24T17:11:51.946+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217288",
                    "id": "16217288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146628447\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -86,7 +86,7 @@ TEST(PandasConversionTest, TestObjectBlockWriteFails) {\n \n   PyObject* out;\n   Py_BEGIN_ALLOW_THREADS;\n-  PandasOptions options;\n+  PandasOptions options = {false, false};\n \n Review comment:\n   Can you instead add a default ctor to `PandasOptions`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T17:11:52.027+0000",
                    "updated": "2017-10-24T17:11:52.027+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217289",
                    "id": "16217289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1233: ARROW-1689 Allow User To Request No Data Copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146629402\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -212,6 +212,18 @@ def test_float_no_nulls(self):\n         schema = pa.schema(fields)\n         self._check_pandas_roundtrip(df, expected_schema=schema)\n \n+    def test_zero_copy_success(self):\n+        result = pa.array([0, 1, 2]).to_pandas(zero_copy_only=True)\n+        npt.assert_array_equal(result, [0, 1, 2])\n+\n+    def test_zero_copy_failure_on_object_types(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_when_nulls(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array([0, 1, None]).to_pandas(zero_copy_only=True)\n \n Review comment:\n   There are 7 places where a zero copy error is being returned. Let's make sure we have unit tests that hit each of them\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T17:11:52.040+0000",
                    "updated": "2017-10-24T17:11:52.040+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217785",
                    "id": "16217785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689: [Python] Allow user to request no data copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146705787\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1542,26 +1566,19 @@ class ArrowDeserializer {\n   }\n \n   Status Visit(const DictionaryType& type) {\n+    if (options_.zero_copy_only) {\n+      return Status::CopyRequired(\"DictionaryType needs copies\");\n+    }\n+\n     auto block = std::make_shared<CategoricalBlock>(options_, nullptr, col_->length());\n     RETURN_NOT_OK(block->Write(col_, 0, 0));\n \n-    auto dict_type = static_cast<const DictionaryType*>(col_->type().get());\n-\n     PyAcquireGIL lock;\n     result_ = PyDict_New();\n     RETURN_IF_PYERROR();\n \n-    PyObject* dictionary;\n-\n-    // Release GIL before calling ConvertArrayToPandas, will be reacquired\n-    // there if needed\n-    lock.release();\n-    RETURN_NOT_OK(\n-        ConvertArrayToPandas(options_, dict_type->dictionary(), nullptr, &dictionary));\n-    lock.acquire();\n-\n \n Review comment:\n   It's already been run by [this call](https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/arrow_to_pandas.cc#L1546) to Write [here](https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/arrow_to_pandas.cc#L1017-L1020) - so this change just reuses the save dictionary instead of building it again.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T22:05:17.781+0000",
                    "updated": "2017-10-24T22:05:17.781+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217813",
                    "id": "16217813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689: [Python] Allow user to request no data copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146709688\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -212,6 +212,18 @@ def test_float_no_nulls(self):\n         schema = pa.schema(fields)\n         self._check_pandas_roundtrip(df, expected_schema=schema)\n \n+    def test_zero_copy_success(self):\n+        result = pa.array([0, 1, 2]).to_pandas(zero_copy_only=True)\n+        npt.assert_array_equal(result, [0, 1, 2])\n+\n+    def test_zero_copy_failure_on_object_types(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_when_nulls(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array([0, 1, None]).to_pandas(zero_copy_only=True)\n \n Review comment:\n   Added!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T22:25:49.849+0000",
                    "updated": "2017-10-24T22:25:49.849+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217814",
                    "id": "16217814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689: [Python] Allow user to request no data copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146709719\n \n \n\n ##########\n File path: cpp/src/arrow/status.h\n ##########\n @@ -95,7 +95,8 @@ enum class StatusCode : char {\n   PythonError = 12,\n   PlasmaObjectExists = 20,\n   PlasmaObjectNonexistent = 21,\n-  PlasmaStoreFull = 22\n+  PlasmaStoreFull = 22,\n+  CopyRequired = 23\n \n Review comment:\n   Done!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T22:25:59.162+0000",
                    "updated": "2017-10-24T22:25:59.162+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16217816",
                    "id": "16217816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "njwhite commented on a change in pull request #1233: ARROW-1689: [Python] Allow user to request no data copies\nURL: https://github.com/apache/arrow/pull/1233#discussion_r146709736\n \n \n\n ##########\n File path: cpp/src/arrow/python/python-test.cc\n ##########\n @@ -86,7 +86,7 @@ TEST(PandasConversionTest, TestObjectBlockWriteFails) {\n \n   PyObject* out;\n   Py_BEGIN_ALLOW_THREADS;\n-  PandasOptions options;\n+  PandasOptions options = {false, false};\n \n Review comment:\n   Done!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-24T22:26:05.095+0000",
                    "updated": "2017-10-24T22:26:05.095+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16220457",
                    "id": "16220457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1233: ARROW-1689: [Python] Allow user to request no data copies\nURL: https://github.com/apache/arrow/pull/1233\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 88b594cac..0c2e0ad85 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -1040,6 +1040,8 @@ class CategoricalBlock : public PandasBlock {\n     return Status::OK();\n   }\n \n+  PyObject* dictionary() const { return dictionary_.obj(); }\n+\n  protected:\n   MemoryPool* pool_;\n   OwnedRef dictionary_;\n@@ -1399,6 +1401,11 @@ class ArrowDeserializer {\n \n     if (data_.num_chunks() == 1 && data_.null_count() == 0 && py_ref_ != nullptr) {\n       return ConvertValuesZeroCopy<TYPE>(options_, npy_type, data_.chunk(0));\n+    } else if (options_.zero_copy_only) {\n+      std::stringstream ss;\n+      ss << \"Needed to copy \" << data_.num_chunks() << \" chunks with \"\n+         << data_.null_count() << \" nulls, but zero_copy_only was True\";\n+      return Status::Invalid(ss.str());\n     }\n \n     RETURN_NOT_OK(AllocateOutput(npy_type));\n@@ -1413,6 +1420,10 @@ class ArrowDeserializer {\n                               std::is_base_of<TimestampType, Type>::value,\n                           Status>::type\n   Visit(const Type& type) {\n+    if (options_.zero_copy_only) {\n+      return Status::Invalid(\"Copy Needed, but zero_copy_only was True\");\n+    }\n+\n     constexpr int TYPE = Type::type_id;\n     using traits = internal::arrow_traits<TYPE>;\n     using c_type = typename Type::c_type;\n@@ -1453,6 +1464,11 @@ class ArrowDeserializer {\n \n     if (data_.num_chunks() == 1 && data_.null_count() == 0 && py_ref_ != nullptr) {\n       return ConvertValuesZeroCopy<TYPE>(options_, traits::npy_type, data_.chunk(0));\n+    } else if (options_.zero_copy_only) {\n+      std::stringstream ss;\n+      ss << \"Needed to copy \" << data_.num_chunks() << \" chunks with \"\n+         << data_.null_count() << \" nulls, but zero_copy_only was True\";\n+      return Status::Invalid(ss.str());\n     }\n \n     if (data_.null_count() > 0) {\n@@ -1470,6 +1486,9 @@ class ArrowDeserializer {\n \n   template <typename FUNCTOR>\n   inline Status VisitObjects(FUNCTOR func) {\n+    if (options_.zero_copy_only) {\n+      return Status::Invalid(\"Object types need copies, but zero_copy_only was True\");\n+    }\n     RETURN_NOT_OK(AllocateOutput(NPY_OBJECT));\n     auto out_values = reinterpret_cast<PyObject**>(PyArray_DATA(arr_));\n     return func(options_, data_, out_values);\n@@ -1499,7 +1518,9 @@ class ArrowDeserializer {\n \n   // Boolean specialization\n   Status Visit(const BooleanType& type) {\n-    if (data_.null_count() > 0) {\n+    if (options_.zero_copy_only) {\n+      return Status::Invalid(\"BooleanType needs copies, but zero_copy_only was True\");\n+    } else if (data_.null_count() > 0) {\n       return VisitObjects(ConvertBooleanWithNulls);\n     } else {\n       RETURN_NOT_OK(AllocateOutput(internal::arrow_traits<Type::BOOL>::npy_type));\n@@ -1510,6 +1531,9 @@ class ArrowDeserializer {\n   }\n \n   Status Visit(const ListType& type) {\n+    if (options_.zero_copy_only) {\n+      return Status::Invalid(\"ListType needs copies, but zero_copy_only was True\");\n+    }\n #define CONVERTVALUES_LISTSLIKE_CASE(ArrowType, ArrowEnum) \\\n   case Type::ArrowEnum:                                    \\\n     return ConvertListsLike<ArrowType>(options_, col_, out_values);\n@@ -1542,26 +1566,19 @@ class ArrowDeserializer {\n   }\n \n   Status Visit(const DictionaryType& type) {\n+    if (options_.zero_copy_only) {\n+      return Status::Invalid(\"DictionaryType needs copies, but zero_copy_only was True\");\n+    }\n+\n     auto block = std::make_shared<CategoricalBlock>(options_, nullptr, col_->length());\n     RETURN_NOT_OK(block->Write(col_, 0, 0));\n \n-    auto dict_type = static_cast<const DictionaryType*>(col_->type().get());\n-\n     PyAcquireGIL lock;\n     result_ = PyDict_New();\n     RETURN_IF_PYERROR();\n \n-    PyObject* dictionary;\n-\n-    // Release GIL before calling ConvertArrayToPandas, will be reacquired\n-    // there if needed\n-    lock.release();\n-    RETURN_NOT_OK(\n-        ConvertArrayToPandas(options_, dict_type->dictionary(), nullptr, &dictionary));\n-    lock.acquire();\n-\n     PyDict_SetItemString(result_, \"indices\", block->block_arr());\n-    PyDict_SetItemString(result_, \"dictionary\", dictionary);\n+    PyDict_SetItemString(result_, \"dictionary\", block->dictionary());\n \n     return Status::OK();\n   }\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.h b/cpp/src/arrow/python/arrow_to_pandas.h\nindex 1d716a5c9..1e4864637 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.h\n+++ b/cpp/src/arrow/python/arrow_to_pandas.h\n@@ -41,6 +41,9 @@ namespace py {\n \n struct PandasOptions {\n   bool strings_to_categorical;\n+  bool zero_copy_only;\n+\n+  PandasOptions() : strings_to_categorical(false), zero_copy_only(false) {}\n };\n \n ARROW_EXPORT\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex c5f28a951..ddf7a7810 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -373,7 +373,7 @@ cdef class Array:\n \n         return pyarrow_wrap_array(result)\n \n-    def to_pandas(self, c_bool strings_to_categorical=False):\n+    def to_pandas(self, c_bool strings_to_categorical=False, zero_copy_only=False):\n         \"\"\"\n         Convert to an array object suitable for use in pandas\n \n@@ -381,6 +381,9 @@ cdef class Array:\n         ----------\n         strings_to_categorical : boolean, default False\n             Encode string (UTF8) and binary types to pandas.Categorical\n+        zero_copy_only : boolean, default False\n+            Raise an ArrowException if this function call would require copying\n+            the underlying data\n \n         See also\n         --------\n@@ -392,7 +395,9 @@ cdef class Array:\n             PyObject* out\n             PandasOptions options\n \n-        options = PandasOptions(strings_to_categorical=strings_to_categorical)\n+        options = PandasOptions(\n+            strings_to_categorical=strings_to_categorical,\n+            zero_copy_only=zero_copy_only)\n         with nogil:\n             check_status(ConvertArrayToPandas(options, self.sp_array,\n                                               self, &out))\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 60aa4d694..58dec7367 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -812,6 +812,7 @@ cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n \n     cdef struct PandasOptions:\n         c_bool strings_to_categorical\n+        c_bool zero_copy_only\n \n cdef extern from \"arrow/python/api.h\" namespace 'arrow::py' nogil:\n \ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex dd42cf231..d4bd4dee0 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -159,7 +159,7 @@ cdef class Column:\n         sp_column.reset(new CColumn(boxed_field.sp_field, arr.sp_array))\n         return pyarrow_wrap_column(sp_column)\n \n-    def to_pandas(self, strings_to_categorical=False):\n+    def to_pandas(self, strings_to_categorical=False, zero_copy_only=False):\n         \"\"\"\n         Convert the arrow::Column to a pandas.Series\n \n@@ -171,7 +171,9 @@ cdef class Column:\n             PyObject* out\n             PandasOptions options\n \n-        options = PandasOptions(strings_to_categorical=strings_to_categorical)\n+        options = PandasOptions(\n+            strings_to_categorical=strings_to_categorical,\n+            zero_copy_only=zero_copy_only)\n \n         with nogil:\n             check_status(libarrow.ConvertColumnToPandas(options,\n@@ -853,7 +855,7 @@ cdef class Table:\n         return pyarrow_wrap_table(c_table)\n \n     def to_pandas(self, nthreads=None, strings_to_categorical=False,\n-                  memory_pool=None):\n+                  memory_pool=None, zero_copy_only=False):\n         \"\"\"\n         Convert the arrow::Table to a pandas DataFrame\n \n@@ -867,6 +869,9 @@ cdef class Table:\n             Encode string (UTF8) and binary types to pandas.Categorical\n         memory_pool: MemoryPool, optional\n             Specific memory pool to use to allocate casted columns\n+        zero_copy_only : boolean, default False\n+            Raise an ArrowException if this function call would require copying\n+            the underlying data\n \n         Returns\n         -------\n@@ -874,7 +879,9 @@ cdef class Table:\n         \"\"\"\n         cdef:\n             PandasOptions options\n-        options = PandasOptions(strings_to_categorical=strings_to_categorical)\n+        options = PandasOptions(\n+            strings_to_categorical=strings_to_categorical,\n+            zero_copy_only=zero_copy_only)\n         self._check_nullptr()\n         if nthreads is None:\n             nthreads = cpu_count()\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 41ad20102..9abba646a 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -212,6 +212,46 @@ def test_float_no_nulls(self):\n         schema = pa.schema(fields)\n         self._check_pandas_roundtrip(df, expected_schema=schema)\n \n+    def test_zero_copy_success(self):\n+        result = pa.array([0, 1, 2]).to_pandas(zero_copy_only=True)\n+        npt.assert_array_equal(result, [0, 1, 2])\n+\n+    def test_zero_copy_failure_on_object_types(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_with_int_when_nulls(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array([0, 1, None]).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_with_float_when_nulls(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array([0.0, 1.0, None]).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_on_bool_types(self):\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array([True, False]).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_on_list_types(self):\n+        arr = np.array([[1, 2], [8, 9]], dtype=object)\n+\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array(arr).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_failure_on_timestamp_types(self):\n+        arr = np.array(['2007-07-13'], dtype='datetime64[ns]')\n+\n+        with self.assertRaises(pa.ArrowException):\n+            pa.array(arr).to_pandas(zero_copy_only=True)\n+\n+    def test_zero_copy_dictionaries(self):\n+        arr = pa.DictionaryArray.from_arrays(\n+            np.array([0, 0]),\n+            np.array(['A']))\n+\n+        with self.assertRaises(pa.ArrowException):\n+            arr.to_pandas(zero_copy_only=True)\n+\n     def test_float_nulls(self):\n         num_values = 100\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T13:58:57.676+0000",
                    "updated": "2017-10-26T13:58:57.676+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16220458",
                    "id": "16220458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1233\n[https://github.com/apache/arrow/pull/1233]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-26T13:58:58.082+0000",
                    "updated": "2017-10-26T13:58:58.082+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16220736",
                    "id": "16220736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1237: ARROW-1689: [Python] Implement CategoricalBlock Index Zero-Copy\nURL: https://github.com/apache/arrow/pull/1237#issuecomment-339725510\n \n \n   @njwhite Thank you very much!\r\n   @wesm Now reflected the master branch change into this PR!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T16:38:25.806+0000",
                    "updated": "2017-10-26T16:38:25.806+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16221007",
                    "id": "16221007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1237: ARROW-1689: [Python] Implement CategoricalBlock Index Zero-Copy\nURL: https://github.com/apache/arrow/pull/1237#issuecomment-339763811\n \n \n   Rebased and fixed flakes. The test case is failing, I will leave you to fix\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T18:53:08.787+0000",
                    "updated": "2017-10-26T18:53:08.787+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16223121",
                    "id": "16223121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1237: ARROW-1689: [Python] Implement zero-copy conversions for DictionaryArray\nURL: https://github.com/apache/arrow/pull/1237#issuecomment-340129218\n \n \n   @wesm Wow! Thanks for your good idea! I didn't get such idea!\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-28T01:11:44.675+0000",
                    "updated": "2017-10-28T01:11:44.675+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16223122",
                    "id": "16223122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1237: ARROW-1689: [Python] Implement zero-copy conversions for DictionaryArray\nURL: https://github.com/apache/arrow/pull/1237#issuecomment-340129218\n \n \n   @wesm Wow! Thanks for your great idea! I didn't get such idea!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-28T01:12:03.744+0000",
                    "updated": "2017-10-28T01:12:03.744+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110607/comment/16223448",
                    "id": "16223448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1237: ARROW-1689: [Python] Implement zero-copy conversions for DictionaryArray\nURL: https://github.com/apache/arrow/pull/1237\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 0c2e0ad85..7f1591213 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -109,6 +109,20 @@ static inline bool ListTypeSupported(const DataType& type) {\n   }\n   return false;\n }\n+// ----------------------------------------------------------------------\n+// PyCapsule code for setting ndarray base to reference C++ object\n+\n+struct ArrowCapsule {\n+  std::shared_ptr<Array> array;\n+};\n+\n+namespace {\n+\n+void ArrowCapsule_Destructor(PyObject* capsule) {\n+  delete reinterpret_cast<ArrowCapsule*>(PyCapsule_GetPointer(capsule, \"arrow\"));\n+}\n+\n+}  // namespace\n \n // ----------------------------------------------------------------------\n // pandas 0.x DataFrame conversion internals\n@@ -957,23 +971,40 @@ class CategoricalBlock : public PandasBlock {\n     using TRAITS = internal::arrow_traits<ARROW_INDEX_TYPE>;\n     using T = typename TRAITS::T;\n     constexpr int npy_type = TRAITS::npy_type;\n-    RETURN_NOT_OK(AllocateNDArray(npy_type, 1));\n-\n-    // No relative placement offset because a single column\n-    T* out_values = reinterpret_cast<T*>(block_data_);\n \n     const ChunkedArray& data = *col->data().get();\n \n-    for (int c = 0; c < data.num_chunks(); c++) {\n-      const std::shared_ptr<Array> arr = data.chunk(c);\n-      const auto& dict_arr = static_cast<const DictionaryArray&>(*arr);\n+    // Sniff the first chunk\n+    const std::shared_ptr<Array> arr_first = data.chunk(0);\n+    const auto& dict_arr_first = static_cast<const DictionaryArray&>(*arr_first);\n+    const auto& indices_first =\n+        static_cast<const PrimitiveArray&>(*dict_arr_first.indices());\n+\n+    if (data.num_chunks() == 1 && indices_first.null_count() == 0) {\n+      RETURN_NOT_OK(AllocateNDArrayFromIndices<T>(npy_type, indices_first));\n+    } else {\n+      if (options_.zero_copy_only) {\n+        std::stringstream ss;\n+        ss << \"Needed to copy \" << data.num_chunks() << \" chunks with \"\n+           << indices_first.null_count() << \" indices nulls, but zero_copy_only was True\";\n+        return Status::Invalid(ss.str());\n+      }\n+      RETURN_NOT_OK(AllocateNDArray(npy_type, 1));\n+\n+      // No relative placement offset because a single column\n+      T* out_values = reinterpret_cast<T*>(block_data_);\n \n-      const auto& indices = static_cast<const PrimitiveArray&>(*dict_arr.indices());\n-      auto in_values = reinterpret_cast<const T*>(indices.raw_values());\n+      for (int c = 0; c < data.num_chunks(); c++) {\n+        const std::shared_ptr<Array> arr = data.chunk(c);\n+        const auto& dict_arr = static_cast<const DictionaryArray&>(*arr);\n \n-      // Null is -1 in CategoricalBlock\n-      for (int i = 0; i < arr->length(); ++i) {\n-        *out_values++ = indices.IsNull(i) ? -1 : in_values[i];\n+        const auto& indices = static_cast<const PrimitiveArray&>(*dict_arr.indices());\n+        auto in_values = reinterpret_cast<const T*>(indices.raw_values());\n+\n+        // Null is -1 in CategoricalBlock\n+        for (int i = 0; i < arr->length(); ++i) {\n+          *out_values++ = indices.IsNull(i) ? -1 : in_values[i];\n+        }\n       }\n     }\n \n@@ -1043,6 +1074,43 @@ class CategoricalBlock : public PandasBlock {\n   PyObject* dictionary() const { return dictionary_.obj(); }\n \n  protected:\n+  template <typename T>\n+  Status AllocateNDArrayFromIndices(int npy_type, const PrimitiveArray& indices) {\n+    npy_intp block_dims[1] = {num_rows_};\n+\n+    auto in_values = reinterpret_cast<const T*>(indices.raw_values());\n+    void* data = const_cast<T*>(in_values);\n+\n+    PyAcquireGIL lock;\n+\n+    PyArray_Descr* descr = GetSafeNumPyDtype(npy_type);\n+    if (descr == nullptr) {\n+      // Error occurred, trust error state is set\n+      return Status::OK();\n+    }\n+\n+    PyObject* block_arr = PyArray_NewFromDescr(&PyArray_Type, descr, 1, block_dims,\n+                                               nullptr, data, NPY_ARRAY_CARRAY, nullptr);\n+\n+    npy_intp placement_dims[1] = {num_columns_};\n+    PyObject* placement_arr = PyArray_SimpleNew(1, placement_dims, NPY_INT64);\n+    if (placement_arr == NULL) {\n+      // TODO(wesm): propagating Python exception\n+      return Status::OK();\n+    }\n+\n+    block_arr_.reset(block_arr);\n+    placement_arr_.reset(placement_arr);\n+\n+    block_data_ = reinterpret_cast<uint8_t*>(\n+        PyArray_DATA(reinterpret_cast<PyArrayObject*>(block_arr)));\n+\n+    placement_data_ = reinterpret_cast<int64_t*>(\n+        PyArray_DATA(reinterpret_cast<PyArrayObject*>(placement_arr)));\n+\n+    return Status::OK();\n+  }\n+\n   MemoryPool* pool_;\n   OwnedRef dictionary_;\n   bool ordered_;\n@@ -1369,12 +1437,26 @@ class ArrowDeserializer {\n       return Status::OK();\n     }\n \n-    if (PyArray_SetBaseObject(arr_, py_ref_) == -1) {\n+    PyObject* base;\n+    if (py_ref_ == nullptr) {\n+      ArrowCapsule* capsule = new ArrowCapsule;\n+      capsule->array = arr;\n+      base = PyCapsule_New(reinterpret_cast<void*>(capsule), \"arrow\",\n+                           &ArrowCapsule_Destructor);\n+      if (base == nullptr) {\n+        delete capsule;\n+        RETURN_IF_PYERROR();\n+      }\n+    } else {\n+      base = py_ref_;\n+    }\n+\n+    if (PyArray_SetBaseObject(arr_, base) == -1) {\n       // Error occurred, trust that SetBaseObject set the error state\n       return Status::OK();\n     } else {\n-      // PyArray_SetBaseObject steals our reference to py_ref_\n-      Py_INCREF(py_ref_);\n+      // PyArray_SetBaseObject steals our reference to base\n+      Py_INCREF(base);\n     }\n \n     // Arrow data is immutable.\n@@ -1399,7 +1481,7 @@ class ArrowDeserializer {\n     typedef typename traits::T T;\n     int npy_type = traits::npy_type;\n \n-    if (data_.num_chunks() == 1 && data_.null_count() == 0 && py_ref_ != nullptr) {\n+    if (data_.num_chunks() == 1 && data_.null_count() == 0) {\n       return ConvertValuesZeroCopy<TYPE>(options_, npy_type, data_.chunk(0));\n     } else if (options_.zero_copy_only) {\n       std::stringstream ss;\n@@ -1462,7 +1544,7 @@ class ArrowDeserializer {\n \n     typedef typename traits::T T;\n \n-    if (data_.num_chunks() == 1 && data_.null_count() == 0 && py_ref_ != nullptr) {\n+    if (data_.num_chunks() == 1 && data_.null_count() == 0) {\n       return ConvertValuesZeroCopy<TYPE>(options_, traits::npy_type, data_.chunk(0));\n     } else if (options_.zero_copy_only) {\n       std::stringstream ss;\n@@ -1566,10 +1648,6 @@ class ArrowDeserializer {\n   }\n \n   Status Visit(const DictionaryType& type) {\n-    if (options_.zero_copy_only) {\n-      return Status::Invalid(\"DictionaryType needs copies, but zero_copy_only was True\");\n-    }\n-\n     auto block = std::make_shared<CategoricalBlock>(options_, nullptr, col_->length());\n     RETURN_NOT_OK(block->Write(col_, 0, 0));\n \ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 8360dae54..d00bf1b28 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -217,6 +217,17 @@ def test_zero_copy_success(self):\n         result = pa.array([0, 1, 2]).to_pandas(zero_copy_only=True)\n         npt.assert_array_equal(result, [0, 1, 2])\n \n+    def test_zero_copy_dictionaries(self):\n+        arr = pa.DictionaryArray.from_arrays(\n+            np.array([0, 0]),\n+            np.array([5]))\n+\n+        result = arr.to_pandas(zero_copy_only=True)\n+        values = pd.Categorical([5, 5])\n+\n+        tm.assert_series_equal(pd.Series(result), pd.Series(values),\n+                               check_names=False)\n+\n     def test_zero_copy_failure_on_object_types(self):\n         with pytest.raises(pa.ArrowException):\n             pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\n@@ -245,14 +256,6 @@ def test_zero_copy_failure_on_timestamp_types(self):\n         with pytest.raises(pa.ArrowException):\n             pa.array(arr).to_pandas(zero_copy_only=True)\n \n-    def test_zero_copy_dictionaries(self):\n-        arr = pa.DictionaryArray.from_arrays(\n-            np.array([0, 0]),\n-            np.array(['A']))\n-\n-        with pytest.raises(pa.ArrowException):\n-            arr.to_pandas(zero_copy_only=True)\n-\n     def test_float_nulls(self):\n         num_values = 100\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-28T11:54:21.222+0000",
                    "updated": "2017-10-28T11:54:21.222+0000"
                }
            ],
            "maxResults": 26,
            "total": 26,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lgcn:",
        "customfield_12314139": null
    }
}