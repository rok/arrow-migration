{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13485493",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493",
    "key": "ARROW-17980",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rtpsw",
            "name": "rtpsw",
            "key": "JIRAUSER284707",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER284707&avatarId=49322",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER284707&avatarId=49322",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER284707&avatarId=49322",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER284707&avatarId=49322"
            },
            "displayName": "Yaron Gvili",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 34800,
            "total": 34800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17980/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 58,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw opened a new pull request, #14385:\nURL: https://github.com/apache/arrow/pull/14385\n\n   See https://issues.apache.org/jira/browse/ARROW-17980\n\n\n",
                    "created": "2022-10-12T12:46:52.002+0000",
                    "updated": "2022-10-12T12:46:52.002+0000",
                    "started": "2022-10-12T12:46:52.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816143",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276133886\n\n   cc @icexelloss @westonpace \n\n\n",
                    "created": "2022-10-12T12:56:41.915+0000",
                    "updated": "2022-10-12T12:56:41.915+0000",
                    "started": "2022-10-12T12:56:41.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816146",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r993443410\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -3187,5 +3198,164 @@ TEST(Substrait, IsthmusPlan) {\n                        *compute::default_exec_context(), buf, {}, conversion_options);\n }\n \n+TEST(Substrait, PlanWithExtension) {\n+  // This demos an extension relation\n+  std::string substrait_json = R\"({\n+    \"extensionUris\": [],\n+    \"extensions\": [],\n+    \"relations\": [{\n+      \"root\": {\n+        \"input\": {\n+          \"extension_multi\": {\n+            \"common\": {\n+              \"emit\": {\n+                \"outputMapping\": [0, 1, 2, 3]\n+              }\n+            },\n+            \"inputs\": [\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value1\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T1\"]\n+                  }\n+                }\n+              },\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value2\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T2\"]\n+                  }\n+                }\n+              }\n+            ],\n+            \"detail\": {\n+              \"@type\": \"/arrow.substrait.AsOfJoinRel\",\n+              \"on\": {\n+                \"selection\": {\n+                  \"directReference\": {\n+                    \"structField\": {\n+                      \"field\": 0,\n+                    }\n+                  },\n+                  \"rootReference\": {}\n+                }\n+              },\n+              \"by\": [\n+                {\n+                  \"selection\": {\n+                    \"directReference\": {\n+                      \"structField\": {\n\nReview Comment:\n   What does the \"structField\" mean here?\n\n\n\n",
                    "created": "2022-10-12T13:12:03.162+0000",
                    "updated": "2022-10-12T13:12:03.162+0000",
                    "started": "2022-10-12T13:12:03.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816156",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r993453755\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -3187,5 +3198,164 @@ TEST(Substrait, IsthmusPlan) {\n                        *compute::default_exec_context(), buf, {}, conversion_options);\n }\n \n+TEST(Substrait, PlanWithExtension) {\n+  // This demos an extension relation\n+  std::string substrait_json = R\"({\n+    \"extensionUris\": [],\n+    \"extensions\": [],\n+    \"relations\": [{\n+      \"root\": {\n+        \"input\": {\n+          \"extension_multi\": {\n+            \"common\": {\n+              \"emit\": {\n+                \"outputMapping\": [0, 1, 2, 3]\n+              }\n+            },\n+            \"inputs\": [\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value1\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T1\"]\n+                  }\n+                }\n+              },\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value2\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T2\"]\n+                  }\n+                }\n+              }\n+            ],\n+            \"detail\": {\n+              \"@type\": \"/arrow.substrait.AsOfJoinRel\",\n+              \"on\": {\n+                \"selection\": {\n+                  \"directReference\": {\n+                    \"structField\": {\n+                      \"field\": 0,\n+                    }\n+                  },\n+                  \"rootReference\": {}\n+                }\n+              },\n+              \"by\": [\n+                {\n+                  \"selection\": {\n+                    \"directReference\": {\n+                      \"structField\": {\n\nReview Comment:\n   It means access to a field by index. It leads Arrow Substrait to create a `FieldRef` with the field index given inside.\n\n\n\n",
                    "created": "2022-10-12T13:21:09.007+0000",
                    "updated": "2022-10-12T13:21:09.007+0000",
                    "started": "2022-10-12T13:21:09.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816157",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276180575\n\n   Note that this PR includes code from https://github.com/apache/arrow/pull/14386 which is currently pending.\n\n\n",
                    "created": "2022-10-12T13:32:05.902+0000",
                    "updated": "2022-10-12T13:32:05.902+0000",
                    "started": "2022-10-12T13:32:05.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816162",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276205243\n\n   @rtpsw Why do we need #14386 for this? Can we separate out these two changes?\n\n\n",
                    "created": "2022-10-12T13:50:12.090+0000",
                    "updated": "2022-10-12T13:50:12.090+0000",
                    "started": "2022-10-12T13:50:12.090+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816171",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276209689\n\n   @westonpace The changes here depends on your local change in https://github.com/westonpace/arrow/tree/experiment/substrait-extension\r\n   \r\n   How do you want to proceed here? We can either \r\n   (1) merge changes in experiment/substrait-extension and rebase this PR\r\n   (2) combine changes in experiment/substrait-extension and the asof join message together in this PR and review together\r\n    \n\n\n",
                    "created": "2022-10-12T13:52:53.504+0000",
                    "updated": "2022-10-12T13:52:53.504+0000",
                    "started": "2022-10-12T13:52:53.503+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816173",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276213240\n\n   > @rtpsw Why do we need #14386 for this? Can we separate out these two changes?\r\n   \r\n   Technically, we don't, or no longer do. I used #14386 during test cases development of this PR. If #14386 will be rejected, we could remove its code here too. Otherwise, the code can stay here and will merge cleanly with #14386.\n\n\n",
                    "created": "2022-10-12T13:54:54.554+0000",
                    "updated": "2022-10-12T13:54:54.554+0000",
                    "started": "2022-10-12T13:54:54.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816179",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276225114\n\n   > @westonpace The changes here depends on your local change in https://github.com/westonpace/arrow/tree/experiment/substrait-extension\r\n   \r\n   The code here uses most of Weston's code, except for mostly that the \"dummy\" `DelayRel` was replaced with `AsOfJoinRel` (including corresponding test code) and that the code was refactored a bit. So, I think the code here should go in without a merge or a rebase.\n\n\n",
                    "created": "2022-10-12T13:58:38.139+0000",
                    "updated": "2022-10-12T13:58:38.139+0000",
                    "started": "2022-10-12T13:58:38.138+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816182",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1276336725\n\n   https://issues.apache.org/jira/browse/ARROW-17980\n\n\n",
                    "created": "2022-10-12T15:07:50.679+0000",
                    "updated": "2022-10-12T15:07:50.679+0000",
                    "started": "2022-10-12T15:07:50.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816225",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#issuecomment-1277281595\n\n   @westonpace, any idea why some jobs, like [this one](https://github.com/apache/arrow/actions/runs/3240443758/jobs/5311073777), failed? It seems to be complaining about missing proto classes; I don't know why the proto classes would get built in some jobs and not in others.\n\n\n",
                    "created": "2022-10-13T09:06:06.169+0000",
                    "updated": "2022-10-13T09:06:06.169+0000",
                    "started": "2022-10-13T09:06:06.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816487",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994574143\n\n\n##########\ncpp/proto/substrait/extension_rels.proto:\n##########\n@@ -0,0 +1,32 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+syntax = \"proto3\";\n+\n+package arrow.substrait;\n+\n+import \"substrait/algebra.proto\";\n+\n+option csharp_namespace = \"Arrow.Substrait\";\n+option go_package = \"github.com/apache/arrow/substrait\";\n+option java_multiple_files = true;\n+option java_package = \"io.arrow.substrait\";\n+\n+message AsOfJoinRel {\n+  .substrait.Expression on = 1;\n\nReview Comment:\n   This requires all the `on` column must have the same index for all tables?\n\n\n\n",
                    "created": "2022-10-13T12:23:53.198+0000",
                    "updated": "2022-10-13T12:23:53.198+0000",
                    "started": "2022-10-13T12:23:53.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816565",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994575138\n\n\n##########\ncpp/src/arrow/compare.cc:\n##########\n@@ -305,6 +305,11 @@ class RangeDataEqualsImpl {\n   Status Visit(const StructType& type) {\n     const int32_t num_fields = type.num_fields();\n \n+    if (left_.child_data.size() != static_cast<size_t>(num_fields) ||\n\nReview Comment:\n   Can we please separate out orthogonal changes?\n\n\n\n",
                    "created": "2022-10-13T12:24:58.299+0000",
                    "updated": "2022-10-13T12:24:58.299+0000",
                    "started": "2022-10-13T12:24:58.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816566",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994575755\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -951,28 +953,27 @@ class AsofJoinNode : public ExecNode {\n   }\n \n   static arrow::Result<std::shared_ptr<Schema>> MakeOutputSchema(\n-      const std::vector<ExecNode*>& inputs,\n+      const std::vector<std::shared_ptr<Schema>> input_schema,\n\nReview Comment:\n   Why this change?\n\n\n\n",
                    "created": "2022-10-13T12:25:33.746+0000",
                    "updated": "2022-10-13T12:25:33.746+0000",
                    "started": "2022-10-13T12:25:33.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816568",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994577692\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -1030,6 +1031,32 @@ class AsofJoinNode : public ExecNode {\n     return match.indices()[0];\n   }\n \n+  static Result<std::vector<col_index_t>> GetIndicesOfOnKey(\n+      const std::vector<std::shared_ptr<Schema>>& input_schema, const FieldRef& on_key) {\n+    size_t n_input = input_schema.size();\n+    std::vector<col_index_t> indices_of_on_key(n_input);\n+    for (size_t i = 0; i < n_input; ++i) {\n+      ARROW_ASSIGN_OR_RAISE(indices_of_on_key[i],\n+                            FindColIndex(*input_schema[i], on_key, \"on\"));\n\nReview Comment:\n   I thought substrait/FieldRef is index based already - why do we need to find index here?\n\n\n\n",
                    "created": "2022-10-13T12:27:33.617+0000",
                    "updated": "2022-10-13T12:27:33.617+0000",
                    "started": "2022-10-13T12:27:33.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816571",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994578624\n\n\n##########\ncpp/proto/substrait/extension_rels.proto:\n##########\n@@ -0,0 +1,32 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+syntax = \"proto3\";\n+\n+package arrow.substrait;\n+\n+import \"substrait/algebra.proto\";\n+\n+option csharp_namespace = \"Arrow.Substrait\";\n+option go_package = \"github.com/apache/arrow/substrait\";\n+option java_multiple_files = true;\n+option java_package = \"io.arrow.substrait\";\n+\n+message AsOfJoinRel {\n+  .substrait.Expression on = 1;\n\nReview Comment:\n   The proto requires a common expression, which could be a name rather than an index. OTOH, the Arrow Substrait code in this PR only deals with a field index expression; this can be extended, if desired.\n\n\n\n##########\ncpp/src/arrow/compare.cc:\n##########\n@@ -305,6 +305,11 @@ class RangeDataEqualsImpl {\n   Status Visit(const StructType& type) {\n     const int32_t num_fields = type.num_fields();\n \n+    if (left_.child_data.size() != static_cast<size_t>(num_fields) ||\n\nReview Comment:\n   Will do.\n\n\n\n",
                    "created": "2022-10-13T12:28:28.696+0000",
                    "updated": "2022-10-13T12:28:28.696+0000",
                    "started": "2022-10-13T12:28:28.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816573",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994580310\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -951,28 +953,27 @@ class AsofJoinNode : public ExecNode {\n   }\n \n   static arrow::Result<std::shared_ptr<Schema>> MakeOutputSchema(\n-      const std::vector<ExecNode*>& inputs,\n+      const std::vector<std::shared_ptr<Schema>> input_schema,\n\nReview Comment:\n   This allows exposing `MakeOutputSchema` to a caller that has a schema rather than an `ExecNode`, as is done in the tester.\n\n\n\n",
                    "created": "2022-10-13T12:30:08.788+0000",
                    "updated": "2022-10-13T12:30:08.788+0000",
                    "started": "2022-10-13T12:30:08.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816574",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994578624\n\n\n##########\ncpp/proto/substrait/extension_rels.proto:\n##########\n@@ -0,0 +1,32 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+syntax = \"proto3\";\n+\n+package arrow.substrait;\n+\n+import \"substrait/algebra.proto\";\n+\n+option csharp_namespace = \"Arrow.Substrait\";\n+option go_package = \"github.com/apache/arrow/substrait\";\n+option java_multiple_files = true;\n+option java_package = \"io.arrow.substrait\";\n+\n+message AsOfJoinRel {\n+  .substrait.Expression on = 1;\n\nReview Comment:\n   The proto requires a common expression, which could be a name rather than an index. OTOH, the current Arrow Substrait code in this PR only deals with a field index expression; this can be extended, if desired.\n\n\n\n",
                    "created": "2022-10-13T12:31:43.946+0000",
                    "updated": "2022-10-13T12:31:43.946+0000",
                    "started": "2022-10-13T12:31:43.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816576",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rtpsw commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994590711\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -1030,6 +1031,32 @@ class AsofJoinNode : public ExecNode {\n     return match.indices()[0];\n   }\n \n+  static Result<std::vector<col_index_t>> GetIndicesOfOnKey(\n+      const std::vector<std::shared_ptr<Schema>>& input_schema, const FieldRef& on_key) {\n+    size_t n_input = input_schema.size();\n+    std::vector<col_index_t> indices_of_on_key(n_input);\n+    for (size_t i = 0; i < n_input; ++i) {\n+      ARROW_ASSIGN_OR_RAISE(indices_of_on_key[i],\n+                            FindColIndex(*input_schema[i], on_key, \"on\"));\n\nReview Comment:\n   The proto uses `Expression` to allow for various ways to specify the key; it can be thought of as future-proof. We can choose which of these ways to support in Arrow Substrait in a first version. The code here supports any kind of `FieldRef`, be it named or indexed, that Arrow Substrait may set up. The Arrow Substrait code only supports an indexed `FieldRef` (see [here](https://github.com/apache/arrow/blob/e8d54ea765ae7ba63b8f42c29ec855d656e85dc8/cpp/src/arrow/engine/substrait/expression_internal.cc#L150)), but it can be extended.\n\n\n\n",
                    "created": "2022-10-13T12:40:29.772+0000",
                    "updated": "2022-10-13T12:40:29.772+0000",
                    "started": "2022-10-13T12:40:29.772+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816583",
                    "issueId": "13485493"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13485493/worklog/816639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on code in PR #14385:\nURL: https://github.com/apache/arrow/pull/14385#discussion_r994736304\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -3187,5 +3198,164 @@ TEST(Substrait, IsthmusPlan) {\n                        *compute::default_exec_context(), buf, {}, conversion_options);\n }\n \n+TEST(Substrait, PlanWithExtension) {\n+  // This demos an extension relation\n+  std::string substrait_json = R\"({\n+    \"extensionUris\": [],\n+    \"extensions\": [],\n+    \"relations\": [{\n+      \"root\": {\n+        \"input\": {\n+          \"extension_multi\": {\n+            \"common\": {\n+              \"emit\": {\n+                \"outputMapping\": [0, 1, 2, 3]\n+              }\n+            },\n+            \"inputs\": [\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value1\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T1\"]\n+                  }\n+                }\n+              },\n+              {\n+                \"read\": {\n+                  \"common\": {\n+                    \"direct\": {\n+                    }\n+                  },\n+                  \"baseSchema\": {\n+                    \"names\": [\"time\", \"key\", \"value2\"],\n+                    \"struct\": {\n+                      \"types\": [\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"i32\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        },\n+                        {\n+                          \"fp64\": {\n+                            \"typeVariationReference\": 0,\n+                            \"nullability\": \"NULLABILITY_NULLABLE\"\n+                          }\n+                        }\n+                      ],\n+                      \"typeVariationReference\": 0,\n+                      \"nullability\": \"NULLABILITY_REQUIRED\"\n+                    }\n+                  },\n+                  \"namedTable\": {\n+                    \"names\": [\"T2\"]\n+                  }\n+                }\n+              }\n+            ],\n+            \"detail\": {\n+              \"@type\": \"/arrow.substrait.AsOfJoinRel\",\n+              \"on\": {\n+                \"selection\": {\n+                  \"directReference\": {\n+                    \"structField\": {\n+                      \"field\": 0,\n+                    }\n+                  },\n+                  \"rootReference\": {}\n+                }\n+              },\n+              \"by\": [\n\nReview Comment:\n   Shouldn't this be a list of field refs - one for each table in the join?\n\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -951,28 +953,27 @@ class AsofJoinNode : public ExecNode {\n   }\n \n   static arrow::Result<std::shared_ptr<Schema>> MakeOutputSchema(\n-      const std::vector<ExecNode*>& inputs,\n+      const std::vector<std::shared_ptr<Schema>> input_schema,\n\nReview Comment:\n   kk sounds reasonable \n\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -951,28 +953,27 @@ class AsofJoinNode : public ExecNode {\n   }\n \n   static arrow::Result<std::shared_ptr<Schema>> MakeOutputSchema(\n-      const std::vector<ExecNode*>& inputs,\n+      const std::vector<std::shared_ptr<Schema>> input_schema,\n       const std::vector<col_index_t>& indices_of_on_key,\n       const std::vector<std::vector<col_index_t>>& indices_of_by_key) {\n     std::vector<std::shared_ptr<arrow::Field>> fields;\n \n-    size_t n_by = indices_of_by_key[0].size();\n+    size_t n_by = indices_of_by_key.size() == 0 ? 0 : indices_of_by_key[0].size();\n\nReview Comment:\n   When can `indices_of_by_key.size() == 0` means this is a join without `by` key?\n\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -1030,6 +1031,32 @@ class AsofJoinNode : public ExecNode {\n     return match.indices()[0];\n   }\n \n+  static Result<std::vector<col_index_t>> GetIndicesOfOnKey(\n+      const std::vector<std::shared_ptr<Schema>>& input_schema, const FieldRef& on_key) {\n+    size_t n_input = input_schema.size();\n+    std::vector<col_index_t> indices_of_on_key(n_input);\n+    for (size_t i = 0; i < n_input; ++i) {\n+      ARROW_ASSIGN_OR_RAISE(indices_of_on_key[i],\n+                            FindColIndex(*input_schema[i], on_key, \"on\"));\n\nReview Comment:\n   I am not sure we need this function - in practice this substrait field ref should always be index based..\n\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -1030,6 +1031,32 @@ class AsofJoinNode : public ExecNode {\n     return match.indices()[0];\n   }\n \n+  static Result<std::vector<col_index_t>> GetIndicesOfOnKey(\n+      const std::vector<std::shared_ptr<Schema>>& input_schema, const FieldRef& on_key) {\n+    size_t n_input = input_schema.size();\n+    std::vector<col_index_t> indices_of_on_key(n_input);\n+    for (size_t i = 0; i < n_input; ++i) {\n+      ARROW_ASSIGN_OR_RAISE(indices_of_on_key[i],\n+                            FindColIndex(*input_schema[i], on_key, \"on\"));\n\nReview Comment:\n   I would prefer if we ever support named-based field ref in substrait (which I doubt we will ever do), then let's add this function then\n\n\n\n##########\ncpp/proto/substrait/extension_rels.proto:\n##########\n@@ -0,0 +1,32 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+syntax = \"proto3\";\n+\n+package arrow.substrait;\n+\n+import \"substrait/algebra.proto\";\n+\n+option csharp_namespace = \"Arrow.Substrait\";\n+option go_package = \"github.com/apache/arrow/substrait\";\n+option java_multiple_files = true;\n+option java_package = \"io.arrow.substrait\";\n+\n+message AsOfJoinRel {\n+  .substrait.Expression on = 1;\n\nReview Comment:\n   We are using `StructField` for this so I don't think we can use name for this, right?\r\n   \r\n   I think it probably makes more sense to have this only be a repeated field in case that `on` column doesn't share the same column index for each table\n\n\n\n##########\ncpp/src/arrow/engine/substrait/options.h:\n##########\n@@ -32,7 +36,7 @@ namespace engine {\n /// How strictly to adhere to the input structure when converting between Substrait and\n /// Acero representations of a plan. This allows the user to trade conversion accuracy\n /// for performance and lenience.\n-enum class ConversionStrictness {\n+enum class ARROW_ENGINE_EXPORT ConversionStrictness {\n\nReview Comment:\n   What does the macro `ARROW_ENGINE_EXPORT` do?\n\n\n\n##########\ncpp/src/arrow/engine/substrait/options.cc:\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#include <iostream>\n+\n+#include \"arrow/engine/substrait/options.h\"\n+\n+#include <google/protobuf/util/json_util.h>\n+#include \"arrow/compute/exec/asof_join_node.h\"\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/engine/substrait/expression_internal.h\"\n+#include \"arrow/engine/substrait/relation_internal.h\"\n+#include \"substrait/extension_rels.pb.h\"\n+\n+namespace arrow {\n+namespace engine {\n+\n+class DefaultExtensionProvider : public ExtensionProvider {\n+ public:\n+  Result<DeclarationInfo> MakeRel(const std::vector<DeclarationInfo>& inputs,\n+                                  const google::protobuf::Any& rel,\n+                                  const ExtensionSet& ext_set) override {\n+    if (rel.Is<arrow::substrait::AsOfJoinRel>()) {\n+      arrow::substrait::AsOfJoinRel as_of_join_rel;\n+      rel.UnpackTo(&as_of_join_rel);\n+      return MakeAsOfJoinRel(inputs, as_of_join_rel, ext_set);\n+    }\n+    return Status::NotImplemented(\"Unrecognized extension in Susbstrait plan: \",\n+                                  rel.DebugString());\n+  }\n+\n+ private:\n+  Result<DeclarationInfo> MakeAsOfJoinRel(\n+      const std::vector<DeclarationInfo>& inputs,\n+      const arrow::substrait::AsOfJoinRel& as_of_join_rel, const ExtensionSet& ext_set) {\n+    if (inputs.size() < 2) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode too few input tables: \",\n+                             inputs.size());\n+    }\n+    // on-key\n+    if (!as_of_join_rel.has_on()) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode missing on-key\");\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto on_key_expr, FromProto(as_of_join_rel.on(), ext_set, {}));\n+    if (on_key_expr.field_ref() == NULLPTR) {\n+      return Status::NotImplemented(\"substrait::AsOfJoinNode non-field-ref on-key\");\n+    }\n+    const FieldRef& on_key = *on_key_expr.field_ref();\n+\n+    // by-key\n+    std::vector<FieldRef> by_key;\n\nReview Comment:\n   I think `by_keys` here is a little clear since this is a vector \n\n\n\n##########\ncpp/src/arrow/engine/substrait/options.h:\n##########\n@@ -65,16 +69,27 @@ using NamedTableProvider =\n     std::function<Result<compute::Declaration>(const std::vector<std::string>&)>;\n static NamedTableProvider kDefaultNamedTableProvider;\n \n+class ARROW_ENGINE_EXPORT ExtensionProvider {\n+ public:\n+  static std::shared_ptr<ExtensionProvider> kDefaultExtensionProvider;\n\nReview Comment:\n   Should we define this the same way that `kDefaultNamedTableProvider` is defined? I don't see a reason why those two should be different\n\n\n\n##########\ncpp/src/arrow/compute/exec/asof_join_node.cc:\n##########\n@@ -1030,6 +1031,32 @@ class AsofJoinNode : public ExecNode {\n     return match.indices()[0];\n   }\n \n+  static Result<std::vector<col_index_t>> GetIndicesOfOnKey(\n+      const std::vector<std::shared_ptr<Schema>>& input_schema, const FieldRef& on_key) {\n+    size_t n_input = input_schema.size();\n+    std::vector<col_index_t> indices_of_on_key(n_input);\n+    for (size_t i = 0; i < n_input; ++i) {\n+      ARROW_ASSIGN_OR_RAISE(indices_of_on_key[i],\n+                            FindColIndex(*input_schema[i], on_key, \"on\"));\n+    }\n+    return indices_of_on_key;\n+  }\n+\n+  static Result<std::vector<std::vector<col_index_t>>> GetIndicesOfByKey(\n\nReview Comment:\n   Same comment as `GetIndicesOfByKey`\n\n\n\n##########\ncpp/src/arrow/engine/substrait/options.cc:\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#include <iostream>\n+\n+#include \"arrow/engine/substrait/options.h\"\n+\n+#include <google/protobuf/util/json_util.h>\n+#include \"arrow/compute/exec/asof_join_node.h\"\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/engine/substrait/expression_internal.h\"\n+#include \"arrow/engine/substrait/relation_internal.h\"\n+#include \"substrait/extension_rels.pb.h\"\n+\n+namespace arrow {\n+namespace engine {\n+\n+class DefaultExtensionProvider : public ExtensionProvider {\n+ public:\n+  Result<DeclarationInfo> MakeRel(const std::vector<DeclarationInfo>& inputs,\n+                                  const google::protobuf::Any& rel,\n+                                  const ExtensionSet& ext_set) override {\n+    if (rel.Is<arrow::substrait::AsOfJoinRel>()) {\n+      arrow::substrait::AsOfJoinRel as_of_join_rel;\n+      rel.UnpackTo(&as_of_join_rel);\n+      return MakeAsOfJoinRel(inputs, as_of_join_rel, ext_set);\n+    }\n+    return Status::NotImplemented(\"Unrecognized extension in Susbstrait plan: \",\n+                                  rel.DebugString());\n+  }\n+\n+ private:\n+  Result<DeclarationInfo> MakeAsOfJoinRel(\n+      const std::vector<DeclarationInfo>& inputs,\n+      const arrow::substrait::AsOfJoinRel& as_of_join_rel, const ExtensionSet& ext_set) {\n+    if (inputs.size() < 2) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode too few input tables: \",\n+                             inputs.size());\n+    }\n+    // on-key\n+    if (!as_of_join_rel.has_on()) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode missing on-key\");\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto on_key_expr, FromProto(as_of_join_rel.on(), ext_set, {}));\n+    if (on_key_expr.field_ref() == NULLPTR) {\n+      return Status::NotImplemented(\"substrait::AsOfJoinNode non-field-ref on-key\");\n+    }\n+    const FieldRef& on_key = *on_key_expr.field_ref();\n+\n+    // by-key\n+    std::vector<FieldRef> by_key;\n+    for (const auto& by_item : as_of_join_rel.by()) {\n+      ARROW_ASSIGN_OR_RAISE(auto by_key_expr, FromProto(by_item, ext_set, {}));\n+      if (by_key_expr.field_ref() == NULLPTR) {\n+        return Status::NotImplemented(\"substrait::AsOfJoinNode non-field-ref by-key\");\n+      }\n+      by_key.push_back(*by_key_expr.field_ref());\n+    }\n+\n+    // schema\n+    int64_t tolerance = as_of_join_rel.tolerance();\n+    std::vector<std::shared_ptr<Schema>> input_schema(inputs.size());\n+    for (size_t i = 0; i < inputs.size(); i++) {\n+      input_schema[i] = inputs[i].output_schema;\n+    }\n+    ARROW_ASSIGN_OR_RAISE(\n+        auto schema, compute::asofjoin::MakeOutputSchema(input_schema, on_key, by_key));\n+    compute::AsofJoinNodeOptions asofjoin_node_opts{std::move(on_key), std::move(by_key),\n+                                                    tolerance};\n+\n+    // declaration\n+    std::vector<compute::Declaration::Input> input_decls(inputs.size());\n+    for (size_t i = 0; i < inputs.size(); i++) {\n+      input_decls[i] = inputs[i].declaration;\n+    }\n+    return DeclarationInfo{\n+        compute::Declaration(\"asofjoin\", input_decls, std::move(asofjoin_node_opts)),\n+        std::move(schema)};\n+  }\n+};\n+\n+std::shared_ptr<ExtensionProvider> ExtensionProvider::kDefaultExtensionProvider =\n\nReview Comment:\n   Nvm this, I see the declaration there in options.h\n\n\n\n##########\ncpp/src/arrow/engine/substrait/options.cc:\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+#include <iostream>\n+\n+#include \"arrow/engine/substrait/options.h\"\n+\n+#include <google/protobuf/util/json_util.h>\n+#include \"arrow/compute/exec/asof_join_node.h\"\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/engine/substrait/expression_internal.h\"\n+#include \"arrow/engine/substrait/relation_internal.h\"\n+#include \"substrait/extension_rels.pb.h\"\n+\n+namespace arrow {\n+namespace engine {\n+\n+class DefaultExtensionProvider : public ExtensionProvider {\n+ public:\n+  Result<DeclarationInfo> MakeRel(const std::vector<DeclarationInfo>& inputs,\n+                                  const google::protobuf::Any& rel,\n+                                  const ExtensionSet& ext_set) override {\n+    if (rel.Is<arrow::substrait::AsOfJoinRel>()) {\n+      arrow::substrait::AsOfJoinRel as_of_join_rel;\n+      rel.UnpackTo(&as_of_join_rel);\n+      return MakeAsOfJoinRel(inputs, as_of_join_rel, ext_set);\n+    }\n+    return Status::NotImplemented(\"Unrecognized extension in Susbstrait plan: \",\n+                                  rel.DebugString());\n+  }\n+\n+ private:\n+  Result<DeclarationInfo> MakeAsOfJoinRel(\n+      const std::vector<DeclarationInfo>& inputs,\n+      const arrow::substrait::AsOfJoinRel& as_of_join_rel, const ExtensionSet& ext_set) {\n+    if (inputs.size() < 2) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode too few input tables: \",\n+                             inputs.size());\n+    }\n+    // on-key\n+    if (!as_of_join_rel.has_on()) {\n+      return Status::Invalid(\"substrait::AsOfJoinNode missing on-key\");\n+    }\n+    ARROW_ASSIGN_OR_RAISE(auto on_key_expr, FromProto(as_of_join_rel.on(), ext_set, {}));\n+    if (on_key_expr.field_ref() == NULLPTR) {\n+      return Status::NotImplemented(\"substrait::AsOfJoinNode non-field-ref on-key\");\n+    }\n+    const FieldRef& on_key = *on_key_expr.field_ref();\n+\n+    // by-key\n+    std::vector<FieldRef> by_key;\n+    for (const auto& by_item : as_of_join_rel.by()) {\n+      ARROW_ASSIGN_OR_RAISE(auto by_key_expr, FromProto(by_item, ext_set, {}));\n+      if (by_key_expr.field_ref() == NULLPTR) {\n+        return Status::NotImplemented(\"substrait::AsOfJoinNode non-field-ref by-key\");\n+      }\n+      by_key.push_back(*by_key_expr.field_ref());\n+    }\n+\n+    // schema\n+    int64_t tolerance = as_of_join_rel.tolerance();\n+    std::vector<std::shared_ptr<Schema>> input_schema(inputs.size());\n+    for (size_t i = 0; i < inputs.size(); i++) {\n+      input_schema[i] = inputs[i].output_schema;\n+    }\n+    ARROW_ASSIGN_OR_RAISE(\n+        auto schema, compute::asofjoin::MakeOutputSchema(input_schema, on_key, by_key));\n+    compute::AsofJoinNodeOptions asofjoin_node_opts{std::move(on_key), std::move(by_key),\n+                                                    tolerance};\n+\n+    // declaration\n+    std::vector<compute::Declaration::Input> input_decls(inputs.size());\n+    for (size_t i = 0; i < inputs.size(); i++) {\n+      input_decls[i] = inputs[i].declaration;\n+    }\n+    return DeclarationInfo{\n+        compute::Declaration(\"asofjoin\", input_decls, std::move(asofjoin_node_opts)),\n+        std::move(schema)};\n+  }\n+};\n+\n+std::shared_ptr<ExtensionProvider> ExtensionProvider::kDefaultExtensionProvider =\n\nReview Comment:\n   Should we move this to substrait/options.h file? (Since the `kDefaultNamedTableProvider` is also there)\n\n\n\n",
                    "created": "2022-10-13T14:41:21.187+0000",
                    "updated": "2022-10-13T14:41:21.187+0000",
                    "started": "2022-10-13T14:41:21.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816639",
                    "issueId": "13485493"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 34800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3f9cb6a6[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72b2180e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6291b60e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1a03a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20d915ad[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@8621c8a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67acea4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a2196f1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bd8265[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1aa348f4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a5d3f74[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7c2da4d0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 34800,
        "customfield_12312520": null,
        "customfield_12312521": "2022-10-10 19:28:25.0",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17980/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-10-10T19:28:25.000+0000",
        "updated": "2022-11-03T21:48:34.000+0000",
        "timeoriginalestimate": null,
        "description": "This issue will add Arrow support for handling As-Of-Join as a Substrait extension based on [Weston's Substrait extension prototype|https://github.com/apache/arrow/compare/master...westonpace:arrow:experiment/substrait-extension].",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 34800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] As-of-Join Substrait extension",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z198cw:",
        "customfield_12314139": null
    }
}