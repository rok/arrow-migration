{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13154264",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264",
    "key": "ARROW-2493",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12532560",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12532560",
                "type": {
                    "id": "12310010",
                    "name": "Incorporates",
                    "inward": "is part of",
                    "outward": "incorporates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"
                },
                "inwardIssue": {
                    "id": "13111508",
                    "key": "ARROW-1715",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111508",
                    "fields": {
                        "summary": "[Python] Implement pickling for Column, ChunkedArray, RecordBatch, Table",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2493/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/94541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r183665216\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -678,6 +678,9 @@ cdef class Buffer:\n         else:\n             return NotImplemented\n \n+    def __reduce__(self):\n+        return py_buffer, (self.to_pybytes(),)\n \n Review comment:\n   Yes, this is what I would expect for now. Data pickled and unpickled again is not anymore in the environment that created it. Thus I would disallow mutations for now.\r\n   \r\n   Once we also have mutable buffers and have a use case for unpickling them as such later on, we should add a specialization that takes care off also passing this attribute.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-24T09:34:32.308+0000",
                    "updated": "2018-04-24T09:34:32.308+0000",
                    "started": "2018-04-24T09:34:32.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "94541",
                    "issueId": "13154264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/95190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r184174161\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -281,6 +281,66 @@ cdef _append_array_buffers(const CArrayData* ad, list res):\n         _append_array_buffers(ad.child_data[i].get(), res)\n \n \n+cdef _reduce_array_data(const CArrayData* ad):\n+    \"\"\"\n+    Recursively dissect ArrayData to (pickable) tuples.\n+    \"\"\"\n+    cdef size_t i, n\n+    assert ad != NULL\n+\n+    n = ad.buffers.size()\n+    buffers = []\n+    for i in range(n):\n+        buf = ad.buffers[i]\n+        buffers.append(pyarrow_wrap_buffer(buf)\n+                       if buf.get() != NULL else None)\n+\n+    children = []\n+    n = ad.child_data.size()\n+    for i in range(n):\n+        children.append(_reduce_array_data(ad.child_data[i].get()))\n+\n+    return pyarrow_wrap_data_type(ad.type), ad.length, ad.null_count, ad.offset, buffers, children\n+\n+\n+cdef shared_ptr[CArrayData] _reconstruct_array_data(data):\n+    \"\"\"\n+    Reconstruct CArrayData objects from the tuple structure generated\n+    by _reduce_array_data.\n+    \"\"\"\n+    cdef:\n+        int64_t length, null_count, offset, i\n+        DataType dtype\n+        Buffer buf\n+        vector[shared_ptr[CBuffer]] c_buffers\n+        vector[shared_ptr[CArrayData]] c_children\n+\n+    dtype, length, null_count, offset, buffers, children = data\n+\n+    for i in range(len(buffers)):\n+        buf = buffers[i]\n+        c_buffers.push_back(buf.buffer)\n+\n+    for i in range(len(children)):\n+        c_children.push_back(_reconstruct_array_data(children[i]))\n+\n+    return CArrayData.MakeWithChildren(\n+        dtype.sp_type,\n+        length,\n+        c_buffers,\n+        c_children,\n+        null_count,\n+        offset)\n+\n+\n+def _restore_array(data):\n+    \"\"\"\n+    Reconstruct an Array from pickled ArrayData.\n+    \"\"\"\n+    cdef shared_ptr[CArrayData] ad = _reconstruct_array_data(data)\n \n Review comment:\n   This fails on Python 2.7 (OSX and Linux) with\r\n   \r\n   ```\r\n   (lldb) bt\r\n   * thread #1, stop reason = signal SIGSTOP\r\n     * frame #0: 0x0000000108928192 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] long std::__1::__libcpp_atomic_refcount_increment<long>(__t=0x00000001071ca118) at memory:3379\r\n       frame #1: 0x000000010892817f lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] std::__1::__shared_count::__add_shared(this=0x00000001071ca110) at memory:3439\r\n       frame #2: 0x0000000108928177 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] std::__1::__shared_weak_count::__add_shared(this=0x00000001071ca110) at memory:3478\r\n       frame #3: 0x0000000108928177 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] std::__1::shared_ptr<arrow::Buffer>::shared_ptr(this=0x00007f8c7a676ca0, __r=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at memory:4095\r\n       frame #4: 0x0000000108928134 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] std::__1::shared_ptr<arrow::Buffer>::shared_ptr(this=0x00007f8c7a676ca0, __r=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at memory:4093\r\n       frame #5: 0x0000000108928124 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] void std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> >::construct<std::__1::shared_ptr<arrow::Buffer>, std::__1::shared_ptr<arrow::Buffer> const&>(this=0x00007ffee8a40c30, __p=0x00007f8c7a676ca0, __args=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at memory:1759\r\n       frame #6: 0x0000000108928108 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__construct<std::__1::shared_ptr<arrow::Buffer>, std::__1::shared_ptr<arrow::Buffer> const&>(__a=0x00007ffee8a40c30, __p=0x00007f8c7a676ca0, __args=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at memory:1670\r\n       frame #7: 0x00000001089280e5 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(std::__1::shared_ptr<arrow::Buffer> const&&&) [inlined] void std::__1::allocator_traits<std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::construct<std::__1::shared_ptr<arrow::Buffer>, std::__1::shared_ptr<arrow::Buffer> const&>(__a=0x00007ffee8a40c30, __p=0x00007f8c7a676ca0, __args=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at memory:1516\r\n       frame #8: 0x00000001089280b3 lib.so`void std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::__push_back_slow_path<std::__1::shared_ptr<arrow::Buffer> const&>(this=0x00007ffee8a40c20 size=1, __x=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at vector:1569\r\n       frame #9: 0x0000000108927058 lib.so`__pyx_f_7pyarrow_3lib__reconstruct_array_data(_object*) [inlined] std::__1::vector<std::__1::shared_ptr<arrow::Buffer>, std::__1::allocator<std::__1::shared_ptr<arrow::Buffer> > >::push_back(this=0x00007ffee8a40c20 size=1, __x=std::__1::shared_ptr<arrow::Buffer>::element_type @ 0x00000001072fa608 strong=5227350992890841130 weak=10036281067285334121) at vector:1588\r\n       frame #10: 0x0000000108926dde lib.so`__pyx_f_7pyarrow_3lib__reconstruct_array_data(__pyx_v_data=0x0000000114dcf120) at lib.cxx:36732\r\n       frame #11: 0x0000000108925b94 lib.so`__pyx_pf_7pyarrow_3lib_80_restore_array(__pyx_self=0x0000000000000000, __pyx_v_data=0x0000000114dcf120) at lib.cxx:36844\r\n       frame #12: 0x0000000108925b05 lib.so`__pyx_pw_7pyarrow_3lib_81_restore_array(__pyx_self=0x0000000000000000, __pyx_v_data=0x0000000114dcf120) at lib.cxx:36823\r\n       frame #13: 0x000000010727645d libpython2.7.dylib`PyEval_EvalFrameEx + 33069\r\n       frame #14: 0x000000010727a686 libpython2.7.dylib`fast_function + 342\r\n   \u2026\r\n   ```\r\n   \r\n   I have sadly no idea how this happens and why it's limited to Python 2.7\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-25T19:07:39.300+0000",
                    "updated": "2018-04-25T19:07:39.300+0000",
                    "started": "2018-04-25T19:07:39.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "95190",
                    "issueId": "13154264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/95312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r184243103\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -281,6 +281,66 @@ cdef _append_array_buffers(const CArrayData* ad, list res):\n         _append_array_buffers(ad.child_data[i].get(), res)\n \n \n+cdef _reduce_array_data(const CArrayData* ad):\n+    \"\"\"\n+    Recursively dissect ArrayData to (pickable) tuples.\n+    \"\"\"\n+    cdef size_t i, n\n+    assert ad != NULL\n+\n+    n = ad.buffers.size()\n+    buffers = []\n+    for i in range(n):\n+        buf = ad.buffers[i]\n+        buffers.append(pyarrow_wrap_buffer(buf)\n+                       if buf.get() != NULL else None)\n+\n+    children = []\n+    n = ad.child_data.size()\n+    for i in range(n):\n+        children.append(_reduce_array_data(ad.child_data[i].get()))\n+\n+    return pyarrow_wrap_data_type(ad.type), ad.length, ad.null_count, ad.offset, buffers, children\n+\n+\n+cdef shared_ptr[CArrayData] _reconstruct_array_data(data):\n+    \"\"\"\n+    Reconstruct CArrayData objects from the tuple structure generated\n+    by _reduce_array_data.\n+    \"\"\"\n+    cdef:\n+        int64_t length, null_count, offset, i\n+        DataType dtype\n+        Buffer buf\n+        vector[shared_ptr[CBuffer]] c_buffers\n+        vector[shared_ptr[CArrayData]] c_children\n+\n+    dtype, length, null_count, offset, buffers, children = data\n+\n+    for i in range(len(buffers)):\n+        buf = buffers[i]\n+        c_buffers.push_back(buf.buffer)\n \n Review comment:\n   I think you must check that `buf` is None here, because unfortunately Cython won't tell you that you're doing something wrong: https://github.com/cython/cython/issues/2170\r\n   \r\n   (and yes, it seems in some cases, wrongly dereferencing the attribute gives you the NULL pointer that you are expecting, and lets you think the code is ok :-))\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-26T00:30:18.976+0000",
                    "updated": "2018-04-26T00:30:18.976+0000",
                    "started": "2018-04-26T00:30:18.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "95312",
                    "issueId": "13154264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/95399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r184312430\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -281,6 +281,66 @@ cdef _append_array_buffers(const CArrayData* ad, list res):\n         _append_array_buffers(ad.child_data[i].get(), res)\n \n \n+cdef _reduce_array_data(const CArrayData* ad):\n+    \"\"\"\n+    Recursively dissect ArrayData to (pickable) tuples.\n+    \"\"\"\n+    cdef size_t i, n\n+    assert ad != NULL\n+\n+    n = ad.buffers.size()\n+    buffers = []\n+    for i in range(n):\n+        buf = ad.buffers[i]\n+        buffers.append(pyarrow_wrap_buffer(buf)\n+                       if buf.get() != NULL else None)\n+\n+    children = []\n+    n = ad.child_data.size()\n+    for i in range(n):\n+        children.append(_reduce_array_data(ad.child_data[i].get()))\n+\n+    return pyarrow_wrap_data_type(ad.type), ad.length, ad.null_count, ad.offset, buffers, children\n+\n+\n+cdef shared_ptr[CArrayData] _reconstruct_array_data(data):\n+    \"\"\"\n+    Reconstruct CArrayData objects from the tuple structure generated\n+    by _reduce_array_data.\n+    \"\"\"\n+    cdef:\n+        int64_t length, null_count, offset, i\n+        DataType dtype\n+        Buffer buf\n+        vector[shared_ptr[CBuffer]] c_buffers\n+        vector[shared_ptr[CArrayData]] c_children\n+\n+    dtype, length, null_count, offset, buffers, children = data\n+\n+    for i in range(len(buffers)):\n+        buf = buffers[i]\n+        c_buffers.push_back(buf.buffer)\n \n Review comment:\n   (the above is likely to be the reason for the 2.7 crash btw)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-26T08:43:24.118+0000",
                    "updated": "2018-04-26T08:43:24.118+0000",
                    "started": "2018-04-26T08:43:24.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "95399",
                    "issueId": "13154264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/97395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-385887177\n \n \n   AppVeyor: https://ci.appveyor.com/project/xhochy/arrow/build/1.0.666\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-02T07:22:28.085+0000",
                    "updated": "2018-05-02T07:22:28.085+0000",
                    "started": "2018-05-02T07:22:28.085+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97395",
                    "issueId": "13154264"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/worklog/97432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex d84c89e4a..e854114b1 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -54,6 +54,15 @@ std::shared_ptr<ArrayData> ArrayData::Make(\n   return std::make_shared<ArrayData>(type, length, buffers, null_count, offset);\n }\n \n+std::shared_ptr<ArrayData> ArrayData::Make(\n+    const std::shared_ptr<DataType>& type, int64_t length,\n+    const std::vector<std::shared_ptr<Buffer>>& buffers,\n+    const std::vector<std::shared_ptr<ArrayData>>& child_data, int64_t null_count,\n+    int64_t offset) {\n+  return std::make_shared<ArrayData>(type, length, buffers, child_data, null_count,\n+                                     offset);\n+}\n+\n std::shared_ptr<ArrayData> ArrayData::Make(const std::shared_ptr<DataType>& type,\n                                            int64_t length, int64_t null_count,\n                                            int64_t offset) {\n@@ -250,6 +259,8 @@ void ListArray::SetData(const std::shared_ptr<ArrayData>& data) {\n   raw_value_offsets_ = value_offsets == nullptr\n                            ? nullptr\n                            : reinterpret_cast<const int32_t*>(value_offsets->data());\n+\n+  DCHECK_EQ(data_->child_data.size(), 1);\n   values_ = MakeArray(data_->child_data[0]);\n }\n \ndiff --git a/cpp/src/arrow/array.h b/cpp/src/arrow/array.h\nindex dec8b3969..1b152c4c7 100644\n--- a/cpp/src/arrow/array.h\n+++ b/cpp/src/arrow/array.h\n@@ -98,6 +98,15 @@ struct ARROW_EXPORT ArrayData {\n     this->buffers = buffers;\n   }\n \n+  ArrayData(const std::shared_ptr<DataType>& type, int64_t length,\n+            const std::vector<std::shared_ptr<Buffer>>& buffers,\n+            const std::vector<std::shared_ptr<ArrayData>>& child_data,\n+            int64_t null_count = kUnknownNullCount, int64_t offset = 0)\n+      : ArrayData(type, length, null_count, offset) {\n+    this->buffers = buffers;\n+    this->child_data = child_data;\n+  }\n+\n   ArrayData(const std::shared_ptr<DataType>& type, int64_t length,\n             std::vector<std::shared_ptr<Buffer>>&& buffers,\n             int64_t null_count = kUnknownNullCount, int64_t offset = 0)\n@@ -116,6 +125,12 @@ struct ARROW_EXPORT ArrayData {\n       const std::vector<std::shared_ptr<Buffer>>& buffers,\n       int64_t null_count = kUnknownNullCount, int64_t offset = 0);\n \n+  static std::shared_ptr<ArrayData> Make(\n+      const std::shared_ptr<DataType>& type, int64_t length,\n+      const std::vector<std::shared_ptr<Buffer>>& buffers,\n+      const std::vector<std::shared_ptr<ArrayData>>& child_data,\n+      int64_t null_count = kUnknownNullCount, int64_t offset = 0);\n+\n   static std::shared_ptr<ArrayData> Make(const std::shared_ptr<DataType>& type,\n                                          int64_t length,\n                                          int64_t null_count = kUnknownNullCount,\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex 14f04ea49..e9b579a9c 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -281,6 +281,70 @@ cdef _append_array_buffers(const CArrayData* ad, list res):\n         _append_array_buffers(ad.child_data[i].get(), res)\n \n \n+cdef _reduce_array_data(const CArrayData* ad):\n+    \"\"\"\n+    Recursively dissect ArrayData to (pickable) tuples.\n+    \"\"\"\n+    cdef size_t i, n\n+    assert ad != NULL\n+\n+    n = ad.buffers.size()\n+    buffers = []\n+    for i in range(n):\n+        buf = ad.buffers[i]\n+        buffers.append(pyarrow_wrap_buffer(buf)\n+                       if buf.get() != NULL else None)\n+\n+    children = []\n+    n = ad.child_data.size()\n+    for i in range(n):\n+        children.append(_reduce_array_data(ad.child_data[i].get()))\n+\n+    return pyarrow_wrap_data_type(ad.type), ad.length, ad.null_count, \\\n+        ad.offset, buffers, children\n+\n+\n+cdef shared_ptr[CArrayData] _reconstruct_array_data(data):\n+    \"\"\"\n+    Reconstruct CArrayData objects from the tuple structure generated\n+    by _reduce_array_data.\n+    \"\"\"\n+    cdef:\n+        int64_t length, null_count, offset, i\n+        DataType dtype\n+        Buffer buf\n+        vector[shared_ptr[CBuffer]] c_buffers\n+        vector[shared_ptr[CArrayData]] c_children\n+\n+    dtype, length, null_count, offset, buffers, children = data\n+\n+    for i in range(len(buffers)):\n+        buf = buffers[i]\n+        if buf is None:\n+            c_buffers.push_back(shared_ptr[CBuffer]())\n+        else:\n+            c_buffers.push_back(buf.buffer)\n+\n+    for i in range(len(children)):\n+        c_children.push_back(_reconstruct_array_data(children[i]))\n+\n+    return CArrayData.MakeWithChildren(\n+        dtype.sp_type,\n+        length,\n+        c_buffers,\n+        c_children,\n+        null_count,\n+        offset)\n+\n+\n+def _restore_array(data):\n+    \"\"\"\n+    Reconstruct an Array from pickled ArrayData.\n+    \"\"\"\n+    cdef shared_ptr[CArrayData] ad = _reconstruct_array_data(data)\n+    return pyarrow_wrap_array(MakeArray(ad))\n+\n+\n cdef class Array:\n \n     def __init__(self, *args, **kwargs):\n@@ -395,6 +459,10 @@ cdef class Array:\n         return array(obj, mask=mask, type=type, memory_pool=memory_pool,\n                      from_pandas=True)\n \n+    def __reduce__(self):\n+        return _restore_array, \\\n+            (_reduce_array_data(self.sp_array.get().data().get()),)\n+\n     @staticmethod\n     def from_buffers(DataType type, length, buffers, null_count=-1, offset=0):\n         \"\"\"\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 0df7f34f3..1dcff8af7 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -105,6 +105,15 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n                                     int64_t null_count,\n                                     int64_t offset)\n \n+        @staticmethod\n+        shared_ptr[CArrayData] MakeWithChildren\" Make\"(\n+            const shared_ptr[CDataType]& type,\n+            int64_t length,\n+            vector[shared_ptr[CBuffer]]& buffers,\n+            vector[shared_ptr[CArrayData]]& child_data,\n+            int64_t null_count,\n+            int64_t offset)\n+\n     cdef cppclass CArray\" arrow::Array\":\n         shared_ptr[CDataType] type()\n \ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex 394732323..ef95bd59f 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -678,6 +678,9 @@ cdef class Buffer:\n         else:\n             return NotImplemented\n \n+    def __reduce__(self):\n+        return py_buffer, (self.to_pybytes(),)\n+\n     def to_pybytes(self):\n         self._check_nullptr()\n         return cp.PyBytes_FromStringAndSize(\ndiff --git a/python/pyarrow/tests/test_array.py b/python/pyarrow/tests/test_array.py\nindex 6d7892a47..217dfc6f9 100644\n--- a/python/pyarrow/tests/test_array.py\n+++ b/python/pyarrow/tests/test_array.py\n@@ -23,6 +23,7 @@\n import numpy as np\n import pandas as pd\n import pandas.util.testing as tm\n+import pickle\n \n import pyarrow as pa\n from pyarrow.pandas_compat import get_logical_type\n@@ -583,6 +584,28 @@ def test_simple_type_construction():\n         str(result)\n \n \n+@pytest.mark.parametrize(\n+    ('data', 'typ'),\n+    [\n+        ([True, False, True, True], pa.bool_()),\n+        ([1, 2, 4, 6], pa.int64()),\n+        ([1.0, 2.5, None], pa.float64()),\n+        (['a', None, 'b'], pa.string()),\n+        ([], None),\n+        ([[1, 2], [3]], pa.list_(pa.int64())),\n+        ([['a'], None, ['b', 'c']], pa.list_(pa.string())),\n+        ([(1, 'a'), (2, 'c'), None],\n+            pa.struct([pa.field('a', pa.int64()), pa.field('b', pa.string())]))\n+    ]\n+)\n+def test_array_pickle(data, typ):\n+    # Allocate here so that we don't have any Arrow data allocated.\n+    # This is needed to ensure that allocator tests can be reliable.\n+    array = pa.array(data, type=typ)\n+    result = pickle.loads(pickle.dumps(array))\n+    assert array.equals(result)\n+\n+\n @pytest.mark.parametrize(\n     ('type', 'expected'),\n     [\ndiff --git a/python/pyarrow/tests/test_io.py b/python/pyarrow/tests/test_io.py\nindex 02851bee0..d43623f5e 100644\n--- a/python/pyarrow/tests/test_io.py\n+++ b/python/pyarrow/tests/test_io.py\n@@ -19,6 +19,7 @@\n from io import BytesIO, TextIOWrapper\n import gc\n import os\n+import pickle\n import pytest\n import sys\n import tempfile\n@@ -207,6 +208,11 @@ def test_buffer_bytes():\n \n     assert result == val\n \n+    # Check that buffers survive a pickle roundtrip\n+    result_buf = pickle.loads(pickle.dumps(buf))\n+    result = result_buf.to_pybytes()\n+    assert result == val\n+\n \n def test_buffer_memoryview():\n     val = b'some data'\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-02T09:28:11.051+0000",
                    "updated": "2018-05-02T09:28:11.051+0000",
                    "started": "2018-05-02T09:28:11.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97432",
                    "issueId": "13154264"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5c0e3a84[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61dda930[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6310d565[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6f08741e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18ebd045[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6e1bf1cb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bc5ba90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@27419772[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@616e0227[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@504a3268[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@767d03cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5dace071[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 02 09:28:13 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-02T09:28:13.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2493/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-04-21T21:02:53.000+0000",
        "updated": "2018-05-02T09:28:13.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python]\u00a0Add support for pickling to buffers and arrays",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446993",
                    "id": "16446993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy opened a new pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:03:56.813+0000",
                    "updated": "2018-04-21T21:03:56.813+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446994",
                    "id": "16446994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383330863\n \n \n   Is there a use case where this comes up?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:05:24.401+0000",
                    "updated": "2018-04-21T21:05:24.401+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446995",
                    "id": "16446995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383330906\n \n \n   This is quite a simple implementation where I'm not aware if we could make it more efficient. @pitrou do you have a better idea?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:05:40.317+0000",
                    "updated": "2018-04-21T21:05:40.317+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446996",
                    "id": "16446996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383331088\n \n \n   My worry is rather that pickling arbitrary buffers risks losing the semantics of the original buffer (for example if it's a mmap, or a CUDA buffer, or a resizable buffer...). This is the same reason Python doesn't allow pickling memoryviews.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:07:13.566+0000",
                    "updated": "2018-04-21T21:07:13.566+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446997",
                    "id": "16446997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383331157\n \n \n   Yes, a lot of systems use pickle to transmit data between systems. As far as I know, dask will also pickle data if it does not know better, a lot of other systems also do this. \r\n   \r\n   My main use case comes out the fact that I need to be able to pickle Arrow arrays.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:07:44.988+0000",
                    "updated": "2018-04-21T21:07:44.988+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16446998",
                    "id": "16446998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383331564\n \n \n   @pitrou Should we maybe then limit pickling to a specific kind of buffers or provide the option for buffer types to opt-out for pickling?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:11:09.575+0000",
                    "updated": "2018-04-21T21:11:09.575+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16447005",
                    "id": "16447005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383332516\n \n \n   > My main use case comes out the fact that I need to be able to pickle Arrow arrays.\r\n   \r\n   Oh, I see. Right now the Python side doesn't know about the different kinds of buffers, so we'll have to accept all buffers in the time being. If the need arises, we may want to implement buffer serialization on the C++ side (by exposing a `to_components`-like API).\r\n   \r\n   By the way, the efficiency issue should be taken care of by [PEP 574](https://www.python.org/dev/peps/pep-0574/) -- once it's implemented and accepted.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:23:07.209+0000",
                    "updated": "2018-04-21T21:23:07.209+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16447015",
                    "id": "16447015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383333560\n \n \n   > By the way, the efficiency issue should be taken care of by PEP 574 -- once it's implemented and accepted.\r\n   \r\n   Looking very much forward to this but until then, I guess it will be the PyBuffer path.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T21:43:08.001+0000",
                    "updated": "2018-04-21T21:43:08.001+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16447164",
                    "id": "16447164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#issuecomment-383366048\n \n \n   I've added array pickling to the PR to show the full use case\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-22T08:55:01.485+0000",
                    "updated": "2018-04-22T08:55:01.485+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16447213",
                    "id": "16447213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r183233376\n \n \n\n ##########\n File path: python/pyarrow/tests/test_array.py\n ##########\n @@ -577,6 +578,26 @@ def test_simple_type_construction():\n         str(result)\n \n \n+@pytest.mark.parametrize(\n+    'data',\n+    [\n+        [True, False, True, True],\n+        [1, 2, 4, 6],\n+        [1.0, 2.5, None],\n+        ['a', None, 'b'],\n+        [],\n+        [[1, 2], [3]],\n+        [['a'], None, ['b', 'c']]\n \n Review comment:\n   Perhaps add a struct array as well?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-22T11:32:25.621+0000",
                    "updated": "2018-04-22T11:32:25.621+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16447214",
                    "id": "16447214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1928: ARROW-2493: [Python]\u00a0Add support for pickling to buffers and arrays\nURL: https://github.com/apache/arrow/pull/1928#discussion_r183233416\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -678,6 +678,9 @@ cdef class Buffer:\n         else:\n             return NotImplemented\n \n+    def __reduce__(self):\n+        return py_buffer, (self.to_pybytes(),)\n \n Review comment:\n   Mmmh... if you're pickling a mutable buffer, it will give you a back a non-mutable buffer (since you are reducing it as a bytes object). Is it what you expect?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-22T11:33:48.072+0000",
                    "updated": "2018-04-22T11:33:48.072+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154264/comment/16460773",
                    "id": "16460773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1928\n[https://github.com/apache/arrow/pull/1928]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-05-02T09:28:13.670+0000",
                    "updated": "2018-05-02T09:28:13.670+0000"
                }
            ],
            "maxResults": 12,
            "total": 12,
            "startAt": 0
        },
        "customfield_12311820": "0|i3sv0v:",
        "customfield_12314139": null
    }
}